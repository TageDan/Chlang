<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="430271803829"><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (43,129,387 samples, 0.01%)</title><rect x="0.0298%" y="421" width="0.0100%" height="15" fill="rgb(227,0,7)" fg:x="128385152" fg:w="43129387"/><text x="0.2798%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (50,150,450 samples, 0.01%)</title><rect x="0.0287%" y="469" width="0.0117%" height="15" fill="rgb(217,0,24)" fg:x="123370107" fg:w="50150450"/><text x="0.2787%" y="479.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (50,150,450 samples, 0.01%)</title><rect x="0.0287%" y="453" width="0.0117%" height="15" fill="rgb(221,193,54)" fg:x="123370107" fg:w="50150450"/><text x="0.2787%" y="463.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::{{closure}} (50,150,450 samples, 0.01%)</title><rect x="0.0287%" y="437" width="0.0117%" height="15" fill="rgb(248,212,6)" fg:x="123370107" fg:w="50150450"/><text x="0.2787%" y="447.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (50,150,450 samples, 0.01%)</title><rect x="0.0417%" y="405" width="0.0117%" height="15" fill="rgb(208,68,35)" fg:x="179538611" fg:w="50150450"/><text x="0.2917%" y="415.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (103,309,927 samples, 0.02%)</title><rect x="0.0417%" y="469" width="0.0240%" height="15" fill="rgb(232,128,0)" fg:x="179538611" fg:w="103309927"/><text x="0.2917%" y="479.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (103,309,927 samples, 0.02%)</title><rect x="0.0417%" y="453" width="0.0240%" height="15" fill="rgb(207,160,47)" fg:x="179538611" fg:w="103309927"/><text x="0.2917%" y="463.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (103,309,927 samples, 0.02%)</title><rect x="0.0417%" y="437" width="0.0240%" height="15" fill="rgb(228,23,34)" fg:x="179538611" fg:w="103309927"/><text x="0.2917%" y="447.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (103,309,927 samples, 0.02%)</title><rect x="0.0417%" y="421" width="0.0240%" height="15" fill="rgb(218,30,26)" fg:x="179538611" fg:w="103309927"/><text x="0.2917%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (188,565,692 samples, 0.04%)</title><rect x="0.0224%" y="485" width="0.0438%" height="15" fill="rgb(220,122,19)" fg:x="96288864" fg:w="188565692"/><text x="0.2724%" y="495.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (199,598,791 samples, 0.05%)</title><rect x="0.0224%" y="501" width="0.0464%" height="15" fill="rgb(250,228,42)" fg:x="96288864" fg:w="199598791"/><text x="0.2724%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (203,610,827 samples, 0.05%)</title><rect x="0.0224%" y="533" width="0.0473%" height="15" fill="rgb(240,193,28)" fg:x="96288864" fg:w="203610827"/><text x="0.2724%" y="543.50"></text></g><g><title>core::slice::sort::unstable::sort (203,610,827 samples, 0.05%)</title><rect x="0.0224%" y="517" width="0.0473%" height="15" fill="rgb(216,20,37)" fg:x="96288864" fg:w="203610827"/><text x="0.2724%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (44,132,396 samples, 0.01%)</title><rect x="0.0699%" y="421" width="0.0103%" height="15" fill="rgb(206,188,39)" fg:x="300902700" fg:w="44132396"/><text x="0.3199%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (44,132,396 samples, 0.01%)</title><rect x="0.0699%" y="405" width="0.0103%" height="15" fill="rgb(217,207,13)" fg:x="300902700" fg:w="44132396"/><text x="0.3199%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (59,177,531 samples, 0.01%)</title><rect x="0.0699%" y="469" width="0.0138%" height="15" fill="rgb(231,73,38)" fg:x="300902700" fg:w="59177531"/><text x="0.3199%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (59,177,531 samples, 0.01%)</title><rect x="0.0699%" y="453" width="0.0138%" height="15" fill="rgb(225,20,46)" fg:x="300902700" fg:w="59177531"/><text x="0.3199%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (59,177,531 samples, 0.01%)</title><rect x="0.0699%" y="437" width="0.0138%" height="15" fill="rgb(210,31,41)" fg:x="300902700" fg:w="59177531"/><text x="0.3199%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (80,240,720 samples, 0.02%)</title><rect x="0.0699%" y="517" width="0.0186%" height="15" fill="rgb(221,200,47)" fg:x="300902700" fg:w="80240720"/><text x="0.3199%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (80,240,720 samples, 0.02%)</title><rect x="0.0699%" y="501" width="0.0186%" height="15" fill="rgb(226,26,5)" fg:x="300902700" fg:w="80240720"/><text x="0.3199%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (80,240,720 samples, 0.02%)</title><rect x="0.0699%" y="485" width="0.0186%" height="15" fill="rgb(249,33,26)" fg:x="300902700" fg:w="80240720"/><text x="0.3199%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (52,156,468 samples, 0.01%)</title><rect x="0.1068%" y="293" width="0.0121%" height="15" fill="rgb(235,183,28)" fg:x="459378122" fg:w="52156468"/><text x="0.3568%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (55,165,495 samples, 0.01%)</title><rect x="0.1068%" y="309" width="0.0128%" height="15" fill="rgb(221,5,38)" fg:x="459378122" fg:w="55165495"/><text x="0.3568%" y="319.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (67,201,603 samples, 0.02%)</title><rect x="0.1058%" y="341" width="0.0156%" height="15" fill="rgb(247,18,42)" fg:x="455366086" fg:w="67201603"/><text x="0.3558%" y="351.50"></text></g><g><title>chlang::board::Board::piece_type (63,189,567 samples, 0.01%)</title><rect x="0.1068%" y="325" width="0.0147%" height="15" fill="rgb(241,131,45)" fg:x="459378122" fg:w="63189567"/><text x="0.3568%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (68,204,612 samples, 0.02%)</title><rect x="0.1058%" y="357" width="0.0159%" height="15" fill="rgb(249,31,29)" fg:x="455366086" fg:w="68204612"/><text x="0.3558%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (70,210,630 samples, 0.02%)</title><rect x="0.1058%" y="373" width="0.0163%" height="15" fill="rgb(225,111,53)" fg:x="455366086" fg:w="70210630"/><text x="0.3558%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (78,234,702 samples, 0.02%)</title><rect x="0.1289%" y="373" width="0.0182%" height="15" fill="rgb(238,160,17)" fg:x="554663977" fg:w="78234702"/><text x="0.3789%" y="383.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (195,586,755 samples, 0.05%)</title><rect x="0.1042%" y="437" width="0.0455%" height="15" fill="rgb(214,148,48)" fg:x="448345023" fg:w="195586755"/><text x="0.3542%" y="447.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (195,586,755 samples, 0.05%)</title><rect x="0.1042%" y="421" width="0.0455%" height="15" fill="rgb(232,36,49)" fg:x="448345023" fg:w="195586755"/><text x="0.3542%" y="431.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (195,586,755 samples, 0.05%)</title><rect x="0.1042%" y="405" width="0.0455%" height="15" fill="rgb(209,103,24)" fg:x="448345023" fg:w="195586755"/><text x="0.3542%" y="415.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (195,586,755 samples, 0.05%)</title><rect x="0.1042%" y="389" width="0.0455%" height="15" fill="rgb(229,88,8)" fg:x="448345023" fg:w="195586755"/><text x="0.3542%" y="399.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (196,589,764 samples, 0.05%)</title><rect x="0.1042%" y="453" width="0.0457%" height="15" fill="rgb(213,181,19)" fg:x="448345023" fg:w="196589764"/><text x="0.3542%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (63,189,567 samples, 0.01%)</title><rect x="0.1506%" y="325" width="0.0147%" height="15" fill="rgb(254,191,54)" fg:x="647943814" fg:w="63189567"/><text x="0.4006%" y="335.50"></text></g><g><title>chlang::board::Position::bitboard (70,210,630 samples, 0.02%)</title><rect x="0.1506%" y="341" width="0.0163%" height="15" fill="rgb(241,83,37)" fg:x="647943814" fg:w="70210630"/><text x="0.4006%" y="351.50"></text></g><g><title>chlang::board::Board::piece_type (81,243,729 samples, 0.02%)</title><rect x="0.1506%" y="357" width="0.0189%" height="15" fill="rgb(233,36,39)" fg:x="647943814" fg:w="81243729"/><text x="0.4006%" y="367.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (86,258,774 samples, 0.02%)</title><rect x="0.1499%" y="373" width="0.0200%" height="15" fill="rgb(226,3,54)" fg:x="644934787" fg:w="86258774"/><text x="0.3999%" y="383.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort::{{closure}} (87,261,783 samples, 0.02%)</title><rect x="0.1499%" y="405" width="0.0203%" height="15" fill="rgb(245,192,40)" fg:x="644934787" fg:w="87261783"/><text x="0.3999%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (87,261,783 samples, 0.02%)</title><rect x="0.1499%" y="389" width="0.0203%" height="15" fill="rgb(238,167,29)" fg:x="644934787" fg:w="87261783"/><text x="0.3999%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (234,704,106 samples, 0.05%)</title><rect x="0.1734%" y="341" width="0.0545%" height="15" fill="rgb(232,182,51)" fg:x="746238696" fg:w="234704106"/><text x="0.4234%" y="351.50"></text></g><g><title>chlang::board::Position::bitboard (260,782,340 samples, 0.06%)</title><rect x="0.1734%" y="357" width="0.0606%" height="15" fill="rgb(231,60,39)" fg:x="746238696" fg:w="260782340"/><text x="0.4234%" y="367.50"></text></g><g><title>chlang::board::Board::piece_type (288,866,592 samples, 0.07%)</title><rect x="0.1734%" y="373" width="0.0671%" height="15" fill="rgb(208,69,12)" fg:x="746238696" fg:w="288866592"/><text x="0.4234%" y="383.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (309,929,781 samples, 0.07%)</title><rect x="0.1702%" y="389" width="0.0720%" height="15" fill="rgb(235,93,37)" fg:x="732196570" fg:w="309929781"/><text x="0.4202%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (311,935,799 samples, 0.07%)</title><rect x="0.1702%" y="405" width="0.0725%" height="15" fill="rgb(213,116,39)" fg:x="732196570" fg:w="311935799"/><text x="0.4202%" y="415.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::{{closure}} (412,236,699 samples, 0.10%)</title><rect x="0.1499%" y="421" width="0.0958%" height="15" fill="rgb(222,207,29)" fg:x="644934787" fg:w="412236699"/><text x="0.3999%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (417,251,744 samples, 0.10%)</title><rect x="0.1499%" y="437" width="0.0970%" height="15" fill="rgb(206,96,30)" fg:x="644934787" fg:w="417251744"/><text x="0.3999%" y="447.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (420,260,771 samples, 0.10%)</title><rect x="0.1499%" y="453" width="0.0977%" height="15" fill="rgb(218,138,4)" fg:x="644934787" fg:w="420260771"/><text x="0.3999%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (125,376,125 samples, 0.03%)</title><rect x="0.2602%" y="293" width="0.0291%" height="15" fill="rgb(250,191,14)" fg:x="1119358044" fg:w="125376125"/><text x="0.5102%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (134,403,206 samples, 0.03%)</title><rect x="0.2602%" y="309" width="0.0312%" height="15" fill="rgb(239,60,40)" fg:x="1119358044" fg:w="134403206"/><text x="0.5102%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (148,445,332 samples, 0.03%)</title><rect x="0.2602%" y="325" width="0.0345%" height="15" fill="rgb(206,27,48)" fg:x="1119358044" fg:w="148445332"/><text x="0.5102%" y="335.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (162,487,458 samples, 0.04%)</title><rect x="0.2571%" y="341" width="0.0378%" height="15" fill="rgb(225,35,8)" fg:x="1106318927" fg:w="162487458"/><text x="0.5071%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (164,493,476 samples, 0.04%)</title><rect x="0.2571%" y="357" width="0.0382%" height="15" fill="rgb(250,213,24)" fg:x="1106318927" fg:w="164493476"/><text x="0.5071%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (170,511,530 samples, 0.04%)</title><rect x="0.2571%" y="373" width="0.0396%" height="15" fill="rgb(247,123,22)" fg:x="1106318927" fg:w="170511530"/><text x="0.5071%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (43,129,387 samples, 0.01%)</title><rect x="0.2981%" y="293" width="0.0100%" height="15" fill="rgb(231,138,38)" fg:x="1282848511" fg:w="43129387"/><text x="0.5481%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (45,135,405 samples, 0.01%)</title><rect x="0.2981%" y="309" width="0.0105%" height="15" fill="rgb(231,145,46)" fg:x="1282848511" fg:w="45135405"/><text x="0.5481%" y="319.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (50,150,450 samples, 0.01%)</title><rect x="0.2972%" y="325" width="0.0117%" height="15" fill="rgb(251,118,11)" fg:x="1278836475" fg:w="50150450"/><text x="0.5472%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (54,162,486 samples, 0.01%)</title><rect x="0.2967%" y="341" width="0.0126%" height="15" fill="rgb(217,147,25)" fg:x="1276830457" fg:w="54162486"/><text x="0.5467%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (55,165,495 samples, 0.01%)</title><rect x="0.2967%" y="357" width="0.0128%" height="15" fill="rgb(247,81,37)" fg:x="1276830457" fg:w="55165495"/><text x="0.5467%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (57,171,513 samples, 0.01%)</title><rect x="0.3100%" y="277" width="0.0133%" height="15" fill="rgb(209,12,38)" fg:x="1334001970" fg:w="57171513"/><text x="0.5600%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (63,189,567 samples, 0.01%)</title><rect x="0.3100%" y="293" width="0.0147%" height="15" fill="rgb(227,1,9)" fg:x="1334001970" fg:w="63189567"/><text x="0.5600%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (67,201,603 samples, 0.02%)</title><rect x="0.3096%" y="325" width="0.0156%" height="15" fill="rgb(248,47,43)" fg:x="1331995952" fg:w="67201603"/><text x="0.5596%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (65,195,585 samples, 0.02%)</title><rect x="0.3100%" y="309" width="0.0152%" height="15" fill="rgb(221,10,30)" fg:x="1334001970" fg:w="65195585"/><text x="0.5600%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (68,204,612 samples, 0.02%)</title><rect x="0.3096%" y="341" width="0.0159%" height="15" fill="rgb(210,229,1)" fg:x="1331995952" fg:w="68204612"/><text x="0.5596%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (69,207,621 samples, 0.02%)</title><rect x="0.3096%" y="357" width="0.0161%" height="15" fill="rgb(222,148,37)" fg:x="1331995952" fg:w="69207621"/><text x="0.5596%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (302,908,718 samples, 0.07%)</title><rect x="0.2571%" y="389" width="0.0704%" height="15" fill="rgb(234,67,33)" fg:x="1106318927" fg:w="302908718"/><text x="0.5071%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (132,397,188 samples, 0.03%)</title><rect x="0.2967%" y="373" width="0.0308%" height="15" fill="rgb(247,98,35)" fg:x="1276830457" fg:w="132397188"/><text x="0.5467%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (147,442,323 samples, 0.03%)</title><rect x="0.3292%" y="309" width="0.0343%" height="15" fill="rgb(247,138,52)" fg:x="1416248708" fg:w="147442323"/><text x="0.5792%" y="319.50"></text></g><g><title>chlang::board::Position::bitboard (157,472,413 samples, 0.04%)</title><rect x="0.3292%" y="325" width="0.0366%" height="15" fill="rgb(213,79,30)" fg:x="1416248708" fg:w="157472413"/><text x="0.5792%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (173,520,557 samples, 0.04%)</title><rect x="0.3292%" y="341" width="0.0403%" height="15" fill="rgb(246,177,23)" fg:x="1416248708" fg:w="173520557"/><text x="0.5792%" y="351.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (186,559,674 samples, 0.04%)</title><rect x="0.3275%" y="357" width="0.0434%" height="15" fill="rgb(230,62,27)" fg:x="1409227645" fg:w="186559674"/><text x="0.5775%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (187,562,683 samples, 0.04%)</title><rect x="0.3275%" y="373" width="0.0436%" height="15" fill="rgb(216,154,8)" fg:x="1409227645" fg:w="187562683"/><text x="0.5775%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (193,580,737 samples, 0.04%)</title><rect x="0.3275%" y="389" width="0.0450%" height="15" fill="rgb(244,35,45)" fg:x="1409227645" fg:w="193580737"/><text x="0.5775%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (49,147,441 samples, 0.01%)</title><rect x="0.3734%" y="293" width="0.0114%" height="15" fill="rgb(251,115,12)" fg:x="1606820418" fg:w="49147441"/><text x="0.6234%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (60,180,540 samples, 0.01%)</title><rect x="0.3734%" y="309" width="0.0140%" height="15" fill="rgb(240,54,50)" fg:x="1606820418" fg:w="60180540"/><text x="0.6234%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (69,207,621 samples, 0.02%)</title><rect x="0.3734%" y="325" width="0.0161%" height="15" fill="rgb(233,84,52)" fg:x="1606820418" fg:w="69207621"/><text x="0.6234%" y="335.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (77,231,693 samples, 0.02%)</title><rect x="0.3727%" y="341" width="0.0179%" height="15" fill="rgb(207,117,47)" fg:x="1603811391" fg:w="77231693"/><text x="0.6227%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (79,237,711 samples, 0.02%)</title><rect x="0.3725%" y="357" width="0.0184%" height="15" fill="rgb(249,43,39)" fg:x="1602808382" fg:w="79237711"/><text x="0.6225%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (87,261,783 samples, 0.02%)</title><rect x="0.3725%" y="373" width="0.0203%" height="15" fill="rgb(209,38,44)" fg:x="1602808382" fg:w="87261783"/><text x="0.6225%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (86,258,774 samples, 0.02%)</title><rect x="0.3937%" y="293" width="0.0200%" height="15" fill="rgb(236,212,23)" fg:x="1694082201" fg:w="86258774"/><text x="0.6437%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (97,291,873 samples, 0.02%)</title><rect x="0.3937%" y="309" width="0.0226%" height="15" fill="rgb(242,79,21)" fg:x="1694082201" fg:w="97291873"/><text x="0.6437%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (101,303,909 samples, 0.02%)</title><rect x="0.3937%" y="325" width="0.0235%" height="15" fill="rgb(211,96,35)" fg:x="1694082201" fg:w="101303909"/><text x="0.6437%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (109,327,981 samples, 0.03%)</title><rect x="0.3928%" y="357" width="0.0254%" height="15" fill="rgb(253,215,40)" fg:x="1690070165" fg:w="109327981"/><text x="0.6428%" y="367.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (109,327,981 samples, 0.03%)</title><rect x="0.3928%" y="341" width="0.0254%" height="15" fill="rgb(211,81,21)" fg:x="1690070165" fg:w="109327981"/><text x="0.6428%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (110,330,990 samples, 0.03%)</title><rect x="0.3928%" y="373" width="0.0256%" height="15" fill="rgb(208,190,38)" fg:x="1690070165" fg:w="110330990"/><text x="0.6428%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (199,598,791 samples, 0.05%)</title><rect x="0.3725%" y="389" width="0.0464%" height="15" fill="rgb(235,213,38)" fg:x="1602808382" fg:w="199598791"/><text x="0.6225%" y="399.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (707,121,345 samples, 0.16%)</title><rect x="0.2571%" y="453" width="0.1643%" height="15" fill="rgb(237,122,38)" fg:x="1106318927" fg:w="707121345"/><text x="0.5071%" y="463.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (707,121,345 samples, 0.16%)</title><rect x="0.2571%" y="437" width="0.1643%" height="15" fill="rgb(244,218,35)" fg:x="1106318927" fg:w="707121345"/><text x="0.5071%" y="447.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (707,121,345 samples, 0.16%)</title><rect x="0.2571%" y="421" width="0.1643%" height="15" fill="rgb(240,68,47)" fg:x="1106318927" fg:w="707121345"/><text x="0.5071%" y="431.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (707,121,345 samples, 0.16%)</title><rect x="0.2571%" y="405" width="0.1643%" height="15" fill="rgb(210,16,53)" fg:x="1106318927" fg:w="707121345"/><text x="0.5071%" y="415.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,369,107,285 samples, 0.32%)</title><rect x="0.1042%" y="469" width="0.3182%" height="15" fill="rgb(235,124,12)" fg:x="448345023" fg:w="1369107285"/><text x="0.3542%" y="479.50"></text></g><g><title>chlang::board::Position::bitboard (47,141,423 samples, 0.01%)</title><rect x="0.4231%" y="405" width="0.0110%" height="15" fill="rgb(224,169,11)" fg:x="1820461335" fg:w="47141423"/><text x="0.6731%" y="415.50"></text></g><g><title>chlang::board::Board::piece_type (57,171,513 samples, 0.01%)</title><rect x="0.4231%" y="421" width="0.0133%" height="15" fill="rgb(250,166,2)" fg:x="1820461335" fg:w="57171513"/><text x="0.6731%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (61,183,549 samples, 0.01%)</title><rect x="0.4224%" y="453" width="0.0142%" height="15" fill="rgb(242,216,29)" fg:x="1817452308" fg:w="61183549"/><text x="0.6724%" y="463.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (60,180,540 samples, 0.01%)</title><rect x="0.4226%" y="437" width="0.0140%" height="15" fill="rgb(230,116,27)" fg:x="1818455317" fg:w="60180540"/><text x="0.6726%" y="447.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (65,195,585 samples, 0.02%)</title><rect x="0.4224%" y="469" width="0.0152%" height="15" fill="rgb(228,99,48)" fg:x="1817452308" fg:w="65195585"/><text x="0.6724%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (1,435,305,879 samples, 0.33%)</title><rect x="0.1042%" y="517" width="0.3336%" height="15" fill="rgb(253,11,6)" fg:x="448345023" fg:w="1435305879"/><text x="0.3542%" y="527.50"></text></g><g><title>core::slice::sort::unstable::sort (1,435,305,879 samples, 0.33%)</title><rect x="0.1042%" y="501" width="0.3336%" height="15" fill="rgb(247,143,39)" fg:x="448345023" fg:w="1435305879"/><text x="0.3542%" y="511.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (1,435,305,879 samples, 0.33%)</title><rect x="0.1042%" y="485" width="0.3336%" height="15" fill="rgb(236,97,10)" fg:x="448345023" fg:w="1435305879"/><text x="0.3542%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (436,308,915 samples, 0.10%)</title><rect x="0.4406%" y="405" width="0.1014%" height="15" fill="rgb(233,208,19)" fg:x="1895687010" fg:w="436308915"/><text x="0.6906%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (436,308,915 samples, 0.10%)</title><rect x="0.4406%" y="389" width="0.1014%" height="15" fill="rgb(216,164,2)" fg:x="1895687010" fg:w="436308915"/><text x="0.6906%" y="399.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (180,541,620 samples, 0.04%)</title><rect x="0.5436%" y="325" width="0.0420%" height="15" fill="rgb(220,129,5)" fg:x="2339016988" fg:w="180541620"/><text x="0.7936%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (181,544,629 samples, 0.04%)</title><rect x="0.5436%" y="405" width="0.0422%" height="15" fill="rgb(242,17,10)" fg:x="2339016988" fg:w="181544629"/><text x="0.7936%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (181,544,629 samples, 0.04%)</title><rect x="0.5436%" y="389" width="0.0422%" height="15" fill="rgb(242,107,0)" fg:x="2339016988" fg:w="181544629"/><text x="0.7936%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (181,544,629 samples, 0.04%)</title><rect x="0.5436%" y="373" width="0.0422%" height="15" fill="rgb(251,28,31)" fg:x="2339016988" fg:w="181544629"/><text x="0.7936%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (181,544,629 samples, 0.04%)</title><rect x="0.5436%" y="357" width="0.0422%" height="15" fill="rgb(233,223,10)" fg:x="2339016988" fg:w="181544629"/><text x="0.7936%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (181,544,629 samples, 0.04%)</title><rect x="0.5436%" y="341" width="0.0422%" height="15" fill="rgb(215,21,27)" fg:x="2339016988" fg:w="181544629"/><text x="0.7936%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (632,898,679 samples, 0.15%)</title><rect x="0.4403%" y="453" width="0.1471%" height="15" fill="rgb(232,23,21)" fg:x="1894684001" fg:w="632898679"/><text x="0.6903%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (632,898,679 samples, 0.15%)</title><rect x="0.4403%" y="437" width="0.1471%" height="15" fill="rgb(244,5,23)" fg:x="1894684001" fg:w="632898679"/><text x="0.6903%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (632,898,679 samples, 0.15%)</title><rect x="0.4403%" y="421" width="0.1471%" height="15" fill="rgb(226,81,46)" fg:x="1894684001" fg:w="632898679"/><text x="0.6903%" y="431.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (46,138,414 samples, 0.01%)</title><rect x="0.6031%" y="341" width="0.0107%" height="15" fill="rgb(247,70,30)" fg:x="2594784283" fg:w="46138414"/><text x="0.8531%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (46,138,414 samples, 0.01%)</title><rect x="0.6031%" y="325" width="0.0107%" height="15" fill="rgb(212,68,19)" fg:x="2594784283" fg:w="46138414"/><text x="0.8531%" y="335.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (87,261,783 samples, 0.02%)</title><rect x="0.5949%" y="373" width="0.0203%" height="15" fill="rgb(240,187,13)" fg:x="2559678968" fg:w="87261783"/><text x="0.8449%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (87,261,783 samples, 0.02%)</title><rect x="0.5949%" y="357" width="0.0203%" height="15" fill="rgb(223,113,26)" fg:x="2559678968" fg:w="87261783"/><text x="0.8449%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (153,460,377 samples, 0.04%)</title><rect x="0.5874%" y="421" width="0.0357%" height="15" fill="rgb(206,192,2)" fg:x="2527582680" fg:w="153460377"/><text x="0.8374%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (153,460,377 samples, 0.04%)</title><rect x="0.5874%" y="405" width="0.0357%" height="15" fill="rgb(241,108,4)" fg:x="2527582680" fg:w="153460377"/><text x="0.8374%" y="415.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (141,424,269 samples, 0.03%)</title><rect x="0.5902%" y="389" width="0.0329%" height="15" fill="rgb(247,173,49)" fg:x="2539618788" fg:w="141424269"/><text x="0.8402%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (812,437,290 samples, 0.19%)</title><rect x="0.4403%" y="501" width="0.1888%" height="15" fill="rgb(224,114,35)" fg:x="1894684001" fg:w="812437290"/><text x="0.6903%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (812,437,290 samples, 0.19%)</title><rect x="0.4403%" y="485" width="0.1888%" height="15" fill="rgb(245,159,27)" fg:x="1894684001" fg:w="812437290"/><text x="0.6903%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (812,437,290 samples, 0.19%)</title><rect x="0.4403%" y="469" width="0.1888%" height="15" fill="rgb(245,172,44)" fg:x="1894684001" fg:w="812437290"/><text x="0.6903%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (179,538,611 samples, 0.04%)</title><rect x="0.5874%" y="453" width="0.0417%" height="15" fill="rgb(236,23,11)" fg:x="2527582680" fg:w="179538611"/><text x="0.8374%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (179,538,611 samples, 0.04%)</title><rect x="0.5874%" y="437" width="0.0417%" height="15" fill="rgb(205,117,38)" fg:x="2527582680" fg:w="179538611"/><text x="0.8374%" y="447.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (52,156,468 samples, 0.01%)</title><rect x="0.6443%" y="389" width="0.0121%" height="15" fill="rgb(237,72,25)" fg:x="2772316876" fg:w="52156468"/><text x="0.8943%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (52,156,468 samples, 0.01%)</title><rect x="0.6443%" y="373" width="0.0121%" height="15" fill="rgb(244,70,9)" fg:x="2772316876" fg:w="52156468"/><text x="0.8943%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (93,279,837 samples, 0.02%)</title><rect x="0.6394%" y="437" width="0.0217%" height="15" fill="rgb(217,125,39)" fg:x="2751253687" fg:w="93279837"/><text x="0.8894%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (93,279,837 samples, 0.02%)</title><rect x="0.6394%" y="421" width="0.0217%" height="15" fill="rgb(235,36,10)" fg:x="2751253687" fg:w="93279837"/><text x="0.8894%" y="431.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (91,273,819 samples, 0.02%)</title><rect x="0.6399%" y="405" width="0.0212%" height="15" fill="rgb(251,123,47)" fg:x="2753259705" fg:w="91273819"/><text x="0.8899%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (116,349,044 samples, 0.03%)</title><rect x="0.6394%" y="469" width="0.0270%" height="15" fill="rgb(221,13,13)" fg:x="2751253687" fg:w="116349044"/><text x="0.8894%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (116,349,044 samples, 0.03%)</title><rect x="0.6394%" y="453" width="0.0270%" height="15" fill="rgb(238,131,9)" fg:x="2751253687" fg:w="116349044"/><text x="0.8894%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (166,499,494 samples, 0.04%)</title><rect x="0.6292%" y="501" width="0.0387%" height="15" fill="rgb(211,50,8)" fg:x="2707121291" fg:w="166499494"/><text x="0.8792%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (156,469,404 samples, 0.04%)</title><rect x="0.6315%" y="485" width="0.0364%" height="15" fill="rgb(245,182,24)" fg:x="2717151381" fg:w="156469404"/><text x="0.8815%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (311,935,799 samples, 0.07%)</title><rect x="0.6686%" y="437" width="0.0725%" height="15" fill="rgb(242,14,37)" fg:x="2876629812" fg:w="311935799"/><text x="0.9186%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (311,935,799 samples, 0.07%)</title><rect x="0.6686%" y="421" width="0.0725%" height="15" fill="rgb(246,228,12)" fg:x="2876629812" fg:w="311935799"/><text x="0.9186%" y="431.50"></text></g><g><title>core::ptr::write (311,935,799 samples, 0.07%)</title><rect x="0.6686%" y="405" width="0.0725%" height="15" fill="rgb(213,55,15)" fg:x="2876629812" fg:w="311935799"/><text x="0.9186%" y="415.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (315,947,835 samples, 0.07%)</title><rect x="0.6679%" y="501" width="0.0734%" height="15" fill="rgb(209,9,3)" fg:x="2873620785" fg:w="315947835"/><text x="0.9179%" y="511.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (315,947,835 samples, 0.07%)</title><rect x="0.6679%" y="485" width="0.0734%" height="15" fill="rgb(230,59,30)" fg:x="2873620785" fg:w="315947835"/><text x="0.9179%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (315,947,835 samples, 0.07%)</title><rect x="0.6679%" y="469" width="0.0734%" height="15" fill="rgb(209,121,21)" fg:x="2873620785" fg:w="315947835"/><text x="0.9179%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (315,947,835 samples, 0.07%)</title><rect x="0.6679%" y="453" width="0.0734%" height="15" fill="rgb(220,109,13)" fg:x="2873620785" fg:w="315947835"/><text x="0.9179%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (193,580,737 samples, 0.04%)</title><rect x="0.7495%" y="277" width="0.0450%" height="15" fill="rgb(232,18,1)" fg:x="3224673935" fg:w="193580737"/><text x="0.9995%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (217,652,953 samples, 0.05%)</title><rect x="0.7495%" y="293" width="0.0506%" height="15" fill="rgb(215,41,42)" fg:x="3224673935" fg:w="217652953"/><text x="0.9995%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (283,851,547 samples, 0.07%)</title><rect x="0.7495%" y="309" width="0.0660%" height="15" fill="rgb(224,123,36)" fg:x="3224673935" fg:w="283851547"/><text x="0.9995%" y="319.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (302,908,718 samples, 0.07%)</title><rect x="0.7462%" y="325" width="0.0704%" height="15" fill="rgb(240,125,3)" fg:x="3210631809" fg:w="302908718"/><text x="0.9962%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (307,923,763 samples, 0.07%)</title><rect x="0.7462%" y="341" width="0.0716%" height="15" fill="rgb(205,98,50)" fg:x="3210631809" fg:w="307923763"/><text x="0.9962%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (320,962,880 samples, 0.07%)</title><rect x="0.7460%" y="357" width="0.0746%" height="15" fill="rgb(205,185,37)" fg:x="3209628800" fg:w="320962880"/><text x="0.9960%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (133,400,197 samples, 0.03%)</title><rect x="0.8212%" y="277" width="0.0310%" height="15" fill="rgb(238,207,15)" fg:x="3533600707" fg:w="133400197"/><text x="1.0712%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (144,433,296 samples, 0.03%)</title><rect x="0.8212%" y="293" width="0.0336%" height="15" fill="rgb(213,199,42)" fg:x="3533600707" fg:w="144433296"/><text x="1.0712%" y="303.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (174,523,566 samples, 0.04%)</title><rect x="0.8205%" y="325" width="0.0406%" height="15" fill="rgb(235,201,11)" fg:x="3530591680" fg:w="174523566"/><text x="1.0705%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (171,514,539 samples, 0.04%)</title><rect x="0.8212%" y="309" width="0.0399%" height="15" fill="rgb(207,46,11)" fg:x="3533600707" fg:w="171514539"/><text x="1.0712%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (178,535,602 samples, 0.04%)</title><rect x="0.8205%" y="341" width="0.0415%" height="15" fill="rgb(241,35,35)" fg:x="3530591680" fg:w="178535602"/><text x="1.0705%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (180,541,620 samples, 0.04%)</title><rect x="0.8205%" y="357" width="0.0420%" height="15" fill="rgb(243,32,47)" fg:x="3530591680" fg:w="180541620"/><text x="1.0705%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (139,418,251 samples, 0.03%)</title><rect x="0.8653%" y="261" width="0.0324%" height="15" fill="rgb(247,202,23)" fg:x="3723169408" fg:w="139418251"/><text x="1.1153%" y="271.50"></text></g><g><title>chlang::board::Position::bitboard (161,484,449 samples, 0.04%)</title><rect x="0.8653%" y="277" width="0.0375%" height="15" fill="rgb(219,102,11)" fg:x="3723169408" fg:w="161484449"/><text x="1.1153%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (201,604,809 samples, 0.05%)</title><rect x="0.8653%" y="293" width="0.0469%" height="15" fill="rgb(243,110,44)" fg:x="3723169408" fg:w="201604809"/><text x="1.1153%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (216,649,944 samples, 0.05%)</title><rect x="0.8627%" y="309" width="0.0504%" height="15" fill="rgb(222,74,54)" fg:x="3712136309" fg:w="216649944"/><text x="1.1127%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (221,664,989 samples, 0.05%)</title><rect x="0.8625%" y="325" width="0.0515%" height="15" fill="rgb(216,99,12)" fg:x="3711133300" fg:w="221664989"/><text x="1.1125%" y="335.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (230,692,070 samples, 0.05%)</title><rect x="0.8625%" y="341" width="0.0536%" height="15" fill="rgb(226,22,26)" fg:x="3711133300" fg:w="230692070"/><text x="1.1125%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (163,490,467 samples, 0.04%)</title><rect x="0.9187%" y="261" width="0.0380%" height="15" fill="rgb(217,163,10)" fg:x="3952858469" fg:w="163490467"/><text x="1.1687%" y="271.50"></text></g><g><title>chlang::board::Position::bitboard (186,559,674 samples, 0.04%)</title><rect x="0.9187%" y="277" width="0.0434%" height="15" fill="rgb(213,25,53)" fg:x="3952858469" fg:w="186559674"/><text x="1.1687%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (214,643,926 samples, 0.05%)</title><rect x="0.9187%" y="293" width="0.0499%" height="15" fill="rgb(252,105,26)" fg:x="3952858469" fg:w="214643926"/><text x="1.1687%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (229,689,061 samples, 0.05%)</title><rect x="0.9164%" y="309" width="0.0534%" height="15" fill="rgb(220,39,43)" fg:x="3942828379" fg:w="229689061"/><text x="1.1664%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (232,698,088 samples, 0.05%)</title><rect x="0.9161%" y="325" width="0.0541%" height="15" fill="rgb(229,68,48)" fg:x="3941825370" fg:w="232698088"/><text x="1.1661%" y="335.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (239,719,151 samples, 0.06%)</title><rect x="0.9161%" y="341" width="0.0557%" height="15" fill="rgb(252,8,32)" fg:x="3941825370" fg:w="239719151"/><text x="1.1661%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (496,489,455 samples, 0.12%)</title><rect x="0.8625%" y="357" width="0.1154%" height="15" fill="rgb(223,20,43)" fg:x="3711133300" fg:w="496489455"/><text x="1.1125%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1,062,186,531 samples, 0.25%)</title><rect x="0.7413%" y="373" width="0.2469%" height="15" fill="rgb(229,81,49)" fg:x="3189568620" fg:w="1062186531"/><text x="0.9913%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (1,064,192,549 samples, 0.25%)</title><rect x="0.7413%" y="389" width="0.2473%" height="15" fill="rgb(236,28,36)" fg:x="3189568620" fg:w="1064192549"/><text x="0.9913%" y="399.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (1,068,204,585 samples, 0.25%)</title><rect x="0.7413%" y="421" width="0.2483%" height="15" fill="rgb(249,185,26)" fg:x="3189568620" fg:w="1068204585"/><text x="0.9913%" y="431.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (1,068,204,585 samples, 0.25%)</title><rect x="0.7413%" y="405" width="0.2483%" height="15" fill="rgb(249,174,33)" fg:x="3189568620" fg:w="1068204585"/><text x="0.9913%" y="415.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,071,213,612 samples, 0.25%)</title><rect x="0.7413%" y="437" width="0.2490%" height="15" fill="rgb(233,201,37)" fg:x="3189568620" fg:w="1071213612"/><text x="0.9913%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (287,863,583 samples, 0.07%)</title><rect x="0.9951%" y="309" width="0.0669%" height="15" fill="rgb(221,78,26)" fg:x="4281845421" fg:w="287863583"/><text x="1.2451%" y="319.50"></text></g><g><title>chlang::board::Position::bitboard (334,001,997 samples, 0.08%)</title><rect x="0.9951%" y="325" width="0.0776%" height="15" fill="rgb(250,127,30)" fg:x="4281845421" fg:w="334001997"/><text x="1.2451%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (385,155,456 samples, 0.09%)</title><rect x="0.9951%" y="341" width="0.0895%" height="15" fill="rgb(230,49,44)" fg:x="4281845421" fg:w="385155456"/><text x="1.2451%" y="351.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (412,236,699 samples, 0.10%)</title><rect x="0.9903%" y="357" width="0.0958%" height="15" fill="rgb(229,67,23)" fg:x="4260782232" fg:w="412236699"/><text x="1.2403%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (426,278,825 samples, 0.10%)</title><rect x="0.9903%" y="373" width="0.0991%" height="15" fill="rgb(249,83,47)" fg:x="4260782232" fg:w="426278825"/><text x="1.2403%" y="383.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort::{{closure}} (431,293,870 samples, 0.10%)</title><rect x="0.9903%" y="389" width="0.1002%" height="15" fill="rgb(215,43,3)" fg:x="4260782232" fg:w="431293870"/><text x="1.2403%" y="399.50"></text></g><g><title>chlang::cmove::Move::to (74,222,666 samples, 0.02%)</title><rect x="1.0952%" y="357" width="0.0173%" height="15" fill="rgb(238,154,13)" fg:x="4712136282" fg:w="74222666"/><text x="1.3452%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,145,436,278 samples, 0.27%)</title><rect x="1.1124%" y="325" width="0.2662%" height="15" fill="rgb(219,56,2)" fg:x="4786358948" fg:w="1145436278"/><text x="1.3624%" y="335.50"></text></g><g><title>chlang::board::Position::bitboard (1,375,125,339 samples, 0.32%)</title><rect x="1.1124%" y="341" width="0.3196%" height="15" fill="rgb(233,0,4)" fg:x="4786358948" fg:w="1375125339"/><text x="1.3624%" y="351.50"></text></g><g><title>chlang::board::Board::piece_type (1,539,618,815 samples, 0.36%)</title><rect x="1.1124%" y="357" width="0.3578%" height="15" fill="rgb(235,30,7)" fg:x="4786358948" fg:w="1539618815"/><text x="1.3624%" y="367.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (1,688,064,147 samples, 0.39%)</title><rect x="1.0912%" y="373" width="0.3923%" height="15" fill="rgb(250,79,13)" fg:x="4695085129" fg:w="1688064147"/><text x="1.3412%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,741,223,624 samples, 0.40%)</title><rect x="1.0905%" y="389" width="0.4047%" height="15" fill="rgb(211,146,34)" fg:x="4692076102" fg:w="1741223624"/><text x="1.3405%" y="399.50"></text></g><g><title>core::intrinsics::copy (68,204,612 samples, 0.02%)</title><rect x="1.4952%" y="389" width="0.0159%" height="15" fill="rgb(228,22,38)" fg:x="6433299726" fg:w="68204612"/><text x="1.7452%" y="399.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::{{closure}} (2,267,803,349 samples, 0.53%)</title><rect x="0.9903%" y="405" width="0.5271%" height="15" fill="rgb(235,168,5)" fg:x="4260782232" fg:w="2267803349"/><text x="1.2403%" y="415.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (2,284,854,502 samples, 0.53%)</title><rect x="0.9903%" y="421" width="0.5310%" height="15" fill="rgb(221,155,16)" fg:x="4260782232" fg:w="2284854502"/><text x="1.2403%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (2,296,890,610 samples, 0.53%)</title><rect x="0.9903%" y="437" width="0.5338%" height="15" fill="rgb(215,215,53)" fg:x="4260782232" fg:w="2296890610"/><text x="1.2403%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (152,457,368 samples, 0.04%)</title><rect x="1.5269%" y="341" width="0.0354%" height="15" fill="rgb(223,4,10)" fg:x="6569708950" fg:w="152457368"/><text x="1.7769%" y="351.50"></text></g><g><title>chlang::board::Position::bitboard (166,499,494 samples, 0.04%)</title><rect x="1.5269%" y="357" width="0.0387%" height="15" fill="rgb(234,103,6)" fg:x="6569708950" fg:w="166499494"/><text x="1.7769%" y="367.50"></text></g><g><title>chlang::board::Board::piece_type (204,613,836 samples, 0.05%)</title><rect x="1.5269%" y="373" width="0.0476%" height="15" fill="rgb(227,97,0)" fg:x="6569708950" fg:w="204613836"/><text x="1.7769%" y="383.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (221,664,989 samples, 0.05%)</title><rect x="1.5248%" y="389" width="0.0515%" height="15" fill="rgb(234,150,53)" fg:x="6560681869" fg:w="221664989"/><text x="1.7748%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (229,689,061 samples, 0.05%)</title><rect x="1.5241%" y="405" width="0.0534%" height="15" fill="rgb(228,201,54)" fg:x="6557672842" fg:w="229689061"/><text x="1.7741%" y="415.50"></text></g><g><title>core::slice::sort::shared::pivot::median3 (230,692,070 samples, 0.05%)</title><rect x="1.5241%" y="421" width="0.0536%" height="15" fill="rgb(222,22,37)" fg:x="6557672842" fg:w="230692070"/><text x="1.7741%" y="431.50"></text></g><g><title>core::slice::sort::shared::pivot::choose_pivot (239,719,151 samples, 0.06%)</title><rect x="1.5241%" y="437" width="0.0557%" height="15" fill="rgb(237,53,32)" fg:x="6557672842" fg:w="239719151"/><text x="1.7741%" y="447.50"></text></g><g><title>chlang::cmove::Move::to (65,195,585 samples, 0.02%)</title><rect x="1.5910%" y="309" width="0.0152%" height="15" fill="rgb(233,25,53)" fg:x="6845536425" fg:w="65195585"/><text x="1.8410%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (678,034,084 samples, 0.16%)</title><rect x="1.6061%" y="277" width="0.1576%" height="15" fill="rgb(210,40,34)" fg:x="6910732010" fg:w="678034084"/><text x="1.8561%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (788,365,074 samples, 0.18%)</title><rect x="1.6061%" y="293" width="0.1832%" height="15" fill="rgb(241,220,44)" fg:x="6910732010" fg:w="788365074"/><text x="1.8561%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (917,753,235 samples, 0.21%)</title><rect x="1.6061%" y="309" width="0.2133%" height="15" fill="rgb(235,28,35)" fg:x="6910732010" fg:w="917753235"/><text x="1.8561%" y="319.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (1,037,111,306 samples, 0.24%)</title><rect x="1.5833%" y="325" width="0.2410%" height="15" fill="rgb(210,56,17)" fg:x="6812437128" fg:w="1037111306"/><text x="1.8333%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,046,138,387 samples, 0.24%)</title><rect x="1.5833%" y="341" width="0.2431%" height="15" fill="rgb(224,130,29)" fg:x="6812437128" fg:w="1046138387"/><text x="1.8333%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (1,080,240,693 samples, 0.25%)</title><rect x="1.5833%" y="357" width="0.2511%" height="15" fill="rgb(235,212,8)" fg:x="6812437128" fg:w="1080240693"/><text x="1.8333%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (216,649,944 samples, 0.05%)</title><rect x="1.8444%" y="261" width="0.0504%" height="15" fill="rgb(223,33,50)" fg:x="7935807208" fg:w="216649944"/><text x="2.0944%" y="271.50"></text></g><g><title>chlang::board::Position::bitboard (271,815,439 samples, 0.06%)</title><rect x="1.8444%" y="277" width="0.0632%" height="15" fill="rgb(219,149,13)" fg:x="7935807208" fg:w="271815439"/><text x="2.0944%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (313,941,817 samples, 0.07%)</title><rect x="1.8444%" y="293" width="0.0730%" height="15" fill="rgb(250,156,29)" fg:x="7935807208" fg:w="313941817"/><text x="2.0944%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (366,098,285 samples, 0.09%)</title><rect x="1.8355%" y="309" width="0.0851%" height="15" fill="rgb(216,193,19)" fg:x="7897692866" fg:w="366098285"/><text x="2.0855%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (382,146,429 samples, 0.09%)</title><rect x="1.8343%" y="325" width="0.0888%" height="15" fill="rgb(216,135,14)" fg:x="7892677821" fg:w="382146429"/><text x="2.0843%" y="335.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (402,206,609 samples, 0.09%)</title><rect x="1.8343%" y="341" width="0.0935%" height="15" fill="rgb(241,47,5)" fg:x="7892677821" fg:w="402206609"/><text x="2.0843%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (288,866,592 samples, 0.07%)</title><rect x="1.9369%" y="261" width="0.0671%" height="15" fill="rgb(233,42,35)" fg:x="8334001781" fg:w="288866592"/><text x="2.1869%" y="271.50"></text></g><g><title>chlang::board::Position::bitboard (337,011,024 samples, 0.08%)</title><rect x="1.9369%" y="277" width="0.0783%" height="15" fill="rgb(231,13,6)" fg:x="8334001781" fg:w="337011024"/><text x="2.1869%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (370,110,321 samples, 0.09%)</title><rect x="1.9369%" y="293" width="0.0860%" height="15" fill="rgb(207,181,40)" fg:x="8334001781" fg:w="370110321"/><text x="2.1869%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (416,248,735 samples, 0.10%)</title><rect x="1.9278%" y="325" width="0.0967%" height="15" fill="rgb(254,173,49)" fg:x="8294884430" fg:w="416248735"/><text x="2.1778%" y="335.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (413,239,708 samples, 0.10%)</title><rect x="1.9285%" y="309" width="0.0960%" height="15" fill="rgb(221,1,38)" fg:x="8297893457" fg:w="413239708"/><text x="2.1785%" y="319.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (434,302,897 samples, 0.10%)</title><rect x="1.9278%" y="341" width="0.1009%" height="15" fill="rgb(206,124,46)" fg:x="8294884430" fg:w="434302897"/><text x="2.1778%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (866,599,776 samples, 0.20%)</title><rect x="1.8343%" y="357" width="0.2014%" height="15" fill="rgb(249,21,11)" fg:x="7892677821" fg:w="866599776"/><text x="2.0843%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (1,955,867,550 samples, 0.45%)</title><rect x="1.5833%" y="373" width="0.4546%" height="15" fill="rgb(222,201,40)" fg:x="6812437128" fg:w="1955867550"/><text x="1.8333%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (662,988,949 samples, 0.15%)</title><rect x="2.0446%" y="293" width="0.1541%" height="15" fill="rgb(235,61,29)" fg:x="8797391939" fg:w="662988949"/><text x="2.2946%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (768,304,894 samples, 0.18%)</title><rect x="2.0446%" y="309" width="0.1786%" height="15" fill="rgb(219,207,3)" fg:x="8797391939" fg:w="768304894"/><text x="2.2946%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (886,659,956 samples, 0.21%)</title><rect x="2.0446%" y="325" width="0.2061%" height="15" fill="rgb(222,56,46)" fg:x="8797391939" fg:w="886659956"/><text x="2.2946%" y="335.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (941,825,451 samples, 0.22%)</title><rect x="2.0379%" y="341" width="0.2189%" height="15" fill="rgb(239,76,54)" fg:x="8768304678" fg:w="941825451"/><text x="2.2879%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (959,879,613 samples, 0.22%)</title><rect x="2.0379%" y="357" width="0.2231%" height="15" fill="rgb(231,124,27)" fg:x="8768304678" fg:w="959879613"/><text x="2.2879%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (986,960,856 samples, 0.23%)</title><rect x="2.0379%" y="373" width="0.2294%" height="15" fill="rgb(249,195,6)" fg:x="8768304678" fg:w="986960856"/><text x="2.2879%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (371,113,330 samples, 0.09%)</title><rect x="2.2798%" y="277" width="0.0863%" height="15" fill="rgb(237,174,47)" fg:x="9809428020" fg:w="371113330"/><text x="2.5298%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (460,381,131 samples, 0.11%)</title><rect x="2.2798%" y="293" width="0.1070%" height="15" fill="rgb(206,201,31)" fg:x="9809428020" fg:w="460381131"/><text x="2.5298%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (513,540,608 samples, 0.12%)</title><rect x="2.2798%" y="309" width="0.1194%" height="15" fill="rgb(231,57,52)" fg:x="9809428020" fg:w="513540608"/><text x="2.5298%" y="319.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (575,727,166 samples, 0.13%)</title><rect x="2.2698%" y="325" width="0.1338%" height="15" fill="rgb(248,177,22)" fg:x="9766298633" fg:w="575727166"/><text x="2.5198%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (602,808,409 samples, 0.14%)</title><rect x="2.2672%" y="341" width="0.1401%" height="15" fill="rgb(215,211,37)" fg:x="9755265534" fg:w="602808409"/><text x="2.5172%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (627,883,634 samples, 0.15%)</title><rect x="2.2672%" y="357" width="0.1459%" height="15" fill="rgb(241,128,51)" fg:x="9755265534" fg:w="627883634"/><text x="2.5172%" y="367.50"></text></g><g><title>chlang::cmove::Move::to (44,132,396 samples, 0.01%)</title><rect x="2.4190%" y="309" width="0.0103%" height="15" fill="rgb(227,165,31)" fg:x="10408224393" fg:w="44132396"/><text x="2.6690%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (436,308,915 samples, 0.10%)</title><rect x="2.4292%" y="277" width="0.1014%" height="15" fill="rgb(228,167,24)" fg:x="10452356789" fg:w="436308915"/><text x="2.6792%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (523,570,698 samples, 0.12%)</title><rect x="2.4292%" y="293" width="0.1217%" height="15" fill="rgb(228,143,12)" fg:x="10452356789" fg:w="523570698"/><text x="2.6792%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (579,739,202 samples, 0.13%)</title><rect x="2.4292%" y="309" width="0.1347%" height="15" fill="rgb(249,149,8)" fg:x="10452356789" fg:w="579739202"/><text x="2.6792%" y="319.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (658,976,913 samples, 0.15%)</title><rect x="2.4150%" y="325" width="0.1532%" height="15" fill="rgb(243,35,44)" fg:x="10391173240" fg:w="658976913"/><text x="2.6650%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (675,025,057 samples, 0.16%)</title><rect x="2.4132%" y="341" width="0.1569%" height="15" fill="rgb(246,89,9)" fg:x="10383149168" fg:w="675025057"/><text x="2.6632%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (696,088,246 samples, 0.16%)</title><rect x="2.4132%" y="357" width="0.1618%" height="15" fill="rgb(233,213,13)" fg:x="10383149168" fg:w="696088246"/><text x="2.6632%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (1,349,047,105 samples, 0.31%)</title><rect x="2.2672%" y="373" width="0.3135%" height="15" fill="rgb(233,141,41)" fg:x="9755265534" fg:w="1349047105"/><text x="2.5172%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47,141,423 samples, 0.01%)</title><rect x="2.5836%" y="373" width="0.0110%" height="15" fill="rgb(239,167,4)" fg:x="11116348747" fg:w="47141423"/><text x="2.8336%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (4,401,203,492 samples, 1.02%)</title><rect x="1.5833%" y="389" width="1.0229%" height="15" fill="rgb(209,217,16)" fg:x="6812437128" fg:w="4401203492"/><text x="1.8333%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (4,402,206,501 samples, 1.02%)</title><rect x="1.5833%" y="405" width="1.0231%" height="15" fill="rgb(219,88,35)" fg:x="6812437128" fg:w="4402206501"/><text x="1.8333%" y="415.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (4,404,212,519 samples, 1.02%)</title><rect x="1.5833%" y="437" width="1.0236%" height="15" fill="rgb(220,193,23)" fg:x="6812437128" fg:w="4404212519"/><text x="1.8333%" y="447.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (4,404,212,519 samples, 1.02%)</title><rect x="1.5833%" y="421" width="1.0236%" height="15" fill="rgb(230,90,52)" fg:x="6812437128" fg:w="4404212519"/><text x="1.8333%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (8,048,144,216 samples, 1.87%)</title><rect x="0.7413%" y="453" width="1.8705%" height="15" fill="rgb(252,106,19)" fg:x="3189568620" fg:w="8048144216"/><text x="0.9913%" y="463.50">c..</text></g><g><title>core::num::&lt;impl u64&gt;::pow (150,451,350 samples, 0.03%)</title><rect x="2.6164%" y="373" width="0.0350%" height="15" fill="rgb(206,74,20)" fg:x="11257773016" fg:w="150451350"/><text x="2.8664%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (192,577,728 samples, 0.04%)</title><rect x="2.6164%" y="389" width="0.0448%" height="15" fill="rgb(230,138,44)" fg:x="11257773016" fg:w="192577728"/><text x="2.8664%" y="399.50"></text></g><g><title>chlang::board::Board::piece_type (232,698,088 samples, 0.05%)</title><rect x="2.6164%" y="405" width="0.0541%" height="15" fill="rgb(235,182,43)" fg:x="11257773016" fg:w="232698088"/><text x="2.8664%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (261,785,349 samples, 0.06%)</title><rect x="2.6118%" y="437" width="0.0608%" height="15" fill="rgb(242,16,51)" fg:x="11237712836" fg:w="261785349"/><text x="2.8618%" y="447.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (260,782,340 samples, 0.06%)</title><rect x="2.6120%" y="421" width="0.0606%" height="15" fill="rgb(248,9,4)" fg:x="11238715845" fg:w="260782340"/><text x="2.8620%" y="431.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (275,827,475 samples, 0.06%)</title><rect x="2.6118%" y="453" width="0.0641%" height="15" fill="rgb(210,31,22)" fg:x="11237712836" fg:w="275827475"/><text x="2.8618%" y="463.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (8,338,013,817 samples, 1.94%)</title><rect x="0.7413%" y="469" width="1.9378%" height="15" fill="rgb(239,54,39)" fg:x="3189568620" fg:w="8338013817"/><text x="0.9913%" y="479.50">c..</text></g><g><title>core::num::&lt;impl u64&gt;::pow (62,186,558 samples, 0.01%)</title><rect x="2.6794%" y="373" width="0.0145%" height="15" fill="rgb(230,99,41)" fg:x="11528585446" fg:w="62186558"/><text x="2.9294%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (67,201,603 samples, 0.02%)</title><rect x="2.6794%" y="389" width="0.0156%" height="15" fill="rgb(253,106,12)" fg:x="11528585446" fg:w="67201603"/><text x="2.9294%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (80,240,720 samples, 0.02%)</title><rect x="2.6791%" y="437" width="0.0186%" height="15" fill="rgb(213,46,41)" fg:x="11527582437" fg:w="80240720"/><text x="2.9291%" y="447.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (80,240,720 samples, 0.02%)</title><rect x="2.6791%" y="421" width="0.0186%" height="15" fill="rgb(215,133,35)" fg:x="11527582437" fg:w="80240720"/><text x="2.9291%" y="431.50"></text></g><g><title>chlang::board::Board::piece_type (79,237,711 samples, 0.02%)</title><rect x="2.6794%" y="405" width="0.0184%" height="15" fill="rgb(213,28,5)" fg:x="11528585446" fg:w="79237711"/><text x="2.9294%" y="415.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (85,255,765 samples, 0.02%)</title><rect x="2.6791%" y="453" width="0.0198%" height="15" fill="rgb(215,77,49)" fg:x="11527582437" fg:w="85255765"/><text x="2.9291%" y="463.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (88,264,792 samples, 0.02%)</title><rect x="2.6791%" y="469" width="0.0205%" height="15" fill="rgb(248,100,22)" fg:x="11527582437" fg:w="88264792"/><text x="2.9291%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (8,428,284,627 samples, 1.96%)</title><rect x="0.7413%" y="501" width="1.9588%" height="15" fill="rgb(208,67,9)" fg:x="3189568620" fg:w="8428284627"/><text x="0.9913%" y="511.50">c..</text></g><g><title>core::slice::sort::unstable::sort (8,428,284,627 samples, 1.96%)</title><rect x="0.7413%" y="485" width="1.9588%" height="15" fill="rgb(219,133,21)" fg:x="3189568620" fg:w="8428284627"/><text x="0.9913%" y="495.50">c..</text></g><g><title>_int_free (71,213,639 samples, 0.02%)</title><rect x="2.7029%" y="325" width="0.0166%" height="15" fill="rgb(246,46,29)" fg:x="11629889355" fg:w="71213639"/><text x="2.9529%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt;&gt; (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="501" width="0.0193%" height="15" fill="rgb(246,185,52)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="485" width="0.0193%" height="15" fill="rgb(252,136,11)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="469" width="0.0193%" height="15" fill="rgb(219,138,53)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="453" width="0.0193%" height="15" fill="rgb(211,51,23)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="437" width="0.0193%" height="15" fill="rgb(247,221,28)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="421" width="0.0193%" height="15" fill="rgb(251,222,45)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="405" width="0.0193%" height="15" fill="rgb(217,162,53)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="389" width="0.0193%" height="15" fill="rgb(229,93,14)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="373" width="0.0193%" height="15" fill="rgb(209,67,49)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (83,249,747 samples, 0.02%)</title><rect x="2.7018%" y="357" width="0.0193%" height="15" fill="rgb(213,87,29)" fg:x="11624874310" fg:w="83249747"/><text x="2.9518%" y="367.50"></text></g><g><title>__GI___libc_free (78,234,702 samples, 0.02%)</title><rect x="2.7029%" y="341" width="0.0182%" height="15" fill="rgb(205,151,52)" fg:x="11629889355" fg:w="78234702"/><text x="2.9529%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,875,626,830 samples, 0.44%)</title><rect x="2.7244%" y="389" width="0.4359%" height="15" fill="rgb(253,215,39)" fg:x="11722166183" fg:w="1875626830"/><text x="2.9744%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,875,626,830 samples, 0.44%)</title><rect x="2.7244%" y="373" width="0.4359%" height="15" fill="rgb(221,220,41)" fg:x="11722166183" fg:w="1875626830"/><text x="2.9744%" y="383.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (737,211,615 samples, 0.17%)</title><rect x="3.1687%" y="309" width="0.1713%" height="15" fill="rgb(218,133,21)" fg:x="13633901337" fg:w="737211615"/><text x="3.4187%" y="319.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (741,223,651 samples, 0.17%)</title><rect x="3.1687%" y="373" width="0.1723%" height="15" fill="rgb(221,193,43)" fg:x="13633901337" fg:w="741223651"/><text x="3.4187%" y="383.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (741,223,651 samples, 0.17%)</title><rect x="3.1687%" y="357" width="0.1723%" height="15" fill="rgb(240,128,52)" fg:x="13633901337" fg:w="741223651"/><text x="3.4187%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (741,223,651 samples, 0.17%)</title><rect x="3.1687%" y="341" width="0.1723%" height="15" fill="rgb(253,114,12)" fg:x="13633901337" fg:w="741223651"/><text x="3.4187%" y="351.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (741,223,651 samples, 0.17%)</title><rect x="3.1687%" y="325" width="0.1723%" height="15" fill="rgb(215,223,47)" fg:x="13633901337" fg:w="741223651"/><text x="3.4187%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (745,235,687 samples, 0.17%)</title><rect x="3.1682%" y="389" width="0.1732%" height="15" fill="rgb(248,225,23)" fg:x="13631895319" fg:w="745235687"/><text x="3.4182%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,712,136,336 samples, 0.63%)</title><rect x="2.7211%" y="437" width="0.6303%" height="15" fill="rgb(250,108,0)" fg:x="11708124057" fg:w="2712136336"/><text x="2.9711%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,712,136,336 samples, 0.63%)</title><rect x="2.7211%" y="421" width="0.6303%" height="15" fill="rgb(228,208,7)" fg:x="11708124057" fg:w="2712136336"/><text x="2.9711%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,712,136,336 samples, 0.63%)</title><rect x="2.7211%" y="405" width="0.6303%" height="15" fill="rgb(244,45,10)" fg:x="11708124057" fg:w="2712136336"/><text x="2.9711%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (47,141,423 samples, 0.01%)</title><rect x="3.3514%" y="341" width="0.0110%" height="15" fill="rgb(207,125,25)" fg:x="14420260393" fg:w="47141423"/><text x="3.6014%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (47,141,423 samples, 0.01%)</title><rect x="3.3514%" y="325" width="0.0110%" height="15" fill="rgb(210,195,18)" fg:x="14420260393" fg:w="47141423"/><text x="3.6014%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47,141,423 samples, 0.01%)</title><rect x="3.3514%" y="309" width="0.0110%" height="15" fill="rgb(249,80,12)" fg:x="14420260393" fg:w="47141423"/><text x="3.6014%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (57,171,513 samples, 0.01%)</title><rect x="3.3514%" y="373" width="0.0133%" height="15" fill="rgb(221,65,9)" fg:x="14420260393" fg:w="57171513"/><text x="3.6014%" y="383.50"></text></g><g><title>core::hash::Hasher::write_u8 (57,171,513 samples, 0.01%)</title><rect x="3.3514%" y="357" width="0.0133%" height="15" fill="rgb(235,49,36)" fg:x="14420260393" fg:w="57171513"/><text x="3.6014%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (105,315,945 samples, 0.02%)</title><rect x="3.3657%" y="309" width="0.0245%" height="15" fill="rgb(225,32,20)" fg:x="14481443942" fg:w="105315945"/><text x="3.6157%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (105,315,945 samples, 0.02%)</title><rect x="3.3657%" y="293" width="0.0245%" height="15" fill="rgb(215,141,46)" fg:x="14481443942" fg:w="105315945"/><text x="3.6157%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (108,324,972 samples, 0.03%)</title><rect x="3.3657%" y="325" width="0.0252%" height="15" fill="rgb(250,160,47)" fg:x="14481443942" fg:w="108324972"/><text x="3.6157%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (113,340,017 samples, 0.03%)</title><rect x="3.3647%" y="357" width="0.0263%" height="15" fill="rgb(216,222,40)" fg:x="14477431906" fg:w="113340017"/><text x="3.6147%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u64 (113,340,017 samples, 0.03%)</title><rect x="3.3647%" y="341" width="0.0263%" height="15" fill="rgb(234,217,39)" fg:x="14477431906" fg:w="113340017"/><text x="3.6147%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (59,177,531 samples, 0.01%)</title><rect x="3.3999%" y="245" width="0.0138%" height="15" fill="rgb(207,178,40)" fg:x="14628886265" fg:w="59177531"/><text x="3.6499%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (110,330,990 samples, 0.03%)</title><rect x="3.3943%" y="261" width="0.0256%" height="15" fill="rgb(221,136,13)" fg:x="14604814049" fg:w="110330990"/><text x="3.6443%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (155,466,395 samples, 0.04%)</title><rect x="3.3911%" y="325" width="0.0361%" height="15" fill="rgb(249,199,10)" fg:x="14590771923" fg:w="155466395"/><text x="3.6411%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (155,466,395 samples, 0.04%)</title><rect x="3.3911%" y="309" width="0.0361%" height="15" fill="rgb(249,222,13)" fg:x="14590771923" fg:w="155466395"/><text x="3.6411%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (155,466,395 samples, 0.04%)</title><rect x="3.3911%" y="293" width="0.0361%" height="15" fill="rgb(244,185,38)" fg:x="14590771923" fg:w="155466395"/><text x="3.6411%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (155,466,395 samples, 0.04%)</title><rect x="3.3911%" y="277" width="0.0361%" height="15" fill="rgb(236,202,9)" fg:x="14590771923" fg:w="155466395"/><text x="3.6411%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46,138,414 samples, 0.01%)</title><rect x="3.4379%" y="245" width="0.0107%" height="15" fill="rgb(250,229,37)" fg:x="14792376732" fg:w="46138414"/><text x="3.6879%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (194,583,746 samples, 0.05%)</title><rect x="3.4291%" y="277" width="0.0452%" height="15" fill="rgb(206,174,23)" fg:x="14754262390" fg:w="194583746"/><text x="3.6791%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (194,583,746 samples, 0.05%)</title><rect x="3.4291%" y="261" width="0.0452%" height="15" fill="rgb(211,33,43)" fg:x="14754262390" fg:w="194583746"/><text x="3.6791%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (201,604,809 samples, 0.05%)</title><rect x="3.4291%" y="293" width="0.0469%" height="15" fill="rgb(245,58,50)" fg:x="14754262390" fg:w="201604809"/><text x="3.6791%" y="303.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (258,776,322 samples, 0.06%)</title><rect x="3.4272%" y="325" width="0.0601%" height="15" fill="rgb(244,68,36)" fg:x="14746238318" fg:w="258776322"/><text x="3.6772%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (258,776,322 samples, 0.06%)</title><rect x="3.4272%" y="309" width="0.0601%" height="15" fill="rgb(232,229,15)" fg:x="14746238318" fg:w="258776322"/><text x="3.6772%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (44,132,396 samples, 0.01%)</title><rect x="3.4873%" y="309" width="0.0103%" height="15" fill="rgb(254,30,23)" fg:x="15005014640" fg:w="44132396"/><text x="3.7373%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u8 (44,132,396 samples, 0.01%)</title><rect x="3.4873%" y="293" width="0.0103%" height="15" fill="rgb(235,160,14)" fg:x="15005014640" fg:w="44132396"/><text x="3.7373%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (44,132,396 samples, 0.01%)</title><rect x="3.4873%" y="277" width="0.0103%" height="15" fill="rgb(212,155,44)" fg:x="15005014640" fg:w="44132396"/><text x="3.7373%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (44,132,396 samples, 0.01%)</title><rect x="3.4873%" y="261" width="0.0103%" height="15" fill="rgb(226,2,50)" fg:x="15005014640" fg:w="44132396"/><text x="3.7373%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (44,132,396 samples, 0.01%)</title><rect x="3.4873%" y="245" width="0.0103%" height="15" fill="rgb(234,177,6)" fg:x="15005014640" fg:w="44132396"/><text x="3.7373%" y="255.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (467,402,194 samples, 0.11%)</title><rect x="3.3911%" y="357" width="0.1086%" height="15" fill="rgb(217,24,9)" fg:x="14590771923" fg:w="467402194"/><text x="3.6411%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (467,402,194 samples, 0.11%)</title><rect x="3.3911%" y="341" width="0.1086%" height="15" fill="rgb(220,13,46)" fg:x="14590771923" fg:w="467402194"/><text x="3.6411%" y="351.50"></text></g><g><title>core::hash::Hash::hash_slice (53,159,477 samples, 0.01%)</title><rect x="3.4873%" y="325" width="0.0124%" height="15" fill="rgb(239,221,27)" fg:x="15005014640" fg:w="53159477"/><text x="3.7373%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (69,207,621 samples, 0.02%)</title><rect x="3.5006%" y="277" width="0.0161%" height="15" fill="rgb(222,198,25)" fg:x="15062186153" fg:w="69207621"/><text x="3.7506%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69,207,621 samples, 0.02%)</title><rect x="3.5006%" y="261" width="0.0161%" height="15" fill="rgb(211,99,13)" fg:x="15062186153" fg:w="69207621"/><text x="3.7506%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (77,231,693 samples, 0.02%)</title><rect x="3.4997%" y="341" width="0.0179%" height="15" fill="rgb(232,111,31)" fg:x="15058174117" fg:w="77231693"/><text x="3.7497%" y="351.50"></text></g><g><title>core::hash::Hasher::write_isize (77,231,693 samples, 0.02%)</title><rect x="3.4997%" y="325" width="0.0179%" height="15" fill="rgb(245,82,37)" fg:x="15058174117" fg:w="77231693"/><text x="3.7497%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (77,231,693 samples, 0.02%)</title><rect x="3.4997%" y="309" width="0.0179%" height="15" fill="rgb(227,149,46)" fg:x="15058174117" fg:w="77231693"/><text x="3.7497%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (73,219,657 samples, 0.02%)</title><rect x="3.5006%" y="293" width="0.0170%" height="15" fill="rgb(218,36,50)" fg:x="15062186153" fg:w="73219657"/><text x="3.7506%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (92,276,828 samples, 0.02%)</title><rect x="3.4997%" y="357" width="0.0214%" height="15" fill="rgb(226,80,48)" fg:x="15058174117" fg:w="92276828"/><text x="3.7497%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (64,192,576 samples, 0.01%)</title><rect x="3.5214%" y="277" width="0.0149%" height="15" fill="rgb(238,224,15)" fg:x="15151453954" fg:w="64192576"/><text x="3.7714%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (64,192,576 samples, 0.01%)</title><rect x="3.5214%" y="261" width="0.0149%" height="15" fill="rgb(241,136,10)" fg:x="15151453954" fg:w="64192576"/><text x="3.7714%" y="271.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (69,207,621 samples, 0.02%)</title><rect x="3.5211%" y="357" width="0.0161%" height="15" fill="rgb(208,32,45)" fg:x="15150450945" fg:w="69207621"/><text x="3.7711%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (69,207,621 samples, 0.02%)</title><rect x="3.5211%" y="341" width="0.0161%" height="15" fill="rgb(207,135,9)" fg:x="15150450945" fg:w="69207621"/><text x="3.7711%" y="351.50"></text></g><g><title>core::hash::Hasher::write_isize (69,207,621 samples, 0.02%)</title><rect x="3.5211%" y="325" width="0.0161%" height="15" fill="rgb(206,86,44)" fg:x="15150450945" fg:w="69207621"/><text x="3.7711%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (69,207,621 samples, 0.02%)</title><rect x="3.5211%" y="309" width="0.0161%" height="15" fill="rgb(245,177,15)" fg:x="15150450945" fg:w="69207621"/><text x="3.7711%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (68,204,612 samples, 0.02%)</title><rect x="3.5214%" y="293" width="0.0159%" height="15" fill="rgb(206,64,50)" fg:x="15151453954" fg:w="68204612"/><text x="3.7714%" y="303.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (759,277,813 samples, 0.18%)</title><rect x="3.3647%" y="373" width="0.1765%" height="15" fill="rgb(234,36,40)" fg:x="14477431906" fg:w="759277813"/><text x="3.6147%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (817,452,335 samples, 0.19%)</title><rect x="3.3514%" y="405" width="0.1900%" height="15" fill="rgb(213,64,8)" fg:x="14420260393" fg:w="817452335"/><text x="3.6014%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (817,452,335 samples, 0.19%)</title><rect x="3.3514%" y="389" width="0.1900%" height="15" fill="rgb(210,75,36)" fg:x="14420260393" fg:w="817452335"/><text x="3.6014%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (53,159,477 samples, 0.01%)</title><rect x="3.5468%" y="357" width="0.0124%" height="15" fill="rgb(229,88,21)" fg:x="15260781935" fg:w="53159477"/><text x="3.7968%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (104,312,936 samples, 0.02%)</title><rect x="3.5468%" y="405" width="0.0242%" height="15" fill="rgb(252,204,47)" fg:x="15260781935" fg:w="104312936"/><text x="3.7968%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (104,312,936 samples, 0.02%)</title><rect x="3.5468%" y="389" width="0.0242%" height="15" fill="rgb(208,77,27)" fg:x="15260781935" fg:w="104312936"/><text x="3.7968%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (104,312,936 samples, 0.02%)</title><rect x="3.5468%" y="373" width="0.0242%" height="15" fill="rgb(221,76,26)" fg:x="15260781935" fg:w="104312936"/><text x="3.7968%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (953,861,559 samples, 0.22%)</title><rect x="3.3514%" y="421" width="0.2217%" height="15" fill="rgb(225,139,18)" fg:x="14420260393" fg:w="953861559"/><text x="3.6014%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (954,864,568 samples, 0.22%)</title><rect x="3.3514%" y="437" width="0.2219%" height="15" fill="rgb(230,137,11)" fg:x="14420260393" fg:w="954864568"/><text x="3.6014%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,676,027,985 samples, 0.85%)</title><rect x="2.7211%" y="485" width="0.8544%" height="15" fill="rgb(212,28,1)" fg:x="11708124057" fg:w="3676027985"/><text x="2.9711%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,676,027,985 samples, 0.85%)</title><rect x="2.7211%" y="469" width="0.8544%" height="15" fill="rgb(248,164,17)" fg:x="11708124057" fg:w="3676027985"/><text x="2.9711%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,676,027,985 samples, 0.85%)</title><rect x="2.7211%" y="453" width="0.8544%" height="15" fill="rgb(222,171,42)" fg:x="11708124057" fg:w="3676027985"/><text x="2.9711%" y="463.50"></text></g><g><title>std::collections::hash::map::map_entry (72,216,648 samples, 0.02%)</title><rect x="3.5754%" y="469" width="0.0168%" height="15" fill="rgb(243,84,45)" fg:x="15384152042" fg:w="72216648"/><text x="3.8254%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (98,294,882 samples, 0.02%)</title><rect x="3.5922%" y="453" width="0.0228%" height="15" fill="rgb(252,49,23)" fg:x="15456368690" fg:w="98294882"/><text x="3.8422%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (98,294,882 samples, 0.02%)</title><rect x="3.5922%" y="437" width="0.0228%" height="15" fill="rgb(215,19,7)" fg:x="15456368690" fg:w="98294882"/><text x="3.8422%" y="447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (75,225,675 samples, 0.02%)</title><rect x="3.6256%" y="341" width="0.0175%" height="15" fill="rgb(238,81,41)" fg:x="15599798977" fg:w="75225675"/><text x="3.8756%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (75,225,675 samples, 0.02%)</title><rect x="3.6256%" y="325" width="0.0175%" height="15" fill="rgb(210,199,37)" fg:x="15599798977" fg:w="75225675"/><text x="3.8756%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (75,225,675 samples, 0.02%)</title><rect x="3.6256%" y="309" width="0.0175%" height="15" fill="rgb(244,192,49)" fg:x="15599798977" fg:w="75225675"/><text x="3.8756%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (81,243,729 samples, 0.02%)</title><rect x="3.6249%" y="373" width="0.0189%" height="15" fill="rgb(226,211,11)" fg:x="15596789950" fg:w="81243729"/><text x="3.8749%" y="383.50"></text></g><g><title>core::hash::Hasher::write_u64 (81,243,729 samples, 0.02%)</title><rect x="3.6249%" y="357" width="0.0189%" height="15" fill="rgb(236,162,54)" fg:x="15596789950" fg:w="81243729"/><text x="3.8749%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (51,153,459 samples, 0.01%)</title><rect x="3.6477%" y="261" width="0.0119%" height="15" fill="rgb(220,229,9)" fg:x="15695084832" fg:w="51153459"/><text x="3.8977%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (86,258,774 samples, 0.02%)</title><rect x="3.6445%" y="277" width="0.0200%" height="15" fill="rgb(250,87,22)" fg:x="15681042706" fg:w="86258774"/><text x="3.8945%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (117,352,053 samples, 0.03%)</title><rect x="3.6438%" y="325" width="0.0273%" height="15" fill="rgb(239,43,17)" fg:x="15678033679" fg:w="117352053"/><text x="3.8938%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (117,352,053 samples, 0.03%)</title><rect x="3.6438%" y="309" width="0.0273%" height="15" fill="rgb(231,177,25)" fg:x="15678033679" fg:w="117352053"/><text x="3.8938%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (117,352,053 samples, 0.03%)</title><rect x="3.6438%" y="293" width="0.0273%" height="15" fill="rgb(219,179,1)" fg:x="15678033679" fg:w="117352053"/><text x="3.8938%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (118,355,062 samples, 0.03%)</title><rect x="3.6438%" y="341" width="0.0275%" height="15" fill="rgb(238,219,53)" fg:x="15678033679" fg:w="118355062"/><text x="3.8938%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (105,315,945 samples, 0.02%)</title><rect x="3.6717%" y="293" width="0.0245%" height="15" fill="rgb(232,167,36)" fg:x="15798394759" fg:w="105315945"/><text x="3.9217%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (105,315,945 samples, 0.02%)</title><rect x="3.6717%" y="277" width="0.0245%" height="15" fill="rgb(244,19,51)" fg:x="15798394759" fg:w="105315945"/><text x="3.9217%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (108,324,972 samples, 0.03%)</title><rect x="3.6717%" y="309" width="0.0252%" height="15" fill="rgb(224,6,22)" fg:x="15798394759" fg:w="108324972"/><text x="3.9217%" y="319.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (135,406,215 samples, 0.03%)</title><rect x="3.6713%" y="341" width="0.0315%" height="15" fill="rgb(224,145,5)" fg:x="15796388741" fg:w="135406215"/><text x="3.9213%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (135,406,215 samples, 0.03%)</title><rect x="3.6713%" y="325" width="0.0315%" height="15" fill="rgb(234,130,49)" fg:x="15796388741" fg:w="135406215"/><text x="3.9213%" y="335.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (279,839,511 samples, 0.07%)</title><rect x="3.6438%" y="373" width="0.0650%" height="15" fill="rgb(254,6,2)" fg:x="15678033679" fg:w="279839511"/><text x="3.8938%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (279,839,511 samples, 0.07%)</title><rect x="3.6438%" y="357" width="0.0650%" height="15" fill="rgb(208,96,46)" fg:x="15678033679" fg:w="279839511"/><text x="3.8938%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (56,168,504 samples, 0.01%)</title><rect x="3.7093%" y="293" width="0.0131%" height="15" fill="rgb(239,3,39)" fg:x="15959879208" fg:w="56168504"/><text x="3.9593%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56,168,504 samples, 0.01%)</title><rect x="3.7093%" y="277" width="0.0131%" height="15" fill="rgb(233,210,1)" fg:x="15959879208" fg:w="56168504"/><text x="3.9593%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (59,177,531 samples, 0.01%)</title><rect x="3.7088%" y="357" width="0.0138%" height="15" fill="rgb(244,137,37)" fg:x="15957873190" fg:w="59177531"/><text x="3.9588%" y="367.50"></text></g><g><title>core::hash::Hasher::write_isize (59,177,531 samples, 0.01%)</title><rect x="3.7088%" y="341" width="0.0138%" height="15" fill="rgb(240,136,2)" fg:x="15957873190" fg:w="59177531"/><text x="3.9588%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (59,177,531 samples, 0.01%)</title><rect x="3.7088%" y="325" width="0.0138%" height="15" fill="rgb(239,18,37)" fg:x="15957873190" fg:w="59177531"/><text x="3.9588%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (57,171,513 samples, 0.01%)</title><rect x="3.7093%" y="309" width="0.0133%" height="15" fill="rgb(218,185,22)" fg:x="15959879208" fg:w="57171513"/><text x="3.9593%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (82,246,738 samples, 0.02%)</title><rect x="3.7088%" y="373" width="0.0191%" height="15" fill="rgb(225,218,4)" fg:x="15957873190" fg:w="82246738"/><text x="3.9588%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (43,129,387 samples, 0.01%)</title><rect x="3.7279%" y="357" width="0.0100%" height="15" fill="rgb(230,182,32)" fg:x="16040119928" fg:w="43129387"/><text x="3.9779%" y="367.50"></text></g><g><title>core::hash::Hasher::write_isize (43,129,387 samples, 0.01%)</title><rect x="3.7279%" y="341" width="0.0100%" height="15" fill="rgb(242,56,43)" fg:x="16040119928" fg:w="43129387"/><text x="3.9779%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (43,129,387 samples, 0.01%)</title><rect x="3.7279%" y="325" width="0.0100%" height="15" fill="rgb(233,99,24)" fg:x="16040119928" fg:w="43129387"/><text x="3.9779%" y="335.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (45,135,405 samples, 0.01%)</title><rect x="3.7279%" y="373" width="0.0105%" height="15" fill="rgb(234,209,42)" fg:x="16040119928" fg:w="45135405"/><text x="3.9779%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (545,636,896 samples, 0.13%)</title><rect x="3.6151%" y="421" width="0.1268%" height="15" fill="rgb(227,7,12)" fg:x="15554663572" fg:w="545636896"/><text x="3.8651%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (545,636,896 samples, 0.13%)</title><rect x="3.6151%" y="405" width="0.1268%" height="15" fill="rgb(245,203,43)" fg:x="15554663572" fg:w="545636896"/><text x="3.8651%" y="415.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (503,510,518 samples, 0.12%)</title><rect x="3.6249%" y="389" width="0.1170%" height="15" fill="rgb(238,205,33)" fg:x="15596789950" fg:w="503510518"/><text x="3.8749%" y="399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (73,219,657 samples, 0.02%)</title><rect x="3.7484%" y="421" width="0.0170%" height="15" fill="rgb(231,56,7)" fg:x="16128384720" fg:w="73219657"/><text x="3.9984%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (73,219,657 samples, 0.02%)</title><rect x="3.7484%" y="405" width="0.0170%" height="15" fill="rgb(244,186,29)" fg:x="16128384720" fg:w="73219657"/><text x="3.9984%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (73,219,657 samples, 0.02%)</title><rect x="3.7484%" y="389" width="0.0170%" height="15" fill="rgb(234,111,31)" fg:x="16128384720" fg:w="73219657"/><text x="3.9984%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (656,970,895 samples, 0.15%)</title><rect x="3.6151%" y="437" width="0.1527%" height="15" fill="rgb(241,149,10)" fg:x="15554663572" fg:w="656970895"/><text x="3.8651%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (657,973,904 samples, 0.15%)</title><rect x="3.6151%" y="453" width="0.1529%" height="15" fill="rgb(249,206,44)" fg:x="15554663572" fg:w="657973904"/><text x="3.8651%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (106,318,954 samples, 0.02%)</title><rect x="3.7680%" y="373" width="0.0247%" height="15" fill="rgb(251,153,30)" fg:x="16212637476" fg:w="106318954"/><text x="4.0180%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (93,279,837 samples, 0.02%)</title><rect x="3.7710%" y="357" width="0.0217%" height="15" fill="rgb(239,152,38)" fg:x="16225676593" fg:w="93279837"/><text x="4.0210%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (67,201,603 samples, 0.02%)</title><rect x="3.7771%" y="341" width="0.0156%" height="15" fill="rgb(249,139,47)" fg:x="16251754827" fg:w="67201603"/><text x="4.0271%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (50,150,450 samples, 0.01%)</title><rect x="3.8046%" y="181" width="0.0117%" height="15" fill="rgb(244,64,35)" fg:x="16370109889" fg:w="50150450"/><text x="4.0546%" y="191.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (148,445,332 samples, 0.03%)</title><rect x="3.8023%" y="229" width="0.0345%" height="15" fill="rgb(216,46,15)" fg:x="16360079799" fg:w="148445332"/><text x="4.0523%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (148,445,332 samples, 0.03%)</title><rect x="3.8023%" y="213" width="0.0345%" height="15" fill="rgb(250,74,19)" fg:x="16360079799" fg:w="148445332"/><text x="4.0523%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (148,445,332 samples, 0.03%)</title><rect x="3.8023%" y="197" width="0.0345%" height="15" fill="rgb(249,42,33)" fg:x="16360079799" fg:w="148445332"/><text x="4.0523%" y="207.50"></text></g><g><title>core::hash::Hasher::write_u64 (194,583,746 samples, 0.05%)</title><rect x="3.8009%" y="245" width="0.0452%" height="15" fill="rgb(242,149,17)" fg:x="16354061745" fg:w="194583746"/><text x="4.0509%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (213,640,917 samples, 0.05%)</title><rect x="3.8009%" y="261" width="0.0497%" height="15" fill="rgb(244,29,21)" fg:x="16354061745" fg:w="213640917"/><text x="4.0509%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (131,394,179 samples, 0.03%)</title><rect x="3.8510%" y="165" width="0.0305%" height="15" fill="rgb(220,130,37)" fg:x="16569708680" fg:w="131394179"/><text x="4.1010%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (63,189,567 samples, 0.01%)</title><rect x="3.8862%" y="149" width="0.0147%" height="15" fill="rgb(211,67,2)" fg:x="16721163039" fg:w="63189567"/><text x="4.1362%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (118,355,062 samples, 0.03%)</title><rect x="3.8815%" y="165" width="0.0275%" height="15" fill="rgb(235,68,52)" fg:x="16701102859" fg:w="118355062"/><text x="4.1315%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (317,953,853 samples, 0.07%)</title><rect x="3.8505%" y="213" width="0.0739%" height="15" fill="rgb(246,142,3)" fg:x="16567702662" fg:w="317953853"/><text x="4.1005%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (317,953,853 samples, 0.07%)</title><rect x="3.8505%" y="197" width="0.0739%" height="15" fill="rgb(241,25,7)" fg:x="16567702662" fg:w="317953853"/><text x="4.1005%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (317,953,853 samples, 0.07%)</title><rect x="3.8505%" y="181" width="0.0739%" height="15" fill="rgb(242,119,39)" fg:x="16567702662" fg:w="317953853"/><text x="4.1005%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (320,962,880 samples, 0.07%)</title><rect x="3.8505%" y="229" width="0.0746%" height="15" fill="rgb(241,98,45)" fg:x="16567702662" fg:w="320962880"/><text x="4.1005%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (115,346,035 samples, 0.03%)</title><rect x="3.9272%" y="181" width="0.0268%" height="15" fill="rgb(254,28,30)" fg:x="16897692623" fg:w="115346035"/><text x="4.1772%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (115,346,035 samples, 0.03%)</title><rect x="3.9272%" y="165" width="0.0268%" height="15" fill="rgb(241,142,54)" fg:x="16897692623" fg:w="115346035"/><text x="4.1772%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (118,355,062 samples, 0.03%)</title><rect x="3.9272%" y="197" width="0.0275%" height="15" fill="rgb(222,85,15)" fg:x="16897692623" fg:w="118355062"/><text x="4.1772%" y="207.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (193,580,737 samples, 0.04%)</title><rect x="3.9251%" y="229" width="0.0450%" height="15" fill="rgb(210,85,47)" fg:x="16888665542" fg:w="193580737"/><text x="4.1751%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (193,580,737 samples, 0.04%)</title><rect x="3.9251%" y="213" width="0.0450%" height="15" fill="rgb(224,206,25)" fg:x="16888665542" fg:w="193580737"/><text x="4.1751%" y="223.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (544,633,887 samples, 0.13%)</title><rect x="3.8505%" y="261" width="0.1266%" height="15" fill="rgb(243,201,19)" fg:x="16567702662" fg:w="544633887"/><text x="4.1005%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (544,633,887 samples, 0.13%)</title><rect x="3.8505%" y="245" width="0.1266%" height="15" fill="rgb(236,59,4)" fg:x="16567702662" fg:w="544633887"/><text x="4.1005%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (74,222,666 samples, 0.02%)</title><rect x="3.9790%" y="181" width="0.0173%" height="15" fill="rgb(254,179,45)" fg:x="17120360621" fg:w="74222666"/><text x="4.2290%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74,222,666 samples, 0.02%)</title><rect x="3.9790%" y="165" width="0.0173%" height="15" fill="rgb(226,14,10)" fg:x="17120360621" fg:w="74222666"/><text x="4.2290%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (77,231,693 samples, 0.02%)</title><rect x="3.9790%" y="197" width="0.0179%" height="15" fill="rgb(244,27,41)" fg:x="17120360621" fg:w="77231693"/><text x="4.2290%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (86,258,774 samples, 0.02%)</title><rect x="3.9771%" y="245" width="0.0200%" height="15" fill="rgb(235,35,32)" fg:x="17112336549" fg:w="86258774"/><text x="4.2271%" y="255.50"></text></g><g><title>core::hash::Hasher::write_isize (86,258,774 samples, 0.02%)</title><rect x="3.9771%" y="229" width="0.0200%" height="15" fill="rgb(218,68,31)" fg:x="17112336549" fg:w="86258774"/><text x="4.2271%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (86,258,774 samples, 0.02%)</title><rect x="3.9771%" y="213" width="0.0200%" height="15" fill="rgb(207,120,37)" fg:x="17112336549" fg:w="86258774"/><text x="4.2271%" y="223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (113,340,017 samples, 0.03%)</title><rect x="3.9771%" y="261" width="0.0263%" height="15" fill="rgb(227,98,0)" fg:x="17112336549" fg:w="113340017"/><text x="4.2271%" y="271.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (61,183,549 samples, 0.01%)</title><rect x="4.0034%" y="261" width="0.0142%" height="15" fill="rgb(207,7,3)" fg:x="17225676566" fg:w="61183549"/><text x="4.2534%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (61,183,549 samples, 0.01%)</title><rect x="4.0034%" y="245" width="0.0142%" height="15" fill="rgb(206,98,19)" fg:x="17225676566" fg:w="61183549"/><text x="4.2534%" y="255.50"></text></g><g><title>core::hash::Hasher::write_isize (61,183,549 samples, 0.01%)</title><rect x="4.0034%" y="229" width="0.0142%" height="15" fill="rgb(217,5,26)" fg:x="17225676566" fg:w="61183549"/><text x="4.2534%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (61,183,549 samples, 0.01%)</title><rect x="4.0034%" y="213" width="0.0142%" height="15" fill="rgb(235,190,38)" fg:x="17225676566" fg:w="61183549"/><text x="4.2534%" y="223.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (941,825,451 samples, 0.22%)</title><rect x="3.8009%" y="277" width="0.2189%" height="15" fill="rgb(247,86,24)" fg:x="16354061745" fg:w="941825451"/><text x="4.0509%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (975,927,757 samples, 0.23%)</title><rect x="3.7932%" y="309" width="0.2268%" height="15" fill="rgb(205,101,16)" fg:x="16320962448" fg:w="975927757"/><text x="4.0432%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (975,927,757 samples, 0.23%)</title><rect x="3.7932%" y="293" width="0.2268%" height="15" fill="rgb(246,168,33)" fg:x="16320962448" fg:w="975927757"/><text x="4.0432%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (50,150,450 samples, 0.01%)</title><rect x="4.0247%" y="245" width="0.0117%" height="15" fill="rgb(231,114,1)" fg:x="17316950385" fg:w="50150450"/><text x="4.2747%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (72,216,648 samples, 0.02%)</title><rect x="4.0219%" y="261" width="0.0168%" height="15" fill="rgb(207,184,53)" fg:x="17304914277" fg:w="72216648"/><text x="4.2719%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (132,397,188 samples, 0.03%)</title><rect x="4.0219%" y="309" width="0.0308%" height="15" fill="rgb(224,95,51)" fg:x="17304914277" fg:w="132397188"/><text x="4.2719%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (132,397,188 samples, 0.03%)</title><rect x="4.0219%" y="293" width="0.0308%" height="15" fill="rgb(212,188,45)" fg:x="17304914277" fg:w="132397188"/><text x="4.2719%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (132,397,188 samples, 0.03%)</title><rect x="4.0219%" y="277" width="0.0308%" height="15" fill="rgb(223,154,38)" fg:x="17304914277" fg:w="132397188"/><text x="4.2719%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,124,373,089 samples, 0.26%)</title><rect x="3.7932%" y="325" width="0.2613%" height="15" fill="rgb(251,22,52)" fg:x="16320962448" fg:w="1124373089"/><text x="4.0432%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1,129,388,134 samples, 0.26%)</title><rect x="3.7927%" y="373" width="0.2625%" height="15" fill="rgb(229,209,22)" fg:x="16318956430" fg:w="1129388134"/><text x="4.0427%" y="383.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1,127,382,116 samples, 0.26%)</title><rect x="3.7932%" y="357" width="0.2620%" height="15" fill="rgb(234,138,34)" fg:x="16320962448" fg:w="1127382116"/><text x="4.0432%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (1,127,382,116 samples, 0.26%)</title><rect x="3.7932%" y="341" width="0.2620%" height="15" fill="rgb(212,95,11)" fg:x="16320962448" fg:w="1127382116"/><text x="4.0432%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (106,318,954 samples, 0.02%)</title><rect x="4.0552%" y="373" width="0.0247%" height="15" fill="rgb(240,179,47)" fg:x="17448344564" fg:w="106318954"/><text x="4.3052%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,350,050,114 samples, 0.31%)</title><rect x="3.7680%" y="421" width="0.3138%" height="15" fill="rgb(240,163,11)" fg:x="16212637476" fg:w="1350050114"/><text x="4.0180%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,350,050,114 samples, 0.31%)</title><rect x="3.7680%" y="405" width="0.3138%" height="15" fill="rgb(236,37,12)" fg:x="16212637476" fg:w="1350050114"/><text x="4.0180%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,350,050,114 samples, 0.31%)</title><rect x="3.7680%" y="389" width="0.3138%" height="15" fill="rgb(232,164,16)" fg:x="16212637476" fg:w="1350050114"/><text x="4.0180%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1,359,077,195 samples, 0.32%)</title><rect x="3.7680%" y="453" width="0.3159%" height="15" fill="rgb(244,205,15)" fg:x="16212637476" fg:w="1359077195"/><text x="4.0180%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,359,077,195 samples, 0.32%)</title><rect x="3.7680%" y="437" width="0.3159%" height="15" fill="rgb(223,117,47)" fg:x="16212637476" fg:w="1359077195"/><text x="4.0180%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2,216,649,890 samples, 0.52%)</title><rect x="3.5754%" y="485" width="0.5152%" height="15" fill="rgb(244,107,35)" fg:x="15384152042" fg:w="2216649890"/><text x="3.8254%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2,144,433,242 samples, 0.50%)</title><rect x="3.5922%" y="469" width="0.4984%" height="15" fill="rgb(205,140,8)" fg:x="15456368690" fg:w="2144433242"/><text x="3.8422%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,481,444,293 samples, 0.34%)</title><rect x="4.0948%" y="421" width="0.3443%" height="15" fill="rgb(228,84,46)" fg:x="17618856094" fg:w="1481444293"/><text x="4.3448%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,481,444,293 samples, 0.34%)</title><rect x="4.0948%" y="405" width="0.3443%" height="15" fill="rgb(254,188,9)" fg:x="17618856094" fg:w="1481444293"/><text x="4.3448%" y="415.50"></text></g><g><title>core::ptr::write (1,481,444,293 samples, 0.34%)</title><rect x="4.0948%" y="389" width="0.3443%" height="15" fill="rgb(206,112,54)" fg:x="17618856094" fg:w="1481444293"/><text x="4.3448%" y="399.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1,504,513,500 samples, 0.35%)</title><rect x="4.0906%" y="485" width="0.3497%" height="15" fill="rgb(216,84,49)" fg:x="17600801932" fg:w="1504513500"/><text x="4.3406%" y="495.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1,504,513,500 samples, 0.35%)</title><rect x="4.0906%" y="469" width="0.3497%" height="15" fill="rgb(214,194,35)" fg:x="17600801932" fg:w="1504513500"/><text x="4.3406%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1,504,513,500 samples, 0.35%)</title><rect x="4.0906%" y="453" width="0.3497%" height="15" fill="rgb(249,28,3)" fg:x="17600801932" fg:w="1504513500"/><text x="4.3406%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1,504,513,500 samples, 0.35%)</title><rect x="4.0906%" y="437" width="0.3497%" height="15" fill="rgb(222,56,52)" fg:x="17600801932" fg:w="1504513500"/><text x="4.3406%" y="447.50"></text></g><g><title>chlang::board::Board::key (50,150,450 samples, 0.01%)</title><rect x="4.4403%" y="485" width="0.0117%" height="15" fill="rgb(245,217,50)" fg:x="19105315432" fg:w="50150450"/><text x="4.6903%" y="495.50"></text></g><g><title>unlink_chunk (43,129,387 samples, 0.01%)</title><rect x="4.4603%" y="341" width="0.0100%" height="15" fill="rgb(213,201,24)" fg:x="19191574206" fg:w="43129387"/><text x="4.7103%" y="351.50"></text></g><g><title>_int_free (177,532,593 samples, 0.04%)</title><rect x="4.4603%" y="357" width="0.0413%" height="15" fill="rgb(248,116,28)" fg:x="19191574206" fg:w="177532593"/><text x="4.7103%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (228,686,052 samples, 0.05%)</title><rect x="4.4519%" y="421" width="0.0531%" height="15" fill="rgb(219,72,43)" fg:x="19155465882" fg:w="228686052"/><text x="4.7019%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (228,686,052 samples, 0.05%)</title><rect x="4.4519%" y="405" width="0.0531%" height="15" fill="rgb(209,138,14)" fg:x="19155465882" fg:w="228686052"/><text x="4.7019%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (228,686,052 samples, 0.05%)</title><rect x="4.4519%" y="389" width="0.0531%" height="15" fill="rgb(222,18,33)" fg:x="19155465882" fg:w="228686052"/><text x="4.7019%" y="399.50"></text></g><g><title>__GI___libc_free (192,577,728 samples, 0.04%)</title><rect x="4.4603%" y="373" width="0.0448%" height="15" fill="rgb(213,199,7)" fg:x="19191574206" fg:w="192577728"/><text x="4.7103%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (245,737,205 samples, 0.06%)</title><rect x="4.4519%" y="469" width="0.0571%" height="15" fill="rgb(250,110,10)" fg:x="19155465882" fg:w="245737205"/><text x="4.7019%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (245,737,205 samples, 0.06%)</title><rect x="4.4519%" y="453" width="0.0571%" height="15" fill="rgb(248,123,6)" fg:x="19155465882" fg:w="245737205"/><text x="4.7019%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (245,737,205 samples, 0.06%)</title><rect x="4.4519%" y="437" width="0.0571%" height="15" fill="rgb(206,91,31)" fg:x="19155465882" fg:w="245737205"/><text x="4.7019%" y="447.50"></text></g><g><title>std::collections::hash::map::map_entry (77,231,693 samples, 0.02%)</title><rect x="4.5172%" y="437" width="0.0179%" height="15" fill="rgb(211,154,13)" fg:x="19436308402" fg:w="77231693"/><text x="4.7672%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (211,634,899 samples, 0.05%)</title><rect x="4.5352%" y="389" width="0.0492%" height="15" fill="rgb(225,148,7)" fg:x="19513540095" fg:w="211634899"/><text x="4.7852%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (211,634,899 samples, 0.05%)</title><rect x="4.5352%" y="373" width="0.0492%" height="15" fill="rgb(220,160,43)" fg:x="19513540095" fg:w="211634899"/><text x="4.7852%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (211,634,899 samples, 0.05%)</title><rect x="4.5352%" y="357" width="0.0492%" height="15" fill="rgb(213,52,39)" fg:x="19513540095" fg:w="211634899"/><text x="4.7852%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (517,552,644 samples, 0.12%)</title><rect x="4.6018%" y="389" width="0.1203%" height="15" fill="rgb(243,137,7)" fg:x="19800400669" fg:w="517552644"/><text x="4.8518%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (43,129,387 samples, 0.01%)</title><rect x="4.7221%" y="373" width="0.0100%" height="15" fill="rgb(230,79,13)" fg:x="20317953313" fg:w="43129387"/><text x="4.9721%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (43,129,387 samples, 0.01%)</title><rect x="4.7221%" y="357" width="0.0100%" height="15" fill="rgb(247,105,23)" fg:x="20317953313" fg:w="43129387"/><text x="4.9721%" y="367.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (43,129,387 samples, 0.01%)</title><rect x="4.7221%" y="341" width="0.0100%" height="15" fill="rgb(223,179,41)" fg:x="20317953313" fg:w="43129387"/><text x="4.9721%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (69,207,621 samples, 0.02%)</title><rect x="4.7221%" y="389" width="0.0161%" height="15" fill="rgb(218,9,34)" fg:x="20317953313" fg:w="69207621"/><text x="4.9721%" y="399.50"></text></g><g><title>core::intrinsics::likely (182,547,638 samples, 0.04%)</title><rect x="4.7382%" y="389" width="0.0424%" height="15" fill="rgb(222,106,8)" fg:x="20387160934" fg:w="182547638"/><text x="4.9882%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (92,276,828 samples, 0.02%)</title><rect x="4.7806%" y="389" width="0.0214%" height="15" fill="rgb(211,220,0)" fg:x="20569708572" fg:w="92276828"/><text x="5.0306%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (92,276,828 samples, 0.02%)</title><rect x="4.7806%" y="373" width="0.0214%" height="15" fill="rgb(229,52,16)" fg:x="20569708572" fg:w="92276828"/><text x="5.0306%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,179,538,584 samples, 0.27%)</title><rect x="4.5352%" y="421" width="0.2741%" height="15" fill="rgb(212,155,18)" fg:x="19513540095" fg:w="1179538584"/><text x="4.7852%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,179,538,584 samples, 0.27%)</title><rect x="4.5352%" y="405" width="0.2741%" height="15" fill="rgb(242,21,14)" fg:x="19513540095" fg:w="1179538584"/><text x="4.7852%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (65,195,585 samples, 0.02%)</title><rect x="4.8093%" y="309" width="0.0152%" height="15" fill="rgb(222,19,48)" fg:x="20693078679" fg:w="65195585"/><text x="5.0593%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (100,300,900 samples, 0.02%)</title><rect x="4.8328%" y="261" width="0.0233%" height="15" fill="rgb(232,45,27)" fg:x="20794382588" fg:w="100300900"/><text x="5.0828%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (65,195,585 samples, 0.02%)</title><rect x="4.8562%" y="245" width="0.0152%" height="15" fill="rgb(249,103,42)" fg:x="20894683488" fg:w="65195585"/><text x="5.1062%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (182,547,638 samples, 0.04%)</title><rect x="4.8713%" y="245" width="0.0424%" height="15" fill="rgb(246,81,33)" fg:x="20959879073" fg:w="182547638"/><text x="5.1213%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (470,411,221 samples, 0.11%)</title><rect x="4.8562%" y="261" width="0.1093%" height="15" fill="rgb(252,33,42)" fg:x="20894683488" fg:w="470411221"/><text x="5.1062%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,302,908,691 samples, 0.30%)</title><rect x="4.8245%" y="293" width="0.3028%" height="15" fill="rgb(209,212,41)" fg:x="20758274264" fg:w="1302908691"/><text x="5.0745%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,302,908,691 samples, 0.30%)</title><rect x="4.8245%" y="277" width="0.3028%" height="15" fill="rgb(207,154,6)" fg:x="20758274264" fg:w="1302908691"/><text x="5.0745%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,303,911,700 samples, 0.30%)</title><rect x="4.8245%" y="309" width="0.3030%" height="15" fill="rgb(223,64,47)" fg:x="20758274264" fg:w="1303911700"/><text x="5.0745%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u64 (1,420,260,744 samples, 0.33%)</title><rect x="4.8093%" y="325" width="0.3301%" height="15" fill="rgb(211,161,38)" fg:x="20693078679" fg:w="1420260744"/><text x="5.0593%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1,423,269,771 samples, 0.33%)</title><rect x="4.8093%" y="341" width="0.3308%" height="15" fill="rgb(219,138,40)" fg:x="20693078679" fg:w="1423269771"/><text x="5.0593%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (61,183,549 samples, 0.01%)</title><rect x="5.1422%" y="245" width="0.0142%" height="15" fill="rgb(241,228,46)" fg:x="22125375531" fg:w="61183549"/><text x="5.3922%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (377,131,384 samples, 0.09%)</title><rect x="5.1564%" y="229" width="0.0876%" height="15" fill="rgb(223,209,38)" fg:x="22186559080" fg:w="377131384"/><text x="5.4064%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (823,470,389 samples, 0.19%)</title><rect x="5.2441%" y="229" width="0.1914%" height="15" fill="rgb(236,164,45)" fg:x="22563690464" fg:w="823470389"/><text x="5.4941%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,699,097,246 samples, 0.39%)</title><rect x="5.1564%" y="245" width="0.3949%" height="15" fill="rgb(231,15,5)" fg:x="22186559080" fg:w="1699097246"/><text x="5.4064%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,299,899,637 samples, 0.53%)</title><rect x="5.1401%" y="277" width="0.5345%" height="15" fill="rgb(252,35,15)" fg:x="22116348450" fg:w="2299899637"/><text x="5.3901%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,299,899,637 samples, 0.53%)</title><rect x="5.1401%" y="261" width="0.5345%" height="15" fill="rgb(248,181,18)" fg:x="22116348450" fg:w="2299899637"/><text x="5.3901%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,301,905,655 samples, 0.53%)</title><rect x="5.1401%" y="293" width="0.5350%" height="15" fill="rgb(233,39,42)" fg:x="22116348450" fg:w="2301905655"/><text x="5.3901%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (2,348,044,069 samples, 0.55%)</title><rect x="5.1401%" y="309" width="0.5457%" height="15" fill="rgb(238,110,33)" fg:x="22116348450" fg:w="2348044069"/><text x="5.3901%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (297,893,673 samples, 0.07%)</title><rect x="5.6984%" y="229" width="0.0692%" height="15" fill="rgb(233,195,10)" fg:x="24518555005" fg:w="297893673"/><text x="5.9484%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (142,427,278 samples, 0.03%)</title><rect x="5.7732%" y="213" width="0.0331%" height="15" fill="rgb(254,105,3)" fg:x="24840520894" fg:w="142427278"/><text x="6.0232%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (288,866,592 samples, 0.07%)</title><rect x="5.8063%" y="213" width="0.0671%" height="15" fill="rgb(221,225,9)" fg:x="24982948172" fg:w="288866592"/><text x="6.0563%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (699,097,273 samples, 0.16%)</title><rect x="5.7732%" y="229" width="0.1625%" height="15" fill="rgb(224,227,45)" fg:x="24840520894" fg:w="699097273"/><text x="6.0232%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,863,590,722 samples, 0.43%)</title><rect x="5.6937%" y="261" width="0.4331%" height="15" fill="rgb(229,198,43)" fg:x="24498494825" fg:w="1863590722"/><text x="5.9437%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,863,590,722 samples, 0.43%)</title><rect x="5.6937%" y="245" width="0.4331%" height="15" fill="rgb(206,209,35)" fg:x="24498494825" fg:w="1863590722"/><text x="5.9437%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,883,650,902 samples, 0.44%)</title><rect x="5.6937%" y="277" width="0.4378%" height="15" fill="rgb(245,195,53)" fg:x="24498494825" fg:w="1883650902"/><text x="5.9437%" y="287.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2,524,573,653 samples, 0.59%)</title><rect x="5.6858%" y="309" width="0.5867%" height="15" fill="rgb(240,92,26)" fg:x="24464392519" fg:w="2524573653"/><text x="5.9358%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (2,524,573,653 samples, 0.59%)</title><rect x="5.6858%" y="293" width="0.5867%" height="15" fill="rgb(207,40,23)" fg:x="24464392519" fg:w="2524573653"/><text x="5.9358%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (274,824,466 samples, 0.06%)</title><rect x="6.2725%" y="293" width="0.0639%" height="15" fill="rgb(223,111,35)" fg:x="26988966172" fg:w="274824466"/><text x="6.5225%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (274,824,466 samples, 0.06%)</title><rect x="6.2725%" y="277" width="0.0639%" height="15" fill="rgb(229,147,28)" fg:x="26988966172" fg:w="274824466"/><text x="6.5225%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (274,824,466 samples, 0.06%)</title><rect x="6.2725%" y="261" width="0.0639%" height="15" fill="rgb(211,29,28)" fg:x="26988966172" fg:w="274824466"/><text x="6.5225%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (274,824,466 samples, 0.06%)</title><rect x="6.2725%" y="245" width="0.0639%" height="15" fill="rgb(228,72,33)" fg:x="26988966172" fg:w="274824466"/><text x="6.5225%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (274,824,466 samples, 0.06%)</title><rect x="6.2725%" y="229" width="0.0639%" height="15" fill="rgb(205,214,31)" fg:x="26988966172" fg:w="274824466"/><text x="6.5225%" y="239.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (5,218,655,827 samples, 1.21%)</title><rect x="5.1401%" y="341" width="1.2129%" height="15" fill="rgb(224,111,15)" fg:x="22116348450" fg:w="5218655827"/><text x="5.3901%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5,218,655,827 samples, 1.21%)</title><rect x="5.1401%" y="325" width="1.2129%" height="15" fill="rgb(253,21,26)" fg:x="22116348450" fg:w="5218655827"/><text x="5.3901%" y="335.50"></text></g><g><title>core::hash::Hash::hash_slice (346,038,105 samples, 0.08%)</title><rect x="6.2725%" y="309" width="0.0804%" height="15" fill="rgb(245,139,43)" fg:x="26988966172" fg:w="346038105"/><text x="6.5225%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (259,779,331 samples, 0.06%)</title><rect x="6.3607%" y="229" width="0.0604%" height="15" fill="rgb(252,170,7)" fg:x="27368103574" fg:w="259779331"/><text x="6.6107%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (104,312,936 samples, 0.02%)</title><rect x="6.4359%" y="213" width="0.0242%" height="15" fill="rgb(231,118,14)" fg:x="27692075481" fg:w="104312936"/><text x="6.6859%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (289,869,601 samples, 0.07%)</title><rect x="6.4283%" y="229" width="0.0674%" height="15" fill="rgb(238,83,0)" fg:x="27658976184" fg:w="289869601"/><text x="6.6783%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (942,828,460 samples, 0.22%)</title><rect x="6.3607%" y="261" width="0.2191%" height="15" fill="rgb(221,39,39)" fg:x="27368103574" fg:w="942828460"/><text x="6.6107%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (942,828,460 samples, 0.22%)</title><rect x="6.3607%" y="245" width="0.2191%" height="15" fill="rgb(222,119,46)" fg:x="27368103574" fg:w="942828460"/><text x="6.6107%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (975,927,757 samples, 0.23%)</title><rect x="6.3607%" y="277" width="0.2268%" height="15" fill="rgb(222,165,49)" fg:x="27368103574" fg:w="975927757"/><text x="6.6107%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1,018,054,135 samples, 0.24%)</title><rect x="6.3530%" y="325" width="0.2366%" height="15" fill="rgb(219,113,52)" fg:x="27335004277" fg:w="1018054135"/><text x="6.6030%" y="335.50"></text></g><g><title>core::hash::Hasher::write_isize (1,018,054,135 samples, 0.24%)</title><rect x="6.3530%" y="309" width="0.2366%" height="15" fill="rgb(214,7,15)" fg:x="27335004277" fg:w="1018054135"/><text x="6.6030%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (1,018,054,135 samples, 0.24%)</title><rect x="6.3530%" y="293" width="0.2366%" height="15" fill="rgb(235,32,4)" fg:x="27335004277" fg:w="1018054135"/><text x="6.6030%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (93,279,837 samples, 0.02%)</title><rect x="6.5896%" y="261" width="0.0217%" height="15" fill="rgb(238,90,54)" fg:x="28353058412" fg:w="93279837"/><text x="6.8396%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (106,318,954 samples, 0.02%)</title><rect x="6.6112%" y="213" width="0.0247%" height="15" fill="rgb(213,208,19)" fg:x="28446338249" fg:w="106318954"/><text x="6.8612%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (88,264,792 samples, 0.02%)</title><rect x="6.6388%" y="213" width="0.0205%" height="15" fill="rgb(233,156,4)" fg:x="28564693311" fg:w="88264792"/><text x="6.8888%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (346,038,105 samples, 0.08%)</title><rect x="6.6112%" y="245" width="0.0804%" height="15" fill="rgb(207,194,5)" fg:x="28446338249" fg:w="346038105"/><text x="6.8612%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (346,038,105 samples, 0.08%)</title><rect x="6.6112%" y="229" width="0.0804%" height="15" fill="rgb(206,111,30)" fg:x="28446338249" fg:w="346038105"/><text x="6.8612%" y="239.50"></text></g><g><title>core::hash::Hasher::write_i64 (446,339,005 samples, 0.10%)</title><rect x="6.5896%" y="293" width="0.1037%" height="15" fill="rgb(243,70,54)" fg:x="28353058412" fg:w="446339005"/><text x="6.8396%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u64 (446,339,005 samples, 0.10%)</title><rect x="6.5896%" y="277" width="0.1037%" height="15" fill="rgb(242,28,8)" fg:x="28353058412" fg:w="446339005"/><text x="6.8396%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (353,059,168 samples, 0.08%)</title><rect x="6.6112%" y="261" width="0.0821%" height="15" fill="rgb(219,106,18)" fg:x="28446338249" fg:w="353059168"/><text x="6.8612%" y="271.50"></text></g><g><title>&lt;chlang::board::Position as core::hash::Hash&gt;::hash (450,351,041 samples, 0.10%)</title><rect x="6.5896%" y="325" width="0.1047%" height="15" fill="rgb(244,222,10)" fg:x="28353058412" fg:w="450351041"/><text x="6.8396%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (450,351,041 samples, 0.10%)</title><rect x="6.5896%" y="309" width="0.1047%" height="15" fill="rgb(236,179,52)" fg:x="28353058412" fg:w="450351041"/><text x="6.8396%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,488,465,356 samples, 0.35%)</title><rect x="6.3530%" y="341" width="0.3459%" height="15" fill="rgb(213,23,39)" fg:x="27335004277" fg:w="1488465356"/><text x="6.6030%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (65,195,585 samples, 0.02%)</title><rect x="6.7068%" y="229" width="0.0152%" height="15" fill="rgb(238,48,10)" fg:x="28857571939" fg:w="65195585"/><text x="6.9568%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (56,168,504 samples, 0.01%)</title><rect x="6.7220%" y="213" width="0.0131%" height="15" fill="rgb(251,196,23)" fg:x="28922767524" fg:w="56168504"/><text x="6.9720%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (147,442,323 samples, 0.03%)</title><rect x="6.7220%" y="229" width="0.0343%" height="15" fill="rgb(250,152,24)" fg:x="28922767524" fg:w="147442323"/><text x="6.9720%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (414,242,717 samples, 0.10%)</title><rect x="6.7050%" y="261" width="0.0963%" height="15" fill="rgb(209,150,17)" fg:x="28849547867" fg:w="414242717"/><text x="6.9550%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (414,242,717 samples, 0.10%)</title><rect x="6.7050%" y="245" width="0.0963%" height="15" fill="rgb(234,202,34)" fg:x="28849547867" fg:w="414242717"/><text x="6.9550%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (420,260,771 samples, 0.10%)</title><rect x="6.7050%" y="277" width="0.0977%" height="15" fill="rgb(253,148,53)" fg:x="28849547867" fg:w="420260771"/><text x="6.9550%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (460,381,131 samples, 0.11%)</title><rect x="6.6989%" y="325" width="0.1070%" height="15" fill="rgb(218,129,16)" fg:x="28823469633" fg:w="460381131"/><text x="6.9489%" y="335.50"></text></g><g><title>core::hash::Hasher::write_isize (460,381,131 samples, 0.11%)</title><rect x="6.6989%" y="309" width="0.1070%" height="15" fill="rgb(216,85,19)" fg:x="28823469633" fg:w="460381131"/><text x="6.9489%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (460,381,131 samples, 0.11%)</title><rect x="6.6989%" y="293" width="0.1070%" height="15" fill="rgb(235,228,7)" fg:x="28823469633" fg:w="460381131"/><text x="6.9489%" y="303.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (462,387,149 samples, 0.11%)</title><rect x="6.6989%" y="341" width="0.1075%" height="15" fill="rgb(245,175,0)" fg:x="28823469633" fg:w="462387149"/><text x="6.9489%" y="351.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (8,806,419,020 samples, 2.05%)</title><rect x="4.8093%" y="357" width="2.0467%" height="15" fill="rgb(208,168,36)" fg:x="20693078679" fg:w="8806419020"/><text x="5.0593%" y="367.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,812,437,074 samples, 2.05%)</title><rect x="4.8093%" y="373" width="2.0481%" height="15" fill="rgb(246,171,24)" fg:x="20693078679" fg:w="8812437074"/><text x="5.0593%" y="383.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,822,467,164 samples, 2.05%)</title><rect x="4.8093%" y="389" width="2.0504%" height="15" fill="rgb(215,142,24)" fg:x="20693078679" fg:w="8822467164"/><text x="5.0593%" y="399.50">c..</text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (81,243,729 samples, 0.02%)</title><rect x="6.8597%" y="389" width="0.0189%" height="15" fill="rgb(250,187,7)" fg:x="29515545843" fg:w="81243729"/><text x="7.1097%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (207,622,863 samples, 0.05%)</title><rect x="6.8786%" y="325" width="0.0483%" height="15" fill="rgb(228,66,33)" fg:x="29596789572" fg:w="207622863"/><text x="7.1286%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (494,483,437 samples, 0.11%)</title><rect x="6.9269%" y="325" width="0.1149%" height="15" fill="rgb(234,215,21)" fg:x="29804412435" fg:w="494483437"/><text x="7.1769%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (863,590,749 samples, 0.20%)</title><rect x="6.8786%" y="341" width="0.2007%" height="15" fill="rgb(222,191,20)" fg:x="29596789572" fg:w="863590749"/><text x="7.1286%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (106,318,954 samples, 0.02%)</title><rect x="7.0793%" y="325" width="0.0247%" height="15" fill="rgb(245,79,54)" fg:x="30460380321" fg:w="106318954"/><text x="7.3293%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (129,388,161 samples, 0.03%)</title><rect x="7.1040%" y="325" width="0.0301%" height="15" fill="rgb(240,10,37)" fg:x="30566699275" fg:w="129388161"/><text x="7.3540%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (274,824,466 samples, 0.06%)</title><rect x="7.0793%" y="341" width="0.0639%" height="15" fill="rgb(214,192,32)" fg:x="30460380321" fg:w="274824466"/><text x="7.3293%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,428,284,816 samples, 0.33%)</title><rect x="6.8786%" y="389" width="0.3319%" height="15" fill="rgb(209,36,54)" fg:x="29596789572" fg:w="1428284816"/><text x="7.1286%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,428,284,816 samples, 0.33%)</title><rect x="6.8786%" y="373" width="0.3319%" height="15" fill="rgb(220,10,11)" fg:x="29596789572" fg:w="1428284816"/><text x="7.1286%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,428,284,816 samples, 0.33%)</title><rect x="6.8786%" y="357" width="0.3319%" height="15" fill="rgb(221,106,17)" fg:x="29596789572" fg:w="1428284816"/><text x="7.1286%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10,407,221,384 samples, 2.42%)</title><rect x="4.8093%" y="405" width="2.4188%" height="15" fill="rgb(251,142,44)" fg:x="20693078679" fg:w="10407221384"/><text x="5.0593%" y="415.50">co..</text></g><g><title>hashbrown::map::make_hash (10,423,269,528 samples, 2.42%)</title><rect x="4.8093%" y="421" width="2.4225%" height="15" fill="rgb(238,13,15)" fg:x="20693078679" fg:w="10423269528"/><text x="5.0593%" y="431.50">ha..</text></g><g><title>hashbrown::raw::capacity_to_buckets (92,276,828 samples, 0.02%)</title><rect x="7.2337%" y="309" width="0.0214%" height="15" fill="rgb(208,107,27)" fg:x="31124372279" fg:w="92276828"/><text x="7.4837%" y="319.50"></text></g><g><title>tcache_get (59,177,531 samples, 0.01%)</title><rect x="7.2633%" y="213" width="0.0138%" height="15" fill="rgb(205,136,37)" fg:x="31251754422" fg:w="59177531"/><text x="7.5133%" y="223.50"></text></g><g><title>__GI___libc_malloc (189,568,701 samples, 0.04%)</title><rect x="7.2633%" y="229" width="0.0441%" height="15" fill="rgb(250,205,27)" fg:x="31251754422" fg:w="189568701"/><text x="7.5133%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (223,671,007 samples, 0.05%)</title><rect x="7.2558%" y="277" width="0.0520%" height="15" fill="rgb(210,80,43)" fg:x="31219658134" fg:w="223671007"/><text x="7.5058%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (223,671,007 samples, 0.05%)</title><rect x="7.2558%" y="261" width="0.0520%" height="15" fill="rgb(247,160,36)" fg:x="31219658134" fg:w="223671007"/><text x="7.5058%" y="271.50"></text></g><g><title>alloc::alloc::alloc (223,671,007 samples, 0.05%)</title><rect x="7.2558%" y="245" width="0.0520%" height="15" fill="rgb(234,13,49)" fg:x="31219658134" fg:w="223671007"/><text x="7.5058%" y="255.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (248,746,232 samples, 0.06%)</title><rect x="7.2558%" y="293" width="0.0578%" height="15" fill="rgb(234,122,0)" fg:x="31219658134" fg:w="248746232"/><text x="7.5058%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (305,917,745 samples, 0.07%)</title><rect x="7.2551%" y="309" width="0.0711%" height="15" fill="rgb(207,146,38)" fg:x="31216649107" fg:w="305917745"/><text x="7.5051%" y="319.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (54,162,486 samples, 0.01%)</title><rect x="7.3136%" y="293" width="0.0126%" height="15" fill="rgb(207,177,25)" fg:x="31468404366" fg:w="54162486"/><text x="7.5636%" y="303.50"></text></g><g><title>__memset_avx2_unaligned (64,192,576 samples, 0.01%)</title><rect x="7.3285%" y="277" width="0.0149%" height="15" fill="rgb(211,178,42)" fg:x="31532596942" fg:w="64192576"/><text x="7.5785%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (494,483,437 samples, 0.11%)</title><rect x="7.2337%" y="341" width="0.1149%" height="15" fill="rgb(230,69,54)" fg:x="31124372279" fg:w="494483437"/><text x="7.4837%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (494,483,437 samples, 0.11%)</title><rect x="7.2337%" y="325" width="0.1149%" height="15" fill="rgb(214,135,41)" fg:x="31124372279" fg:w="494483437"/><text x="7.4837%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (96,288,864 samples, 0.02%)</title><rect x="7.3262%" y="309" width="0.0224%" height="15" fill="rgb(237,67,25)" fg:x="31522566852" fg:w="96288864"/><text x="7.5762%" y="319.50"></text></g><g><title>core::intrinsics::write_bytes (96,288,864 samples, 0.02%)</title><rect x="7.3262%" y="293" width="0.0224%" height="15" fill="rgb(222,189,50)" fg:x="31522566852" fg:w="96288864"/><text x="7.5762%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_h2 (116,349,044 samples, 0.03%)</title><rect x="7.3486%" y="325" width="0.0270%" height="15" fill="rgb(245,148,34)" fg:x="31618855716" fg:w="116349044"/><text x="7.5986%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (116,349,044 samples, 0.03%)</title><rect x="7.3486%" y="309" width="0.0270%" height="15" fill="rgb(222,29,6)" fg:x="31618855716" fg:w="116349044"/><text x="7.5986%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (262,788,358 samples, 0.06%)</title><rect x="7.3838%" y="309" width="0.0611%" height="15" fill="rgb(221,189,43)" fg:x="31770310075" fg:w="262788358"/><text x="7.6338%" y="319.50"></text></g><g><title>core::intrinsics::unlikely (226,680,034 samples, 0.05%)</title><rect x="7.3922%" y="293" width="0.0527%" height="15" fill="rgb(207,36,27)" fg:x="31806418399" fg:w="226680034"/><text x="7.6422%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (192,577,728 samples, 0.04%)</title><rect x="7.4449%" y="293" width="0.0448%" height="15" fill="rgb(217,90,24)" fg:x="32033098433" fg:w="192577728"/><text x="7.6949%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (192,577,728 samples, 0.04%)</title><rect x="7.4449%" y="277" width="0.0448%" height="15" fill="rgb(224,66,35)" fg:x="32033098433" fg:w="192577728"/><text x="7.6949%" y="287.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (223,671,007 samples, 0.05%)</title><rect x="7.4896%" y="293" width="0.0520%" height="15" fill="rgb(221,13,50)" fg:x="32225676161" fg:w="223671007"/><text x="7.7396%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (862,587,740 samples, 0.20%)</title><rect x="7.3486%" y="341" width="0.2005%" height="15" fill="rgb(236,68,49)" fg:x="31618855716" fg:w="862587740"/><text x="7.5986%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (746,238,696 samples, 0.17%)</title><rect x="7.3756%" y="325" width="0.1734%" height="15" fill="rgb(229,146,28)" fg:x="31735204760" fg:w="746238696"/><text x="7.6256%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (448,345,023 samples, 0.10%)</title><rect x="7.4449%" y="309" width="0.1042%" height="15" fill="rgb(225,31,38)" fg:x="32033098433" fg:w="448345023"/><text x="7.6949%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (54,162,486 samples, 0.01%)</title><rect x="7.5491%" y="325" width="0.0126%" height="15" fill="rgb(250,208,3)" fg:x="32481443456" fg:w="54162486"/><text x="7.7991%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::full_buckets_indices (63,189,567 samples, 0.01%)</title><rect x="7.5491%" y="341" width="0.0147%" height="15" fill="rgb(246,54,23)" fg:x="32481443456" fg:w="63189567"/><text x="7.7991%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (56,168,504 samples, 0.01%)</title><rect x="7.5756%" y="197" width="0.0131%" height="15" fill="rgb(243,76,11)" fg:x="32595786482" fg:w="56168504"/><text x="7.8256%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (71,213,639 samples, 0.02%)</title><rect x="7.5947%" y="149" width="0.0166%" height="15" fill="rgb(245,21,50)" fg:x="32678033220" fg:w="71213639"/><text x="7.8447%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (47,141,423 samples, 0.01%)</title><rect x="7.6113%" y="133" width="0.0110%" height="15" fill="rgb(228,9,43)" fg:x="32749246859" fg:w="47141423"/><text x="7.8613%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (150,451,350 samples, 0.03%)</title><rect x="7.6222%" y="133" width="0.0350%" height="15" fill="rgb(208,100,47)" fg:x="32796388282" fg:w="150451350"/><text x="7.8722%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (370,110,321 samples, 0.09%)</title><rect x="7.6113%" y="149" width="0.0860%" height="15" fill="rgb(232,26,8)" fg:x="32749246859" fg:w="370110321"/><text x="7.8613%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,033,099,270 samples, 0.24%)</title><rect x="7.5887%" y="181" width="0.2401%" height="15" fill="rgb(216,166,38)" fg:x="32651954986" fg:w="1033099270"/><text x="7.8387%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,033,099,270 samples, 0.24%)</title><rect x="7.5887%" y="165" width="0.2401%" height="15" fill="rgb(251,202,51)" fg:x="32651954986" fg:w="1033099270"/><text x="7.8387%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,034,102,279 samples, 0.24%)</title><rect x="7.5887%" y="197" width="0.2403%" height="15" fill="rgb(254,216,34)" fg:x="32651954986" fg:w="1034102279"/><text x="7.8387%" y="207.50"></text></g><g><title>core::hash::Hasher::write_u64 (1,120,361,053 samples, 0.26%)</title><rect x="7.5756%" y="213" width="0.2604%" height="15" fill="rgb(251,32,27)" fg:x="32595786482" fg:w="1120361053"/><text x="7.8256%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1,122,367,071 samples, 0.26%)</title><rect x="7.5756%" y="229" width="0.2609%" height="15" fill="rgb(208,127,28)" fg:x="32595786482" fg:w="1122367071"/><text x="7.8256%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (43,129,387 samples, 0.01%)</title><rect x="7.8379%" y="133" width="0.0100%" height="15" fill="rgb(224,137,22)" fg:x="33724171607" fg:w="43129387"/><text x="8.0879%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (251,755,259 samples, 0.06%)</title><rect x="7.8479%" y="117" width="0.0585%" height="15" fill="rgb(254,70,32)" fg:x="33767300994" fg:w="251755259"/><text x="8.0979%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (625,877,616 samples, 0.15%)</title><rect x="7.9064%" y="117" width="0.1455%" height="15" fill="rgb(229,75,37)" fg:x="34019056253" fg:w="625877616"/><text x="8.1564%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,233,701,070 samples, 0.29%)</title><rect x="7.8479%" y="133" width="0.2867%" height="15" fill="rgb(252,64,23)" fg:x="33767300994" fg:w="1233701070"/><text x="8.0979%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,723,169,462 samples, 0.40%)</title><rect x="7.8365%" y="165" width="0.4005%" height="15" fill="rgb(232,162,48)" fg:x="33718153553" fg:w="1723169462"/><text x="8.0865%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,723,169,462 samples, 0.40%)</title><rect x="7.8365%" y="149" width="0.4005%" height="15" fill="rgb(246,160,12)" fg:x="33718153553" fg:w="1723169462"/><text x="8.0865%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,724,172,471 samples, 0.40%)</title><rect x="7.8365%" y="181" width="0.4007%" height="15" fill="rgb(247,166,0)" fg:x="33718153553" fg:w="1724172471"/><text x="8.0865%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (1,735,205,570 samples, 0.40%)</title><rect x="7.8365%" y="197" width="0.4033%" height="15" fill="rgb(249,219,21)" fg:x="33718153553" fg:w="1735205570"/><text x="8.0865%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (217,652,953 samples, 0.05%)</title><rect x="8.2521%" y="117" width="0.0506%" height="15" fill="rgb(205,209,3)" fg:x="35506518600" fg:w="217652953"/><text x="8.5021%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (106,318,954 samples, 0.02%)</title><rect x="8.3081%" y="101" width="0.0247%" height="15" fill="rgb(243,44,1)" fg:x="35747240760" fg:w="106318954"/><text x="8.5581%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (180,541,620 samples, 0.04%)</title><rect x="8.3328%" y="101" width="0.0420%" height="15" fill="rgb(206,159,16)" fg:x="35853559714" fg:w="180541620"/><text x="8.5828%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (501,504,500 samples, 0.12%)</title><rect x="8.3081%" y="117" width="0.1166%" height="15" fill="rgb(244,77,30)" fg:x="35747240760" fg:w="501504500"/><text x="8.5581%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,362,086,222 samples, 0.32%)</title><rect x="8.2430%" y="149" width="0.3166%" height="15" fill="rgb(218,69,12)" fg:x="35467401249" fg:w="1362086222"/><text x="8.4930%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,362,086,222 samples, 0.32%)</title><rect x="8.2430%" y="133" width="0.3166%" height="15" fill="rgb(212,87,7)" fg:x="35467401249" fg:w="1362086222"/><text x="8.4930%" y="143.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,371,113,303 samples, 0.32%)</title><rect x="8.2430%" y="165" width="0.3187%" height="15" fill="rgb(245,114,25)" fg:x="35467401249" fg:w="1371113303"/><text x="8.4930%" y="175.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1,867,602,758 samples, 0.43%)</title><rect x="8.2398%" y="197" width="0.4341%" height="15" fill="rgb(210,61,42)" fg:x="35453359123" fg:w="1867602758"/><text x="8.4898%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (1,867,602,758 samples, 0.43%)</title><rect x="8.2398%" y="181" width="0.4341%" height="15" fill="rgb(211,52,33)" fg:x="35453359123" fg:w="1867602758"/><text x="8.4898%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (211,634,899 samples, 0.05%)</title><rect x="8.6738%" y="181" width="0.0492%" height="15" fill="rgb(234,58,33)" fg:x="37320961881" fg:w="211634899"/><text x="8.9238%" y="191.50"></text></g><g><title>core::hash::Hasher::write_u8 (211,634,899 samples, 0.05%)</title><rect x="8.6738%" y="165" width="0.0492%" height="15" fill="rgb(220,115,36)" fg:x="37320961881" fg:w="211634899"/><text x="8.9238%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (211,634,899 samples, 0.05%)</title><rect x="8.6738%" y="149" width="0.0492%" height="15" fill="rgb(243,153,54)" fg:x="37320961881" fg:w="211634899"/><text x="8.9238%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (211,634,899 samples, 0.05%)</title><rect x="8.6738%" y="133" width="0.0492%" height="15" fill="rgb(251,47,18)" fg:x="37320961881" fg:w="211634899"/><text x="8.9238%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (211,634,899 samples, 0.05%)</title><rect x="8.6738%" y="117" width="0.0492%" height="15" fill="rgb(242,102,42)" fg:x="37320961881" fg:w="211634899"/><text x="8.9238%" y="127.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3,885,656,866 samples, 0.90%)</title><rect x="7.8365%" y="229" width="0.9031%" height="15" fill="rgb(234,31,38)" fg:x="33718153553" fg:w="3885656866"/><text x="8.0865%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3,885,656,866 samples, 0.90%)</title><rect x="7.8365%" y="213" width="0.9031%" height="15" fill="rgb(221,117,51)" fg:x="33718153553" fg:w="3885656866"/><text x="8.0865%" y="223.50"></text></g><g><title>core::hash::Hash::hash_slice (282,848,538 samples, 0.07%)</title><rect x="8.6738%" y="197" width="0.0657%" height="15" fill="rgb(212,20,18)" fg:x="37320961881" fg:w="282848538"/><text x="8.9238%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (188,565,692 samples, 0.04%)</title><rect x="8.7449%" y="117" width="0.0438%" height="15" fill="rgb(245,133,36)" fg:x="37626879626" fg:w="188565692"/><text x="8.9949%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (58,174,522 samples, 0.01%)</title><rect x="8.7971%" y="101" width="0.0135%" height="15" fill="rgb(212,6,19)" fg:x="37851553642" fg:w="58174522"/><text x="9.0471%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (200,601,800 samples, 0.05%)</title><rect x="8.7904%" y="117" width="0.0466%" height="15" fill="rgb(218,1,36)" fg:x="37822466381" fg:w="200601800"/><text x="9.0404%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (689,067,183 samples, 0.16%)</title><rect x="8.7449%" y="149" width="0.1601%" height="15" fill="rgb(246,84,54)" fg:x="37626879626" fg:w="689067183"/><text x="8.9949%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (689,067,183 samples, 0.16%)</title><rect x="8.7449%" y="133" width="0.1601%" height="15" fill="rgb(242,110,6)" fg:x="37626879626" fg:w="689067183"/><text x="8.9949%" y="143.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (711,133,381 samples, 0.17%)</title><rect x="8.7449%" y="165" width="0.1653%" height="15" fill="rgb(214,47,5)" fg:x="37626879626" fg:w="711133381"/><text x="8.9949%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (735,205,597 samples, 0.17%)</title><rect x="8.7395%" y="213" width="0.1709%" height="15" fill="rgb(218,159,25)" fg:x="37603810419" fg:w="735205597"/><text x="8.9895%" y="223.50"></text></g><g><title>core::hash::Hasher::write_isize (735,205,597 samples, 0.17%)</title><rect x="8.7395%" y="197" width="0.1709%" height="15" fill="rgb(215,211,28)" fg:x="37603810419" fg:w="735205597"/><text x="8.9895%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (735,205,597 samples, 0.17%)</title><rect x="8.7395%" y="181" width="0.1709%" height="15" fill="rgb(238,59,32)" fg:x="37603810419" fg:w="735205597"/><text x="8.9895%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (78,234,702 samples, 0.02%)</title><rect x="8.9104%" y="149" width="0.0182%" height="15" fill="rgb(226,82,3)" fg:x="38339016016" fg:w="78234702"/><text x="9.1604%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (53,159,477 samples, 0.01%)</title><rect x="8.9286%" y="101" width="0.0124%" height="15" fill="rgb(240,164,32)" fg:x="38417250718" fg:w="53159477"/><text x="9.1786%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (65,195,585 samples, 0.02%)</title><rect x="8.9431%" y="101" width="0.0152%" height="15" fill="rgb(232,46,7)" fg:x="38479437276" fg:w="65195585"/><text x="9.1931%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (202,607,818 samples, 0.05%)</title><rect x="8.9286%" y="133" width="0.0471%" height="15" fill="rgb(229,129,53)" fg:x="38417250718" fg:w="202607818"/><text x="9.1786%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (202,607,818 samples, 0.05%)</title><rect x="8.9286%" y="117" width="0.0471%" height="15" fill="rgb(234,188,29)" fg:x="38417250718" fg:w="202607818"/><text x="9.1786%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (210,631,890 samples, 0.05%)</title><rect x="8.9286%" y="149" width="0.0490%" height="15" fill="rgb(246,141,4)" fg:x="38417250718" fg:w="210631890"/><text x="9.1786%" y="159.50"></text></g><g><title>&lt;chlang::board::Position as core::hash::Hash&gt;::hash (289,869,601 samples, 0.07%)</title><rect x="8.9104%" y="213" width="0.0674%" height="15" fill="rgb(229,23,39)" fg:x="38339016016" fg:w="289869601"/><text x="9.1604%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (289,869,601 samples, 0.07%)</title><rect x="8.9104%" y="197" width="0.0674%" height="15" fill="rgb(206,12,3)" fg:x="38339016016" fg:w="289869601"/><text x="9.1604%" y="207.50"></text></g><g><title>core::hash::Hasher::write_i64 (289,869,601 samples, 0.07%)</title><rect x="8.9104%" y="181" width="0.0674%" height="15" fill="rgb(252,226,20)" fg:x="38339016016" fg:w="289869601"/><text x="9.1604%" y="191.50"></text></g><g><title>core::hash::Hasher::write_u64 (289,869,601 samples, 0.07%)</title><rect x="8.9104%" y="165" width="0.0674%" height="15" fill="rgb(216,123,35)" fg:x="38339016016" fg:w="289869601"/><text x="9.1604%" y="175.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,045,135,378 samples, 0.24%)</title><rect x="8.7395%" y="229" width="0.2429%" height="15" fill="rgb(212,68,40)" fg:x="37603810419" fg:w="1045135378"/><text x="8.9895%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (70,210,630 samples, 0.02%)</title><rect x="8.9983%" y="117" width="0.0163%" height="15" fill="rgb(254,125,32)" fg:x="38717150409" fg:w="70210630"/><text x="9.2483%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (322,968,898 samples, 0.08%)</title><rect x="8.9878%" y="149" width="0.0751%" height="15" fill="rgb(253,97,22)" fg:x="38672015004" fg:w="322968898"/><text x="9.2378%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (322,968,898 samples, 0.08%)</title><rect x="8.9878%" y="133" width="0.0751%" height="15" fill="rgb(241,101,14)" fg:x="38672015004" fg:w="322968898"/><text x="9.2378%" y="143.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (376,128,375 samples, 0.09%)</title><rect x="8.9824%" y="213" width="0.0874%" height="15" fill="rgb(238,103,29)" fg:x="38648945797" fg:w="376128375"/><text x="9.2324%" y="223.50"></text></g><g><title>core::hash::Hasher::write_isize (376,128,375 samples, 0.09%)</title><rect x="8.9824%" y="197" width="0.0874%" height="15" fill="rgb(233,195,47)" fg:x="38648945797" fg:w="376128375"/><text x="9.2324%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (376,128,375 samples, 0.09%)</title><rect x="8.9824%" y="181" width="0.0874%" height="15" fill="rgb(246,218,30)" fg:x="38648945797" fg:w="376128375"/><text x="9.2324%" y="191.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (353,059,168 samples, 0.08%)</title><rect x="8.9878%" y="165" width="0.0821%" height="15" fill="rgb(219,145,47)" fg:x="38672015004" fg:w="353059168"/><text x="9.2378%" y="175.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (404,212,627 samples, 0.09%)</title><rect x="8.9824%" y="229" width="0.0939%" height="15" fill="rgb(243,12,26)" fg:x="38648945797" fg:w="404212627"/><text x="9.2324%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6,587,763,112 samples, 1.53%)</title><rect x="7.5756%" y="261" width="1.5311%" height="15" fill="rgb(214,87,16)" fg:x="32595786482" fg:w="6587763112"/><text x="7.8256%" y="271.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (6,587,763,112 samples, 1.53%)</title><rect x="7.5756%" y="245" width="1.5311%" height="15" fill="rgb(208,99,42)" fg:x="32595786482" fg:w="6587763112"/><text x="7.8256%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6,622,868,427 samples, 1.54%)</title><rect x="7.5756%" y="277" width="1.5392%" height="15" fill="rgb(253,99,2)" fg:x="32595786482" fg:w="6622868427"/><text x="7.8256%" y="287.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (74,222,666 samples, 0.02%)</title><rect x="9.1149%" y="277" width="0.0173%" height="15" fill="rgb(220,168,23)" fg:x="39218654909" fg:w="74222666"/><text x="9.3649%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (162,487,458 samples, 0.04%)</title><rect x="9.1321%" y="213" width="0.0378%" height="15" fill="rgb(242,38,24)" fg:x="39292877575" fg:w="162487458"/><text x="9.3821%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (358,074,213 samples, 0.08%)</title><rect x="9.1699%" y="213" width="0.0832%" height="15" fill="rgb(225,182,9)" fg:x="39455365033" fg:w="358074213"/><text x="9.4199%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (642,928,769 samples, 0.15%)</title><rect x="9.1321%" y="229" width="0.1494%" height="15" fill="rgb(243,178,37)" fg:x="39292877575" fg:w="642928769"/><text x="9.3821%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (81,243,729 samples, 0.02%)</title><rect x="9.2815%" y="213" width="0.0189%" height="15" fill="rgb(232,139,19)" fg:x="39935806344" fg:w="81243729"/><text x="9.5315%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (82,246,738 samples, 0.02%)</title><rect x="9.3004%" y="213" width="0.0191%" height="15" fill="rgb(225,201,24)" fg:x="40017050073" fg:w="82246738"/><text x="9.5504%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (200,601,800 samples, 0.05%)</title><rect x="9.2815%" y="229" width="0.0466%" height="15" fill="rgb(221,47,46)" fg:x="39935806344" fg:w="200601800"/><text x="9.5315%" y="239.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,093,279,810 samples, 0.25%)</title><rect x="9.1321%" y="277" width="0.2541%" height="15" fill="rgb(249,23,13)" fg:x="39292877575" fg:w="1093279810"/><text x="9.3821%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,093,279,810 samples, 0.25%)</title><rect x="9.1321%" y="261" width="0.2541%" height="15" fill="rgb(219,9,5)" fg:x="39292877575" fg:w="1093279810"/><text x="9.3821%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,093,279,810 samples, 0.25%)</title><rect x="9.1321%" y="245" width="0.2541%" height="15" fill="rgb(254,171,16)" fg:x="39292877575" fg:w="1093279810"/><text x="9.3821%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,864,593,569 samples, 1.83%)</title><rect x="7.5756%" y="293" width="1.8278%" height="15" fill="rgb(230,171,20)" fg:x="32595786482" fg:w="7864593569"/><text x="7.8256%" y="303.50">c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (7,915,747,028 samples, 1.84%)</title><rect x="7.5640%" y="341" width="1.8397%" height="15" fill="rgb(210,71,41)" fg:x="32545636032" fg:w="7915747028"/><text x="7.8140%" y="351.50">h..</text></g><g><title>hashbrown::map::make_hasher::{{closure}} (7,865,596,578 samples, 1.83%)</title><rect x="7.5756%" y="325" width="1.8281%" height="15" fill="rgb(206,173,20)" fg:x="32595786482" fg:w="7865596578"/><text x="7.8256%" y="335.50">h..</text></g><g><title>hashbrown::map::make_hash (7,865,596,578 samples, 1.83%)</title><rect x="7.5756%" y="309" width="1.8281%" height="15" fill="rgb(233,88,34)" fg:x="32595786482" fg:w="7865596578"/><text x="7.8256%" y="319.50">h..</text></g><g><title>__rdl_dealloc (54,162,486 samples, 0.01%)</title><rect x="9.4104%" y="245" width="0.0126%" height="15" fill="rgb(223,209,46)" fg:x="40490470321" fg:w="54162486"/><text x="9.6604%" y="255.50"></text></g><g><title>_int_free (157,472,413 samples, 0.04%)</title><rect x="9.4230%" y="229" width="0.0366%" height="15" fill="rgb(250,43,18)" fg:x="40544632807" fg:w="157472413"/><text x="9.6730%" y="239.50"></text></g><g><title>__GI___libc_free (217,652,953 samples, 0.05%)</title><rect x="9.4230%" y="245" width="0.0506%" height="15" fill="rgb(208,13,10)" fg:x="40544632807" fg:w="217652953"/><text x="9.6730%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (300,902,700 samples, 0.07%)</title><rect x="9.4041%" y="261" width="0.0699%" height="15" fill="rgb(212,200,36)" fg:x="40463389078" fg:w="300902700"/><text x="9.6541%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (305,917,745 samples, 0.07%)</title><rect x="9.4037%" y="293" width="0.0711%" height="15" fill="rgb(225,90,30)" fg:x="40461383060" fg:w="305917745"/><text x="9.6537%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (303,911,727 samples, 0.07%)</title><rect x="9.4041%" y="277" width="0.0706%" height="15" fill="rgb(236,182,39)" fg:x="40463389078" fg:w="303911727"/><text x="9.6541%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize&lt;alloc::alloc::Global&gt;::{{closure}}&gt;&gt; (311,935,799 samples, 0.07%)</title><rect x="9.4037%" y="341" width="0.0725%" height="15" fill="rgb(212,144,35)" fg:x="40461383060" fg:w="311935799"/><text x="9.6537%" y="351.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (311,935,799 samples, 0.07%)</title><rect x="9.4037%" y="325" width="0.0725%" height="15" fill="rgb(228,63,44)" fg:x="40461383060" fg:w="311935799"/><text x="9.6537%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize::{{closure}} (311,935,799 samples, 0.07%)</title><rect x="9.4037%" y="309" width="0.0725%" height="15" fill="rgb(228,109,6)" fg:x="40461383060" fg:w="311935799"/><text x="9.6537%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50,150,450 samples, 0.01%)</title><rect x="9.4801%" y="341" width="0.0117%" height="15" fill="rgb(238,117,24)" fg:x="40790370012" fg:w="50150450"/><text x="9.7301%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (9,770,310,669 samples, 2.27%)</title><rect x="7.2337%" y="357" width="2.2707%" height="15" fill="rgb(242,26,26)" fg:x="31124372279" fg:w="9770310669"/><text x="7.4837%" y="367.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (9,817,452,092 samples, 2.28%)</title><rect x="7.2318%" y="373" width="2.2817%" height="15" fill="rgb(221,92,48)" fg:x="31116348207" fg:w="9817452092"/><text x="7.4818%" y="383.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9,887,662,722 samples, 2.30%)</title><rect x="7.2318%" y="389" width="2.2980%" height="15" fill="rgb(209,209,32)" fg:x="31116348207" fg:w="9887662722"/><text x="7.4818%" y="399.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (9,963,891,406 samples, 2.32%)</title><rect x="7.2318%" y="421" width="2.3157%" height="15" fill="rgb(221,70,22)" fg:x="31116348207" fg:w="9963891406"/><text x="7.4818%" y="431.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9,963,891,406 samples, 2.32%)</title><rect x="7.2318%" y="405" width="2.3157%" height="15" fill="rgb(248,145,5)" fg:x="31116348207" fg:w="9963891406"/><text x="7.4818%" y="415.50">h..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (21,845,536,020 samples, 5.08%)</title><rect x="4.5352%" y="437" width="5.0771%" height="15" fill="rgb(226,116,26)" fg:x="19513540095" fg:w="21845536020"/><text x="4.7852%" y="447.50">hashbr..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (21,965,897,100 samples, 5.11%)</title><rect x="4.5172%" y="453" width="5.1051%" height="15" fill="rgb(244,5,17)" fg:x="19436308402" fg:w="21965897100"/><text x="4.7672%" y="463.50">std::c..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (46,138,414 samples, 0.01%)</title><rect x="9.6335%" y="341" width="0.0107%" height="15" fill="rgb(252,159,33)" fg:x="41450349934" fg:w="46138414"/><text x="9.8835%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (46,138,414 samples, 0.01%)</title><rect x="9.6335%" y="325" width="0.0107%" height="15" fill="rgb(206,71,0)" fg:x="41450349934" fg:w="46138414"/><text x="9.8835%" y="335.50"></text></g><g><title>hashbrown::raw::is_full (272,818,448 samples, 0.06%)</title><rect x="9.6454%" y="325" width="0.0634%" height="15" fill="rgb(233,118,54)" fg:x="41501503393" fg:w="272818448"/><text x="9.8954%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (347,041,114 samples, 0.08%)</title><rect x="9.6335%" y="357" width="0.0807%" height="15" fill="rgb(234,83,48)" fg:x="41450349934" fg:w="347041114"/><text x="9.8835%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (295,887,655 samples, 0.07%)</title><rect x="9.6454%" y="341" width="0.0688%" height="15" fill="rgb(228,3,54)" fg:x="41501503393" fg:w="295887655"/><text x="9.8954%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (112,337,008 samples, 0.03%)</title><rect x="9.7142%" y="341" width="0.0261%" height="15" fill="rgb(226,155,13)" fg:x="41797391048" fg:w="112337008"/><text x="9.9642%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (112,337,008 samples, 0.03%)</title><rect x="9.7142%" y="325" width="0.0261%" height="15" fill="rgb(241,28,37)" fg:x="41797391048" fg:w="112337008"/><text x="9.9642%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (195,586,755 samples, 0.05%)</title><rect x="9.7403%" y="341" width="0.0455%" height="15" fill="rgb(233,93,10)" fg:x="41909728056" fg:w="195586755"/><text x="9.9903%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (752,256,750 samples, 0.17%)</title><rect x="9.6270%" y="373" width="0.1748%" height="15" fill="rgb(225,113,19)" fg:x="41422265682" fg:w="752256750"/><text x="9.8770%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (377,131,384 samples, 0.09%)</title><rect x="9.7142%" y="357" width="0.0876%" height="15" fill="rgb(241,2,18)" fg:x="41797391048" fg:w="377131384"/><text x="9.9642%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (69,207,621 samples, 0.02%)</title><rect x="9.7857%" y="341" width="0.0161%" height="15" fill="rgb(228,207,21)" fg:x="42105314811" fg:w="69207621"/><text x="10.0357%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (832,497,470 samples, 0.19%)</title><rect x="9.6223%" y="389" width="0.1935%" height="15" fill="rgb(213,211,35)" fg:x="41402205502" fg:w="832497470"/><text x="9.8723%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket (148,445,332 samples, 0.03%)</title><rect x="9.8158%" y="389" width="0.0345%" height="15" fill="rgb(209,83,10)" fg:x="42234702972" fg:w="148445332"/><text x="10.0658%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (148,445,332 samples, 0.03%)</title><rect x="9.8158%" y="373" width="0.0345%" height="15" fill="rgb(209,164,1)" fg:x="42234702972" fg:w="148445332"/><text x="10.0658%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (148,445,332 samples, 0.03%)</title><rect x="9.8158%" y="357" width="0.0345%" height="15" fill="rgb(213,184,43)" fg:x="42234702972" fg:w="148445332"/><text x="10.0658%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (90,270,810 samples, 0.02%)</title><rect x="9.8503%" y="389" width="0.0210%" height="15" fill="rgb(231,61,34)" fg:x="42383148304" fg:w="90270810"/><text x="10.1003%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (90,270,810 samples, 0.02%)</title><rect x="9.8503%" y="373" width="0.0210%" height="15" fill="rgb(235,75,3)" fg:x="42383148304" fg:w="90270810"/><text x="10.1003%" y="383.50"></text></g><g><title>core::ptr::write (90,270,810 samples, 0.02%)</title><rect x="9.8503%" y="357" width="0.0210%" height="15" fill="rgb(220,106,47)" fg:x="42383148304" fg:w="90270810"/><text x="10.1003%" y="367.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1,086,258,747 samples, 0.25%)</title><rect x="9.6223%" y="453" width="0.2525%" height="15" fill="rgb(210,196,33)" fg:x="41402205502" fg:w="1086258747"/><text x="9.8723%" y="463.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1,086,258,747 samples, 0.25%)</title><rect x="9.6223%" y="437" width="0.2525%" height="15" fill="rgb(229,154,42)" fg:x="41402205502" fg:w="1086258747"/><text x="9.8723%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1,086,258,747 samples, 0.25%)</title><rect x="9.6223%" y="421" width="0.2525%" height="15" fill="rgb(228,114,26)" fg:x="41402205502" fg:w="1086258747"/><text x="9.8723%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1,086,258,747 samples, 0.25%)</title><rect x="9.6223%" y="405" width="0.2525%" height="15" fill="rgb(208,144,1)" fg:x="41402205502" fg:w="1086258747"/><text x="9.8723%" y="415.50"></text></g><g><title>_int_free (146,439,314 samples, 0.03%)</title><rect x="9.8851%" y="309" width="0.0340%" height="15" fill="rgb(239,112,37)" fg:x="42532596645" fg:w="146439314"/><text x="10.1351%" y="319.50"></text></g><g><title>__GI___libc_free (262,788,358 samples, 0.06%)</title><rect x="9.8851%" y="325" width="0.0611%" height="15" fill="rgb(210,96,50)" fg:x="42532596645" fg:w="262788358"/><text x="10.1351%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (306,920,754 samples, 0.07%)</title><rect x="9.8753%" y="341" width="0.0713%" height="15" fill="rgb(222,178,2)" fg:x="42490470267" fg:w="306920754"/><text x="10.1253%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (307,923,763 samples, 0.07%)</title><rect x="9.8753%" y="373" width="0.0716%" height="15" fill="rgb(226,74,18)" fg:x="42490470267" fg:w="307923763"/><text x="10.1253%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (307,923,763 samples, 0.07%)</title><rect x="9.8753%" y="357" width="0.0716%" height="15" fill="rgb(225,67,54)" fg:x="42490470267" fg:w="307923763"/><text x="10.1253%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (310,932,790 samples, 0.07%)</title><rect x="9.8753%" y="389" width="0.0723%" height="15" fill="rgb(251,92,32)" fg:x="42490470267" fg:w="310932790"/><text x="10.1253%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32&gt;&gt; (323,971,907 samples, 0.08%)</title><rect x="9.8753%" y="453" width="0.0753%" height="15" fill="rgb(228,149,22)" fg:x="42490470267" fg:w="323971907"/><text x="10.1253%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32,std::hash::random::RandomState&gt;&gt; (323,971,907 samples, 0.08%)</title><rect x="9.8753%" y="437" width="0.0753%" height="15" fill="rgb(243,54,13)" fg:x="42490470267" fg:w="323971907"/><text x="10.1253%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;chlang::board::KeyStruct,i32)&gt;&gt; (323,971,907 samples, 0.08%)</title><rect x="9.8753%" y="421" width="0.0753%" height="15" fill="rgb(243,180,28)" fg:x="42490470267" fg:w="323971907"/><text x="10.1253%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (323,971,907 samples, 0.08%)</title><rect x="9.8753%" y="405" width="0.0753%" height="15" fill="rgb(208,167,24)" fg:x="42490470267" fg:w="323971907"/><text x="10.1253%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (176,529,584 samples, 0.04%)</title><rect x="9.9506%" y="453" width="0.0410%" height="15" fill="rgb(245,73,45)" fg:x="42814442174" fg:w="176529584"/><text x="10.2006%" y="463.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::{{constant}}::{{closure}} (86,258,774 samples, 0.02%)</title><rect x="9.9988%" y="341" width="0.0200%" height="15" fill="rgb(237,203,48)" fg:x="43022065037" fg:w="86258774"/><text x="10.2488%" y="351.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (86,258,774 samples, 0.02%)</title><rect x="9.9988%" y="325" width="0.0200%" height="15" fill="rgb(211,197,16)" fg:x="43022065037" fg:w="86258774"/><text x="10.2488%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (165,496,485 samples, 0.04%)</title><rect x="9.9988%" y="357" width="0.0385%" height="15" fill="rgb(243,99,51)" fg:x="43022065037" fg:w="165496485"/><text x="10.2488%" y="367.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (253,761,277 samples, 0.06%)</title><rect x="9.9939%" y="421" width="0.0590%" height="15" fill="rgb(215,123,29)" fg:x="43001001848" fg:w="253761277"/><text x="10.2439%" y="431.50"></text></g><g><title>std::hash::random::RandomState::new (253,761,277 samples, 0.06%)</title><rect x="9.9939%" y="405" width="0.0590%" height="15" fill="rgb(239,186,37)" fg:x="43001001848" fg:w="253761277"/><text x="10.2439%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (253,761,277 samples, 0.06%)</title><rect x="9.9939%" y="389" width="0.0590%" height="15" fill="rgb(252,136,39)" fg:x="43001001848" fg:w="253761277"/><text x="10.2439%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (253,761,277 samples, 0.06%)</title><rect x="9.9939%" y="373" width="0.0590%" height="15" fill="rgb(223,213,32)" fg:x="43001001848" fg:w="253761277"/><text x="10.2439%" y="383.50"></text></g><g><title>tcache_get (88,264,792 samples, 0.02%)</title><rect x="10.0809%" y="181" width="0.0205%" height="15" fill="rgb(233,115,5)" fg:x="43375124205" fg:w="88264792"/><text x="10.3309%" y="191.50"></text></g><g><title>__GI___libc_malloc (386,158,465 samples, 0.09%)</title><rect x="10.0809%" y="197" width="0.0897%" height="15" fill="rgb(207,226,44)" fg:x="43375124205" fg:w="386158465"/><text x="10.3309%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (436,308,915 samples, 0.10%)</title><rect x="10.0697%" y="245" width="0.1014%" height="15" fill="rgb(208,126,0)" fg:x="43326979773" fg:w="436308915"/><text x="10.3197%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (436,308,915 samples, 0.10%)</title><rect x="10.0697%" y="229" width="0.1014%" height="15" fill="rgb(244,66,21)" fg:x="43326979773" fg:w="436308915"/><text x="10.3197%" y="239.50"></text></g><g><title>alloc::alloc::alloc (436,308,915 samples, 0.10%)</title><rect x="10.0697%" y="213" width="0.1014%" height="15" fill="rgb(222,97,12)" fg:x="43326979773" fg:w="436308915"/><text x="10.3197%" y="223.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (472,417,239 samples, 0.11%)</title><rect x="10.0697%" y="261" width="0.1098%" height="15" fill="rgb(219,213,19)" fg:x="43326979773" fg:w="472417239"/><text x="10.3197%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (61,183,549 samples, 0.01%)</title><rect x="10.1795%" y="245" width="0.0142%" height="15" fill="rgb(252,169,30)" fg:x="43799397012" fg:w="61183549"/><text x="10.4295%" y="255.50"></text></g><g><title>core::intrinsics::unlikely (60,180,540 samples, 0.01%)</title><rect x="10.1797%" y="229" width="0.0140%" height="15" fill="rgb(206,32,51)" fg:x="43800400021" fg:w="60180540"/><text x="10.4297%" y="239.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (141,424,269 samples, 0.03%)</title><rect x="10.1795%" y="261" width="0.0329%" height="15" fill="rgb(250,172,42)" fg:x="43799397012" fg:w="141424269"/><text x="10.4295%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (646,940,805 samples, 0.15%)</title><rect x="10.0652%" y="277" width="0.1504%" height="15" fill="rgb(209,34,43)" fg:x="43307922602" fg:w="646940805"/><text x="10.3152%" y="287.50"></text></g><g><title>__memset_avx2_unaligned (107,321,963 samples, 0.02%)</title><rect x="10.2214%" y="245" width="0.0249%" height="15" fill="rgb(223,11,35)" fg:x="43979938632" fg:w="107321963"/><text x="10.4714%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (826,479,416 samples, 0.19%)</title><rect x="10.0578%" y="309" width="0.1921%" height="15" fill="rgb(251,219,26)" fg:x="43275826314" fg:w="826479416"/><text x="10.3078%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (826,479,416 samples, 0.19%)</title><rect x="10.0578%" y="293" width="0.1921%" height="15" fill="rgb(231,119,3)" fg:x="43275826314" fg:w="826479416"/><text x="10.3078%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (147,442,323 samples, 0.03%)</title><rect x="10.2156%" y="277" width="0.0343%" height="15" fill="rgb(216,97,11)" fg:x="43954863407" fg:w="147442323"/><text x="10.4656%" y="287.50"></text></g><g><title>core::intrinsics::write_bytes (147,442,323 samples, 0.03%)</title><rect x="10.2156%" y="261" width="0.0343%" height="15" fill="rgb(223,59,9)" fg:x="43954863407" fg:w="147442323"/><text x="10.4656%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (987,963,865 samples, 0.23%)</title><rect x="10.0578%" y="325" width="0.2296%" height="15" fill="rgb(233,93,31)" fg:x="43275826314" fg:w="987963865"/><text x="10.3078%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,070,210,603 samples, 0.25%)</title><rect x="10.0529%" y="341" width="0.2487%" height="15" fill="rgb(239,81,33)" fg:x="43254763125" fg:w="1070210603"/><text x="10.3029%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,140,421,233 samples, 0.27%)</title><rect x="10.0529%" y="357" width="0.2650%" height="15" fill="rgb(213,120,34)" fg:x="43254763125" fg:w="1140421233"/><text x="10.3029%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1,178,535,575 samples, 0.27%)</title><rect x="10.0529%" y="389" width="0.2739%" height="15" fill="rgb(243,49,53)" fg:x="43254763125" fg:w="1178535575"/><text x="10.3029%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,178,535,575 samples, 0.27%)</title><rect x="10.0529%" y="373" width="0.2739%" height="15" fill="rgb(247,216,33)" fg:x="43254763125" fg:w="1178535575"/><text x="10.3029%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (61,183,549 samples, 0.01%)</title><rect x="10.3268%" y="229" width="0.0142%" height="15" fill="rgb(226,26,14)" fg:x="44433298700" fg:w="61183549"/><text x="10.5768%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (82,246,738 samples, 0.02%)</title><rect x="10.3268%" y="245" width="0.0191%" height="15" fill="rgb(215,49,53)" fg:x="44433298700" fg:w="82246738"/><text x="10.5768%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (47,141,423 samples, 0.01%)</title><rect x="10.3534%" y="85" width="0.0110%" height="15" fill="rgb(245,162,40)" fg:x="44547641726" fg:w="47141423"/><text x="10.6034%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (81,243,729 samples, 0.02%)</title><rect x="10.3697%" y="69" width="0.0189%" height="15" fill="rgb(229,68,17)" fg:x="44617852356" fg:w="81243729"/><text x="10.6197%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (194,583,746 samples, 0.05%)</title><rect x="10.3643%" y="85" width="0.0452%" height="15" fill="rgb(213,182,10)" fg:x="44594783149" fg:w="194583746"/><text x="10.6143%" y="95.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (519,558,662 samples, 0.12%)</title><rect x="10.3508%" y="117" width="0.1208%" height="15" fill="rgb(245,125,30)" fg:x="44536608627" fg:w="519558662"/><text x="10.6008%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (519,558,662 samples, 0.12%)</title><rect x="10.3508%" y="101" width="0.1208%" height="15" fill="rgb(232,202,2)" fg:x="44536608627" fg:w="519558662"/><text x="10.6008%" y="111.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (521,564,680 samples, 0.12%)</title><rect x="10.3508%" y="133" width="0.1212%" height="15" fill="rgb(237,140,51)" fg:x="44536608627" fg:w="521564680"/><text x="10.6008%" y="143.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (563,691,058 samples, 0.13%)</title><rect x="10.3459%" y="165" width="0.1310%" height="15" fill="rgb(236,157,25)" fg:x="44515545438" fg:w="563691058"/><text x="10.5959%" y="175.50"></text></g><g><title>core::hash::Hasher::write_u64 (563,691,058 samples, 0.13%)</title><rect x="10.3459%" y="149" width="0.1310%" height="15" fill="rgb(219,209,0)" fg:x="44515545438" fg:w="563691058"/><text x="10.5959%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (135,406,215 samples, 0.03%)</title><rect x="10.4823%" y="53" width="0.0315%" height="15" fill="rgb(240,116,54)" fg:x="45102305703" fg:w="135406215"/><text x="10.7323%" y="63.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (360,080,231 samples, 0.08%)</title><rect x="10.5138%" y="53" width="0.0837%" height="15" fill="rgb(216,10,36)" fg:x="45237711918" fg:w="360080231"/><text x="10.7638%" y="63.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (671,013,021 samples, 0.16%)</title><rect x="10.4823%" y="69" width="0.1560%" height="15" fill="rgb(222,72,44)" fg:x="45102305703" fg:w="671013021"/><text x="10.7323%" y="79.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (942,828,460 samples, 0.22%)</title><rect x="10.4769%" y="101" width="0.2191%" height="15" fill="rgb(232,159,9)" fg:x="45079236496" fg:w="942828460"/><text x="10.7269%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (942,828,460 samples, 0.22%)</title><rect x="10.4769%" y="85" width="0.2191%" height="15" fill="rgb(210,39,32)" fg:x="45079236496" fg:w="942828460"/><text x="10.7269%" y="95.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (943,831,469 samples, 0.22%)</title><rect x="10.4769%" y="117" width="0.2194%" height="15" fill="rgb(216,194,45)" fg:x="45079236496" fg:w="943831469"/><text x="10.7269%" y="127.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (952,858,550 samples, 0.22%)</title><rect x="10.4769%" y="133" width="0.2215%" height="15" fill="rgb(218,18,35)" fg:x="45079236496" fg:w="952858550"/><text x="10.7269%" y="143.50"></text></g><g><title>core::hash::sip::u8to64_le (175,526,575 samples, 0.04%)</title><rect x="10.7096%" y="53" width="0.0408%" height="15" fill="rgb(207,83,51)" fg:x="46080239478" fg:w="175526575"/><text x="10.9596%" y="63.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (47,141,423 samples, 0.01%)</title><rect x="10.7541%" y="37" width="0.0110%" height="15" fill="rgb(225,63,43)" fg:x="46271814197" fg:w="47141423"/><text x="11.0041%" y="47.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (110,330,990 samples, 0.03%)</title><rect x="10.7650%" y="37" width="0.0256%" height="15" fill="rgb(207,57,36)" fg:x="46318955620" fg:w="110330990"/><text x="11.0150%" y="47.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (244,734,196 samples, 0.06%)</title><rect x="10.7541%" y="53" width="0.0569%" height="15" fill="rgb(216,99,33)" fg:x="46271814197" fg:w="244734196"/><text x="11.0041%" y="63.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (893,681,019 samples, 0.21%)</title><rect x="10.7068%" y="85" width="0.2077%" height="15" fill="rgb(225,42,16)" fg:x="46068203370" fg:w="893681019"/><text x="10.9568%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (893,681,019 samples, 0.21%)</title><rect x="10.7068%" y="69" width="0.2077%" height="15" fill="rgb(220,201,45)" fg:x="46068203370" fg:w="893681019"/><text x="10.9568%" y="79.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (911,735,181 samples, 0.21%)</title><rect x="10.7068%" y="101" width="0.2119%" height="15" fill="rgb(225,33,4)" fg:x="46068203370" fg:w="911735181"/><text x="10.9568%" y="111.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1,175,526,548 samples, 0.27%)</title><rect x="10.6984%" y="133" width="0.2732%" height="15" fill="rgb(224,33,50)" fg:x="46032095046" fg:w="1175526548"/><text x="10.9484%" y="143.50"></text></g><g><title>core::hash::Hasher::write_usize (1,175,526,548 samples, 0.27%)</title><rect x="10.6984%" y="117" width="0.2732%" height="15" fill="rgb(246,198,51)" fg:x="46032095046" fg:w="1175526548"/><text x="10.9484%" y="127.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (155,466,395 samples, 0.04%)</title><rect x="10.9716%" y="117" width="0.0361%" height="15" fill="rgb(205,22,4)" fg:x="47207621594" fg:w="155466395"/><text x="11.2216%" y="127.50"></text></g><g><title>core::hash::Hasher::write_u8 (155,466,395 samples, 0.04%)</title><rect x="10.9716%" y="101" width="0.0361%" height="15" fill="rgb(206,3,8)" fg:x="47207621594" fg:w="155466395"/><text x="11.2216%" y="111.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (155,466,395 samples, 0.04%)</title><rect x="10.9716%" y="85" width="0.0361%" height="15" fill="rgb(251,23,15)" fg:x="47207621594" fg:w="155466395"/><text x="11.2216%" y="95.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (155,466,395 samples, 0.04%)</title><rect x="10.9716%" y="69" width="0.0361%" height="15" fill="rgb(252,88,28)" fg:x="47207621594" fg:w="155466395"/><text x="11.2216%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (155,466,395 samples, 0.04%)</title><rect x="10.9716%" y="53" width="0.0361%" height="15" fill="rgb(212,127,14)" fg:x="47207621594" fg:w="155466395"/><text x="11.2216%" y="63.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2,304,914,682 samples, 0.54%)</title><rect x="10.4769%" y="165" width="0.5357%" height="15" fill="rgb(247,145,37)" fg:x="45079236496" fg:w="2304914682"/><text x="10.7269%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2,304,914,682 samples, 0.54%)</title><rect x="10.4769%" y="149" width="0.5357%" height="15" fill="rgb(209,117,53)" fg:x="45079236496" fg:w="2304914682"/><text x="10.7269%" y="159.50"></text></g><g><title>core::hash::Hash::hash_slice (176,529,584 samples, 0.04%)</title><rect x="10.9716%" y="133" width="0.0410%" height="15" fill="rgb(212,90,42)" fg:x="47207621594" fg:w="176529584"/><text x="11.2216%" y="143.50"></text></g><g><title>core::hash::sip::u8to64_le (96,288,864 samples, 0.02%)</title><rect x="11.0138%" y="53" width="0.0224%" height="15" fill="rgb(218,164,37)" fg:x="47389166223" fg:w="96288864"/><text x="11.2638%" y="63.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (44,132,396 samples, 0.01%)</title><rect x="11.0406%" y="37" width="0.0103%" height="15" fill="rgb(246,65,34)" fg:x="47504512258" fg:w="44132396"/><text x="11.2906%" y="47.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (129,388,161 samples, 0.03%)</title><rect x="11.0369%" y="53" width="0.0301%" height="15" fill="rgb(231,100,33)" fg:x="47488464114" fg:w="129388161"/><text x="11.2869%" y="63.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (404,212,627 samples, 0.09%)</title><rect x="11.0138%" y="85" width="0.0939%" height="15" fill="rgb(228,126,14)" fg:x="47389166223" fg:w="404212627"/><text x="11.2638%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (404,212,627 samples, 0.09%)</title><rect x="11.0138%" y="69" width="0.0939%" height="15" fill="rgb(215,173,21)" fg:x="47389166223" fg:w="404212627"/><text x="11.2638%" y="79.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (418,254,753 samples, 0.10%)</title><rect x="11.0126%" y="149" width="0.0972%" height="15" fill="rgb(210,6,40)" fg:x="47384151178" fg:w="418254753"/><text x="11.2626%" y="159.50"></text></g><g><title>core::hash::Hasher::write_isize (418,254,753 samples, 0.10%)</title><rect x="11.0126%" y="133" width="0.0972%" height="15" fill="rgb(212,48,18)" fg:x="47384151178" fg:w="418254753"/><text x="11.2626%" y="143.50"></text></g><g><title>core::hash::Hasher::write_usize (418,254,753 samples, 0.10%)</title><rect x="11.0126%" y="117" width="0.0972%" height="15" fill="rgb(230,214,11)" fg:x="47384151178" fg:w="418254753"/><text x="11.2626%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (413,239,708 samples, 0.10%)</title><rect x="11.0138%" y="101" width="0.0960%" height="15" fill="rgb(254,105,39)" fg:x="47389166223" fg:w="413239708"/><text x="11.2638%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (70,210,630 samples, 0.02%)</title><rect x="11.1098%" y="85" width="0.0163%" height="15" fill="rgb(245,158,5)" fg:x="47802405931" fg:w="70210630"/><text x="11.3598%" y="95.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (148,445,332 samples, 0.03%)</title><rect x="11.1261%" y="69" width="0.0345%" height="15" fill="rgb(249,208,11)" fg:x="47872616561" fg:w="148445332"/><text x="11.3761%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (148,445,332 samples, 0.03%)</title><rect x="11.1261%" y="53" width="0.0345%" height="15" fill="rgb(210,39,28)" fg:x="47872616561" fg:w="148445332"/><text x="11.3761%" y="63.50"></text></g><g><title>core::hash::Hasher::write_i64 (222,667,998 samples, 0.05%)</title><rect x="11.1098%" y="117" width="0.0518%" height="15" fill="rgb(211,56,53)" fg:x="47802405931" fg:w="222667998"/><text x="11.3598%" y="127.50"></text></g><g><title>core::hash::Hasher::write_u64 (222,667,998 samples, 0.05%)</title><rect x="11.1098%" y="101" width="0.0518%" height="15" fill="rgb(226,201,30)" fg:x="47802405931" fg:w="222667998"/><text x="11.3598%" y="111.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (152,457,368 samples, 0.04%)</title><rect x="11.1261%" y="85" width="0.0354%" height="15" fill="rgb(239,101,34)" fg:x="47872616561" fg:w="152457368"/><text x="11.3761%" y="95.50"></text></g><g><title>&lt;chlang::board::Position as core::hash::Hash&gt;::hash (224,674,016 samples, 0.05%)</title><rect x="11.1098%" y="149" width="0.0522%" height="15" fill="rgb(226,209,5)" fg:x="47802405931" fg:w="224674016"/><text x="11.3598%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (224,674,016 samples, 0.05%)</title><rect x="11.1098%" y="133" width="0.0522%" height="15" fill="rgb(250,105,47)" fg:x="47802405931" fg:w="224674016"/><text x="11.3598%" y="143.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (652,958,859 samples, 0.15%)</title><rect x="11.0126%" y="165" width="0.1518%" height="15" fill="rgb(230,72,3)" fg:x="47384151178" fg:w="652958859"/><text x="11.2626%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (67,201,603 samples, 0.02%)</title><rect x="11.1825%" y="37" width="0.0156%" height="15" fill="rgb(232,218,39)" fg:x="48115344739" fg:w="67201603"/><text x="11.4325%" y="47.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (131,394,179 samples, 0.03%)</title><rect x="11.1767%" y="53" width="0.0305%" height="15" fill="rgb(248,166,6)" fg:x="48090269514" fg:w="131394179"/><text x="11.4267%" y="63.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (286,860,574 samples, 0.07%)</title><rect x="11.1658%" y="85" width="0.0667%" height="15" fill="rgb(247,89,20)" fg:x="48043128091" fg:w="286860574"/><text x="11.4158%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (286,860,574 samples, 0.07%)</title><rect x="11.1658%" y="69" width="0.0667%" height="15" fill="rgb(248,130,54)" fg:x="48043128091" fg:w="286860574"/><text x="11.4158%" y="79.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (301,905,709 samples, 0.07%)</title><rect x="11.1658%" y="101" width="0.0702%" height="15" fill="rgb(234,196,4)" fg:x="48043128091" fg:w="301905709"/><text x="11.4158%" y="111.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (309,929,781 samples, 0.07%)</title><rect x="11.1644%" y="149" width="0.0720%" height="15" fill="rgb(250,143,31)" fg:x="48037110037" fg:w="309929781"/><text x="11.4144%" y="159.50"></text></g><g><title>core::hash::Hasher::write_isize (309,929,781 samples, 0.07%)</title><rect x="11.1644%" y="133" width="0.0720%" height="15" fill="rgb(211,110,34)" fg:x="48037110037" fg:w="309929781"/><text x="11.4144%" y="143.50"></text></g><g><title>core::hash::Hasher::write_usize (309,929,781 samples, 0.07%)</title><rect x="11.1644%" y="117" width="0.0720%" height="15" fill="rgb(215,124,48)" fg:x="48037110037" fg:w="309929781"/><text x="11.4144%" y="127.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (314,944,826 samples, 0.07%)</title><rect x="11.1644%" y="165" width="0.0732%" height="15" fill="rgb(216,46,13)" fg:x="48037110037" fg:w="314944826"/><text x="11.4144%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,942,828,379 samples, 0.92%)</title><rect x="10.3459%" y="197" width="0.9164%" height="15" fill="rgb(205,184,25)" fg:x="44515545438" fg:w="3942828379"/><text x="10.5959%" y="207.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (3,942,828,379 samples, 0.92%)</title><rect x="10.3459%" y="181" width="0.9164%" height="15" fill="rgb(228,1,10)" fg:x="44515545438" fg:w="3942828379"/><text x="10.5959%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,944,834,397 samples, 0.92%)</title><rect x="10.3459%" y="213" width="0.9168%" height="15" fill="rgb(213,116,27)" fg:x="44515545438" fg:w="3944834397"/><text x="10.5959%" y="223.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (119,358,071 samples, 0.03%)</title><rect x="11.2627%" y="197" width="0.0277%" height="15" fill="rgb(241,95,50)" fg:x="48460379835" fg:w="119358071"/><text x="11.5127%" y="207.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (119,358,071 samples, 0.03%)</title><rect x="11.2627%" y="181" width="0.0277%" height="15" fill="rgb(238,48,32)" fg:x="48460379835" fg:w="119358071"/><text x="11.5127%" y="191.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (119,358,071 samples, 0.03%)</title><rect x="11.2627%" y="165" width="0.0277%" height="15" fill="rgb(235,113,49)" fg:x="48460379835" fg:w="119358071"/><text x="11.5127%" y="175.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (162,487,458 samples, 0.04%)</title><rect x="11.2627%" y="213" width="0.0378%" height="15" fill="rgb(205,127,43)" fg:x="48460379835" fg:w="162487458"/><text x="11.5127%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (87,261,783 samples, 0.02%)</title><rect x="11.3005%" y="149" width="0.0203%" height="15" fill="rgb(250,162,2)" fg:x="48622867293" fg:w="87261783"/><text x="11.5505%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (168,505,512 samples, 0.04%)</title><rect x="11.3208%" y="149" width="0.0392%" height="15" fill="rgb(220,13,41)" fg:x="48710129076" fg:w="168505512"/><text x="11.5708%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (306,920,754 samples, 0.07%)</title><rect x="11.3005%" y="165" width="0.0713%" height="15" fill="rgb(249,221,25)" fg:x="48622867293" fg:w="306920754"/><text x="11.5505%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (61,183,549 samples, 0.01%)</title><rect x="11.3772%" y="149" width="0.0142%" height="15" fill="rgb(215,208,19)" fg:x="48952857254" fg:w="61183549"/><text x="11.6272%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (111,333,999 samples, 0.03%)</title><rect x="11.3718%" y="165" width="0.0259%" height="15" fill="rgb(236,175,2)" fg:x="48929788047" fg:w="111333999"/><text x="11.6218%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (520,561,671 samples, 0.12%)</title><rect x="11.3005%" y="213" width="0.1210%" height="15" fill="rgb(241,52,2)" fg:x="48622867293" fg:w="520561671"/><text x="11.5505%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (520,561,671 samples, 0.12%)</title><rect x="11.3005%" y="197" width="0.1210%" height="15" fill="rgb(248,140,14)" fg:x="48622867293" fg:w="520561671"/><text x="11.5505%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (520,561,671 samples, 0.12%)</title><rect x="11.3005%" y="181" width="0.1210%" height="15" fill="rgb(253,22,42)" fg:x="48622867293" fg:w="520561671"/><text x="11.5505%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,674,021,940 samples, 1.09%)</title><rect x="10.3459%" y="229" width="1.0863%" height="15" fill="rgb(234,61,47)" fg:x="44515545438" fg:w="4674021940"/><text x="10.5959%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (4,677,030,967 samples, 1.09%)</title><rect x="10.3459%" y="245" width="1.0870%" height="15" fill="rgb(208,226,15)" fg:x="44515545438" fg:w="4677030967"/><text x="10.5959%" y="255.50"></text></g><g><title>hashbrown::raw::h2 (190,571,710 samples, 0.04%)</title><rect x="11.4397%" y="197" width="0.0443%" height="15" fill="rgb(217,221,4)" fg:x="49221663666" fg:w="190571710"/><text x="11.6897%" y="207.50"></text></g><g><title>hashbrown::raw::is_full (91,273,819 samples, 0.02%)</title><rect x="11.4840%" y="165" width="0.0212%" height="15" fill="rgb(212,174,34)" fg:x="49412235376" fg:w="91273819"/><text x="11.7340%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (95,285,855 samples, 0.02%)</title><rect x="11.4840%" y="197" width="0.0221%" height="15" fill="rgb(253,83,4)" fg:x="49412235376" fg:w="95285855"/><text x="11.7340%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (95,285,855 samples, 0.02%)</title><rect x="11.4840%" y="181" width="0.0221%" height="15" fill="rgb(250,195,49)" fg:x="49412235376" fg:w="95285855"/><text x="11.7340%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (58,174,522 samples, 0.01%)</title><rect x="11.5061%" y="197" width="0.0135%" height="15" fill="rgb(241,192,25)" fg:x="49507521231" fg:w="58174522"/><text x="11.7561%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (55,165,495 samples, 0.01%)</title><rect x="11.5068%" y="181" width="0.0128%" height="15" fill="rgb(208,124,10)" fg:x="49510530258" fg:w="55165495"/><text x="11.7568%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (441,323,960 samples, 0.10%)</title><rect x="11.4329%" y="213" width="0.1026%" height="15" fill="rgb(222,33,0)" fg:x="49192576405" fg:w="441323960"/><text x="11.6829%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (445,335,996 samples, 0.10%)</title><rect x="11.4329%" y="245" width="0.1035%" height="15" fill="rgb(234,209,28)" fg:x="49192576405" fg:w="445335996"/><text x="11.6829%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (445,335,996 samples, 0.10%)</title><rect x="11.4329%" y="229" width="0.1035%" height="15" fill="rgb(224,11,23)" fg:x="49192576405" fg:w="445335996"/><text x="11.6829%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="389" width="1.2115%" height="15" fill="rgb(232,99,1)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="399.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="373" width="1.2115%" height="15" fill="rgb(237,95,45)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="357" width="1.2115%" height="15" fill="rgb(208,109,11)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="341" width="1.2115%" height="15" fill="rgb(216,190,48)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="351.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="325" width="1.2115%" height="15" fill="rgb(251,171,36)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="335.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="309" width="1.2115%" height="15" fill="rgb(230,62,22)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="293" width="1.2115%" height="15" fill="rgb(225,114,35)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="277" width="1.2115%" height="15" fill="rgb(215,118,42)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5,212,637,773 samples, 1.21%)</title><rect x="10.3268%" y="261" width="1.2115%" height="15" fill="rgb(243,119,21)" fg:x="44433298700" fg:w="5212637773"/><text x="10.5768%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6,555,666,824 samples, 1.52%)</title><rect x="10.0529%" y="421" width="1.5236%" height="15" fill="rgb(252,177,53)" fg:x="43254763125" fg:w="6555666824"/><text x="10.3029%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6,555,666,824 samples, 1.52%)</title><rect x="10.0529%" y="405" width="1.5236%" height="15" fill="rgb(237,209,29)" fg:x="43254763125" fg:w="6555666824"/><text x="10.3029%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (7,162,487,269 samples, 1.66%)</title><rect x="9.9916%" y="453" width="1.6646%" height="15" fill="rgb(212,65,23)" fg:x="42990971758" fg:w="7162487269"/><text x="10.2416%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7,162,487,269 samples, 1.66%)</title><rect x="9.9916%" y="437" width="1.6646%" height="15" fill="rgb(230,222,46)" fg:x="42990971758" fg:w="7162487269"/><text x="10.2416%" y="447.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (31,336,007,178 samples, 7.28%)</title><rect x="4.5091%" y="469" width="7.2828%" height="15" fill="rgb(215,135,32)" fg:x="19401203087" fg:w="31336007178"/><text x="4.7591%" y="479.50">chlang::bo..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (76,228,684 samples, 0.02%)</title><rect x="11.7938%" y="453" width="0.0177%" height="15" fill="rgb(246,101,22)" fg:x="50745234337" fg:w="76228684"/><text x="12.0438%" y="463.50"></text></g><g><title>_int_free (244,734,196 samples, 0.06%)</title><rect x="11.8168%" y="293" width="0.0569%" height="15" fill="rgb(206,107,13)" fg:x="50844532228" fg:w="244734196"/><text x="12.0668%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="453" width="0.0674%" height="15" fill="rgb(250,100,44)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="437" width="0.0674%" height="15" fill="rgb(231,147,38)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="421" width="0.0674%" height="15" fill="rgb(229,8,40)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="405" width="0.0674%" height="15" fill="rgb(221,135,30)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="389" width="0.0674%" height="15" fill="rgb(249,193,18)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="373" width="0.0674%" height="15" fill="rgb(209,133,39)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="357" width="0.0674%" height="15" fill="rgb(232,100,14)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="341" width="0.0674%" height="15" fill="rgb(224,185,1)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (289,869,601 samples, 0.07%)</title><rect x="11.8115%" y="325" width="0.0674%" height="15" fill="rgb(223,139,8)" fg:x="50821463021" fg:w="289869601"/><text x="12.0615%" y="335.50"></text></g><g><title>__GI___libc_free (266,800,394 samples, 0.06%)</title><rect x="11.8168%" y="309" width="0.0620%" height="15" fill="rgb(232,213,38)" fg:x="50844532228" fg:w="266800394"/><text x="12.0668%" y="319.50"></text></g><g><title>core::ptr::read (862,587,740 samples, 0.20%)</title><rect x="11.8788%" y="421" width="0.2005%" height="15" fill="rgb(207,94,22)" fg:x="51111332622" fg:w="862587740"/><text x="12.1288%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (58,174,522 samples, 0.01%)</title><rect x="12.0793%" y="421" width="0.0135%" height="15" fill="rgb(219,183,54)" fg:x="51973920362" fg:w="58174522"/><text x="12.3293%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1,091,273,792 samples, 0.25%)</title><rect x="11.8788%" y="437" width="0.2536%" height="15" fill="rgb(216,185,54)" fg:x="51111332622" fg:w="1091273792"/><text x="12.1288%" y="447.50"></text></g><g><title>chlang::board::Board::unmake_last (1,819,458,326 samples, 0.42%)</title><rect x="11.8788%" y="453" width="0.4229%" height="15" fill="rgb(254,217,39)" fg:x="51111332622" fg:w="1819458326"/><text x="12.1288%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (545,636,896 samples, 0.13%)</title><rect x="12.3017%" y="373" width="0.1268%" height="15" fill="rgb(240,178,23)" fg:x="52930790948" fg:w="545636896"/><text x="12.5517%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,078,234,675 samples, 0.25%)</title><rect x="12.3017%" y="389" width="0.2506%" height="15" fill="rgb(218,11,47)" fg:x="52930790948" fg:w="1078234675"/><text x="12.5517%" y="399.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (675,025,057 samples, 0.16%)</title><rect x="12.5523%" y="389" width="0.1569%" height="15" fill="rgb(218,51,51)" fg:x="54009025623" fg:w="675025057"/><text x="12.8023%" y="399.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (675,025,057 samples, 0.16%)</title><rect x="12.5523%" y="373" width="0.1569%" height="15" fill="rgb(238,126,27)" fg:x="54009025623" fg:w="675025057"/><text x="12.8023%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1,794,383,101 samples, 0.42%)</title><rect x="12.3017%" y="437" width="0.4170%" height="15" fill="rgb(249,202,22)" fg:x="52930790948" fg:w="1794383101"/><text x="12.5517%" y="447.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1,794,383,101 samples, 0.42%)</title><rect x="12.3017%" y="421" width="0.4170%" height="15" fill="rgb(254,195,49)" fg:x="52930790948" fg:w="1794383101"/><text x="12.5517%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1,794,383,101 samples, 0.42%)</title><rect x="12.3017%" y="405" width="0.4170%" height="15" fill="rgb(208,123,14)" fg:x="52930790948" fg:w="1794383101"/><text x="12.5517%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (53,159,477 samples, 0.01%)</title><rect x="12.7187%" y="357" width="0.0124%" height="15" fill="rgb(224,200,8)" fg:x="54725174049" fg:w="53159477"/><text x="12.9687%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (69,207,621 samples, 0.02%)</title><rect x="12.7187%" y="373" width="0.0161%" height="15" fill="rgb(217,61,36)" fg:x="54725174049" fg:w="69207621"/><text x="12.9687%" y="383.50"></text></g><g><title>__rust_dealloc (433,299,888 samples, 0.10%)</title><rect x="12.7348%" y="341" width="0.1007%" height="15" fill="rgb(206,35,45)" fg:x="54794381670" fg:w="433299888"/><text x="12.9848%" y="351.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (525,576,716 samples, 0.12%)</title><rect x="12.8355%" y="325" width="0.1221%" height="15" fill="rgb(217,65,33)" fg:x="55227681558" fg:w="525576716"/><text x="13.0855%" y="335.50"></text></g><g><title>__rdl_dealloc (637,913,724 samples, 0.15%)</title><rect x="12.8355%" y="341" width="0.1483%" height="15" fill="rgb(222,158,48)" fg:x="55227681558" fg:w="637913724"/><text x="13.0855%" y="351.50"></text></g><g><title>tcache_put (376,128,375 samples, 0.09%)</title><rect x="12.9854%" y="309" width="0.0874%" height="15" fill="rgb(254,2,54)" fg:x="55872616345" fg:w="376128375"/><text x="13.2354%" y="319.50"></text></g><g><title>_int_free (1,847,542,578 samples, 0.43%)</title><rect x="12.9854%" y="325" width="0.4294%" height="15" fill="rgb(250,143,38)" fg:x="55872616345" fg:w="1847542578"/><text x="13.2354%" y="335.50"></text></g><g><title>__GI___libc_free (2,572,718,085 samples, 0.60%)</title><rect x="12.9838%" y="341" width="0.5979%" height="15" fill="rgb(248,25,0)" fg:x="55865595282" fg:w="2572718085"/><text x="13.2338%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,784,352,957 samples, 0.88%)</title><rect x="12.7187%" y="389" width="0.8795%" height="15" fill="rgb(206,152,27)" fg:x="54725174049" fg:w="3784352957"/><text x="12.9687%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,715,145,336 samples, 0.86%)</title><rect x="12.7348%" y="373" width="0.8634%" height="15" fill="rgb(240,77,30)" fg:x="54794381670" fg:w="3715145336"/><text x="12.9848%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (3,715,145,336 samples, 0.86%)</title><rect x="12.7348%" y="357" width="0.8634%" height="15" fill="rgb(231,5,3)" fg:x="54794381670" fg:w="3715145336"/><text x="12.9848%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (3,861,584,650 samples, 0.90%)</title><rect x="12.7187%" y="437" width="0.8975%" height="15" fill="rgb(207,226,32)" fg:x="54725174049" fg:w="3861584650"/><text x="12.9687%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (3,861,584,650 samples, 0.90%)</title><rect x="12.7187%" y="421" width="0.8975%" height="15" fill="rgb(222,207,47)" fg:x="54725174049" fg:w="3861584650"/><text x="12.9687%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,861,584,650 samples, 0.90%)</title><rect x="12.7187%" y="405" width="0.8975%" height="15" fill="rgb(229,115,45)" fg:x="54725174049" fg:w="3861584650"/><text x="12.9687%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (381,143,420 samples, 0.09%)</title><rect x="13.6162%" y="437" width="0.0886%" height="15" fill="rgb(224,191,6)" fg:x="58586758699" fg:w="381143420"/><text x="13.8662%" y="447.50"></text></g><g><title>chlang::cmove::Move::to (531,594,770 samples, 0.12%)</title><rect x="13.7120%" y="437" width="0.1235%" height="15" fill="rgb(230,227,24)" fg:x="58998995398" fg:w="531594770"/><text x="13.9620%" y="447.50"></text></g><g><title>chlang::cmove::Move::from (374,122,357 samples, 0.09%)</title><rect x="13.8358%" y="437" width="0.0870%" height="15" fill="rgb(228,80,19)" fg:x="59531593177" fg:w="374122357"/><text x="14.0858%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (7,657,973,715 samples, 1.78%)</title><rect x="13.9228%" y="421" width="1.7798%" height="15" fill="rgb(247,229,0)" fg:x="59905715534" fg:w="7657973715"/><text x="14.1728%" y="431.50">c..</text></g><g><title>chlang::board::Position::bitboard (7,748,244,525 samples, 1.80%)</title><rect x="13.9228%" y="437" width="1.8008%" height="15" fill="rgb(237,194,15)" fg:x="59905715534" fg:w="7748244525"/><text x="14.1728%" y="447.50">c..</text></g><g><title>chlang::board::Board::unmake_last (51,153,459 samples, 0.01%)</title><rect x="15.7235%" y="437" width="0.0119%" height="15" fill="rgb(219,203,20)" fg:x="67653960059" fg:w="51153459"/><text x="15.9735%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (26,069,206,919 samples, 6.06%)</title><rect x="15.7354%" y="405" width="6.0588%" height="15" fill="rgb(234,128,8)" fg:x="67705113518" fg:w="26069206919"/><text x="15.9854%" y="415.50">core::nu..</text></g><g><title>chlang::board::Position::bitboard (27,187,561,954 samples, 6.32%)</title><rect x="15.7354%" y="421" width="6.3187%" height="15" fill="rgb(248,202,8)" fg:x="67705113518" fg:w="27187561954"/><text x="15.9854%" y="431.50">chlang::..</text></g><g><title>chlang::board::Board::piece_type (31,772,316,093 samples, 7.38%)</title><rect x="15.7354%" y="437" width="7.3842%" height="15" fill="rgb(206,104,37)" fg:x="67705113518" fg:w="31772316093"/><text x="15.9854%" y="447.50">chlang::bo..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (96,288,864 samples, 0.02%)</title><rect x="23.1197%" y="421" width="0.0224%" height="15" fill="rgb(223,8,27)" fg:x="99477429611" fg:w="96288864"/><text x="23.3697%" y="431.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (194,583,746 samples, 0.05%)</title><rect x="23.1421%" y="421" width="0.0452%" height="15" fill="rgb(216,217,28)" fg:x="99573718475" fg:w="194583746"/><text x="23.3921%" y="431.50"></text></g><g><title>chlang::board::Board::key (1,025,075,198 samples, 0.24%)</title><rect x="23.1197%" y="437" width="0.2382%" height="15" fill="rgb(249,199,1)" fg:x="99477429611" fg:w="1025075198"/><text x="23.3697%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (304,914,736 samples, 0.07%)</title><rect x="23.3579%" y="293" width="0.0709%" height="15" fill="rgb(240,85,17)" fg:x="100502504809" fg:w="304914736"/><text x="23.6079%" y="303.50"></text></g><g><title>__rust_dealloc (3,050,150,369 samples, 0.71%)</title><rect x="23.4288%" y="261" width="0.7089%" height="15" fill="rgb(206,108,45)" fg:x="100807419545" fg:w="3050150369"/><text x="23.6788%" y="271.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,885,656,920 samples, 0.44%)</title><rect x="24.1377%" y="245" width="0.4382%" height="15" fill="rgb(245,210,41)" fg:x="103857569914" fg:w="1885656920"/><text x="24.3877%" y="255.50"></text></g><g><title>__rdl_dealloc (2,373,119,294 samples, 0.55%)</title><rect x="24.1377%" y="261" width="0.5515%" height="15" fill="rgb(206,13,37)" fg:x="103857569914" fg:w="2373119294"/><text x="24.3877%" y="271.50"></text></g><g><title>tcache_put (1,299,899,664 samples, 0.30%)</title><rect x="24.6932%" y="229" width="0.3021%" height="15" fill="rgb(250,61,18)" fg:x="106247740361" fg:w="1299899664"/><text x="24.9432%" y="239.50"></text></g><g><title>_int_free (9,367,101,051 samples, 2.18%)</title><rect x="24.6932%" y="245" width="2.1770%" height="15" fill="rgb(235,172,48)" fg:x="106247740361" fg:w="9367101051"/><text x="24.9432%" y="255.50">_..</text></g><g><title>__GI___libc_free (11,698,093,967 samples, 2.72%)</title><rect x="24.6892%" y="261" width="2.7188%" height="15" fill="rgb(249,201,17)" fg:x="106230689208" fg:w="11698093967"/><text x="24.9392%" y="271.50">__..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (17,522,567,230 samples, 4.07%)</title><rect x="23.3579%" y="405" width="4.0724%" height="15" fill="rgb(219,208,6)" fg:x="100502504809" fg:w="17522567230"/><text x="23.6079%" y="415.50">core..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,522,567,230 samples, 4.07%)</title><rect x="23.3579%" y="389" width="4.0724%" height="15" fill="rgb(248,31,23)" fg:x="100502504809" fg:w="17522567230"/><text x="23.6079%" y="399.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (17,522,567,230 samples, 4.07%)</title><rect x="23.3579%" y="373" width="4.0724%" height="15" fill="rgb(245,15,42)" fg:x="100502504809" fg:w="17522567230"/><text x="23.6079%" y="383.50">core..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,522,567,230 samples, 4.07%)</title><rect x="23.3579%" y="357" width="4.0724%" height="15" fill="rgb(222,217,39)" fg:x="100502504809" fg:w="17522567230"/><text x="23.6079%" y="367.50">&lt;&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (17,522,567,230 samples, 4.07%)</title><rect x="23.3579%" y="341" width="4.0724%" height="15" fill="rgb(210,219,27)" fg:x="100502504809" fg:w="17522567230"/><text x="23.6079%" y="351.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,522,567,230 samples, 4.07%)</title><rect x="23.3579%" y="325" width="4.0724%" height="15" fill="rgb(252,166,36)" fg:x="100502504809" fg:w="17522567230"/><text x="23.6079%" y="335.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,522,567,230 samples, 4.07%)</title><rect x="23.3579%" y="309" width="4.0724%" height="15" fill="rgb(245,132,34)" fg:x="100502504809" fg:w="17522567230"/><text x="23.6079%" y="319.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,217,652,494 samples, 4.00%)</title><rect x="23.4288%" y="293" width="4.0016%" height="15" fill="rgb(236,54,3)" fg:x="100807419545" fg:w="17217652494"/><text x="23.6788%" y="303.50">&lt;all..</text></g><g><title>alloc::alloc::dealloc (17,217,652,494 samples, 4.00%)</title><rect x="23.4288%" y="277" width="4.0016%" height="15" fill="rgb(241,173,43)" fg:x="100807419545" fg:w="17217652494"/><text x="23.6788%" y="287.50">allo..</text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (2,493,480,374 samples, 0.58%)</title><rect x="27.4304%" y="405" width="0.5795%" height="15" fill="rgb(215,190,9)" fg:x="118025072039" fg:w="2493480374"/><text x="27.6804%" y="415.50"></text></g><g><title>chlang::cmove::Move::to (2,901,705,037 samples, 0.67%)</title><rect x="28.0099%" y="405" width="0.6744%" height="15" fill="rgb(242,101,16)" fg:x="120518552413" fg:w="2901705037"/><text x="28.2599%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (43,407,220,493 samples, 10.09%)</title><rect x="28.6843%" y="373" width="10.0883%" height="15" fill="rgb(223,190,21)" fg:x="123420257450" fg:w="43407220493"/><text x="28.9343%" y="383.50">core::num::&lt;imp..</text></g><g><title>chlang::board::Position::bitboard (50,731,192,211 samples, 11.79%)</title><rect x="28.6843%" y="389" width="11.7905%" height="15" fill="rgb(215,228,25)" fg:x="123420257450" fg:w="50731192211"/><text x="28.9343%" y="399.50">chlang::board::Po..</text></g><g><title>chlang::board::Board::piece_type (57,673,017,500 samples, 13.40%)</title><rect x="28.6843%" y="405" width="13.4039%" height="15" fill="rgb(225,36,22)" fg:x="123420257450" fg:w="57673017500"/><text x="28.9343%" y="415.50">chlang::board::Board..</text></g><g><title>chlang::board::Position::valid (539,618,842 samples, 0.13%)</title><rect x="42.0881%" y="389" width="0.1254%" height="15" fill="rgb(251,106,46)" fg:x="181093274950" fg:w="539618842"/><text x="42.3381%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (11,769,307,606 samples, 2.74%)</title><rect x="42.2135%" y="373" width="2.7353%" height="15" fill="rgb(208,90,1)" fg:x="181632893792" fg:w="11769307606"/><text x="42.4635%" y="383.50">co..</text></g><g><title>chlang::board::Position::bitboard (11,950,852,235 samples, 2.78%)</title><rect x="42.2135%" y="389" width="2.7775%" height="15" fill="rgb(243,10,4)" fg:x="181632893792" fg:w="11950852235"/><text x="42.4635%" y="399.50">ch..</text></g><g><title>__rust_alloc (112,337,008 samples, 0.03%)</title><rect x="44.9910%" y="261" width="0.0261%" height="15" fill="rgb(212,137,27)" fg:x="193583746027" fg:w="112337008"/><text x="45.2410%" y="271.50"></text></g><g><title>__rdl_alloc (88,264,792 samples, 0.02%)</title><rect x="45.0171%" y="261" width="0.0205%" height="15" fill="rgb(231,220,49)" fg:x="193696083035" fg:w="88264792"/><text x="45.2671%" y="271.50"></text></g><g><title>tcache_get (337,011,024 samples, 0.08%)</title><rect x="45.0377%" y="245" width="0.0783%" height="15" fill="rgb(237,96,20)" fg:x="193784347827" fg:w="337011024"/><text x="45.2877%" y="255.50"></text></g><g><title>checked_request2size (101,303,909 samples, 0.02%)</title><rect x="45.1160%" y="245" width="0.0235%" height="15" fill="rgb(239,229,30)" fg:x="194121358851" fg:w="101303909"/><text x="45.3660%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,756,268,759 samples, 0.41%)</title><rect x="45.0377%" y="261" width="0.4082%" height="15" fill="rgb(219,65,33)" fg:x="193784347827" fg:w="1756268759"/><text x="45.2877%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,038,114,288 samples, 0.47%)</title><rect x="44.9910%" y="309" width="0.4737%" height="15" fill="rgb(243,134,7)" fg:x="193583746027" fg:w="2038114288"/><text x="45.2410%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,038,114,288 samples, 0.47%)</title><rect x="44.9910%" y="293" width="0.4737%" height="15" fill="rgb(216,177,54)" fg:x="193583746027" fg:w="2038114288"/><text x="45.2410%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2,038,114,288 samples, 0.47%)</title><rect x="44.9910%" y="277" width="0.4737%" height="15" fill="rgb(211,160,20)" fg:x="193583746027" fg:w="2038114288"/><text x="45.2410%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,132,397,134 samples, 0.50%)</title><rect x="44.9910%" y="357" width="0.4956%" height="15" fill="rgb(239,85,39)" fg:x="193583746027" fg:w="2132397134"/><text x="45.2410%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,132,397,134 samples, 0.50%)</title><rect x="44.9910%" y="341" width="0.4956%" height="15" fill="rgb(232,125,22)" fg:x="193583746027" fg:w="2132397134"/><text x="45.2410%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,132,397,134 samples, 0.50%)</title><rect x="44.9910%" y="325" width="0.4956%" height="15" fill="rgb(244,57,34)" fg:x="193583746027" fg:w="2132397134"/><text x="45.2410%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,247,743,169 samples, 0.52%)</title><rect x="44.9910%" y="389" width="0.5224%" height="15" fill="rgb(214,203,32)" fg:x="193583746027" fg:w="2247743169"/><text x="45.2410%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,247,743,169 samples, 0.52%)</title><rect x="44.9910%" y="373" width="0.5224%" height="15" fill="rgb(207,58,43)" fg:x="193583746027" fg:w="2247743169"/><text x="45.2410%" y="383.50"></text></g><g><title>core::ptr::write (153,460,377 samples, 0.04%)</title><rect x="45.5134%" y="373" width="0.0357%" height="15" fill="rgb(215,193,15)" fg:x="195831489196" fg:w="153460377"/><text x="45.7634%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (187,562,683 samples, 0.04%)</title><rect x="45.5491%" y="373" width="0.0436%" height="15" fill="rgb(232,15,44)" fg:x="195984949573" fg:w="187562683"/><text x="45.7991%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (187,562,683 samples, 0.04%)</title><rect x="45.5491%" y="357" width="0.0436%" height="15" fill="rgb(212,3,48)" fg:x="195984949573" fg:w="187562683"/><text x="45.7991%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (187,562,683 samples, 0.04%)</title><rect x="45.5491%" y="341" width="0.0436%" height="15" fill="rgb(218,128,7)" fg:x="195984949573" fg:w="187562683"/><text x="45.7991%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (187,562,683 samples, 0.04%)</title><rect x="45.5491%" y="325" width="0.0436%" height="15" fill="rgb(226,216,39)" fg:x="195984949573" fg:w="187562683"/><text x="45.7991%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,253,761,250 samples, 0.29%)</title><rect x="45.5134%" y="389" width="0.2914%" height="15" fill="rgb(243,47,51)" fg:x="195831489196" fg:w="1253761250"/><text x="45.7634%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (393,179,528 samples, 0.09%)</title><rect x="45.8053%" y="373" width="0.0914%" height="15" fill="rgb(241,183,40)" fg:x="197087256464" fg:w="393179528"/><text x="46.0553%" y="383.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (905,717,127 samples, 0.21%)</title><rect x="45.8053%" y="389" width="0.2105%" height="15" fill="rgb(231,217,32)" fg:x="197087256464" fg:w="905717127"/><text x="46.0553%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (194,583,746 samples, 0.05%)</title><rect x="46.0158%" y="373" width="0.0452%" height="15" fill="rgb(229,61,38)" fg:x="197992973591" fg:w="194583746"/><text x="46.2658%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (260,782,340 samples, 0.06%)</title><rect x="46.0158%" y="389" width="0.0606%" height="15" fill="rgb(225,210,5)" fg:x="197992973591" fg:w="260782340"/><text x="46.2658%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (20,273,820,917 samples, 4.71%)</title><rect x="42.0881%" y="405" width="4.7119%" height="15" fill="rgb(231,79,45)" fg:x="181093274950" fg:w="20273820917"/><text x="42.3381%" y="415.50">chlan..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (51,153,459 samples, 0.01%)</title><rect x="46.8000%" y="309" width="0.0119%" height="15" fill="rgb(224,100,7)" fg:x="201367095867" fg:w="51153459"/><text x="47.0500%" y="319.50"></text></g><g><title>__rust_dealloc (445,335,996 samples, 0.10%)</title><rect x="46.8119%" y="277" width="0.1035%" height="15" fill="rgb(241,198,18)" fg:x="201418249326" fg:w="445335996"/><text x="47.0619%" y="287.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (474,423,257 samples, 0.11%)</title><rect x="46.9154%" y="261" width="0.1103%" height="15" fill="rgb(252,97,53)" fg:x="201863585322" fg:w="474423257"/><text x="47.1654%" y="271.50"></text></g><g><title>__rdl_dealloc (572,718,139 samples, 0.13%)</title><rect x="46.9154%" y="277" width="0.1331%" height="15" fill="rgb(220,88,7)" fg:x="201863585322" fg:w="572718139"/><text x="47.1654%" y="287.50"></text></g><g><title>tcache_put (329,989,961 samples, 0.08%)</title><rect x="47.0485%" y="245" width="0.0767%" height="15" fill="rgb(213,176,14)" fg:x="202436303461" fg:w="329989961"/><text x="47.2985%" y="255.50"></text></g><g><title>_int_free (1,596,790,328 samples, 0.37%)</title><rect x="47.0485%" y="261" width="0.3711%" height="15" fill="rgb(246,73,7)" fg:x="202436303461" fg:w="1596790328"/><text x="47.2985%" y="271.50"></text></g><g><title>__GI___libc_free (2,135,406,161 samples, 0.50%)</title><rect x="47.0485%" y="277" width="0.4963%" height="15" fill="rgb(245,64,36)" fg:x="202436303461" fg:w="2135406161"/><text x="47.2985%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,206,619,773 samples, 0.75%)</title><rect x="46.8000%" y="325" width="0.7453%" height="15" fill="rgb(245,80,10)" fg:x="201367095867" fg:w="3206619773"/><text x="47.0500%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,155,466,314 samples, 0.73%)</title><rect x="46.8119%" y="309" width="0.7334%" height="15" fill="rgb(232,107,50)" fg:x="201418249326" fg:w="3155466314"/><text x="47.0619%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3,155,466,314 samples, 0.73%)</title><rect x="46.8119%" y="293" width="0.7334%" height="15" fill="rgb(253,3,0)" fg:x="201418249326" fg:w="3155466314"/><text x="47.0619%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (3,334,001,916 samples, 0.77%)</title><rect x="46.8000%" y="389" width="0.7749%" height="15" fill="rgb(212,99,53)" fg:x="201367095867" fg:w="3334001916"/><text x="47.0500%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (3,334,001,916 samples, 0.77%)</title><rect x="46.8000%" y="373" width="0.7749%" height="15" fill="rgb(249,111,54)" fg:x="201367095867" fg:w="3334001916"/><text x="47.0500%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (3,334,001,916 samples, 0.77%)</title><rect x="46.8000%" y="357" width="0.7749%" height="15" fill="rgb(249,55,30)" fg:x="201367095867" fg:w="3334001916"/><text x="47.0500%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,334,001,916 samples, 0.77%)</title><rect x="46.8000%" y="341" width="0.7749%" height="15" fill="rgb(237,47,42)" fg:x="201367095867" fg:w="3334001916"/><text x="47.0500%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (202,607,818 samples, 0.05%)</title><rect x="47.5748%" y="389" width="0.0471%" height="15" fill="rgb(211,20,18)" fg:x="204701097783" fg:w="202607818"/><text x="47.8248%" y="399.50"></text></g><g><title>chlang::cmove::Move::to (50,150,450 samples, 0.01%)</title><rect x="47.6219%" y="389" width="0.0117%" height="15" fill="rgb(231,203,46)" fg:x="204903705601" fg:w="50150450"/><text x="47.8719%" y="399.50"></text></g><g><title>chlang::cmove::Move::new (74,222,666 samples, 0.02%)</title><rect x="47.6336%" y="389" width="0.0173%" height="15" fill="rgb(237,142,3)" fg:x="204953856051" fg:w="74222666"/><text x="47.8836%" y="399.50"></text></g><g><title>chlang::board::Position::valid (272,818,448 samples, 0.06%)</title><rect x="47.6508%" y="389" width="0.0634%" height="15" fill="rgb(241,107,1)" fg:x="205028078717" fg:w="272818448"/><text x="47.9008%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (4,428,284,735 samples, 1.03%)</title><rect x="47.7142%" y="373" width="1.0292%" height="15" fill="rgb(229,83,13)" fg:x="205300897165" fg:w="4428284735"/><text x="47.9642%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (4,569,709,004 samples, 1.06%)</title><rect x="47.7142%" y="389" width="1.0621%" height="15" fill="rgb(241,91,40)" fg:x="205300897165" fg:w="4569709004"/><text x="47.9642%" y="399.50"></text></g><g><title>__rust_alloc (164,493,476 samples, 0.04%)</title><rect x="48.7763%" y="261" width="0.0382%" height="15" fill="rgb(225,3,45)" fg:x="209870606169" fg:w="164493476"/><text x="49.0263%" y="271.50"></text></g><g><title>__rdl_alloc (87,261,783 samples, 0.02%)</title><rect x="48.8145%" y="261" width="0.0203%" height="15" fill="rgb(244,223,14)" fg:x="210035099645" fg:w="87261783"/><text x="49.0645%" y="271.50"></text></g><g><title>tcache_get (464,393,167 samples, 0.11%)</title><rect x="48.8348%" y="245" width="0.1079%" height="15" fill="rgb(224,124,37)" fg:x="210122361428" fg:w="464393167"/><text x="49.0848%" y="255.50"></text></g><g><title>checked_request2size (52,156,468 samples, 0.01%)</title><rect x="48.9427%" y="245" width="0.0121%" height="15" fill="rgb(251,171,30)" fg:x="210586754595" fg:w="52156468"/><text x="49.1927%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,500,501,464 samples, 0.35%)</title><rect x="48.8348%" y="261" width="0.3487%" height="15" fill="rgb(236,46,54)" fg:x="210122361428" fg:w="1500501464"/><text x="49.0848%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,762,286,813 samples, 0.41%)</title><rect x="48.7763%" y="309" width="0.4096%" height="15" fill="rgb(245,213,5)" fg:x="209870606169" fg:w="1762286813"/><text x="49.0263%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,762,286,813 samples, 0.41%)</title><rect x="48.7763%" y="293" width="0.4096%" height="15" fill="rgb(230,144,27)" fg:x="209870606169" fg:w="1762286813"/><text x="49.0263%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1,762,286,813 samples, 0.41%)</title><rect x="48.7763%" y="277" width="0.4096%" height="15" fill="rgb(220,86,6)" fg:x="209870606169" fg:w="1762286813"/><text x="49.0263%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,860,581,695 samples, 0.43%)</title><rect x="48.7763%" y="357" width="0.4324%" height="15" fill="rgb(240,20,13)" fg:x="209870606169" fg:w="1860581695"/><text x="49.0263%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,860,581,695 samples, 0.43%)</title><rect x="48.7763%" y="341" width="0.4324%" height="15" fill="rgb(217,89,34)" fg:x="209870606169" fg:w="1860581695"/><text x="49.0263%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,860,581,695 samples, 0.43%)</title><rect x="48.7763%" y="325" width="0.4324%" height="15" fill="rgb(229,13,5)" fg:x="209870606169" fg:w="1860581695"/><text x="49.0263%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,910,732,145 samples, 0.44%)</title><rect x="48.7763%" y="389" width="0.4441%" height="15" fill="rgb(244,67,35)" fg:x="209870606169" fg:w="1910732145"/><text x="49.0263%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,910,732,145 samples, 0.44%)</title><rect x="48.7763%" y="373" width="0.4441%" height="15" fill="rgb(221,40,2)" fg:x="209870606169" fg:w="1910732145"/><text x="49.0263%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (129,388,161 samples, 0.03%)</title><rect x="49.2204%" y="389" width="0.0301%" height="15" fill="rgb(237,157,21)" fg:x="211781338314" fg:w="129388161"/><text x="49.4704%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46,138,414 samples, 0.01%)</title><rect x="49.2504%" y="389" width="0.0107%" height="15" fill="rgb(222,94,11)" fg:x="211910726475" fg:w="46138414"/><text x="49.5004%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (439,317,942 samples, 0.10%)</title><rect x="49.2612%" y="357" width="0.1021%" height="15" fill="rgb(249,113,6)" fg:x="211956864889" fg:w="439317942"/><text x="49.5112%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (439,317,942 samples, 0.10%)</title><rect x="49.2612%" y="341" width="0.1021%" height="15" fill="rgb(238,137,36)" fg:x="211956864889" fg:w="439317942"/><text x="49.5112%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (439,317,942 samples, 0.10%)</title><rect x="49.2612%" y="325" width="0.1021%" height="15" fill="rgb(210,102,26)" fg:x="211956864889" fg:w="439317942"/><text x="49.5112%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (439,317,942 samples, 0.10%)</title><rect x="49.2612%" y="309" width="0.1021%" height="15" fill="rgb(218,30,30)" fg:x="211956864889" fg:w="439317942"/><text x="49.5112%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (213,640,917 samples, 0.05%)</title><rect x="49.3633%" y="245" width="0.0497%" height="15" fill="rgb(214,67,26)" fg:x="212396182831" fg:w="213640917"/><text x="49.6133%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (213,640,917 samples, 0.05%)</title><rect x="49.3633%" y="229" width="0.0497%" height="15" fill="rgb(251,9,53)" fg:x="212396182831" fg:w="213640917"/><text x="49.6133%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (213,640,917 samples, 0.05%)</title><rect x="49.3633%" y="213" width="0.0497%" height="15" fill="rgb(228,204,25)" fg:x="212396182831" fg:w="213640917"/><text x="49.6133%" y="223.50"></text></g><g><title>alloc::raw_vec::layout_array (406,218,645 samples, 0.09%)</title><rect x="49.3633%" y="277" width="0.0944%" height="15" fill="rgb(207,153,8)" fg:x="212396182831" fg:w="406218645"/><text x="49.6133%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::repeat (406,218,645 samples, 0.09%)</title><rect x="49.3633%" y="261" width="0.0944%" height="15" fill="rgb(242,9,16)" fg:x="212396182831" fg:w="406218645"/><text x="49.6133%" y="271.50"></text></g><g><title>__rust_alloc (95,285,855 samples, 0.02%)</title><rect x="49.4577%" y="229" width="0.0221%" height="15" fill="rgb(217,211,10)" fg:x="212802401476" fg:w="95285855"/><text x="49.7077%" y="239.50"></text></g><g><title>tcache_get (128,385,152 samples, 0.03%)</title><rect x="49.4863%" y="213" width="0.0298%" height="15" fill="rgb(219,228,52)" fg:x="212925771583" fg:w="128385152"/><text x="49.7363%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (681,043,111 samples, 0.16%)</title><rect x="49.4577%" y="277" width="0.1583%" height="15" fill="rgb(231,92,29)" fg:x="212802401476" fg:w="681043111"/><text x="49.7077%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (681,043,111 samples, 0.16%)</title><rect x="49.4577%" y="261" width="0.1583%" height="15" fill="rgb(232,8,23)" fg:x="212802401476" fg:w="681043111"/><text x="49.7077%" y="271.50"></text></g><g><title>alloc::alloc::alloc (681,043,111 samples, 0.16%)</title><rect x="49.4577%" y="245" width="0.1583%" height="15" fill="rgb(216,211,34)" fg:x="212802401476" fg:w="681043111"/><text x="49.7077%" y="255.50"></text></g><g><title>__GI___libc_malloc (557,673,004 samples, 0.13%)</title><rect x="49.4863%" y="229" width="0.1296%" height="15" fill="rgb(236,151,0)" fg:x="212925771583" fg:w="557673004"/><text x="49.7363%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,175,526,548 samples, 0.27%)</title><rect x="49.3633%" y="325" width="0.2732%" height="15" fill="rgb(209,168,3)" fg:x="212396182831" fg:w="1175526548"/><text x="49.6133%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,175,526,548 samples, 0.27%)</title><rect x="49.3633%" y="309" width="0.2732%" height="15" fill="rgb(208,129,28)" fg:x="212396182831" fg:w="1175526548"/><text x="49.6133%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,175,526,548 samples, 0.27%)</title><rect x="49.3633%" y="293" width="0.2732%" height="15" fill="rgb(229,78,22)" fg:x="212396182831" fg:w="1175526548"/><text x="49.6133%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,222,667,971 samples, 0.28%)</title><rect x="49.3633%" y="357" width="0.2842%" height="15" fill="rgb(228,187,13)" fg:x="212396182831" fg:w="1222667971"/><text x="49.6133%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,222,667,971 samples, 0.28%)</title><rect x="49.3633%" y="341" width="0.2842%" height="15" fill="rgb(240,119,24)" fg:x="212396182831" fg:w="1222667971"/><text x="49.6133%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (88,264,792 samples, 0.02%)</title><rect x="49.6474%" y="293" width="0.0205%" height="15" fill="rgb(209,194,42)" fg:x="213618850802" fg:w="88264792"/><text x="49.8974%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (88,264,792 samples, 0.02%)</title><rect x="49.6474%" y="277" width="0.0205%" height="15" fill="rgb(247,200,46)" fg:x="213618850802" fg:w="88264792"/><text x="49.8974%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (88,264,792 samples, 0.02%)</title><rect x="49.6474%" y="261" width="0.0205%" height="15" fill="rgb(218,76,16)" fg:x="213618850802" fg:w="88264792"/><text x="49.8974%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (88,264,792 samples, 0.02%)</title><rect x="49.6474%" y="245" width="0.0205%" height="15" fill="rgb(225,21,48)" fg:x="213618850802" fg:w="88264792"/><text x="49.8974%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (91,273,819 samples, 0.02%)</title><rect x="49.6679%" y="229" width="0.0212%" height="15" fill="rgb(239,223,50)" fg:x="213707115594" fg:w="91273819"/><text x="49.9179%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (151,454,359 samples, 0.04%)</title><rect x="49.6679%" y="245" width="0.0352%" height="15" fill="rgb(244,45,21)" fg:x="213707115594" fg:w="151454359"/><text x="49.9179%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (60,180,540 samples, 0.01%)</title><rect x="49.6891%" y="229" width="0.0140%" height="15" fill="rgb(232,33,43)" fg:x="213798389413" fg:w="60180540"/><text x="49.9391%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (243,731,187 samples, 0.06%)</title><rect x="49.6474%" y="357" width="0.0566%" height="15" fill="rgb(209,8,3)" fg:x="213618850802" fg:w="243731187"/><text x="49.8974%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (243,731,187 samples, 0.06%)</title><rect x="49.6474%" y="341" width="0.0566%" height="15" fill="rgb(214,25,53)" fg:x="213618850802" fg:w="243731187"/><text x="49.8974%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (243,731,187 samples, 0.06%)</title><rect x="49.6474%" y="325" width="0.0566%" height="15" fill="rgb(254,186,54)" fg:x="213618850802" fg:w="243731187"/><text x="49.8974%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (243,731,187 samples, 0.06%)</title><rect x="49.6474%" y="309" width="0.0566%" height="15" fill="rgb(208,174,49)" fg:x="213618850802" fg:w="243731187"/><text x="49.8974%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (155,466,395 samples, 0.04%)</title><rect x="49.6679%" y="293" width="0.0361%" height="15" fill="rgb(233,191,51)" fg:x="213707115594" fg:w="155466395"/><text x="49.9179%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (155,466,395 samples, 0.04%)</title><rect x="49.6679%" y="277" width="0.0361%" height="15" fill="rgb(222,134,10)" fg:x="213707115594" fg:w="155466395"/><text x="49.9179%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (155,466,395 samples, 0.04%)</title><rect x="49.6679%" y="261" width="0.0361%" height="15" fill="rgb(230,226,20)" fg:x="213707115594" fg:w="155466395"/><text x="49.9179%" y="271.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (165,496,485 samples, 0.04%)</title><rect x="49.7041%" y="341" width="0.0385%" height="15" fill="rgb(251,111,25)" fg:x="213862581989" fg:w="165496485"/><text x="49.9541%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (182,547,638 samples, 0.04%)</title><rect x="49.7041%" y="357" width="0.0424%" height="15" fill="rgb(224,40,46)" fg:x="213862581989" fg:w="182547638"/><text x="49.9541%" y="367.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (3,532,597,698 samples, 0.82%)</title><rect x="49.2612%" y="373" width="0.8210%" height="15" fill="rgb(236,108,47)" fg:x="211956864889" fg:w="3532597698"/><text x="49.5112%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (3,579,739,121 samples, 0.83%)</title><rect x="49.2612%" y="389" width="0.8320%" height="15" fill="rgb(234,93,0)" fg:x="211956864889" fg:w="3579739121"/><text x="49.5112%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (53,159,477 samples, 0.01%)</title><rect x="50.0931%" y="373" width="0.0124%" height="15" fill="rgb(224,213,32)" fg:x="215536604010" fg:w="53159477"/><text x="50.3431%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (56,168,504 samples, 0.01%)</title><rect x="50.0931%" y="389" width="0.0131%" height="15" fill="rgb(251,11,48)" fg:x="215536604010" fg:w="56168504"/><text x="50.3431%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (16,433,299,456 samples, 3.82%)</title><rect x="46.8000%" y="405" width="3.8193%" height="15" fill="rgb(236,173,5)" fg:x="201367095867" fg:w="16433299456"/><text x="47.0500%" y="415.50">chla..</text></g><g><title>chlang::cmove::Move::new (65,195,585 samples, 0.02%)</title><rect x="50.6193%" y="389" width="0.0152%" height="15" fill="rgb(230,95,12)" fg:x="217800395323" fg:w="65195585"/><text x="50.8693%" y="399.50"></text></g><g><title>chlang::board::Position::valid (649,949,832 samples, 0.15%)</title><rect x="50.6344%" y="389" width="0.1511%" height="15" fill="rgb(232,209,1)" fg:x="217865590908" fg:w="649949832"/><text x="50.8844%" y="399.50"></text></g><g><title>__rust_alloc (112,337,008 samples, 0.03%)</title><rect x="50.7855%" y="261" width="0.0261%" height="15" fill="rgb(232,6,1)" fg:x="218515540740" fg:w="112337008"/><text x="51.0355%" y="271.50"></text></g><g><title>__rdl_alloc (95,285,855 samples, 0.02%)</title><rect x="50.8116%" y="261" width="0.0221%" height="15" fill="rgb(210,224,50)" fg:x="218627877748" fg:w="95285855"/><text x="51.0616%" y="271.50"></text></g><g><title>tcache_get (466,399,185 samples, 0.11%)</title><rect x="50.8337%" y="245" width="0.1084%" height="15" fill="rgb(228,127,35)" fg:x="218723163603" fg:w="466399185"/><text x="51.0837%" y="255.50"></text></g><g><title>checked_request2size (90,270,810 samples, 0.02%)</title><rect x="50.9421%" y="245" width="0.0210%" height="15" fill="rgb(245,102,45)" fg:x="219189562788" fg:w="90270810"/><text x="51.1921%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,627,883,607 samples, 0.38%)</title><rect x="50.8337%" y="261" width="0.3783%" height="15" fill="rgb(214,1,49)" fg:x="218723163603" fg:w="1627883607"/><text x="51.0837%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,929,789,316 samples, 0.45%)</title><rect x="50.7855%" y="309" width="0.4485%" height="15" fill="rgb(226,163,40)" fg:x="218515540740" fg:w="1929789316"/><text x="51.0355%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,929,789,316 samples, 0.45%)</title><rect x="50.7855%" y="293" width="0.4485%" height="15" fill="rgb(239,212,28)" fg:x="218515540740" fg:w="1929789316"/><text x="51.0355%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1,929,789,316 samples, 0.45%)</title><rect x="50.7855%" y="277" width="0.4485%" height="15" fill="rgb(220,20,13)" fg:x="218515540740" fg:w="1929789316"/><text x="51.0355%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,054,162,432 samples, 0.48%)</title><rect x="50.7855%" y="357" width="0.4774%" height="15" fill="rgb(210,164,35)" fg:x="218515540740" fg:w="2054162432"/><text x="51.0355%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,054,162,432 samples, 0.48%)</title><rect x="50.7855%" y="341" width="0.4774%" height="15" fill="rgb(248,109,41)" fg:x="218515540740" fg:w="2054162432"/><text x="51.0355%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,054,162,432 samples, 0.48%)</title><rect x="50.7855%" y="325" width="0.4774%" height="15" fill="rgb(238,23,50)" fg:x="218515540740" fg:w="2054162432"/><text x="51.0355%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,059,177,477 samples, 0.48%)</title><rect x="50.7855%" y="389" width="0.4786%" height="15" fill="rgb(211,48,49)" fg:x="218515540740" fg:w="2059177477"/><text x="51.0355%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,059,177,477 samples, 0.48%)</title><rect x="50.7855%" y="373" width="0.4786%" height="15" fill="rgb(223,36,21)" fg:x="218515540740" fg:w="2059177477"/><text x="51.0355%" y="383.50"></text></g><g><title>core::ptr::write (103,309,927 samples, 0.02%)</title><rect x="51.2640%" y="373" width="0.0240%" height="15" fill="rgb(207,123,46)" fg:x="220574718217" fg:w="103309927"/><text x="51.5140%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (664,994,967 samples, 0.15%)</title><rect x="51.2640%" y="389" width="0.1546%" height="15" fill="rgb(240,218,32)" fg:x="220574718217" fg:w="664994967"/><text x="51.5140%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (191,574,719 samples, 0.04%)</title><rect x="51.4186%" y="389" width="0.0445%" height="15" fill="rgb(252,5,43)" fg:x="221239713184" fg:w="191574719"/><text x="51.6686%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (191,574,719 samples, 0.04%)</title><rect x="51.4186%" y="373" width="0.0445%" height="15" fill="rgb(252,84,19)" fg:x="221239713184" fg:w="191574719"/><text x="51.6686%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (5,172,517,413 samples, 1.20%)</title><rect x="50.6193%" y="405" width="1.2022%" height="15" fill="rgb(243,152,39)" fg:x="217800395323" fg:w="5172517413"/><text x="50.8693%" y="415.50"></text></g><g><title>chlang::cmove::Move::new (214,643,926 samples, 0.05%)</title><rect x="51.8214%" y="389" width="0.0499%" height="15" fill="rgb(234,160,15)" fg:x="222972912736" fg:w="214643926"/><text x="52.0714%" y="399.50"></text></g><g><title>chlang::board::Position::valid (595,787,346 samples, 0.14%)</title><rect x="51.8713%" y="389" width="0.1385%" height="15" fill="rgb(237,34,20)" fg:x="223187556662" fg:w="595787346"/><text x="52.1213%" y="399.50"></text></g><g><title>__rust_alloc (263,791,367 samples, 0.06%)</title><rect x="52.0098%" y="261" width="0.0613%" height="15" fill="rgb(229,97,13)" fg:x="223783344008" fg:w="263791367"/><text x="52.2598%" y="271.50"></text></g><g><title>__rdl_alloc (93,279,837 samples, 0.02%)</title><rect x="52.0711%" y="261" width="0.0217%" height="15" fill="rgb(234,71,50)" fg:x="224047135375" fg:w="93279837"/><text x="52.3211%" y="271.50"></text></g><g><title>tcache_get (529,588,752 samples, 0.12%)</title><rect x="52.0928%" y="245" width="0.1231%" height="15" fill="rgb(253,155,4)" fg:x="224140415212" fg:w="529588752"/><text x="52.3428%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,741,223,624 samples, 0.40%)</title><rect x="52.0928%" y="261" width="0.4047%" height="15" fill="rgb(222,185,37)" fg:x="224140415212" fg:w="1741223624"/><text x="52.3428%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,180,541,566 samples, 0.51%)</title><rect x="52.0098%" y="309" width="0.5068%" height="15" fill="rgb(251,177,13)" fg:x="223783344008" fg:w="2180541566"/><text x="52.2598%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,180,541,566 samples, 0.51%)</title><rect x="52.0098%" y="293" width="0.5068%" height="15" fill="rgb(250,179,40)" fg:x="223783344008" fg:w="2180541566"/><text x="52.2598%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2,180,541,566 samples, 0.51%)</title><rect x="52.0098%" y="277" width="0.5068%" height="15" fill="rgb(242,44,2)" fg:x="223783344008" fg:w="2180541566"/><text x="52.2598%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,327,983,889 samples, 0.54%)</title><rect x="52.0098%" y="357" width="0.5410%" height="15" fill="rgb(216,177,13)" fg:x="223783344008" fg:w="2327983889"/><text x="52.2598%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,327,983,889 samples, 0.54%)</title><rect x="52.0098%" y="341" width="0.5410%" height="15" fill="rgb(216,106,43)" fg:x="223783344008" fg:w="2327983889"/><text x="52.2598%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,327,983,889 samples, 0.54%)</title><rect x="52.0098%" y="325" width="0.5410%" height="15" fill="rgb(216,183,2)" fg:x="223783344008" fg:w="2327983889"/><text x="52.2598%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,431,293,816 samples, 0.57%)</title><rect x="52.0098%" y="389" width="0.5651%" height="15" fill="rgb(249,75,3)" fg:x="223783344008" fg:w="2431293816"/><text x="52.2598%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,431,293,816 samples, 0.57%)</title><rect x="52.0098%" y="373" width="0.5651%" height="15" fill="rgb(219,67,39)" fg:x="223783344008" fg:w="2431293816"/><text x="52.2598%" y="383.50"></text></g><g><title>core::ptr::write (177,532,593 samples, 0.04%)</title><rect x="52.5748%" y="373" width="0.0413%" height="15" fill="rgb(253,228,2)" fg:x="226214637824" fg:w="177532593"/><text x="52.8248%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (90,270,810 samples, 0.02%)</title><rect x="52.6161%" y="373" width="0.0210%" height="15" fill="rgb(235,138,27)" fg:x="226392170417" fg:w="90270810"/><text x="52.8661%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (90,270,810 samples, 0.02%)</title><rect x="52.6161%" y="357" width="0.0210%" height="15" fill="rgb(236,97,51)" fg:x="226392170417" fg:w="90270810"/><text x="52.8661%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (90,270,810 samples, 0.02%)</title><rect x="52.6161%" y="341" width="0.0210%" height="15" fill="rgb(240,80,30)" fg:x="226392170417" fg:w="90270810"/><text x="52.8661%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (90,270,810 samples, 0.02%)</title><rect x="52.6161%" y="325" width="0.0210%" height="15" fill="rgb(230,178,19)" fg:x="226392170417" fg:w="90270810"/><text x="52.8661%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,475,426,239 samples, 0.34%)</title><rect x="52.5748%" y="389" width="0.3429%" height="15" fill="rgb(210,190,27)" fg:x="226214637824" fg:w="1475426239"/><text x="52.8248%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (7,336,007,826 samples, 1.70%)</title><rect x="51.8214%" y="405" width="1.7050%" height="15" fill="rgb(222,107,31)" fg:x="222972912736" fg:w="7336007826"/><text x="52.0714%" y="415.50"></text></g><g><title>chlang::board::Position::valid (399,197,582 samples, 0.09%)</title><rect x="53.5264%" y="389" width="0.0928%" height="15" fill="rgb(216,127,34)" fg:x="230308920562" fg:w="399197582"/><text x="53.7764%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (6,346,037,943 samples, 1.47%)</title><rect x="53.6192%" y="373" width="1.4749%" height="15" fill="rgb(234,116,52)" fg:x="230708118144" fg:w="6346037943"/><text x="53.8692%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (6,470,411,059 samples, 1.50%)</title><rect x="53.6192%" y="389" width="1.5038%" height="15" fill="rgb(222,124,15)" fg:x="230708118144" fg:w="6470411059"/><text x="53.8692%" y="399.50"></text></g><g><title>__rust_alloc (153,460,377 samples, 0.04%)</title><rect x="55.1230%" y="261" width="0.0357%" height="15" fill="rgb(231,179,28)" fg:x="237178529203" fg:w="153460377"/><text x="55.3730%" y="271.50"></text></g><g><title>__rdl_alloc (84,252,756 samples, 0.02%)</title><rect x="55.1586%" y="261" width="0.0196%" height="15" fill="rgb(226,93,45)" fg:x="237331989580" fg:w="84252756"/><text x="55.4086%" y="271.50"></text></g><g><title>tcache_get (427,281,834 samples, 0.10%)</title><rect x="55.1782%" y="245" width="0.0993%" height="15" fill="rgb(215,8,51)" fg:x="237416242336" fg:w="427281834"/><text x="55.4282%" y="255.50"></text></g><g><title>checked_request2size (105,315,945 samples, 0.02%)</title><rect x="55.2775%" y="245" width="0.0245%" height="15" fill="rgb(223,106,5)" fg:x="237843524170" fg:w="105315945"/><text x="55.5275%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,934,804,361 samples, 0.45%)</title><rect x="55.1782%" y="261" width="0.4497%" height="15" fill="rgb(250,191,5)" fg:x="237416242336" fg:w="1934804361"/><text x="55.4282%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,184,553,602 samples, 0.51%)</title><rect x="55.1230%" y="309" width="0.5077%" height="15" fill="rgb(242,132,44)" fg:x="237178529203" fg:w="2184553602"/><text x="55.3730%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,184,553,602 samples, 0.51%)</title><rect x="55.1230%" y="293" width="0.5077%" height="15" fill="rgb(251,152,29)" fg:x="237178529203" fg:w="2184553602"/><text x="55.3730%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2,184,553,602 samples, 0.51%)</title><rect x="55.1230%" y="277" width="0.5077%" height="15" fill="rgb(218,179,5)" fg:x="237178529203" fg:w="2184553602"/><text x="55.3730%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,497,492,410 samples, 0.58%)</title><rect x="55.1230%" y="357" width="0.5804%" height="15" fill="rgb(227,67,19)" fg:x="237178529203" fg:w="2497492410"/><text x="55.3730%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,497,492,410 samples, 0.58%)</title><rect x="55.1230%" y="341" width="0.5804%" height="15" fill="rgb(233,119,31)" fg:x="237178529203" fg:w="2497492410"/><text x="55.3730%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,497,492,410 samples, 0.58%)</title><rect x="55.1230%" y="325" width="0.5804%" height="15" fill="rgb(241,120,22)" fg:x="237178529203" fg:w="2497492410"/><text x="55.3730%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,590,772,247 samples, 0.60%)</title><rect x="55.1230%" y="389" width="0.6021%" height="15" fill="rgb(224,102,30)" fg:x="237178529203" fg:w="2590772247"/><text x="55.3730%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,590,772,247 samples, 0.60%)</title><rect x="55.1230%" y="373" width="0.6021%" height="15" fill="rgb(210,164,37)" fg:x="237178529203" fg:w="2590772247"/><text x="55.3730%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (160,481,440 samples, 0.04%)</title><rect x="55.7321%" y="373" width="0.0373%" height="15" fill="rgb(226,191,16)" fg:x="239799391720" fg:w="160481440"/><text x="55.9821%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (160,481,440 samples, 0.04%)</title><rect x="55.7321%" y="357" width="0.0373%" height="15" fill="rgb(214,40,45)" fg:x="239799391720" fg:w="160481440"/><text x="55.9821%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (160,481,440 samples, 0.04%)</title><rect x="55.7321%" y="341" width="0.0373%" height="15" fill="rgb(244,29,26)" fg:x="239799391720" fg:w="160481440"/><text x="55.9821%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (160,481,440 samples, 0.04%)</title><rect x="55.7321%" y="325" width="0.0373%" height="15" fill="rgb(216,16,5)" fg:x="239799391720" fg:w="160481440"/><text x="55.9821%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (768,304,894 samples, 0.18%)</title><rect x="55.7251%" y="389" width="0.1786%" height="15" fill="rgb(249,76,35)" fg:x="239769301450" fg:w="768304894"/><text x="55.9751%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (344,032,087 samples, 0.08%)</title><rect x="55.9062%" y="373" width="0.0800%" height="15" fill="rgb(207,11,44)" fg:x="240548639443" fg:w="344032087"/><text x="56.1562%" y="383.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (552,657,959 samples, 0.13%)</title><rect x="55.9062%" y="389" width="0.1284%" height="15" fill="rgb(228,190,49)" fg:x="240548639443" fg:w="552657959"/><text x="56.1562%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (110,330,990 samples, 0.03%)</title><rect x="56.0346%" y="373" width="0.0256%" height="15" fill="rgb(214,173,12)" fg:x="241101297402" fg:w="110330990"/><text x="56.2846%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (122,367,098 samples, 0.03%)</title><rect x="56.0346%" y="389" width="0.0284%" height="15" fill="rgb(218,26,35)" fg:x="241101297402" fg:w="122367098"/><text x="56.2846%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (13,056,168,153 samples, 3.03%)</title><rect x="53.5264%" y="405" width="3.0344%" height="15" fill="rgb(220,200,19)" fg:x="230308920562" fg:w="13056168153"/><text x="53.7764%" y="415.50">chl..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (463,390,158 samples, 0.11%)</title><rect x="56.5694%" y="389" width="0.1077%" height="15" fill="rgb(239,95,49)" fg:x="243402200048" fg:w="463390158"/><text x="56.8194%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (717,151,435 samples, 0.17%)</title><rect x="56.5608%" y="405" width="0.1667%" height="15" fill="rgb(235,85,53)" fg:x="243365088715" fg:w="717151435"/><text x="56.8108%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,600,802,364 samples, 0.37%)</title><rect x="56.7275%" y="405" width="0.3720%" height="15" fill="rgb(233,133,31)" fg:x="244082240150" fg:w="1600802364"/><text x="56.9775%" y="415.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,600,802,364 samples, 0.37%)</title><rect x="56.7275%" y="389" width="0.3720%" height="15" fill="rgb(218,25,20)" fg:x="244082240150" fg:w="1600802364"/><text x="56.9775%" y="399.50"></text></g><g><title>chlang::board::Board::attacked_by_color (148,434,298,901 samples, 34.50%)</title><rect x="23.3579%" y="421" width="34.4978%" height="15" fill="rgb(252,210,38)" fg:x="100502504809" fg:w="148434298901"/><text x="23.6079%" y="431.50">chlang::board::Board::attacked_by_color</text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::ilog2 (61,183,549 samples, 0.01%)</title><rect x="57.8557%" y="373" width="0.0142%" height="15" fill="rgb(242,134,21)" fg:x="248936803710" fg:w="61183549"/><text x="58.1057%" y="383.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::leading_zeros (61,183,549 samples, 0.01%)</title><rect x="57.8557%" y="357" width="0.0142%" height="15" fill="rgb(213,28,48)" fg:x="248936803710" fg:w="61183549"/><text x="58.1057%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::ilog2 (82,246,738 samples, 0.02%)</title><rect x="57.8557%" y="405" width="0.0191%" height="15" fill="rgb(250,196,2)" fg:x="248936803710" fg:w="82246738"/><text x="58.1057%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_ilog2 (82,246,738 samples, 0.02%)</title><rect x="57.8557%" y="389" width="0.0191%" height="15" fill="rgb(227,5,17)" fg:x="248936803710" fg:w="82246738"/><text x="58.1057%" y="399.50"></text></g><g><title>&lt;chlang::board::Position as core::convert::From&lt;u64&gt;&gt;::from (425,275,816 samples, 0.10%)</title><rect x="57.8557%" y="421" width="0.0988%" height="15" fill="rgb(221,226,24)" fg:x="248936803710" fg:w="425275816"/><text x="58.1057%" y="431.50"></text></g><g><title>chlang::board::Board::is_valid (149,171,510,516 samples, 34.67%)</title><rect x="23.3579%" y="437" width="34.6691%" height="15" fill="rgb(211,5,48)" fg:x="100502504809" fg:w="149171510516"/><text x="23.6079%" y="447.50">chlang::board::Board::is_valid</text></g><g><title>__rust_dealloc (166,499,494 samples, 0.04%)</title><rect x="58.0338%" y="309" width="0.0387%" height="15" fill="rgb(219,150,6)" fg:x="249703102586" fg:w="166499494"/><text x="58.2838%" y="319.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (216,649,944 samples, 0.05%)</title><rect x="58.0725%" y="293" width="0.0504%" height="15" fill="rgb(251,46,16)" fg:x="249869602080" fg:w="216649944"/><text x="58.3225%" y="303.50"></text></g><g><title>__rdl_dealloc (263,791,367 samples, 0.06%)</title><rect x="58.0725%" y="309" width="0.0613%" height="15" fill="rgb(220,204,40)" fg:x="249869602080" fg:w="263791367"/><text x="58.3225%" y="319.50"></text></g><g><title>tcache_put (133,400,197 samples, 0.03%)</title><rect x="58.1340%" y="277" width="0.0310%" height="15" fill="rgb(211,85,2)" fg:x="250134396456" fg:w="133400197"/><text x="58.3840%" y="287.50"></text></g><g><title>_int_free (821,464,371 samples, 0.19%)</title><rect x="58.1340%" y="293" width="0.1909%" height="15" fill="rgb(229,17,7)" fg:x="250134396456" fg:w="821464371"/><text x="58.3840%" y="303.50"></text></g><g><title>__GI___libc_free (1,101,303,882 samples, 0.26%)</title><rect x="58.1338%" y="309" width="0.2560%" height="15" fill="rgb(239,72,28)" fg:x="250133393447" fg:w="1101303882"/><text x="58.3838%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,564,694,040 samples, 0.36%)</title><rect x="58.0270%" y="357" width="0.3637%" height="15" fill="rgb(230,47,54)" fg:x="249674015325" fg:w="1564694040"/><text x="58.2770%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,535,606,779 samples, 0.36%)</title><rect x="58.0338%" y="341" width="0.3569%" height="15" fill="rgb(214,50,8)" fg:x="249703102586" fg:w="1535606779"/><text x="58.2838%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1,535,606,779 samples, 0.36%)</title><rect x="58.0338%" y="325" width="0.3569%" height="15" fill="rgb(216,198,43)" fg:x="249703102586" fg:w="1535606779"/><text x="58.2838%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (1,616,850,508 samples, 0.38%)</title><rect x="58.0270%" y="421" width="0.3758%" height="15" fill="rgb(234,20,35)" fg:x="249674015325" fg:w="1616850508"/><text x="58.2770%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (1,616,850,508 samples, 0.38%)</title><rect x="58.0270%" y="405" width="0.3758%" height="15" fill="rgb(254,45,19)" fg:x="249674015325" fg:w="1616850508"/><text x="58.2770%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,616,850,508 samples, 0.38%)</title><rect x="58.0270%" y="389" width="0.3758%" height="15" fill="rgb(219,14,44)" fg:x="249674015325" fg:w="1616850508"/><text x="58.2770%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,616,850,508 samples, 0.38%)</title><rect x="58.0270%" y="373" width="0.3758%" height="15" fill="rgb(217,220,26)" fg:x="249674015325" fg:w="1616850508"/><text x="58.2770%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (10,310,932,520 samples, 2.40%)</title><rect x="58.4028%" y="389" width="2.3964%" height="15" fill="rgb(213,158,28)" fg:x="251290865833" fg:w="10310932520"/><text x="58.6528%" y="399.50">co..</text></g><g><title>chlang::board::Position::bitboard (10,316,950,574 samples, 2.40%)</title><rect x="58.4028%" y="405" width="2.3978%" height="15" fill="rgb(252,51,52)" fg:x="251290865833" fg:w="10316950574"/><text x="58.6528%" y="415.50">ch..</text></g><g><title>chlang::board::Board::piece_type (11,759,277,516 samples, 2.73%)</title><rect x="58.4028%" y="421" width="2.7330%" height="15" fill="rgb(246,89,16)" fg:x="251290865833" fg:w="11759277516"/><text x="58.6528%" y="431.50">ch..</text></g><g><title>chlang::board::Position::valid (270,812,430 samples, 0.06%)</title><rect x="61.1358%" y="405" width="0.0629%" height="15" fill="rgb(216,158,49)" fg:x="263050143349" fg:w="270812430"/><text x="61.3858%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (5,776,328,831 samples, 1.34%)</title><rect x="61.1987%" y="389" width="1.3425%" height="15" fill="rgb(236,107,19)" fg:x="263320955779" fg:w="5776328831"/><text x="61.4487%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (5,956,870,451 samples, 1.38%)</title><rect x="61.1987%" y="405" width="1.3844%" height="15" fill="rgb(228,185,30)" fg:x="263320955779" fg:w="5956870451"/><text x="61.4487%" y="415.50"></text></g><g><title>__rust_alloc (117,352,053 samples, 0.03%)</title><rect x="62.5832%" y="277" width="0.0273%" height="15" fill="rgb(246,134,8)" fg:x="269277826230" fg:w="117352053"/><text x="62.8332%" y="287.50"></text></g><g><title>tcache_get (191,574,719 samples, 0.04%)</title><rect x="62.6161%" y="261" width="0.0445%" height="15" fill="rgb(214,143,50)" fg:x="269419250499" fg:w="191574719"/><text x="62.8661%" y="271.50"></text></g><g><title>__GI___libc_malloc (779,337,993 samples, 0.18%)</title><rect x="62.6161%" y="277" width="0.1811%" height="15" fill="rgb(228,75,8)" fg:x="269419250499" fg:w="779337993"/><text x="62.8661%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (925,777,307 samples, 0.22%)</title><rect x="62.5832%" y="325" width="0.2152%" height="15" fill="rgb(207,175,4)" fg:x="269277826230" fg:w="925777307"/><text x="62.8332%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (925,777,307 samples, 0.22%)</title><rect x="62.5832%" y="309" width="0.2152%" height="15" fill="rgb(205,108,24)" fg:x="269277826230" fg:w="925777307"/><text x="62.8332%" y="319.50"></text></g><g><title>alloc::alloc::alloc (925,777,307 samples, 0.22%)</title><rect x="62.5832%" y="293" width="0.2152%" height="15" fill="rgb(244,120,49)" fg:x="269277826230" fg:w="925777307"/><text x="62.8332%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,004,012,009 samples, 0.23%)</title><rect x="62.5832%" y="373" width="0.2333%" height="15" fill="rgb(223,47,38)" fg:x="269277826230" fg:w="1004012009"/><text x="62.8332%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,004,012,009 samples, 0.23%)</title><rect x="62.5832%" y="357" width="0.2333%" height="15" fill="rgb(229,179,11)" fg:x="269277826230" fg:w="1004012009"/><text x="62.8332%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,004,012,009 samples, 0.23%)</title><rect x="62.5832%" y="341" width="0.2333%" height="15" fill="rgb(231,122,1)" fg:x="269277826230" fg:w="1004012009"/><text x="62.8332%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,044,132,369 samples, 0.24%)</title><rect x="62.5832%" y="405" width="0.2427%" height="15" fill="rgb(245,119,9)" fg:x="269277826230" fg:w="1044132369"/><text x="62.8332%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,044,132,369 samples, 0.24%)</title><rect x="62.5832%" y="389" width="0.2427%" height="15" fill="rgb(241,163,25)" fg:x="269277826230" fg:w="1044132369"/><text x="62.8332%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (310,932,790 samples, 0.07%)</title><rect x="62.8329%" y="389" width="0.0723%" height="15" fill="rgb(217,214,3)" fg:x="270352048869" fg:w="310932790"/><text x="63.0829%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (310,932,790 samples, 0.07%)</title><rect x="62.8329%" y="373" width="0.0723%" height="15" fill="rgb(240,86,28)" fg:x="270352048869" fg:w="310932790"/><text x="63.0829%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (310,932,790 samples, 0.07%)</title><rect x="62.8329%" y="357" width="0.0723%" height="15" fill="rgb(215,47,9)" fg:x="270352048869" fg:w="310932790"/><text x="63.0829%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (310,932,790 samples, 0.07%)</title><rect x="62.8329%" y="341" width="0.0723%" height="15" fill="rgb(252,25,45)" fg:x="270352048869" fg:w="310932790"/><text x="63.0829%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,432,296,852 samples, 0.33%)</title><rect x="62.8259%" y="405" width="0.3329%" height="15" fill="rgb(251,164,9)" fg:x="270321958599" fg:w="1432296852"/><text x="63.0759%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (92,276,828 samples, 0.02%)</title><rect x="63.1599%" y="389" width="0.0214%" height="15" fill="rgb(233,194,0)" fg:x="271759270496" fg:w="92276828"/><text x="63.4099%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (407,221,654 samples, 0.09%)</title><rect x="63.1599%" y="405" width="0.0946%" height="15" fill="rgb(249,111,24)" fg:x="271759270496" fg:w="407221654"/><text x="63.4099%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (61,183,549 samples, 0.01%)</title><rect x="63.2545%" y="389" width="0.0142%" height="15" fill="rgb(250,223,3)" fg:x="272166492150" fg:w="61183549"/><text x="63.5045%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (92,276,828 samples, 0.02%)</title><rect x="63.2545%" y="405" width="0.0214%" height="15" fill="rgb(236,178,37)" fg:x="272166492150" fg:w="92276828"/><text x="63.5045%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (10,872,617,560 samples, 2.53%)</title><rect x="61.1358%" y="421" width="2.5269%" height="15" fill="rgb(241,158,50)" fg:x="263050143349" fg:w="10872617560"/><text x="61.3858%" y="431.50">ch..</text></g><g><title>__rust_dealloc (70,210,630 samples, 0.02%)</title><rect x="63.6721%" y="293" width="0.0163%" height="15" fill="rgb(213,121,41)" fg:x="273962881269" fg:w="70210630"/><text x="63.9221%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (90,270,810 samples, 0.02%)</title><rect x="63.6884%" y="277" width="0.0210%" height="15" fill="rgb(240,92,3)" fg:x="274033091899" fg:w="90270810"/><text x="63.9384%" y="287.50"></text></g><g><title>__rdl_dealloc (122,367,098 samples, 0.03%)</title><rect x="63.6884%" y="293" width="0.0284%" height="15" fill="rgb(205,123,3)" fg:x="274033091899" fg:w="122367098"/><text x="63.9384%" y="303.50"></text></g><g><title>tcache_put (99,297,891 samples, 0.02%)</title><rect x="63.7170%" y="261" width="0.0231%" height="15" fill="rgb(205,97,47)" fg:x="274156462006" fg:w="99297891"/><text x="63.9670%" y="271.50"></text></g><g><title>_int_free (516,549,635 samples, 0.12%)</title><rect x="63.7170%" y="277" width="0.1201%" height="15" fill="rgb(247,152,14)" fg:x="274156462006" fg:w="516549635"/><text x="63.9670%" y="287.50"></text></g><g><title>__GI___libc_free (702,106,300 samples, 0.16%)</title><rect x="63.7168%" y="293" width="0.1632%" height="15" fill="rgb(248,195,53)" fg:x="274155458997" fg:w="702106300"/><text x="63.9668%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (940,822,442 samples, 0.22%)</title><rect x="63.6627%" y="341" width="0.2187%" height="15" fill="rgb(226,201,16)" fg:x="273922760909" fg:w="940822442"/><text x="63.9127%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (900,702,082 samples, 0.21%)</title><rect x="63.6721%" y="325" width="0.2093%" height="15" fill="rgb(205,98,0)" fg:x="273962881269" fg:w="900702082"/><text x="63.9221%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (900,702,082 samples, 0.21%)</title><rect x="63.6721%" y="309" width="0.2093%" height="15" fill="rgb(214,191,48)" fg:x="273962881269" fg:w="900702082"/><text x="63.9221%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (1,016,048,117 samples, 0.24%)</title><rect x="63.6627%" y="405" width="0.2361%" height="15" fill="rgb(237,112,39)" fg:x="273922760909" fg:w="1016048117"/><text x="63.9127%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (1,016,048,117 samples, 0.24%)</title><rect x="63.6627%" y="389" width="0.2361%" height="15" fill="rgb(247,203,27)" fg:x="273922760909" fg:w="1016048117"/><text x="63.9127%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,016,048,117 samples, 0.24%)</title><rect x="63.6627%" y="373" width="0.2361%" height="15" fill="rgb(235,124,28)" fg:x="273922760909" fg:w="1016048117"/><text x="63.9127%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,016,048,117 samples, 0.24%)</title><rect x="63.6627%" y="357" width="0.2361%" height="15" fill="rgb(208,207,46)" fg:x="273922760909" fg:w="1016048117"/><text x="63.9127%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (243,731,187 samples, 0.06%)</title><rect x="63.8989%" y="405" width="0.0566%" height="15" fill="rgb(234,176,4)" fg:x="274938809026" fg:w="243731187"/><text x="64.1489%" y="415.50"></text></g><g><title>chlang::cmove::Move::to (103,309,927 samples, 0.02%)</title><rect x="63.9555%" y="405" width="0.0240%" height="15" fill="rgb(230,133,28)" fg:x="275182540213" fg:w="103309927"/><text x="64.2055%" y="415.50"></text></g><g><title>chlang::cmove::Move::new (55,165,495 samples, 0.01%)</title><rect x="63.9795%" y="405" width="0.0128%" height="15" fill="rgb(211,137,40)" fg:x="275285850140" fg:w="55165495"/><text x="64.2295%" y="415.50"></text></g><g><title>chlang::board::Position::valid (156,469,404 samples, 0.04%)</title><rect x="63.9923%" y="405" width="0.0364%" height="15" fill="rgb(254,35,13)" fg:x="275341015635" fg:w="156469404"/><text x="64.2423%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (2,005,014,991 samples, 0.47%)</title><rect x="64.0287%" y="389" width="0.4660%" height="15" fill="rgb(225,49,51)" fg:x="275497485039" fg:w="2005014991"/><text x="64.2787%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (2,106,318,900 samples, 0.49%)</title><rect x="64.0287%" y="405" width="0.4895%" height="15" fill="rgb(251,10,15)" fg:x="275497485039" fg:w="2106318900"/><text x="64.2787%" y="415.50"></text></g><g><title>__rust_alloc (80,240,720 samples, 0.02%)</title><rect x="64.5182%" y="277" width="0.0186%" height="15" fill="rgb(228,207,15)" fg:x="277603803939" fg:w="80240720"/><text x="64.7682%" y="287.50"></text></g><g><title>tcache_get (167,502,503 samples, 0.04%)</title><rect x="64.5450%" y="261" width="0.0389%" height="15" fill="rgb(241,99,19)" fg:x="277719149974" fg:w="167502503"/><text x="64.7950%" y="271.50"></text></g><g><title>__GI___libc_malloc (605,817,436 samples, 0.14%)</title><rect x="64.5450%" y="277" width="0.1408%" height="15" fill="rgb(207,104,49)" fg:x="277719149974" fg:w="605817436"/><text x="64.7950%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (735,205,597 samples, 0.17%)</title><rect x="64.5182%" y="325" width="0.1709%" height="15" fill="rgb(234,99,18)" fg:x="277603803939" fg:w="735205597"/><text x="64.7682%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (735,205,597 samples, 0.17%)</title><rect x="64.5182%" y="309" width="0.1709%" height="15" fill="rgb(213,191,49)" fg:x="277603803939" fg:w="735205597"/><text x="64.7682%" y="319.50"></text></g><g><title>alloc::alloc::alloc (735,205,597 samples, 0.17%)</title><rect x="64.5182%" y="293" width="0.1709%" height="15" fill="rgb(210,226,19)" fg:x="277603803939" fg:w="735205597"/><text x="64.7682%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (764,292,858 samples, 0.18%)</title><rect x="64.5182%" y="373" width="0.1776%" height="15" fill="rgb(229,97,18)" fg:x="277603803939" fg:w="764292858"/><text x="64.7682%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (764,292,858 samples, 0.18%)</title><rect x="64.5182%" y="357" width="0.1776%" height="15" fill="rgb(211,167,15)" fg:x="277603803939" fg:w="764292858"/><text x="64.7682%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (764,292,858 samples, 0.18%)</title><rect x="64.5182%" y="341" width="0.1776%" height="15" fill="rgb(210,169,34)" fg:x="277603803939" fg:w="764292858"/><text x="64.7682%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (782,347,020 samples, 0.18%)</title><rect x="64.5182%" y="405" width="0.1818%" height="15" fill="rgb(241,121,31)" fg:x="277603803939" fg:w="782347020"/><text x="64.7682%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (782,347,020 samples, 0.18%)</title><rect x="64.5182%" y="389" width="0.1818%" height="15" fill="rgb(232,40,11)" fg:x="277603803939" fg:w="782347020"/><text x="64.7682%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (101,303,909 samples, 0.02%)</title><rect x="64.7001%" y="405" width="0.0235%" height="15" fill="rgb(205,86,26)" fg:x="278386150959" fg:w="101303909"/><text x="64.9501%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (194,583,746 samples, 0.05%)</title><rect x="64.7236%" y="405" width="0.0452%" height="15" fill="rgb(231,126,28)" fg:x="278487454868" fg:w="194583746"/><text x="64.9736%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (169,508,521 samples, 0.04%)</title><rect x="64.7688%" y="373" width="0.0394%" height="15" fill="rgb(219,221,18)" fg:x="278682038614" fg:w="169508521"/><text x="65.0188%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (169,508,521 samples, 0.04%)</title><rect x="64.7688%" y="357" width="0.0394%" height="15" fill="rgb(211,40,0)" fg:x="278682038614" fg:w="169508521"/><text x="65.0188%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (169,508,521 samples, 0.04%)</title><rect x="64.7688%" y="341" width="0.0394%" height="15" fill="rgb(239,85,43)" fg:x="278682038614" fg:w="169508521"/><text x="65.0188%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (169,508,521 samples, 0.04%)</title><rect x="64.7688%" y="325" width="0.0394%" height="15" fill="rgb(231,55,21)" fg:x="278682038614" fg:w="169508521"/><text x="65.0188%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (64,192,576 samples, 0.01%)</title><rect x="64.8082%" y="261" width="0.0149%" height="15" fill="rgb(225,184,43)" fg:x="278851547135" fg:w="64192576"/><text x="65.0582%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (64,192,576 samples, 0.01%)</title><rect x="64.8082%" y="245" width="0.0149%" height="15" fill="rgb(251,158,41)" fg:x="278851547135" fg:w="64192576"/><text x="65.0582%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (64,192,576 samples, 0.01%)</title><rect x="64.8082%" y="229" width="0.0149%" height="15" fill="rgb(234,159,37)" fg:x="278851547135" fg:w="64192576"/><text x="65.0582%" y="239.50"></text></g><g><title>alloc::raw_vec::layout_array (99,297,891 samples, 0.02%)</title><rect x="64.8082%" y="293" width="0.0231%" height="15" fill="rgb(216,204,22)" fg:x="278851547135" fg:w="99297891"/><text x="65.0582%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::repeat (99,297,891 samples, 0.02%)</title><rect x="64.8082%" y="277" width="0.0231%" height="15" fill="rgb(214,17,3)" fg:x="278851547135" fg:w="99297891"/><text x="65.0582%" y="287.50"></text></g><g><title>__rust_alloc (107,321,963 samples, 0.02%)</title><rect x="64.8313%" y="245" width="0.0249%" height="15" fill="rgb(212,111,17)" fg:x="278950845026" fg:w="107321963"/><text x="65.0813%" y="255.50"></text></g><g><title>tcache_get (146,439,314 samples, 0.03%)</title><rect x="64.8656%" y="229" width="0.0340%" height="15" fill="rgb(221,157,24)" fg:x="279098287349" fg:w="146439314"/><text x="65.1156%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (727,181,525 samples, 0.17%)</title><rect x="64.8313%" y="293" width="0.1690%" height="15" fill="rgb(252,16,13)" fg:x="278950845026" fg:w="727181525"/><text x="65.0813%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (727,181,525 samples, 0.17%)</title><rect x="64.8313%" y="277" width="0.1690%" height="15" fill="rgb(221,62,2)" fg:x="278950845026" fg:w="727181525"/><text x="65.0813%" y="287.50"></text></g><g><title>alloc::alloc::alloc (727,181,525 samples, 0.17%)</title><rect x="64.8313%" y="261" width="0.1690%" height="15" fill="rgb(247,87,22)" fg:x="278950845026" fg:w="727181525"/><text x="65.0813%" y="271.50"></text></g><g><title>__GI___libc_malloc (579,739,202 samples, 0.13%)</title><rect x="64.8656%" y="245" width="0.1347%" height="15" fill="rgb(215,73,9)" fg:x="279098287349" fg:w="579739202"/><text x="65.1156%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (875,626,857 samples, 0.20%)</title><rect x="64.8082%" y="341" width="0.2035%" height="15" fill="rgb(207,175,33)" fg:x="278851547135" fg:w="875626857"/><text x="65.0582%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (875,626,857 samples, 0.20%)</title><rect x="64.8082%" y="325" width="0.2035%" height="15" fill="rgb(243,129,54)" fg:x="278851547135" fg:w="875626857"/><text x="65.0582%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (875,626,857 samples, 0.20%)</title><rect x="64.8082%" y="309" width="0.2035%" height="15" fill="rgb(227,119,45)" fg:x="278851547135" fg:w="875626857"/><text x="65.0582%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (894,684,028 samples, 0.21%)</title><rect x="64.8082%" y="373" width="0.2079%" height="15" fill="rgb(205,109,36)" fg:x="278851547135" fg:w="894684028"/><text x="65.0582%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (894,684,028 samples, 0.21%)</title><rect x="64.8082%" y="357" width="0.2079%" height="15" fill="rgb(205,6,39)" fg:x="278851547135" fg:w="894684028"/><text x="65.0582%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (62,186,558 samples, 0.01%)</title><rect x="65.0201%" y="245" width="0.0145%" height="15" fill="rgb(221,32,16)" fg:x="279763282316" fg:w="62186558"/><text x="65.2701%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (62,186,558 samples, 0.01%)</title><rect x="65.0201%" y="229" width="0.0145%" height="15" fill="rgb(228,144,50)" fg:x="279763282316" fg:w="62186558"/><text x="65.2701%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (62,186,558 samples, 0.01%)</title><rect x="65.0201%" y="213" width="0.0145%" height="15" fill="rgb(229,201,53)" fg:x="279763282316" fg:w="62186558"/><text x="65.2701%" y="223.50"></text></g><g><title>core::ptr::write (62,186,558 samples, 0.01%)</title><rect x="65.0201%" y="197" width="0.0145%" height="15" fill="rgb(249,153,27)" fg:x="279763282316" fg:w="62186558"/><text x="65.2701%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (155,466,395 samples, 0.04%)</title><rect x="65.0162%" y="309" width="0.0361%" height="15" fill="rgb(227,106,25)" fg:x="279746231163" fg:w="155466395"/><text x="65.2662%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (155,466,395 samples, 0.04%)</title><rect x="65.0162%" y="293" width="0.0361%" height="15" fill="rgb(230,65,29)" fg:x="279746231163" fg:w="155466395"/><text x="65.2662%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (155,466,395 samples, 0.04%)</title><rect x="65.0162%" y="277" width="0.0361%" height="15" fill="rgb(221,57,46)" fg:x="279746231163" fg:w="155466395"/><text x="65.2662%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (155,466,395 samples, 0.04%)</title><rect x="65.0162%" y="261" width="0.0361%" height="15" fill="rgb(229,161,17)" fg:x="279746231163" fg:w="155466395"/><text x="65.2662%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (182,547,638 samples, 0.04%)</title><rect x="65.0162%" y="373" width="0.0424%" height="15" fill="rgb(222,213,11)" fg:x="279746231163" fg:w="182547638"/><text x="65.2662%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (182,547,638 samples, 0.04%)</title><rect x="65.0162%" y="357" width="0.0424%" height="15" fill="rgb(235,35,13)" fg:x="279746231163" fg:w="182547638"/><text x="65.2662%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (182,547,638 samples, 0.04%)</title><rect x="65.0162%" y="341" width="0.0424%" height="15" fill="rgb(233,158,34)" fg:x="279746231163" fg:w="182547638"/><text x="65.2662%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (182,547,638 samples, 0.04%)</title><rect x="65.0162%" y="325" width="0.0424%" height="15" fill="rgb(215,151,48)" fg:x="279746231163" fg:w="182547638"/><text x="65.2662%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (56,168,504 samples, 0.01%)</title><rect x="65.0586%" y="373" width="0.0131%" height="15" fill="rgb(229,84,14)" fg:x="279928778801" fg:w="56168504"/><text x="65.3086%" y="383.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (1,769,307,876 samples, 0.41%)</title><rect x="64.7688%" y="389" width="0.4112%" height="15" fill="rgb(229,68,14)" fg:x="278682038614" fg:w="1769307876"/><text x="65.0188%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (1,800,401,155 samples, 0.42%)</title><rect x="64.7688%" y="405" width="0.4184%" height="15" fill="rgb(243,106,26)" fg:x="278682038614" fg:w="1800401155"/><text x="65.0188%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (7,456,368,906 samples, 1.73%)</title><rect x="63.6627%" y="421" width="1.7329%" height="15" fill="rgb(206,45,38)" fg:x="273922760909" fg:w="7456368906"/><text x="63.9127%" y="431.50"></text></g><g><title>chlang::cmove::Move::new (67,201,603 samples, 0.02%)</title><rect x="65.3957%" y="405" width="0.0156%" height="15" fill="rgb(226,6,15)" fg:x="281379129815" fg:w="67201603"/><text x="65.6457%" y="415.50"></text></g><g><title>chlang::board::Position::valid (190,571,710 samples, 0.04%)</title><rect x="65.4113%" y="405" width="0.0443%" height="15" fill="rgb(232,22,54)" fg:x="281446331418" fg:w="190571710"/><text x="65.6613%" y="415.50"></text></g><g><title>__rust_alloc (103,309,927 samples, 0.02%)</title><rect x="65.4556%" y="277" width="0.0240%" height="15" fill="rgb(229,222,32)" fg:x="281636903128" fg:w="103309927"/><text x="65.7056%" y="287.50"></text></g><g><title>tcache_get (98,294,882 samples, 0.02%)</title><rect x="65.4873%" y="261" width="0.0228%" height="15" fill="rgb(228,62,29)" fg:x="281773312352" fg:w="98294882"/><text x="65.7373%" y="271.50"></text></g><g><title>__GI___libc_malloc (504,513,527 samples, 0.12%)</title><rect x="65.4873%" y="277" width="0.1173%" height="15" fill="rgb(251,103,34)" fg:x="281773312352" fg:w="504513527"/><text x="65.7373%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (658,976,913 samples, 0.15%)</title><rect x="65.4556%" y="325" width="0.1532%" height="15" fill="rgb(233,12,30)" fg:x="281636903128" fg:w="658976913"/><text x="65.7056%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (658,976,913 samples, 0.15%)</title><rect x="65.4556%" y="309" width="0.1532%" height="15" fill="rgb(238,52,0)" fg:x="281636903128" fg:w="658976913"/><text x="65.7056%" y="319.50"></text></g><g><title>alloc::alloc::alloc (658,976,913 samples, 0.15%)</title><rect x="65.4556%" y="293" width="0.1532%" height="15" fill="rgb(223,98,5)" fg:x="281636903128" fg:w="658976913"/><text x="65.7056%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (745,235,687 samples, 0.17%)</title><rect x="65.4556%" y="373" width="0.1732%" height="15" fill="rgb(228,75,37)" fg:x="281636903128" fg:w="745235687"/><text x="65.7056%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (745,235,687 samples, 0.17%)</title><rect x="65.4556%" y="357" width="0.1732%" height="15" fill="rgb(205,115,49)" fg:x="281636903128" fg:w="745235687"/><text x="65.7056%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (745,235,687 samples, 0.17%)</title><rect x="65.4556%" y="341" width="0.1732%" height="15" fill="rgb(250,154,43)" fg:x="281636903128" fg:w="745235687"/><text x="65.7056%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (747,241,705 samples, 0.17%)</title><rect x="65.4556%" y="405" width="0.1737%" height="15" fill="rgb(226,43,29)" fg:x="281636903128" fg:w="747241705"/><text x="65.7056%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (747,241,705 samples, 0.17%)</title><rect x="65.4556%" y="389" width="0.1737%" height="15" fill="rgb(249,228,39)" fg:x="281636903128" fg:w="747241705"/><text x="65.7056%" y="399.50"></text></g><g><title>core::ptr::write (96,288,864 samples, 0.02%)</title><rect x="65.6292%" y="389" width="0.0224%" height="15" fill="rgb(216,79,43)" fg:x="282384144833" fg:w="96288864"/><text x="65.8792%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (362,086,249 samples, 0.08%)</title><rect x="65.6292%" y="405" width="0.0842%" height="15" fill="rgb(228,95,12)" fg:x="282384144833" fg:w="362086249"/><text x="65.8792%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (1,780,340,975 samples, 0.41%)</title><rect x="65.3957%" y="421" width="0.4138%" height="15" fill="rgb(249,221,15)" fg:x="281379129815" fg:w="1780340975"/><text x="65.6457%" y="431.50"></text></g><g><title>chlang::board::Position::valid (119,358,071 samples, 0.03%)</title><rect x="65.8183%" y="405" width="0.0277%" height="15" fill="rgb(233,34,13)" fg:x="283197585132" fg:w="119358071"/><text x="66.0683%" y="415.50"></text></g><g><title>__rust_dealloc (102,306,918 samples, 0.02%)</title><rect x="65.8505%" y="245" width="0.0238%" height="15" fill="rgb(214,103,39)" fg:x="283336000374" fg:w="102306918"/><text x="66.1005%" y="255.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (65,195,585 samples, 0.02%)</title><rect x="65.8742%" y="229" width="0.0152%" height="15" fill="rgb(251,126,39)" fg:x="283438307292" fg:w="65195585"/><text x="66.1242%" y="239.50"></text></g><g><title>__rdl_dealloc (77,231,693 samples, 0.02%)</title><rect x="65.8742%" y="245" width="0.0179%" height="15" fill="rgb(214,216,36)" fg:x="283438307292" fg:w="77231693"/><text x="66.1242%" y="255.50"></text></g><g><title>tcache_put (47,141,423 samples, 0.01%)</title><rect x="65.8922%" y="213" width="0.0110%" height="15" fill="rgb(220,221,8)" fg:x="283515538985" fg:w="47141423"/><text x="66.1422%" y="223.50"></text></g><g><title>_int_free (250,752,250 samples, 0.06%)</title><rect x="65.8922%" y="229" width="0.0583%" height="15" fill="rgb(240,216,3)" fg:x="283515538985" fg:w="250752250"/><text x="66.1422%" y="239.50"></text></g><g><title>__GI___libc_free (332,998,988 samples, 0.08%)</title><rect x="65.8922%" y="245" width="0.0774%" height="15" fill="rgb(232,218,17)" fg:x="283515538985" fg:w="332998988"/><text x="66.1422%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (534,603,797 samples, 0.12%)</title><rect x="65.8460%" y="389" width="0.1242%" height="15" fill="rgb(229,163,45)" fg:x="283316943203" fg:w="534603797"/><text x="66.0960%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (534,603,797 samples, 0.12%)</title><rect x="65.8460%" y="373" width="0.1242%" height="15" fill="rgb(231,110,42)" fg:x="283316943203" fg:w="534603797"/><text x="66.0960%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (534,603,797 samples, 0.12%)</title><rect x="65.8460%" y="357" width="0.1242%" height="15" fill="rgb(208,170,48)" fg:x="283316943203" fg:w="534603797"/><text x="66.0960%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (534,603,797 samples, 0.12%)</title><rect x="65.8460%" y="341" width="0.1242%" height="15" fill="rgb(239,116,25)" fg:x="283316943203" fg:w="534603797"/><text x="66.0960%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (534,603,797 samples, 0.12%)</title><rect x="65.8460%" y="325" width="0.1242%" height="15" fill="rgb(219,200,50)" fg:x="283316943203" fg:w="534603797"/><text x="66.0960%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (534,603,797 samples, 0.12%)</title><rect x="65.8460%" y="309" width="0.1242%" height="15" fill="rgb(245,200,0)" fg:x="283316943203" fg:w="534603797"/><text x="66.0960%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (534,603,797 samples, 0.12%)</title><rect x="65.8460%" y="293" width="0.1242%" height="15" fill="rgb(245,119,33)" fg:x="283316943203" fg:w="534603797"/><text x="66.0960%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (515,546,626 samples, 0.12%)</title><rect x="65.8505%" y="277" width="0.1198%" height="15" fill="rgb(231,125,12)" fg:x="283336000374" fg:w="515546626"/><text x="66.1005%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (515,546,626 samples, 0.12%)</title><rect x="65.8505%" y="261" width="0.1198%" height="15" fill="rgb(216,96,41)" fg:x="283336000374" fg:w="515546626"/><text x="66.1005%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (95,285,855 samples, 0.02%)</title><rect x="65.9703%" y="389" width="0.0221%" height="15" fill="rgb(248,43,45)" fg:x="283851547000" fg:w="95285855"/><text x="66.2203%" y="399.50"></text></g><g><title>chlang::cmove::Move::to (106,318,954 samples, 0.02%)</title><rect x="65.9924%" y="389" width="0.0247%" height="15" fill="rgb(217,222,7)" fg:x="283946832855" fg:w="106318954"/><text x="66.2424%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,671,012,994 samples, 0.39%)</title><rect x="66.0171%" y="357" width="0.3884%" height="15" fill="rgb(233,28,6)" fg:x="284053151809" fg:w="1671012994"/><text x="66.2671%" y="367.50"></text></g><g><title>chlang::board::Position::bitboard (1,944,834,451 samples, 0.45%)</title><rect x="66.0171%" y="373" width="0.4520%" height="15" fill="rgb(231,218,15)" fg:x="284053151809" fg:w="1944834451"/><text x="66.2671%" y="383.50"></text></g><g><title>chlang::board::Board::piece_type (2,210,631,836 samples, 0.51%)</title><rect x="66.0171%" y="389" width="0.5138%" height="15" fill="rgb(226,171,48)" fg:x="284053151809" fg:w="2210631836"/><text x="66.2671%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (434,302,897 samples, 0.10%)</title><rect x="66.5358%" y="357" width="0.1009%" height="15" fill="rgb(235,201,9)" fg:x="286284846834" fg:w="434302897"/><text x="66.7858%" y="367.50"></text></g><g><title>chlang::board::Position::bitboard (441,323,960 samples, 0.10%)</title><rect x="66.5358%" y="373" width="0.1026%" height="15" fill="rgb(217,80,15)" fg:x="286284846834" fg:w="441323960"/><text x="66.7858%" y="383.50"></text></g><g><title>__GI___libc_malloc (74,222,666 samples, 0.02%)</title><rect x="66.6426%" y="245" width="0.0173%" height="15" fill="rgb(219,152,8)" fg:x="286744224956" fg:w="74222666"/><text x="66.8926%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (93,279,837 samples, 0.02%)</title><rect x="66.6384%" y="293" width="0.0217%" height="15" fill="rgb(243,107,38)" fg:x="286726170794" fg:w="93279837"/><text x="66.8884%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (93,279,837 samples, 0.02%)</title><rect x="66.6384%" y="277" width="0.0217%" height="15" fill="rgb(231,17,5)" fg:x="286726170794" fg:w="93279837"/><text x="66.8884%" y="287.50"></text></g><g><title>alloc::alloc::alloc (93,279,837 samples, 0.02%)</title><rect x="66.6384%" y="261" width="0.0217%" height="15" fill="rgb(209,25,54)" fg:x="286726170794" fg:w="93279837"/><text x="66.8884%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (97,291,873 samples, 0.02%)</title><rect x="66.6384%" y="341" width="0.0226%" height="15" fill="rgb(219,0,2)" fg:x="286726170794" fg:w="97291873"/><text x="66.8884%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (97,291,873 samples, 0.02%)</title><rect x="66.6384%" y="325" width="0.0226%" height="15" fill="rgb(246,9,5)" fg:x="286726170794" fg:w="97291873"/><text x="66.8884%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (97,291,873 samples, 0.02%)</title><rect x="66.6384%" y="309" width="0.0226%" height="15" fill="rgb(226,159,4)" fg:x="286726170794" fg:w="97291873"/><text x="66.8884%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (109,327,981 samples, 0.03%)</title><rect x="66.6384%" y="373" width="0.0254%" height="15" fill="rgb(219,175,34)" fg:x="286726170794" fg:w="109327981"/><text x="66.8884%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (109,327,981 samples, 0.03%)</title><rect x="66.6384%" y="357" width="0.0254%" height="15" fill="rgb(236,10,46)" fg:x="286726170794" fg:w="109327981"/><text x="66.8884%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (789,368,083 samples, 0.18%)</title><rect x="66.5309%" y="389" width="0.1835%" height="15" fill="rgb(240,211,16)" fg:x="286263783645" fg:w="789368083"/><text x="66.7809%" y="399.50"></text></g><g><title>_int_free (44,132,396 samples, 0.01%)</title><rect x="66.7237%" y="245" width="0.0103%" height="15" fill="rgb(205,3,43)" fg:x="287093272088" fg:w="44132396"/><text x="66.9737%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (97,291,873 samples, 0.02%)</title><rect x="66.7144%" y="309" width="0.0226%" height="15" fill="rgb(245,7,22)" fg:x="287053151728" fg:w="97291873"/><text x="66.9644%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95,285,855 samples, 0.02%)</title><rect x="66.7148%" y="293" width="0.0221%" height="15" fill="rgb(239,132,32)" fg:x="287055157746" fg:w="95285855"/><text x="66.9648%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (95,285,855 samples, 0.02%)</title><rect x="66.7148%" y="277" width="0.0221%" height="15" fill="rgb(228,202,34)" fg:x="287055157746" fg:w="95285855"/><text x="66.9648%" y="287.50"></text></g><g><title>__GI___libc_free (57,171,513 samples, 0.01%)</title><rect x="66.7237%" y="261" width="0.0133%" height="15" fill="rgb(254,200,22)" fg:x="287093272088" fg:w="57171513"/><text x="66.9737%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (104,312,936 samples, 0.02%)</title><rect x="66.7144%" y="373" width="0.0242%" height="15" fill="rgb(219,10,39)" fg:x="287053151728" fg:w="104312936"/><text x="66.9644%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (104,312,936 samples, 0.02%)</title><rect x="66.7144%" y="357" width="0.0242%" height="15" fill="rgb(226,210,39)" fg:x="287053151728" fg:w="104312936"/><text x="66.9644%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (104,312,936 samples, 0.02%)</title><rect x="66.7144%" y="341" width="0.0242%" height="15" fill="rgb(208,219,16)" fg:x="287053151728" fg:w="104312936"/><text x="66.9644%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104,312,936 samples, 0.02%)</title><rect x="66.7144%" y="325" width="0.0242%" height="15" fill="rgb(216,158,51)" fg:x="287053151728" fg:w="104312936"/><text x="66.9644%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (174,523,566 samples, 0.04%)</title><rect x="66.7437%" y="357" width="0.0406%" height="15" fill="rgb(233,14,44)" fg:x="287179530862" fg:w="174523566"/><text x="66.9937%" y="367.50"></text></g><g><title>chlang::board::Position::bitboard (177,532,593 samples, 0.04%)</title><rect x="66.7437%" y="373" width="0.0413%" height="15" fill="rgb(237,97,39)" fg:x="287179530862" fg:w="177532593"/><text x="66.9937%" y="383.50"></text></g><g><title>__GI___libc_malloc (61,183,549 samples, 0.01%)</title><rect x="66.7878%" y="245" width="0.0142%" height="15" fill="rgb(218,198,43)" fg:x="287369099563" fg:w="61183549"/><text x="67.0378%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74,222,666 samples, 0.02%)</title><rect x="66.7850%" y="341" width="0.0173%" height="15" fill="rgb(231,104,20)" fg:x="287357063455" fg:w="74222666"/><text x="67.0350%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (74,222,666 samples, 0.02%)</title><rect x="66.7850%" y="325" width="0.0173%" height="15" fill="rgb(254,36,13)" fg:x="287357063455" fg:w="74222666"/><text x="67.0350%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (74,222,666 samples, 0.02%)</title><rect x="66.7850%" y="309" width="0.0173%" height="15" fill="rgb(248,14,50)" fg:x="287357063455" fg:w="74222666"/><text x="67.0350%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74,222,666 samples, 0.02%)</title><rect x="66.7850%" y="293" width="0.0173%" height="15" fill="rgb(217,107,29)" fg:x="287357063455" fg:w="74222666"/><text x="67.0350%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74,222,666 samples, 0.02%)</title><rect x="66.7850%" y="277" width="0.0173%" height="15" fill="rgb(251,169,33)" fg:x="287357063455" fg:w="74222666"/><text x="67.0350%" y="287.50"></text></g><g><title>alloc::alloc::alloc (74,222,666 samples, 0.02%)</title><rect x="66.7850%" y="261" width="0.0173%" height="15" fill="rgb(217,108,32)" fg:x="287357063455" fg:w="74222666"/><text x="67.0350%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (76,228,684 samples, 0.02%)</title><rect x="66.7850%" y="373" width="0.0177%" height="15" fill="rgb(219,66,42)" fg:x="287357063455" fg:w="76228684"/><text x="67.0350%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (76,228,684 samples, 0.02%)</title><rect x="66.7850%" y="357" width="0.0177%" height="15" fill="rgb(206,180,7)" fg:x="287357063455" fg:w="76228684"/><text x="67.0350%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51,153,459 samples, 0.01%)</title><rect x="66.8125%" y="261" width="0.0119%" height="15" fill="rgb(208,226,31)" fg:x="287475418517" fg:w="51153459"/><text x="67.0625%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51,153,459 samples, 0.01%)</title><rect x="66.8125%" y="245" width="0.0119%" height="15" fill="rgb(218,26,49)" fg:x="287475418517" fg:w="51153459"/><text x="67.0625%" y="255.50"></text></g><g><title>alloc::alloc::alloc (51,153,459 samples, 0.01%)</title><rect x="66.8125%" y="229" width="0.0119%" height="15" fill="rgb(233,197,48)" fg:x="287475418517" fg:w="51153459"/><text x="67.0625%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66,198,594 samples, 0.02%)</title><rect x="66.8097%" y="309" width="0.0154%" height="15" fill="rgb(252,181,51)" fg:x="287463382409" fg:w="66198594"/><text x="67.0597%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (66,198,594 samples, 0.02%)</title><rect x="66.8097%" y="293" width="0.0154%" height="15" fill="rgb(253,90,19)" fg:x="287463382409" fg:w="66198594"/><text x="67.0597%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (66,198,594 samples, 0.02%)</title><rect x="66.8097%" y="277" width="0.0154%" height="15" fill="rgb(215,171,30)" fg:x="287463382409" fg:w="66198594"/><text x="67.0597%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (68,204,612 samples, 0.02%)</title><rect x="66.8097%" y="341" width="0.0159%" height="15" fill="rgb(214,222,9)" fg:x="287463382409" fg:w="68204612"/><text x="67.0597%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (68,204,612 samples, 0.02%)</title><rect x="66.8097%" y="325" width="0.0159%" height="15" fill="rgb(223,3,22)" fg:x="287463382409" fg:w="68204612"/><text x="67.0597%" y="335.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (160,481,440 samples, 0.04%)</title><rect x="66.8062%" y="357" width="0.0373%" height="15" fill="rgb(225,196,46)" fg:x="287448337274" fg:w="160481440"/><text x="67.0562%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (163,490,467 samples, 0.04%)</title><rect x="66.8062%" y="373" width="0.0380%" height="15" fill="rgb(209,110,37)" fg:x="287448337274" fg:w="163490467"/><text x="67.0562%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (643,931,778 samples, 0.15%)</title><rect x="66.7144%" y="389" width="0.1497%" height="15" fill="rgb(249,89,12)" fg:x="287053151728" fg:w="643931778"/><text x="66.9644%" y="399.50"></text></g><g><title>__GI___libc_malloc (77,231,693 samples, 0.02%)</title><rect x="66.8729%" y="245" width="0.0179%" height="15" fill="rgb(226,27,33)" fg:x="287735197848" fg:w="77231693"/><text x="67.1229%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95,285,855 samples, 0.02%)</title><rect x="66.8689%" y="293" width="0.0221%" height="15" fill="rgb(213,82,22)" fg:x="287718146695" fg:w="95285855"/><text x="67.1189%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95,285,855 samples, 0.02%)</title><rect x="66.8689%" y="277" width="0.0221%" height="15" fill="rgb(248,140,0)" fg:x="287718146695" fg:w="95285855"/><text x="67.1189%" y="287.50"></text></g><g><title>alloc::alloc::alloc (95,285,855 samples, 0.02%)</title><rect x="66.8689%" y="261" width="0.0221%" height="15" fill="rgb(228,106,3)" fg:x="287718146695" fg:w="95285855"/><text x="67.1189%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (98,294,882 samples, 0.02%)</title><rect x="66.8689%" y="373" width="0.0228%" height="15" fill="rgb(209,23,37)" fg:x="287718146695" fg:w="98294882"/><text x="67.1189%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (98,294,882 samples, 0.02%)</title><rect x="66.8689%" y="357" width="0.0228%" height="15" fill="rgb(241,93,50)" fg:x="287718146695" fg:w="98294882"/><text x="67.1189%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (98,294,882 samples, 0.02%)</title><rect x="66.8689%" y="341" width="0.0228%" height="15" fill="rgb(253,46,43)" fg:x="287718146695" fg:w="98294882"/><text x="67.1189%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (98,294,882 samples, 0.02%)</title><rect x="66.8689%" y="325" width="0.0228%" height="15" fill="rgb(226,206,43)" fg:x="287718146695" fg:w="98294882"/><text x="67.1189%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (98,294,882 samples, 0.02%)</title><rect x="66.8689%" y="309" width="0.0228%" height="15" fill="rgb(217,54,7)" fg:x="287718146695" fg:w="98294882"/><text x="67.1189%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (195,586,755 samples, 0.05%)</title><rect x="66.8640%" y="389" width="0.0455%" height="15" fill="rgb(223,5,52)" fg:x="287697083506" fg:w="195586755"/><text x="67.1140%" y="399.50"></text></g><g><title>__GI___libc_malloc (77,231,693 samples, 0.02%)</title><rect x="66.9190%" y="245" width="0.0179%" height="15" fill="rgb(206,52,46)" fg:x="287933793630" fg:w="77231693"/><text x="67.1690%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (90,270,810 samples, 0.02%)</title><rect x="66.9172%" y="293" width="0.0210%" height="15" fill="rgb(253,136,11)" fg:x="287925769558" fg:w="90270810"/><text x="67.1672%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (90,270,810 samples, 0.02%)</title><rect x="66.9172%" y="277" width="0.0210%" height="15" fill="rgb(208,106,33)" fg:x="287925769558" fg:w="90270810"/><text x="67.1672%" y="287.50"></text></g><g><title>alloc::alloc::alloc (90,270,810 samples, 0.02%)</title><rect x="66.9172%" y="261" width="0.0210%" height="15" fill="rgb(206,54,4)" fg:x="287925769558" fg:w="90270810"/><text x="67.1672%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (97,291,873 samples, 0.02%)</title><rect x="66.9172%" y="341" width="0.0226%" height="15" fill="rgb(213,3,15)" fg:x="287925769558" fg:w="97291873"/><text x="67.1672%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (97,291,873 samples, 0.02%)</title><rect x="66.9172%" y="325" width="0.0226%" height="15" fill="rgb(252,211,39)" fg:x="287925769558" fg:w="97291873"/><text x="67.1672%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (97,291,873 samples, 0.02%)</title><rect x="66.9172%" y="309" width="0.0226%" height="15" fill="rgb(223,6,36)" fg:x="287925769558" fg:w="97291873"/><text x="67.1672%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (99,297,891 samples, 0.02%)</title><rect x="66.9172%" y="373" width="0.0231%" height="15" fill="rgb(252,169,45)" fg:x="287925769558" fg:w="99297891"/><text x="67.1672%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (99,297,891 samples, 0.02%)</title><rect x="66.9172%" y="357" width="0.0231%" height="15" fill="rgb(212,48,26)" fg:x="287925769558" fg:w="99297891"/><text x="67.1672%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (50,150,450 samples, 0.01%)</title><rect x="66.9403%" y="373" width="0.0117%" height="15" fill="rgb(251,102,48)" fg:x="288025067449" fg:w="50150450"/><text x="67.1903%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (263,791,367 samples, 0.06%)</title><rect x="66.9095%" y="389" width="0.0613%" height="15" fill="rgb(243,208,16)" fg:x="287892670261" fg:w="263791367"/><text x="67.1595%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (279,839,511 samples, 0.07%)</title><rect x="66.9738%" y="357" width="0.0650%" height="15" fill="rgb(219,96,24)" fg:x="288169500745" fg:w="279839511"/><text x="67.2238%" y="367.50"></text></g><g><title>chlang::board::Position::bitboard (286,860,574 samples, 0.07%)</title><rect x="66.9738%" y="373" width="0.0667%" height="15" fill="rgb(219,33,29)" fg:x="288169500745" fg:w="286860574"/><text x="67.2238%" y="383.50"></text></g><g><title>__GI___libc_malloc (56,168,504 samples, 0.01%)</title><rect x="67.0442%" y="245" width="0.0131%" height="15" fill="rgb(223,176,5)" fg:x="288472409463" fg:w="56168504"/><text x="67.2942%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84,252,756 samples, 0.02%)</title><rect x="67.0405%" y="293" width="0.0196%" height="15" fill="rgb(228,140,14)" fg:x="288456361319" fg:w="84252756"/><text x="67.2905%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84,252,756 samples, 0.02%)</title><rect x="67.0405%" y="277" width="0.0196%" height="15" fill="rgb(217,179,31)" fg:x="288456361319" fg:w="84252756"/><text x="67.2905%" y="287.50"></text></g><g><title>alloc::alloc::alloc (84,252,756 samples, 0.02%)</title><rect x="67.0405%" y="261" width="0.0196%" height="15" fill="rgb(230,9,30)" fg:x="288456361319" fg:w="84252756"/><text x="67.2905%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (97,291,873 samples, 0.02%)</title><rect x="67.0405%" y="341" width="0.0226%" height="15" fill="rgb(230,136,20)" fg:x="288456361319" fg:w="97291873"/><text x="67.2905%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (97,291,873 samples, 0.02%)</title><rect x="67.0405%" y="325" width="0.0226%" height="15" fill="rgb(215,210,22)" fg:x="288456361319" fg:w="97291873"/><text x="67.2905%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (97,291,873 samples, 0.02%)</title><rect x="67.0405%" y="309" width="0.0226%" height="15" fill="rgb(218,43,5)" fg:x="288456361319" fg:w="97291873"/><text x="67.2905%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (100,300,900 samples, 0.02%)</title><rect x="67.0405%" y="373" width="0.0233%" height="15" fill="rgb(216,11,5)" fg:x="288456361319" fg:w="100300900"/><text x="67.2905%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (100,300,900 samples, 0.02%)</title><rect x="67.0405%" y="357" width="0.0233%" height="15" fill="rgb(209,82,29)" fg:x="288456361319" fg:w="100300900"/><text x="67.2905%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46,138,414 samples, 0.01%)</title><rect x="67.0638%" y="373" width="0.0107%" height="15" fill="rgb(244,115,12)" fg:x="288556662219" fg:w="46138414"/><text x="67.3138%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (556,669,995 samples, 0.13%)</title><rect x="66.9708%" y="389" width="0.1294%" height="15" fill="rgb(222,82,18)" fg:x="288156461628" fg:w="556669995"/><text x="67.2208%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (49,147,441 samples, 0.01%)</title><rect x="67.1053%" y="389" width="0.0114%" height="15" fill="rgb(249,227,8)" fg:x="288735197821" fg:w="49147441"/><text x="67.3553%" y="399.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (49,147,441 samples, 0.01%)</title><rect x="67.1053%" y="373" width="0.0114%" height="15" fill="rgb(253,141,45)" fg:x="288735197821" fg:w="49147441"/><text x="67.3553%" y="383.50"></text></g><g><title>chlang::board::Board::attacked_by_color (5,609,829,337 samples, 1.30%)</title><rect x="65.8460%" y="405" width="1.3038%" height="15" fill="rgb(234,184,4)" fg:x="283316943203" fg:w="5609829337"/><text x="66.0960%" y="415.50"></text></g><g><title>__rust_alloc (51,153,459 samples, 0.01%)</title><rect x="67.1498%" y="277" width="0.0119%" height="15" fill="rgb(218,194,23)" fg:x="288926772540" fg:w="51153459"/><text x="67.3998%" y="287.50"></text></g><g><title>tcache_get (82,246,738 samples, 0.02%)</title><rect x="67.1654%" y="261" width="0.0191%" height="15" fill="rgb(235,66,41)" fg:x="288993974143" fg:w="82246738"/><text x="67.4154%" y="271.50"></text></g><g><title>__GI___libc_malloc (312,938,808 samples, 0.07%)</title><rect x="67.1654%" y="277" width="0.0727%" height="15" fill="rgb(245,217,1)" fg:x="288993974143" fg:w="312938808"/><text x="67.4154%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (397,191,564 samples, 0.09%)</title><rect x="67.1498%" y="325" width="0.0923%" height="15" fill="rgb(229,91,1)" fg:x="288926772540" fg:w="397191564"/><text x="67.3998%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (397,191,564 samples, 0.09%)</title><rect x="67.1498%" y="309" width="0.0923%" height="15" fill="rgb(207,101,30)" fg:x="288926772540" fg:w="397191564"/><text x="67.3998%" y="319.50"></text></g><g><title>alloc::alloc::alloc (397,191,564 samples, 0.09%)</title><rect x="67.1498%" y="293" width="0.0923%" height="15" fill="rgb(223,82,49)" fg:x="288926772540" fg:w="397191564"/><text x="67.3998%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (436,308,915 samples, 0.10%)</title><rect x="67.1498%" y="373" width="0.1014%" height="15" fill="rgb(218,167,17)" fg:x="288926772540" fg:w="436308915"/><text x="67.3998%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (436,308,915 samples, 0.10%)</title><rect x="67.1498%" y="357" width="0.1014%" height="15" fill="rgb(208,103,14)" fg:x="288926772540" fg:w="436308915"/><text x="67.3998%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (436,308,915 samples, 0.10%)</title><rect x="67.1498%" y="341" width="0.1014%" height="15" fill="rgb(238,20,8)" fg:x="288926772540" fg:w="436308915"/><text x="67.3998%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (454,363,077 samples, 0.11%)</title><rect x="67.1498%" y="405" width="0.1056%" height="15" fill="rgb(218,80,54)" fg:x="288926772540" fg:w="454363077"/><text x="67.3998%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (454,363,077 samples, 0.11%)</title><rect x="67.1498%" y="389" width="0.1056%" height="15" fill="rgb(240,144,17)" fg:x="288926772540" fg:w="454363077"/><text x="67.3998%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (242,728,178 samples, 0.06%)</title><rect x="67.2554%" y="405" width="0.0564%" height="15" fill="rgb(245,27,50)" fg:x="289381135617" fg:w="242728178"/><text x="67.5054%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (6,900,701,920 samples, 1.60%)</title><rect x="65.8094%" y="421" width="1.6038%" height="15" fill="rgb(251,51,7)" fg:x="283159470790" fg:w="6900701920"/><text x="66.0594%" y="431.50"></text></g><g><title>chlang::board::Position::valid (202,607,818 samples, 0.05%)</title><rect x="67.4132%" y="405" width="0.0471%" height="15" fill="rgb(245,217,29)" fg:x="290060172710" fg:w="202607818"/><text x="67.6632%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (4,092,276,720 samples, 0.95%)</title><rect x="67.4603%" y="389" width="0.9511%" height="15" fill="rgb(221,176,29)" fg:x="290262780528" fg:w="4092276720"/><text x="67.7103%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (4,235,707,007 samples, 0.98%)</title><rect x="67.4603%" y="405" width="0.9844%" height="15" fill="rgb(212,180,24)" fg:x="290262780528" fg:w="4235707007"/><text x="67.7103%" y="415.50"></text></g><g><title>__rust_alloc (125,376,125 samples, 0.03%)</title><rect x="68.4448%" y="277" width="0.0291%" height="15" fill="rgb(254,24,2)" fg:x="294498487535" fg:w="125376125"/><text x="68.6948%" y="287.50"></text></g><g><title>tcache_get (145,436,305 samples, 0.03%)</title><rect x="68.4800%" y="261" width="0.0338%" height="15" fill="rgb(230,100,2)" fg:x="294649941894" fg:w="145436305"/><text x="68.7300%" y="271.50"></text></g><g><title>__GI___libc_malloc (669,007,003 samples, 0.16%)</title><rect x="68.4800%" y="277" width="0.1555%" height="15" fill="rgb(219,142,25)" fg:x="294649941894" fg:w="669007003"/><text x="68.7300%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (824,473,398 samples, 0.19%)</title><rect x="68.4448%" y="325" width="0.1916%" height="15" fill="rgb(240,73,43)" fg:x="294498487535" fg:w="824473398"/><text x="68.6948%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (824,473,398 samples, 0.19%)</title><rect x="68.4448%" y="309" width="0.1916%" height="15" fill="rgb(214,114,15)" fg:x="294498487535" fg:w="824473398"/><text x="68.6948%" y="319.50"></text></g><g><title>alloc::alloc::alloc (824,473,398 samples, 0.19%)</title><rect x="68.4448%" y="293" width="0.1916%" height="15" fill="rgb(207,130,4)" fg:x="294498487535" fg:w="824473398"/><text x="68.6948%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (885,656,947 samples, 0.21%)</title><rect x="68.4448%" y="373" width="0.2058%" height="15" fill="rgb(221,25,40)" fg:x="294498487535" fg:w="885656947"/><text x="68.6948%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (885,656,947 samples, 0.21%)</title><rect x="68.4448%" y="357" width="0.2058%" height="15" fill="rgb(241,184,7)" fg:x="294498487535" fg:w="885656947"/><text x="68.6948%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (885,656,947 samples, 0.21%)</title><rect x="68.4448%" y="341" width="0.2058%" height="15" fill="rgb(235,159,4)" fg:x="294498487535" fg:w="885656947"/><text x="68.6948%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (913,741,199 samples, 0.21%)</title><rect x="68.4448%" y="405" width="0.2124%" height="15" fill="rgb(214,87,48)" fg:x="294498487535" fg:w="913741199"/><text x="68.6948%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (913,741,199 samples, 0.21%)</title><rect x="68.4448%" y="389" width="0.2124%" height="15" fill="rgb(246,198,24)" fg:x="294498487535" fg:w="913741199"/><text x="68.6948%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (308,926,772 samples, 0.07%)</title><rect x="68.6653%" y="389" width="0.0718%" height="15" fill="rgb(209,66,40)" fg:x="295447334049" fg:w="308926772"/><text x="68.9153%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (308,926,772 samples, 0.07%)</title><rect x="68.6653%" y="373" width="0.0718%" height="15" fill="rgb(233,147,39)" fg:x="295447334049" fg:w="308926772"/><text x="68.9153%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (308,926,772 samples, 0.07%)</title><rect x="68.6653%" y="357" width="0.0718%" height="15" fill="rgb(231,145,52)" fg:x="295447334049" fg:w="308926772"/><text x="68.9153%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (308,926,772 samples, 0.07%)</title><rect x="68.6653%" y="341" width="0.0718%" height="15" fill="rgb(206,20,26)" fg:x="295447334049" fg:w="308926772"/><text x="68.9153%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,440,320,924 samples, 0.33%)</title><rect x="68.6571%" y="405" width="0.3347%" height="15" fill="rgb(238,220,4)" fg:x="295412228734" fg:w="1440320924"/><text x="68.9071%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (90,270,810 samples, 0.02%)</title><rect x="68.9944%" y="389" width="0.0210%" height="15" fill="rgb(252,195,42)" fg:x="296863582757" fg:w="90270810"/><text x="69.2444%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (278,836,502 samples, 0.06%)</title><rect x="68.9944%" y="405" width="0.0648%" height="15" fill="rgb(209,10,6)" fg:x="296863582757" fg:w="278836502"/><text x="69.2444%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53,159,477 samples, 0.01%)</title><rect x="69.0592%" y="405" width="0.0124%" height="15" fill="rgb(229,3,52)" fg:x="297142419259" fg:w="53159477"/><text x="69.3092%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (8,244,733,980 samples, 1.92%)</title><rect x="67.4132%" y="421" width="1.9162%" height="15" fill="rgb(253,49,37)" fg:x="290060172710" fg:w="8244733980"/><text x="67.6632%" y="431.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (120,361,080 samples, 0.03%)</title><rect x="69.3294%" y="389" width="0.0280%" height="15" fill="rgb(240,103,49)" fg:x="298304906690" fg:w="120361080"/><text x="69.5794%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (120,361,080 samples, 0.03%)</title><rect x="69.3294%" y="373" width="0.0280%" height="15" fill="rgb(250,182,30)" fg:x="298304906690" fg:w="120361080"/><text x="69.5794%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (120,361,080 samples, 0.03%)</title><rect x="69.3294%" y="357" width="0.0280%" height="15" fill="rgb(248,8,30)" fg:x="298304906690" fg:w="120361080"/><text x="69.5794%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (120,361,080 samples, 0.03%)</title><rect x="69.3294%" y="341" width="0.0280%" height="15" fill="rgb(237,120,30)" fg:x="298304906690" fg:w="120361080"/><text x="69.5794%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (46,138,414 samples, 0.01%)</title><rect x="69.3574%" y="277" width="0.0107%" height="15" fill="rgb(221,146,34)" fg:x="298425267770" fg:w="46138414"/><text x="69.6074%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (46,138,414 samples, 0.01%)</title><rect x="69.3574%" y="261" width="0.0107%" height="15" fill="rgb(242,55,13)" fg:x="298425267770" fg:w="46138414"/><text x="69.6074%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (46,138,414 samples, 0.01%)</title><rect x="69.3574%" y="245" width="0.0107%" height="15" fill="rgb(242,112,31)" fg:x="298425267770" fg:w="46138414"/><text x="69.6074%" y="255.50"></text></g><g><title>alloc::raw_vec::layout_array (88,264,792 samples, 0.02%)</title><rect x="69.3574%" y="309" width="0.0205%" height="15" fill="rgb(249,192,27)" fg:x="298425267770" fg:w="88264792"/><text x="69.6074%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::repeat (88,264,792 samples, 0.02%)</title><rect x="69.3574%" y="293" width="0.0205%" height="15" fill="rgb(208,204,44)" fg:x="298425267770" fg:w="88264792"/><text x="69.6074%" y="303.50"></text></g><g><title>__rust_alloc (79,237,711 samples, 0.02%)</title><rect x="69.3779%" y="261" width="0.0184%" height="15" fill="rgb(208,93,54)" fg:x="298513532562" fg:w="79237711"/><text x="69.6279%" y="271.50"></text></g><g><title>tcache_get (117,352,053 samples, 0.03%)</title><rect x="69.4019%" y="245" width="0.0273%" height="15" fill="rgb(242,1,31)" fg:x="298616842489" fg:w="117352053"/><text x="69.6519%" y="255.50"></text></g><g><title>__GI___libc_malloc (455,366,086 samples, 0.11%)</title><rect x="69.4019%" y="261" width="0.1058%" height="15" fill="rgb(241,83,25)" fg:x="298616842489" fg:w="455366086"/><text x="69.6519%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (559,679,022 samples, 0.13%)</title><rect x="69.3779%" y="309" width="0.1301%" height="15" fill="rgb(205,169,50)" fg:x="298513532562" fg:w="559679022"/><text x="69.6279%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (559,679,022 samples, 0.13%)</title><rect x="69.3779%" y="293" width="0.1301%" height="15" fill="rgb(239,186,37)" fg:x="298513532562" fg:w="559679022"/><text x="69.6279%" y="303.50"></text></g><g><title>alloc::alloc::alloc (559,679,022 samples, 0.13%)</title><rect x="69.3779%" y="277" width="0.1301%" height="15" fill="rgb(205,221,10)" fg:x="298513532562" fg:w="559679022"/><text x="69.6279%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (723,169,489 samples, 0.17%)</title><rect x="69.3574%" y="357" width="0.1681%" height="15" fill="rgb(218,196,15)" fg:x="298425267770" fg:w="723169489"/><text x="69.6074%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (723,169,489 samples, 0.17%)</title><rect x="69.3574%" y="341" width="0.1681%" height="15" fill="rgb(218,196,35)" fg:x="298425267770" fg:w="723169489"/><text x="69.6074%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (723,169,489 samples, 0.17%)</title><rect x="69.3574%" y="325" width="0.1681%" height="15" fill="rgb(233,63,24)" fg:x="298425267770" fg:w="723169489"/><text x="69.6074%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (728,184,534 samples, 0.17%)</title><rect x="69.3574%" y="389" width="0.1692%" height="15" fill="rgb(225,8,4)" fg:x="298425267770" fg:w="728184534"/><text x="69.6074%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (728,184,534 samples, 0.17%)</title><rect x="69.3574%" y="373" width="0.1692%" height="15" fill="rgb(234,105,35)" fg:x="298425267770" fg:w="728184534"/><text x="69.6074%" y="383.50"></text></g><g><title>core::ptr::write (246,740,214 samples, 0.06%)</title><rect x="69.5306%" y="213" width="0.0573%" height="15" fill="rgb(236,21,32)" fg:x="299170503457" fg:w="246740214"/><text x="69.7806%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (257,773,313 samples, 0.06%)</title><rect x="69.5306%" y="261" width="0.0599%" height="15" fill="rgb(228,109,6)" fg:x="299170503457" fg:w="257773313"/><text x="69.7806%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (257,773,313 samples, 0.06%)</title><rect x="69.5306%" y="245" width="0.0599%" height="15" fill="rgb(229,215,31)" fg:x="299170503457" fg:w="257773313"/><text x="69.7806%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (257,773,313 samples, 0.06%)</title><rect x="69.5306%" y="229" width="0.0599%" height="15" fill="rgb(221,52,54)" fg:x="299170503457" fg:w="257773313"/><text x="69.7806%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (422,266,789 samples, 0.10%)</title><rect x="69.5266%" y="325" width="0.0981%" height="15" fill="rgb(252,129,43)" fg:x="299153452304" fg:w="422266789"/><text x="69.7766%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (422,266,789 samples, 0.10%)</title><rect x="69.5266%" y="309" width="0.0981%" height="15" fill="rgb(248,183,27)" fg:x="299153452304" fg:w="422266789"/><text x="69.7766%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (422,266,789 samples, 0.10%)</title><rect x="69.5266%" y="293" width="0.0981%" height="15" fill="rgb(250,0,22)" fg:x="299153452304" fg:w="422266789"/><text x="69.7766%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (422,266,789 samples, 0.10%)</title><rect x="69.5266%" y="277" width="0.0981%" height="15" fill="rgb(213,166,10)" fg:x="299153452304" fg:w="422266789"/><text x="69.7766%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (55,165,495 samples, 0.01%)</title><rect x="69.6248%" y="261" width="0.0128%" height="15" fill="rgb(207,163,36)" fg:x="299575719093" fg:w="55165495"/><text x="69.8748%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (60,180,540 samples, 0.01%)</title><rect x="69.6248%" y="277" width="0.0140%" height="15" fill="rgb(208,122,22)" fg:x="299575719093" fg:w="60180540"/><text x="69.8748%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (493,480,428 samples, 0.11%)</title><rect x="69.5266%" y="389" width="0.1147%" height="15" fill="rgb(207,104,49)" fg:x="299153452304" fg:w="493480428"/><text x="69.7766%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (493,480,428 samples, 0.11%)</title><rect x="69.5266%" y="373" width="0.1147%" height="15" fill="rgb(248,211,50)" fg:x="299153452304" fg:w="493480428"/><text x="69.7766%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (493,480,428 samples, 0.11%)</title><rect x="69.5266%" y="357" width="0.1147%" height="15" fill="rgb(217,13,45)" fg:x="299153452304" fg:w="493480428"/><text x="69.7766%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (493,480,428 samples, 0.11%)</title><rect x="69.5266%" y="341" width="0.1147%" height="15" fill="rgb(211,216,49)" fg:x="299153452304" fg:w="493480428"/><text x="69.7766%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (71,213,639 samples, 0.02%)</title><rect x="69.6248%" y="325" width="0.0166%" height="15" fill="rgb(221,58,53)" fg:x="299575719093" fg:w="71213639"/><text x="69.8748%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (71,213,639 samples, 0.02%)</title><rect x="69.6248%" y="309" width="0.0166%" height="15" fill="rgb(220,112,41)" fg:x="299575719093" fg:w="71213639"/><text x="69.8748%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (71,213,639 samples, 0.02%)</title><rect x="69.6248%" y="293" width="0.0166%" height="15" fill="rgb(236,38,28)" fg:x="299575719093" fg:w="71213639"/><text x="69.8748%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (1,704,112,291 samples, 0.40%)</title><rect x="69.3294%" y="421" width="0.3961%" height="15" fill="rgb(227,195,22)" fg:x="298304906690" fg:w="1704112291"/><text x="69.5794%" y="431.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (1,704,112,291 samples, 0.40%)</title><rect x="69.3294%" y="405" width="0.3961%" height="15" fill="rgb(214,55,33)" fg:x="298304906690" fg:w="1704112291"/><text x="69.5794%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (53,346,036,674 samples, 12.40%)</title><rect x="58.0270%" y="437" width="12.3982%" height="15" fill="rgb(248,80,13)" fg:x="249674015325" fg:w="53346036674"/><text x="58.2770%" y="447.50">chlang::board::Boar..</text></g><g><title>core::ptr::write (1,373,119,321 samples, 0.32%)</title><rect x="70.4253%" y="421" width="0.3191%" height="15" fill="rgb(238,52,6)" fg:x="303020051999" fg:w="1373119321"/><text x="70.6753%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,455,366,059 samples, 0.34%)</title><rect x="70.4253%" y="437" width="0.3382%" height="15" fill="rgb(224,198,47)" fg:x="303020051999" fg:w="1455366059"/><text x="70.6753%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (627,883,634 samples, 0.15%)</title><rect x="70.7696%" y="405" width="0.1459%" height="15" fill="rgb(233,171,20)" fg:x="304501496292" fg:w="627883634"/><text x="71.0196%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (627,883,634 samples, 0.15%)</title><rect x="70.7696%" y="389" width="0.1459%" height="15" fill="rgb(241,30,25)" fg:x="304501496292" fg:w="627883634"/><text x="71.0196%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (627,883,634 samples, 0.15%)</title><rect x="70.7696%" y="373" width="0.1459%" height="15" fill="rgb(207,171,38)" fg:x="304501496292" fg:w="627883634"/><text x="71.0196%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (627,883,634 samples, 0.15%)</title><rect x="70.7696%" y="357" width="0.1459%" height="15" fill="rgb(234,70,1)" fg:x="304501496292" fg:w="627883634"/><text x="71.0196%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (636,910,715 samples, 0.15%)</title><rect x="70.7696%" y="437" width="0.1480%" height="15" fill="rgb(232,178,18)" fg:x="304501496292" fg:w="636910715"/><text x="71.0196%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (636,910,715 samples, 0.15%)</title><rect x="70.7696%" y="421" width="0.1480%" height="15" fill="rgb(241,78,40)" fg:x="304501496292" fg:w="636910715"/><text x="71.0196%" y="431.50"></text></g><g><title>chlang::board::Board::make_move (258,564,687,101 samples, 60.09%)</title><rect x="12.3017%" y="453" width="60.0933%" height="15" fill="rgb(222,35,25)" fg:x="52930790948" fg:w="258564687101"/><text x="12.5517%" y="463.50">chlang::board::Board::make_move</text></g><g><title>__rust_dealloc (78,234,702 samples, 0.02%)</title><rect x="72.3957%" y="293" width="0.0182%" height="15" fill="rgb(207,92,16)" fg:x="311498487076" fg:w="78234702"/><text x="72.6457%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (101,303,909 samples, 0.02%)</title><rect x="72.4139%" y="277" width="0.0235%" height="15" fill="rgb(216,59,51)" fg:x="311576721778" fg:w="101303909"/><text x="72.6639%" y="287.50"></text></g><g><title>__rdl_dealloc (128,385,152 samples, 0.03%)</title><rect x="72.4139%" y="293" width="0.0298%" height="15" fill="rgb(213,80,28)" fg:x="311576721778" fg:w="128385152"/><text x="72.6639%" y="303.50"></text></g><g><title>tcache_put (104,312,936 samples, 0.02%)</title><rect x="72.4447%" y="261" width="0.0242%" height="15" fill="rgb(220,93,7)" fg:x="311709118966" fg:w="104312936"/><text x="72.6947%" y="271.50"></text></g><g><title>_int_free (617,853,544 samples, 0.14%)</title><rect x="72.4447%" y="277" width="0.1436%" height="15" fill="rgb(225,24,44)" fg:x="311709118966" fg:w="617853544"/><text x="72.6947%" y="287.50"></text></g><g><title>__GI___libc_free (849,548,623 samples, 0.20%)</title><rect x="72.4438%" y="293" width="0.1974%" height="15" fill="rgb(243,74,40)" fg:x="311705106930" fg:w="849548623"/><text x="72.6938%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (1,067,201,576 samples, 0.25%)</title><rect x="72.3950%" y="437" width="0.2480%" height="15" fill="rgb(228,39,7)" fg:x="311495478049" fg:w="1067201576"/><text x="72.6450%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,067,201,576 samples, 0.25%)</title><rect x="72.3950%" y="421" width="0.2480%" height="15" fill="rgb(227,79,8)" fg:x="311495478049" fg:w="1067201576"/><text x="72.6450%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (1,067,201,576 samples, 0.25%)</title><rect x="72.3950%" y="405" width="0.2480%" height="15" fill="rgb(236,58,11)" fg:x="311495478049" fg:w="1067201576"/><text x="72.6450%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,067,201,576 samples, 0.25%)</title><rect x="72.3950%" y="389" width="0.2480%" height="15" fill="rgb(249,63,35)" fg:x="311495478049" fg:w="1067201576"/><text x="72.6450%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,067,201,576 samples, 0.25%)</title><rect x="72.3950%" y="373" width="0.2480%" height="15" fill="rgb(252,114,16)" fg:x="311495478049" fg:w="1067201576"/><text x="72.6450%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,067,201,576 samples, 0.25%)</title><rect x="72.3950%" y="357" width="0.2480%" height="15" fill="rgb(254,151,24)" fg:x="311495478049" fg:w="1067201576"/><text x="72.6450%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,067,201,576 samples, 0.25%)</title><rect x="72.3950%" y="341" width="0.2480%" height="15" fill="rgb(253,54,39)" fg:x="311495478049" fg:w="1067201576"/><text x="72.6450%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,064,192,549 samples, 0.25%)</title><rect x="72.3957%" y="325" width="0.2473%" height="15" fill="rgb(243,25,45)" fg:x="311498487076" fg:w="1064192549"/><text x="72.6457%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1,064,192,549 samples, 0.25%)</title><rect x="72.3957%" y="309" width="0.2473%" height="15" fill="rgb(234,134,9)" fg:x="311498487076" fg:w="1064192549"/><text x="72.6457%" y="319.50"></text></g><g><title>_int_free (51,153,459 samples, 0.01%)</title><rect x="72.6496%" y="325" width="0.0119%" height="15" fill="rgb(227,166,31)" fg:x="312590763877" fg:w="51153459"/><text x="72.8996%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (100,300,900 samples, 0.02%)</title><rect x="72.6431%" y="389" width="0.0233%" height="15" fill="rgb(245,143,41)" fg:x="312562679625" fg:w="100300900"/><text x="72.8931%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (99,297,891 samples, 0.02%)</title><rect x="72.6433%" y="373" width="0.0231%" height="15" fill="rgb(238,181,32)" fg:x="312563682634" fg:w="99297891"/><text x="72.8933%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (99,297,891 samples, 0.02%)</title><rect x="72.6433%" y="357" width="0.0231%" height="15" fill="rgb(224,113,18)" fg:x="312563682634" fg:w="99297891"/><text x="72.8933%" y="367.50"></text></g><g><title>__GI___libc_free (72,216,648 samples, 0.02%)</title><rect x="72.6496%" y="341" width="0.0168%" height="15" fill="rgb(240,229,28)" fg:x="312590763877" fg:w="72216648"/><text x="72.8996%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Position&gt;&gt; (102,306,918 samples, 0.02%)</title><rect x="72.6431%" y="437" width="0.0238%" height="15" fill="rgb(250,185,3)" fg:x="312562679625" fg:w="102306918"/><text x="72.8931%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Position&gt;&gt; (102,306,918 samples, 0.02%)</title><rect x="72.6431%" y="421" width="0.0238%" height="15" fill="rgb(212,59,25)" fg:x="312562679625" fg:w="102306918"/><text x="72.8931%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102,306,918 samples, 0.02%)</title><rect x="72.6431%" y="405" width="0.0238%" height="15" fill="rgb(221,87,20)" fg:x="312562679625" fg:w="102306918"/><text x="72.8931%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (3,765,295,786 samples, 0.88%)</title><rect x="72.6669%" y="437" width="0.8751%" height="15" fill="rgb(213,74,28)" fg:x="312664986543" fg:w="3765295786"/><text x="72.9169%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (51,153,459 samples, 0.01%)</title><rect x="73.5420%" y="405" width="0.0119%" height="15" fill="rgb(224,132,34)" fg:x="316430282329" fg:w="51153459"/><text x="73.7920%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (202,607,818 samples, 0.05%)</title><rect x="73.5420%" y="437" width="0.0471%" height="15" fill="rgb(222,101,24)" fg:x="316430282329" fg:w="202607818"/><text x="73.7920%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (202,607,818 samples, 0.05%)</title><rect x="73.5420%" y="421" width="0.0471%" height="15" fill="rgb(254,142,4)" fg:x="316430282329" fg:w="202607818"/><text x="73.7920%" y="431.50"></text></g><g><title>_int_free (81,243,729 samples, 0.02%)</title><rect x="73.6023%" y="293" width="0.0189%" height="15" fill="rgb(230,229,49)" fg:x="316690061660" fg:w="81243729"/><text x="73.8523%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (179,538,611 samples, 0.04%)</title><rect x="73.5890%" y="357" width="0.0417%" height="15" fill="rgb(238,70,47)" fg:x="316632890147" fg:w="179538611"/><text x="73.8390%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (176,529,584 samples, 0.04%)</title><rect x="73.5897%" y="341" width="0.0410%" height="15" fill="rgb(231,160,17)" fg:x="316635899174" fg:w="176529584"/><text x="73.8397%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (176,529,584 samples, 0.04%)</title><rect x="73.5897%" y="325" width="0.0410%" height="15" fill="rgb(218,68,53)" fg:x="316635899174" fg:w="176529584"/><text x="73.8397%" y="335.50"></text></g><g><title>__GI___libc_free (122,367,098 samples, 0.03%)</title><rect x="73.6023%" y="309" width="0.0284%" height="15" fill="rgb(236,111,10)" fg:x="316690061660" fg:w="122367098"/><text x="73.8523%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (181,544,629 samples, 0.04%)</title><rect x="73.5890%" y="421" width="0.0422%" height="15" fill="rgb(224,34,41)" fg:x="316632890147" fg:w="181544629"/><text x="73.8390%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (181,544,629 samples, 0.04%)</title><rect x="73.5890%" y="405" width="0.0422%" height="15" fill="rgb(241,118,19)" fg:x="316632890147" fg:w="181544629"/><text x="73.8390%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (181,544,629 samples, 0.04%)</title><rect x="73.5890%" y="389" width="0.0422%" height="15" fill="rgb(238,129,25)" fg:x="316632890147" fg:w="181544629"/><text x="73.8390%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181,544,629 samples, 0.04%)</title><rect x="73.5890%" y="373" width="0.0422%" height="15" fill="rgb(238,22,31)" fg:x="316632890147" fg:w="181544629"/><text x="73.8390%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (3,708,124,273 samples, 0.86%)</title><rect x="73.6312%" y="389" width="0.8618%" height="15" fill="rgb(222,174,48)" fg:x="316814434776" fg:w="3708124273"/><text x="73.8812%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (3,710,130,291 samples, 0.86%)</title><rect x="73.6312%" y="405" width="0.8623%" height="15" fill="rgb(206,152,40)" fg:x="316814434776" fg:w="3710130291"/><text x="73.8812%" y="415.50"></text></g><g><title>chlang::board::Board::piece_type (4,349,047,024 samples, 1.01%)</title><rect x="73.6312%" y="421" width="1.0108%" height="15" fill="rgb(218,99,54)" fg:x="316814434776" fg:w="4349047024"/><text x="73.8812%" y="431.50"></text></g><g><title>chlang::board::Position::valid (63,189,567 samples, 0.01%)</title><rect x="74.6420%" y="405" width="0.0147%" height="15" fill="rgb(220,174,26)" fg:x="321163481800" fg:w="63189567"/><text x="74.8920%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,291,875,592 samples, 0.30%)</title><rect x="74.6567%" y="389" width="0.3002%" height="15" fill="rgb(245,116,9)" fg:x="321226671367" fg:w="1291875592"/><text x="74.9067%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (1,327,983,916 samples, 0.31%)</title><rect x="74.6567%" y="405" width="0.3086%" height="15" fill="rgb(209,72,35)" fg:x="321226671367" fg:w="1327983916"/><text x="74.9067%" y="415.50"></text></g><g><title>__rust_alloc (43,129,387 samples, 0.01%)</title><rect x="74.9653%" y="277" width="0.0100%" height="15" fill="rgb(226,126,21)" fg:x="322554655283" fg:w="43129387"/><text x="75.2153%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (239,719,151 samples, 0.06%)</title><rect x="74.9653%" y="325" width="0.0557%" height="15" fill="rgb(227,192,1)" fg:x="322554655283" fg:w="239719151"/><text x="75.2153%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (239,719,151 samples, 0.06%)</title><rect x="74.9653%" y="309" width="0.0557%" height="15" fill="rgb(237,180,29)" fg:x="322554655283" fg:w="239719151"/><text x="75.2153%" y="319.50"></text></g><g><title>alloc::alloc::alloc (239,719,151 samples, 0.06%)</title><rect x="74.9653%" y="293" width="0.0557%" height="15" fill="rgb(230,197,35)" fg:x="322554655283" fg:w="239719151"/><text x="75.2153%" y="303.50"></text></g><g><title>__GI___libc_malloc (187,562,683 samples, 0.04%)</title><rect x="74.9774%" y="277" width="0.0436%" height="15" fill="rgb(246,193,31)" fg:x="322606811751" fg:w="187562683"/><text x="75.2274%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (273,821,457 samples, 0.06%)</title><rect x="74.9653%" y="373" width="0.0636%" height="15" fill="rgb(241,36,4)" fg:x="322554655283" fg:w="273821457"/><text x="75.2153%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (273,821,457 samples, 0.06%)</title><rect x="74.9653%" y="357" width="0.0636%" height="15" fill="rgb(241,130,17)" fg:x="322554655283" fg:w="273821457"/><text x="75.2153%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (273,821,457 samples, 0.06%)</title><rect x="74.9653%" y="341" width="0.0636%" height="15" fill="rgb(206,137,32)" fg:x="322554655283" fg:w="273821457"/><text x="75.2153%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (281,845,529 samples, 0.07%)</title><rect x="74.9653%" y="405" width="0.0655%" height="15" fill="rgb(237,228,51)" fg:x="322554655283" fg:w="281845529"/><text x="75.2153%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (281,845,529 samples, 0.07%)</title><rect x="74.9653%" y="389" width="0.0655%" height="15" fill="rgb(243,6,42)" fg:x="322554655283" fg:w="281845529"/><text x="75.2153%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (202,607,818 samples, 0.05%)</title><rect x="75.0308%" y="405" width="0.0471%" height="15" fill="rgb(251,74,28)" fg:x="322836500812" fg:w="202607818"/><text x="75.2808%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (111,333,999 samples, 0.03%)</title><rect x="75.0779%" y="405" width="0.0259%" height="15" fill="rgb(218,20,49)" fg:x="323039108630" fg:w="111333999"/><text x="75.3279%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45,135,405 samples, 0.01%)</title><rect x="75.1038%" y="405" width="0.0105%" height="15" fill="rgb(238,28,14)" fg:x="323150442629" fg:w="45135405"/><text x="75.3538%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (2,456,369,041 samples, 0.57%)</title><rect x="74.6420%" y="421" width="0.5709%" height="15" fill="rgb(229,40,46)" fg:x="321163481800" fg:w="2456369041"/><text x="74.8920%" y="431.50"></text></g><g><title>__rust_dealloc (83,249,747 samples, 0.02%)</title><rect x="75.2185%" y="293" width="0.0193%" height="15" fill="rgb(244,195,20)" fg:x="323643923057" fg:w="83249747"/><text x="75.4685%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (78,234,702 samples, 0.02%)</title><rect x="75.2378%" y="277" width="0.0182%" height="15" fill="rgb(253,56,35)" fg:x="323727172804" fg:w="78234702"/><text x="75.4878%" y="287.50"></text></g><g><title>__rdl_dealloc (105,315,945 samples, 0.02%)</title><rect x="75.2378%" y="293" width="0.0245%" height="15" fill="rgb(210,149,44)" fg:x="323727172804" fg:w="105315945"/><text x="75.4878%" y="303.50"></text></g><g><title>tcache_put (86,258,774 samples, 0.02%)</title><rect x="75.2623%" y="261" width="0.0200%" height="15" fill="rgb(240,135,12)" fg:x="323832488749" fg:w="86258774"/><text x="75.5123%" y="271.50"></text></g><g><title>_int_free (365,095,276 samples, 0.08%)</title><rect x="75.2623%" y="277" width="0.0849%" height="15" fill="rgb(251,24,50)" fg:x="323832488749" fg:w="365095276"/><text x="75.5123%" y="287.50"></text></g><g><title>__GI___libc_free (526,579,725 samples, 0.12%)</title><rect x="75.2623%" y="293" width="0.1224%" height="15" fill="rgb(243,200,47)" fg:x="323832488749" fg:w="526579725"/><text x="75.5123%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (740,220,642 samples, 0.17%)</title><rect x="75.2129%" y="341" width="0.1720%" height="15" fill="rgb(224,166,26)" fg:x="323619850841" fg:w="740220642"/><text x="75.4629%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (716,148,426 samples, 0.17%)</title><rect x="75.2185%" y="325" width="0.1664%" height="15" fill="rgb(233,0,47)" fg:x="323643923057" fg:w="716148426"/><text x="75.4685%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (716,148,426 samples, 0.17%)</title><rect x="75.2185%" y="309" width="0.1664%" height="15" fill="rgb(253,80,5)" fg:x="323643923057" fg:w="716148426"/><text x="75.4685%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (779,337,993 samples, 0.18%)</title><rect x="75.2129%" y="405" width="0.1811%" height="15" fill="rgb(214,133,25)" fg:x="323619850841" fg:w="779337993"/><text x="75.4629%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (779,337,993 samples, 0.18%)</title><rect x="75.2129%" y="389" width="0.1811%" height="15" fill="rgb(209,27,14)" fg:x="323619850841" fg:w="779337993"/><text x="75.4629%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (779,337,993 samples, 0.18%)</title><rect x="75.2129%" y="373" width="0.1811%" height="15" fill="rgb(219,102,51)" fg:x="323619850841" fg:w="779337993"/><text x="75.4629%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (779,337,993 samples, 0.18%)</title><rect x="75.2129%" y="357" width="0.1811%" height="15" fill="rgb(237,18,16)" fg:x="323619850841" fg:w="779337993"/><text x="75.4629%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (202,607,818 samples, 0.05%)</title><rect x="75.3940%" y="405" width="0.0471%" height="15" fill="rgb(241,85,17)" fg:x="324399188834" fg:w="202607818"/><text x="75.6440%" y="415.50"></text></g><g><title>chlang::cmove::Move::to (72,216,648 samples, 0.02%)</title><rect x="75.4411%" y="405" width="0.0168%" height="15" fill="rgb(236,90,42)" fg:x="324601796652" fg:w="72216648"/><text x="75.6911%" y="415.50"></text></g><g><title>chlang::board::Position::valid (118,355,062 samples, 0.03%)</title><rect x="75.4656%" y="405" width="0.0275%" height="15" fill="rgb(249,57,21)" fg:x="324707112597" fg:w="118355062"/><text x="75.7156%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,420,260,744 samples, 0.33%)</title><rect x="75.4931%" y="389" width="0.3301%" height="15" fill="rgb(243,12,36)" fg:x="324825467659" fg:w="1420260744"/><text x="75.7431%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (1,470,411,194 samples, 0.34%)</title><rect x="75.4931%" y="405" width="0.3417%" height="15" fill="rgb(253,128,47)" fg:x="324825467659" fg:w="1470411194"/><text x="75.7431%" y="415.50"></text></g><g><title>__rust_alloc (87,261,783 samples, 0.02%)</title><rect x="75.8348%" y="277" width="0.0203%" height="15" fill="rgb(207,33,20)" fg:x="326295878853" fg:w="87261783"/><text x="76.0848%" y="287.50"></text></g><g><title>tcache_get (120,361,080 samples, 0.03%)</title><rect x="75.8584%" y="261" width="0.0280%" height="15" fill="rgb(233,215,35)" fg:x="326397182762" fg:w="120361080"/><text x="76.1084%" y="271.50"></text></g><g><title>__GI___libc_malloc (467,402,194 samples, 0.11%)</title><rect x="75.8584%" y="277" width="0.1086%" height="15" fill="rgb(249,188,52)" fg:x="326397182762" fg:w="467402194"/><text x="76.1084%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (574,724,157 samples, 0.13%)</title><rect x="75.8348%" y="325" width="0.1336%" height="15" fill="rgb(225,12,32)" fg:x="326295878853" fg:w="574724157"/><text x="76.0848%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (574,724,157 samples, 0.13%)</title><rect x="75.8348%" y="309" width="0.1336%" height="15" fill="rgb(247,98,14)" fg:x="326295878853" fg:w="574724157"/><text x="76.0848%" y="319.50"></text></g><g><title>alloc::alloc::alloc (574,724,157 samples, 0.13%)</title><rect x="75.8348%" y="293" width="0.1336%" height="15" fill="rgb(247,219,48)" fg:x="326295878853" fg:w="574724157"/><text x="76.0848%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (601,805,400 samples, 0.14%)</title><rect x="75.8348%" y="373" width="0.1399%" height="15" fill="rgb(253,60,48)" fg:x="326295878853" fg:w="601805400"/><text x="76.0848%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (601,805,400 samples, 0.14%)</title><rect x="75.8348%" y="357" width="0.1399%" height="15" fill="rgb(245,15,52)" fg:x="326295878853" fg:w="601805400"/><text x="76.0848%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (601,805,400 samples, 0.14%)</title><rect x="75.8348%" y="341" width="0.1399%" height="15" fill="rgb(220,133,28)" fg:x="326295878853" fg:w="601805400"/><text x="76.0848%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (614,844,517 samples, 0.14%)</title><rect x="75.8348%" y="405" width="0.1429%" height="15" fill="rgb(217,180,4)" fg:x="326295878853" fg:w="614844517"/><text x="76.0848%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (614,844,517 samples, 0.14%)</title><rect x="75.8348%" y="389" width="0.1429%" height="15" fill="rgb(251,24,1)" fg:x="326295878853" fg:w="614844517"/><text x="76.0848%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (81,243,729 samples, 0.02%)</title><rect x="75.9777%" y="405" width="0.0189%" height="15" fill="rgb(212,185,49)" fg:x="326910723370" fg:w="81243729"/><text x="76.2277%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (87,261,783 samples, 0.02%)</title><rect x="75.9966%" y="405" width="0.0203%" height="15" fill="rgb(215,175,22)" fg:x="326991967099" fg:w="87261783"/><text x="76.2466%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (129,388,161 samples, 0.03%)</title><rect x="76.0169%" y="373" width="0.0301%" height="15" fill="rgb(250,205,14)" fg:x="327079228882" fg:w="129388161"/><text x="76.2669%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (129,388,161 samples, 0.03%)</title><rect x="76.0169%" y="357" width="0.0301%" height="15" fill="rgb(225,211,22)" fg:x="327079228882" fg:w="129388161"/><text x="76.2669%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129,388,161 samples, 0.03%)</title><rect x="76.0169%" y="341" width="0.0301%" height="15" fill="rgb(251,179,42)" fg:x="327079228882" fg:w="129388161"/><text x="76.2669%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129,388,161 samples, 0.03%)</title><rect x="76.0169%" y="325" width="0.0301%" height="15" fill="rgb(208,216,51)" fg:x="327079228882" fg:w="129388161"/><text x="76.2669%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (55,165,495 samples, 0.01%)</title><rect x="76.0470%" y="261" width="0.0128%" height="15" fill="rgb(235,36,11)" fg:x="327208617043" fg:w="55165495"/><text x="76.2970%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (55,165,495 samples, 0.01%)</title><rect x="76.0470%" y="245" width="0.0128%" height="15" fill="rgb(213,189,28)" fg:x="327208617043" fg:w="55165495"/><text x="76.2970%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (55,165,495 samples, 0.01%)</title><rect x="76.0470%" y="229" width="0.0128%" height="15" fill="rgb(227,203,42)" fg:x="327208617043" fg:w="55165495"/><text x="76.2970%" y="239.50"></text></g><g><title>alloc::raw_vec::layout_array (90,270,810 samples, 0.02%)</title><rect x="76.0470%" y="293" width="0.0210%" height="15" fill="rgb(244,72,36)" fg:x="327208617043" fg:w="90270810"/><text x="76.2970%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::repeat (90,270,810 samples, 0.02%)</title><rect x="76.0470%" y="277" width="0.0210%" height="15" fill="rgb(213,53,17)" fg:x="327208617043" fg:w="90270810"/><text x="76.2970%" y="287.50"></text></g><g><title>__rust_alloc (54,162,486 samples, 0.01%)</title><rect x="76.0679%" y="245" width="0.0126%" height="15" fill="rgb(207,167,3)" fg:x="327298887853" fg:w="54162486"/><text x="76.3179%" y="255.50"></text></g><g><title>tcache_get (93,279,837 samples, 0.02%)</title><rect x="76.0847%" y="229" width="0.0217%" height="15" fill="rgb(216,98,30)" fg:x="327371104501" fg:w="93279837"/><text x="76.3347%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (391,173,510 samples, 0.09%)</title><rect x="76.0679%" y="293" width="0.0909%" height="15" fill="rgb(236,123,15)" fg:x="327298887853" fg:w="391173510"/><text x="76.3179%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (391,173,510 samples, 0.09%)</title><rect x="76.0679%" y="277" width="0.0909%" height="15" fill="rgb(248,81,50)" fg:x="327298887853" fg:w="391173510"/><text x="76.3179%" y="287.50"></text></g><g><title>alloc::alloc::alloc (391,173,510 samples, 0.09%)</title><rect x="76.0679%" y="261" width="0.0909%" height="15" fill="rgb(214,120,4)" fg:x="327298887853" fg:w="391173510"/><text x="76.3179%" y="271.50"></text></g><g><title>__GI___libc_malloc (318,956,862 samples, 0.07%)</title><rect x="76.0847%" y="245" width="0.0741%" height="15" fill="rgb(208,179,34)" fg:x="327371104501" fg:w="318956862"/><text x="76.3347%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (505,516,536 samples, 0.12%)</title><rect x="76.0470%" y="341" width="0.1175%" height="15" fill="rgb(227,140,7)" fg:x="327208617043" fg:w="505516536"/><text x="76.2970%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (505,516,536 samples, 0.12%)</title><rect x="76.0470%" y="325" width="0.1175%" height="15" fill="rgb(214,22,6)" fg:x="327208617043" fg:w="505516536"/><text x="76.2970%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (505,516,536 samples, 0.12%)</title><rect x="76.0470%" y="309" width="0.1175%" height="15" fill="rgb(207,137,27)" fg:x="327208617043" fg:w="505516536"/><text x="76.2970%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (527,582,734 samples, 0.12%)</title><rect x="76.0470%" y="373" width="0.1226%" height="15" fill="rgb(210,8,46)" fg:x="327208617043" fg:w="527582734"/><text x="76.2970%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (527,582,734 samples, 0.12%)</title><rect x="76.0470%" y="357" width="0.1226%" height="15" fill="rgb(240,16,54)" fg:x="327208617043" fg:w="527582734"/><text x="76.2970%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (85,255,765 samples, 0.02%)</title><rect x="76.1696%" y="309" width="0.0198%" height="15" fill="rgb(211,209,29)" fg:x="327736199777" fg:w="85255765"/><text x="76.4196%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85,255,765 samples, 0.02%)</title><rect x="76.1696%" y="293" width="0.0198%" height="15" fill="rgb(226,228,24)" fg:x="327736199777" fg:w="85255765"/><text x="76.4196%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85,255,765 samples, 0.02%)</title><rect x="76.1696%" y="277" width="0.0198%" height="15" fill="rgb(222,84,9)" fg:x="327736199777" fg:w="85255765"/><text x="76.4196%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85,255,765 samples, 0.02%)</title><rect x="76.1696%" y="261" width="0.0198%" height="15" fill="rgb(234,203,30)" fg:x="327736199777" fg:w="85255765"/><text x="76.4196%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (113,340,017 samples, 0.03%)</title><rect x="76.1696%" y="373" width="0.0263%" height="15" fill="rgb(238,109,14)" fg:x="327736199777" fg:w="113340017"/><text x="76.4196%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (113,340,017 samples, 0.03%)</title><rect x="76.1696%" y="357" width="0.0263%" height="15" fill="rgb(233,206,34)" fg:x="327736199777" fg:w="113340017"/><text x="76.4196%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (113,340,017 samples, 0.03%)</title><rect x="76.1696%" y="341" width="0.0263%" height="15" fill="rgb(220,167,47)" fg:x="327736199777" fg:w="113340017"/><text x="76.4196%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (113,340,017 samples, 0.03%)</title><rect x="76.1696%" y="325" width="0.0263%" height="15" fill="rgb(238,105,10)" fg:x="327736199777" fg:w="113340017"/><text x="76.4196%" y="335.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (1,146,439,287 samples, 0.27%)</title><rect x="76.0169%" y="389" width="0.2664%" height="15" fill="rgb(213,227,17)" fg:x="327079228882" fg:w="1146439287"/><text x="76.2669%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (1,155,466,368 samples, 0.27%)</title><rect x="76.0169%" y="405" width="0.2685%" height="15" fill="rgb(217,132,38)" fg:x="327079228882" fg:w="1155466368"/><text x="76.2669%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (5,281,845,394 samples, 1.23%)</title><rect x="75.2129%" y="421" width="1.2276%" height="15" fill="rgb(242,146,4)" fg:x="323619850841" fg:w="5281845394"/><text x="75.4629%" y="431.50"></text></g><g><title>chlang::board::Position::valid (50,150,450 samples, 0.01%)</title><rect x="76.4451%" y="405" width="0.0117%" height="15" fill="rgb(212,61,9)" fg:x="328921756415" fg:w="50150450"/><text x="76.6951%" y="415.50"></text></g><g><title>__GI___libc_malloc (114,343,026 samples, 0.03%)</title><rect x="76.4649%" y="277" width="0.0266%" height="15" fill="rgb(247,126,22)" fg:x="329007012180" fg:w="114343026"/><text x="76.7149%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (155,466,395 samples, 0.04%)</title><rect x="76.4568%" y="325" width="0.0361%" height="15" fill="rgb(220,196,2)" fg:x="328971906865" fg:w="155466395"/><text x="76.7068%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (155,466,395 samples, 0.04%)</title><rect x="76.4568%" y="309" width="0.0361%" height="15" fill="rgb(208,46,4)" fg:x="328971906865" fg:w="155466395"/><text x="76.7068%" y="319.50"></text></g><g><title>alloc::alloc::alloc (155,466,395 samples, 0.04%)</title><rect x="76.4568%" y="293" width="0.0361%" height="15" fill="rgb(252,104,46)" fg:x="328971906865" fg:w="155466395"/><text x="76.7068%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (180,541,620 samples, 0.04%)</title><rect x="76.4568%" y="405" width="0.0420%" height="15" fill="rgb(237,152,48)" fg:x="328971906865" fg:w="180541620"/><text x="76.7068%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (180,541,620 samples, 0.04%)</title><rect x="76.4568%" y="389" width="0.0420%" height="15" fill="rgb(221,59,37)" fg:x="328971906865" fg:w="180541620"/><text x="76.7068%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (180,541,620 samples, 0.04%)</title><rect x="76.4568%" y="373" width="0.0420%" height="15" fill="rgb(209,202,51)" fg:x="328971906865" fg:w="180541620"/><text x="76.7068%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (180,541,620 samples, 0.04%)</title><rect x="76.4568%" y="357" width="0.0420%" height="15" fill="rgb(228,81,30)" fg:x="328971906865" fg:w="180541620"/><text x="76.7068%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (180,541,620 samples, 0.04%)</title><rect x="76.4568%" y="341" width="0.0420%" height="15" fill="rgb(227,42,39)" fg:x="328971906865" fg:w="180541620"/><text x="76.7068%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (96,288,864 samples, 0.02%)</title><rect x="76.4987%" y="405" width="0.0224%" height="15" fill="rgb(221,26,2)" fg:x="329152448485" fg:w="96288864"/><text x="76.7487%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (439,317,942 samples, 0.10%)</title><rect x="76.4404%" y="421" width="0.1021%" height="15" fill="rgb(254,61,31)" fg:x="328901696235" fg:w="439317942"/><text x="76.6904%" y="431.50"></text></g><g><title>__GI___libc_free (51,153,459 samples, 0.01%)</title><rect x="76.5621%" y="245" width="0.0119%" height="15" fill="rgb(222,173,38)" fg:x="329425266933" fg:w="51153459"/><text x="76.8121%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (97,291,873 samples, 0.02%)</title><rect x="76.5516%" y="389" width="0.0226%" height="15" fill="rgb(218,50,12)" fg:x="329380131528" fg:w="97291873"/><text x="76.8016%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97,291,873 samples, 0.02%)</title><rect x="76.5516%" y="373" width="0.0226%" height="15" fill="rgb(223,88,40)" fg:x="329380131528" fg:w="97291873"/><text x="76.8016%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (97,291,873 samples, 0.02%)</title><rect x="76.5516%" y="357" width="0.0226%" height="15" fill="rgb(237,54,19)" fg:x="329380131528" fg:w="97291873"/><text x="76.8016%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97,291,873 samples, 0.02%)</title><rect x="76.5516%" y="341" width="0.0226%" height="15" fill="rgb(251,129,25)" fg:x="329380131528" fg:w="97291873"/><text x="76.8016%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (97,291,873 samples, 0.02%)</title><rect x="76.5516%" y="325" width="0.0226%" height="15" fill="rgb(238,97,19)" fg:x="329380131528" fg:w="97291873"/><text x="76.8016%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97,291,873 samples, 0.02%)</title><rect x="76.5516%" y="309" width="0.0226%" height="15" fill="rgb(240,169,18)" fg:x="329380131528" fg:w="97291873"/><text x="76.8016%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (97,291,873 samples, 0.02%)</title><rect x="76.5516%" y="293" width="0.0226%" height="15" fill="rgb(230,187,49)" fg:x="329380131528" fg:w="97291873"/><text x="76.8016%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (96,288,864 samples, 0.02%)</title><rect x="76.5519%" y="277" width="0.0224%" height="15" fill="rgb(209,44,26)" fg:x="329381134537" fg:w="96288864"/><text x="76.8019%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (96,288,864 samples, 0.02%)</title><rect x="76.5519%" y="261" width="0.0224%" height="15" fill="rgb(244,0,6)" fg:x="329381134537" fg:w="96288864"/><text x="76.8019%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (324,974,916 samples, 0.08%)</title><rect x="76.5815%" y="357" width="0.0755%" height="15" fill="rgb(248,18,21)" fg:x="329508516680" fg:w="324974916"/><text x="76.8315%" y="367.50"></text></g><g><title>chlang::board::Position::bitboard (373,119,348 samples, 0.09%)</title><rect x="76.5815%" y="373" width="0.0867%" height="15" fill="rgb(245,180,19)" fg:x="329508516680" fg:w="373119348"/><text x="76.8315%" y="383.50"></text></g><g><title>chlang::board::Board::piece_type (421,263,780 samples, 0.10%)</title><rect x="76.5815%" y="389" width="0.0979%" height="15" fill="rgb(252,118,36)" fg:x="329508516680" fg:w="421263780"/><text x="76.8315%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (65,195,585 samples, 0.02%)</title><rect x="76.6810%" y="357" width="0.0152%" height="15" fill="rgb(210,224,19)" fg:x="329936801523" fg:w="65195585"/><text x="76.9310%" y="367.50"></text></g><g><title>chlang::board::Position::bitboard (68,204,612 samples, 0.02%)</title><rect x="76.6810%" y="373" width="0.0159%" height="15" fill="rgb(218,30,24)" fg:x="329936801523" fg:w="68204612"/><text x="76.9310%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (128,385,152 samples, 0.03%)</title><rect x="76.6794%" y="389" width="0.0298%" height="15" fill="rgb(219,75,50)" fg:x="329929780460" fg:w="128385152"/><text x="76.9294%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (108,324,972 samples, 0.03%)</title><rect x="76.7092%" y="389" width="0.0252%" height="15" fill="rgb(234,72,50)" fg:x="330058165612" fg:w="108324972"/><text x="76.9592%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (68,204,612 samples, 0.02%)</title><rect x="76.7493%" y="389" width="0.0159%" height="15" fill="rgb(219,100,48)" fg:x="330230683160" fg:w="68204612"/><text x="76.9993%" y="399.50"></text></g><g><title>chlang::board::Board::attacked_by_color (957,873,595 samples, 0.22%)</title><rect x="76.5516%" y="405" width="0.2226%" height="15" fill="rgb(253,5,41)" fg:x="329380131528" fg:w="957873595"/><text x="76.8016%" y="415.50"></text></g><g><title>__GI___libc_malloc (87,261,783 samples, 0.02%)</title><rect x="76.7775%" y="277" width="0.0203%" height="15" fill="rgb(247,181,11)" fg:x="330352047249" fg:w="87261783"/><text x="77.0275%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (105,315,945 samples, 0.02%)</title><rect x="76.7743%" y="325" width="0.0245%" height="15" fill="rgb(222,223,25)" fg:x="330338005123" fg:w="105315945"/><text x="77.0243%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (105,315,945 samples, 0.02%)</title><rect x="76.7743%" y="309" width="0.0245%" height="15" fill="rgb(214,198,28)" fg:x="330338005123" fg:w="105315945"/><text x="77.0243%" y="319.50"></text></g><g><title>alloc::alloc::alloc (105,315,945 samples, 0.02%)</title><rect x="76.7743%" y="293" width="0.0245%" height="15" fill="rgb(230,46,43)" fg:x="330338005123" fg:w="105315945"/><text x="77.0243%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (113,340,017 samples, 0.03%)</title><rect x="76.7743%" y="373" width="0.0263%" height="15" fill="rgb(233,65,53)" fg:x="330338005123" fg:w="113340017"/><text x="77.0243%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (113,340,017 samples, 0.03%)</title><rect x="76.7743%" y="357" width="0.0263%" height="15" fill="rgb(221,121,27)" fg:x="330338005123" fg:w="113340017"/><text x="77.0243%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (113,340,017 samples, 0.03%)</title><rect x="76.7743%" y="341" width="0.0263%" height="15" fill="rgb(247,70,47)" fg:x="330338005123" fg:w="113340017"/><text x="77.0243%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (116,349,044 samples, 0.03%)</title><rect x="76.7743%" y="405" width="0.0270%" height="15" fill="rgb(228,85,35)" fg:x="330338005123" fg:w="116349044"/><text x="77.0243%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (116,349,044 samples, 0.03%)</title><rect x="76.7743%" y="389" width="0.0270%" height="15" fill="rgb(209,50,18)" fg:x="330338005123" fg:w="116349044"/><text x="77.0243%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46,138,414 samples, 0.01%)</title><rect x="76.8013%" y="405" width="0.0107%" height="15" fill="rgb(250,19,35)" fg:x="330454354167" fg:w="46138414"/><text x="77.0513%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (1,257,773,286 samples, 0.29%)</title><rect x="76.5426%" y="421" width="0.2923%" height="15" fill="rgb(253,107,29)" fg:x="329341014177" fg:w="1257773286"/><text x="76.7926%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (731,193,561 samples, 0.17%)</title><rect x="76.8435%" y="389" width="0.1699%" height="15" fill="rgb(252,179,29)" fg:x="330635898796" fg:w="731193561"/><text x="77.0935%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (752,256,750 samples, 0.17%)</title><rect x="76.8435%" y="405" width="0.1748%" height="15" fill="rgb(238,194,6)" fg:x="330635898796" fg:w="752256750"/><text x="77.0935%" y="415.50"></text></g><g><title>__GI___libc_malloc (138,415,242 samples, 0.03%)</title><rect x="77.0253%" y="277" width="0.0322%" height="15" fill="rgb(238,164,29)" fg:x="331418245816" fg:w="138415242"/><text x="77.2753%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (169,508,521 samples, 0.04%)</title><rect x="77.0183%" y="325" width="0.0394%" height="15" fill="rgb(224,25,9)" fg:x="331388155546" fg:w="169508521"/><text x="77.2683%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (169,508,521 samples, 0.04%)</title><rect x="77.0183%" y="309" width="0.0394%" height="15" fill="rgb(244,153,23)" fg:x="331388155546" fg:w="169508521"/><text x="77.2683%" y="319.50"></text></g><g><title>alloc::alloc::alloc (169,508,521 samples, 0.04%)</title><rect x="77.0183%" y="293" width="0.0394%" height="15" fill="rgb(212,203,14)" fg:x="331388155546" fg:w="169508521"/><text x="77.2683%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (187,562,683 samples, 0.04%)</title><rect x="77.0183%" y="373" width="0.0436%" height="15" fill="rgb(220,164,20)" fg:x="331388155546" fg:w="187562683"/><text x="77.2683%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (187,562,683 samples, 0.04%)</title><rect x="77.0183%" y="357" width="0.0436%" height="15" fill="rgb(222,203,48)" fg:x="331388155546" fg:w="187562683"/><text x="77.2683%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (187,562,683 samples, 0.04%)</title><rect x="77.0183%" y="341" width="0.0436%" height="15" fill="rgb(215,159,22)" fg:x="331388155546" fg:w="187562683"/><text x="77.2683%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (194,583,746 samples, 0.05%)</title><rect x="77.0183%" y="405" width="0.0452%" height="15" fill="rgb(216,183,47)" fg:x="331388155546" fg:w="194583746"/><text x="77.2683%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (194,583,746 samples, 0.05%)</title><rect x="77.0183%" y="389" width="0.0452%" height="15" fill="rgb(229,195,25)" fg:x="331388155546" fg:w="194583746"/><text x="77.2683%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (189,568,701 samples, 0.04%)</title><rect x="77.0636%" y="405" width="0.0441%" height="15" fill="rgb(224,132,51)" fg:x="331582739292" fg:w="189568701"/><text x="77.3136%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (55,165,495 samples, 0.01%)</title><rect x="77.1083%" y="405" width="0.0128%" height="15" fill="rgb(240,63,7)" fg:x="331775317020" fg:w="55165495"/><text x="77.3583%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (1,518,555,626 samples, 0.35%)</title><rect x="76.8349%" y="421" width="0.3529%" height="15" fill="rgb(249,182,41)" fg:x="330598787463" fg:w="1518555626"/><text x="77.0849%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (73,219,657 samples, 0.02%)</title><rect x="77.1929%" y="309" width="0.0170%" height="15" fill="rgb(243,47,26)" fg:x="332139409287" fg:w="73219657"/><text x="77.4429%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (73,219,657 samples, 0.02%)</title><rect x="77.1929%" y="293" width="0.0170%" height="15" fill="rgb(233,48,2)" fg:x="332139409287" fg:w="73219657"/><text x="77.4429%" y="303.50"></text></g><g><title>alloc::alloc::alloc (73,219,657 samples, 0.02%)</title><rect x="77.1929%" y="277" width="0.0170%" height="15" fill="rgb(244,165,34)" fg:x="332139409287" fg:w="73219657"/><text x="77.4429%" y="287.50"></text></g><g><title>__GI___libc_malloc (56,168,504 samples, 0.01%)</title><rect x="77.1969%" y="261" width="0.0131%" height="15" fill="rgb(207,89,7)" fg:x="332156460440" fg:w="56168504"/><text x="77.4469%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (92,276,828 samples, 0.02%)</title><rect x="77.1913%" y="357" width="0.0214%" height="15" fill="rgb(244,117,36)" fg:x="332132388224" fg:w="92276828"/><text x="77.4413%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (92,276,828 samples, 0.02%)</title><rect x="77.1913%" y="341" width="0.0214%" height="15" fill="rgb(226,144,34)" fg:x="332132388224" fg:w="92276828"/><text x="77.4413%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (92,276,828 samples, 0.02%)</title><rect x="77.1913%" y="325" width="0.0214%" height="15" fill="rgb(213,23,19)" fg:x="332132388224" fg:w="92276828"/><text x="77.4413%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (93,279,837 samples, 0.02%)</title><rect x="77.1913%" y="389" width="0.0217%" height="15" fill="rgb(217,75,12)" fg:x="332132388224" fg:w="93279837"/><text x="77.4413%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (93,279,837 samples, 0.02%)</title><rect x="77.1913%" y="373" width="0.0217%" height="15" fill="rgb(224,159,17)" fg:x="332132388224" fg:w="93279837"/><text x="77.4413%" y="383.50"></text></g><g><title>core::ptr::write (43,129,387 samples, 0.01%)</title><rect x="77.2134%" y="213" width="0.0100%" height="15" fill="rgb(217,118,1)" fg:x="332227674079" fg:w="43129387"/><text x="77.4634%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (45,135,405 samples, 0.01%)</title><rect x="77.2134%" y="261" width="0.0105%" height="15" fill="rgb(232,180,48)" fg:x="332227674079" fg:w="45135405"/><text x="77.4634%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (45,135,405 samples, 0.01%)</title><rect x="77.2134%" y="245" width="0.0105%" height="15" fill="rgb(230,27,33)" fg:x="332227674079" fg:w="45135405"/><text x="77.4634%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (45,135,405 samples, 0.01%)</title><rect x="77.2134%" y="229" width="0.0105%" height="15" fill="rgb(205,31,21)" fg:x="332227674079" fg:w="45135405"/><text x="77.4634%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (70,210,630 samples, 0.02%)</title><rect x="77.2130%" y="325" width="0.0163%" height="15" fill="rgb(253,59,4)" fg:x="332225668061" fg:w="70210630"/><text x="77.4630%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70,210,630 samples, 0.02%)</title><rect x="77.2130%" y="309" width="0.0163%" height="15" fill="rgb(224,201,9)" fg:x="332225668061" fg:w="70210630"/><text x="77.4630%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70,210,630 samples, 0.02%)</title><rect x="77.2130%" y="293" width="0.0163%" height="15" fill="rgb(229,206,30)" fg:x="332225668061" fg:w="70210630"/><text x="77.4630%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70,210,630 samples, 0.02%)</title><rect x="77.2130%" y="277" width="0.0163%" height="15" fill="rgb(212,67,47)" fg:x="332225668061" fg:w="70210630"/><text x="77.4630%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (77,231,693 samples, 0.02%)</title><rect x="77.2130%" y="389" width="0.0179%" height="15" fill="rgb(211,96,50)" fg:x="332225668061" fg:w="77231693"/><text x="77.4630%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (77,231,693 samples, 0.02%)</title><rect x="77.2130%" y="373" width="0.0179%" height="15" fill="rgb(252,114,18)" fg:x="332225668061" fg:w="77231693"/><text x="77.4630%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (77,231,693 samples, 0.02%)</title><rect x="77.2130%" y="357" width="0.0179%" height="15" fill="rgb(223,58,37)" fg:x="332225668061" fg:w="77231693"/><text x="77.4630%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (77,231,693 samples, 0.02%)</title><rect x="77.2130%" y="341" width="0.0179%" height="15" fill="rgb(237,70,4)" fg:x="332225668061" fg:w="77231693"/><text x="77.4630%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (233,701,097 samples, 0.05%)</title><rect x="77.1878%" y="421" width="0.0543%" height="15" fill="rgb(244,85,46)" fg:x="332117343089" fg:w="233701097"/><text x="77.4378%" y="431.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (233,701,097 samples, 0.05%)</title><rect x="77.1878%" y="405" width="0.0543%" height="15" fill="rgb(223,39,52)" fg:x="332117343089" fg:w="233701097"/><text x="77.4378%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (16,689,066,751 samples, 3.88%)</title><rect x="73.5890%" y="437" width="3.8787%" height="15" fill="rgb(218,200,14)" fg:x="316632890147" fg:w="16689066751"/><text x="73.8390%" y="447.50">chla..</text></g><g><title>_int_malloc (348,044,123 samples, 0.08%)</title><rect x="77.4843%" y="293" width="0.0809%" height="15" fill="rgb(208,171,16)" fg:x="333393170537" fg:w="348044123"/><text x="77.7343%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (495,486,446 samples, 0.12%)</title><rect x="77.4713%" y="357" width="0.1152%" height="15" fill="rgb(234,200,18)" fg:x="333337002033" fg:w="495486446"/><text x="77.7213%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (495,486,446 samples, 0.12%)</title><rect x="77.4713%" y="341" width="0.1152%" height="15" fill="rgb(228,45,11)" fg:x="333337002033" fg:w="495486446"/><text x="77.7213%" y="351.50"></text></g><g><title>alloc::alloc::alloc (495,486,446 samples, 0.12%)</title><rect x="77.4713%" y="325" width="0.1152%" height="15" fill="rgb(237,182,11)" fg:x="333337002033" fg:w="495486446"/><text x="77.7213%" y="335.50"></text></g><g><title>__GI___libc_malloc (466,399,185 samples, 0.11%)</title><rect x="77.4780%" y="309" width="0.1084%" height="15" fill="rgb(241,175,49)" fg:x="333366089294" fg:w="466399185"/><text x="77.7280%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (542,627,869 samples, 0.13%)</title><rect x="77.4678%" y="405" width="0.1261%" height="15" fill="rgb(247,38,35)" fg:x="333321956898" fg:w="542627869"/><text x="77.7178%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (542,627,869 samples, 0.13%)</title><rect x="77.4678%" y="389" width="0.1261%" height="15" fill="rgb(228,39,49)" fg:x="333321956898" fg:w="542627869"/><text x="77.7178%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (542,627,869 samples, 0.13%)</title><rect x="77.4678%" y="373" width="0.1261%" height="15" fill="rgb(226,101,26)" fg:x="333321956898" fg:w="542627869"/><text x="77.7178%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (548,645,923 samples, 0.13%)</title><rect x="77.4678%" y="437" width="0.1275%" height="15" fill="rgb(206,141,19)" fg:x="333321956898" fg:w="548645923"/><text x="77.7178%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (548,645,923 samples, 0.13%)</title><rect x="77.4678%" y="421" width="0.1275%" height="15" fill="rgb(211,200,13)" fg:x="333321956898" fg:w="548645923"/><text x="77.7178%" y="431.50"></text></g><g><title>core::ptr::write (197,592,773 samples, 0.05%)</title><rect x="77.5953%" y="421" width="0.0459%" height="15" fill="rgb(241,121,6)" fg:x="333870602821" fg:w="197592773"/><text x="77.8453%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (120,361,080 samples, 0.03%)</title><rect x="77.6412%" y="421" width="0.0280%" height="15" fill="rgb(234,221,29)" fg:x="334068195594" fg:w="120361080"/><text x="77.8912%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (912,738,190 samples, 0.21%)</title><rect x="77.5953%" y="437" width="0.2121%" height="15" fill="rgb(229,136,5)" fg:x="333870602821" fg:w="912738190"/><text x="77.8453%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (278,836,502 samples, 0.06%)</title><rect x="77.8172%" y="437" width="0.0648%" height="15" fill="rgb(238,36,11)" fg:x="334825467389" fg:w="278836502"/><text x="78.0672%" y="447.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (278,836,502 samples, 0.06%)</title><rect x="77.8172%" y="421" width="0.0648%" height="15" fill="rgb(251,55,41)" fg:x="334825467389" fg:w="278836502"/><text x="78.0672%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (24,379,136,754 samples, 5.67%)</title><rect x="72.3950%" y="453" width="5.6660%" height="15" fill="rgb(242,34,40)" fg:x="311495478049" fg:w="24379136754"/><text x="72.6450%" y="463.50">chlang:..</text></g><g><title>unlink_chunk (53,159,477 samples, 0.01%)</title><rect x="78.0634%" y="293" width="0.0124%" height="15" fill="rgb(215,42,17)" fg:x="335884644893" fg:w="53159477"/><text x="78.3134%" y="303.50"></text></g><g><title>_int_malloc (506,519,545 samples, 0.12%)</title><rect x="78.0634%" y="309" width="0.1177%" height="15" fill="rgb(207,44,46)" fg:x="335884644893" fg:w="506519545"/><text x="78.3134%" y="319.50"></text></g><g><title>__GI___libc_malloc (555,666,986 samples, 0.13%)</title><rect x="78.0627%" y="325" width="0.1291%" height="15" fill="rgb(211,206,28)" fg:x="335881635866" fg:w="555666986"/><text x="78.3127%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (565,697,076 samples, 0.13%)</title><rect x="78.0610%" y="373" width="0.1315%" height="15" fill="rgb(237,167,16)" fg:x="335874614803" fg:w="565697076"/><text x="78.3110%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (565,697,076 samples, 0.13%)</title><rect x="78.0610%" y="357" width="0.1315%" height="15" fill="rgb(233,66,6)" fg:x="335874614803" fg:w="565697076"/><text x="78.3110%" y="367.50"></text></g><g><title>alloc::alloc::alloc (565,697,076 samples, 0.13%)</title><rect x="78.0610%" y="341" width="0.1315%" height="15" fill="rgb(246,123,29)" fg:x="335874614803" fg:w="565697076"/><text x="78.3110%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (567,703,094 samples, 0.13%)</title><rect x="78.0610%" y="421" width="0.1319%" height="15" fill="rgb(209,62,40)" fg:x="335874614803" fg:w="567703094"/><text x="78.3110%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (567,703,094 samples, 0.13%)</title><rect x="78.0610%" y="405" width="0.1319%" height="15" fill="rgb(218,4,25)" fg:x="335874614803" fg:w="567703094"/><text x="78.3110%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (567,703,094 samples, 0.13%)</title><rect x="78.0610%" y="389" width="0.1319%" height="15" fill="rgb(253,91,49)" fg:x="335874614803" fg:w="567703094"/><text x="78.3110%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (574,724,157 samples, 0.13%)</title><rect x="78.0610%" y="453" width="0.1336%" height="15" fill="rgb(228,155,29)" fg:x="335874614803" fg:w="574724157"/><text x="78.3110%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (574,724,157 samples, 0.13%)</title><rect x="78.0610%" y="437" width="0.1336%" height="15" fill="rgb(243,57,37)" fg:x="335874614803" fg:w="574724157"/><text x="78.3110%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (54,162,486 samples, 0.01%)</title><rect x="78.2025%" y="437" width="0.0126%" height="15" fill="rgb(244,167,17)" fg:x="336483441266" fg:w="54162486"/><text x="78.4525%" y="447.50"></text></g><g><title>core::ptr::read (54,162,486 samples, 0.01%)</title><rect x="78.2025%" y="421" width="0.0126%" height="15" fill="rgb(207,181,38)" fg:x="336483441266" fg:w="54162486"/><text x="78.4525%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (84,252,756 samples, 0.02%)</title><rect x="78.2151%" y="437" width="0.0196%" height="15" fill="rgb(211,8,23)" fg:x="336537603752" fg:w="84252756"/><text x="78.4651%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (149,448,341 samples, 0.03%)</title><rect x="78.2025%" y="453" width="0.0347%" height="15" fill="rgb(235,11,44)" fg:x="336483441266" fg:w="149448341"/><text x="78.4525%" y="463.50"></text></g><g><title>chlang::board::Board::get_valid_moves (286,057,163,791 samples, 66.48%)</title><rect x="11.7938%" y="469" width="66.4829%" height="15" fill="rgb(248,18,52)" fg:x="50745234337" fg:w="286057163791"/><text x="12.0438%" y="479.50">chlang::board::Board::get_valid_moves</text></g><g><title>chlang::board::Board::get_game_state (317,714,133,849 samples, 73.84%)</title><rect x="4.4519%" y="485" width="73.8403%" height="15" fill="rgb(208,4,7)" fg:x="19155465882" fg:w="317714133849"/><text x="4.7019%" y="495.50">chlang::board::Board::get_game_state</text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (198,595,782 samples, 0.05%)</title><rect x="78.2923%" y="469" width="0.0462%" height="15" fill="rgb(240,17,39)" fg:x="336869599731" fg:w="198595782"/><text x="78.5423%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (227,683,043 samples, 0.05%)</title><rect x="78.3384%" y="437" width="0.0529%" height="15" fill="rgb(207,170,3)" fg:x="337068195513" fg:w="227683043"/><text x="78.5884%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (967,903,685 samples, 0.22%)</title><rect x="78.3384%" y="469" width="0.2250%" height="15" fill="rgb(236,100,52)" fg:x="337068195513" fg:w="967903685"/><text x="78.5884%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (967,903,685 samples, 0.22%)</title><rect x="78.3384%" y="453" width="0.2250%" height="15" fill="rgb(246,78,51)" fg:x="337068195513" fg:w="967903685"/><text x="78.5884%" y="463.50"></text></g><g><title>&lt;chlang::evaluators::positional_evaluator::PositionalEvaluator as chlang::tree_evaluator::Eval&gt;::evaluate (3,564,693,986 samples, 0.83%)</title><rect x="78.2923%" y="485" width="0.8285%" height="15" fill="rgb(211,17,15)" fg:x="336869599731" fg:w="3564693986"/><text x="78.5423%" y="495.50"></text></g><g><title>chlang::tree_evaluator::eval (328,806,410,380 samples, 76.42%)</title><rect x="2.7211%" y="501" width="76.4183%" height="15" fill="rgb(209,59,46)" fg:x="11708124057" fg:w="328806410380"/><text x="2.9711%" y="511.50">chlang::tree_evaluator::eval</text></g><g><title>core::ptr::read (53,159,477 samples, 0.01%)</title><rect x="79.1394%" y="469" width="0.0124%" height="15" fill="rgb(210,92,25)" fg:x="340514534437" fg:w="53159477"/><text x="79.3894%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (60,180,540 samples, 0.01%)</title><rect x="79.1394%" y="485" width="0.0140%" height="15" fill="rgb(238,174,52)" fg:x="340514534437" fg:w="60180540"/><text x="79.3894%" y="495.50"></text></g><g><title>chlang::board::Board::unmake_last (89,267,801 samples, 0.02%)</title><rect x="79.1394%" y="501" width="0.0207%" height="15" fill="rgb(230,73,7)" fg:x="340514534437" fg:w="89267801"/><text x="79.3894%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43,129,387 samples, 0.01%)</title><rect x="79.1601%" y="437" width="0.0100%" height="15" fill="rgb(243,124,40)" fg:x="340603802238" fg:w="43129387"/><text x="79.4101%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (76,228,684 samples, 0.02%)</title><rect x="79.1601%" y="485" width="0.0177%" height="15" fill="rgb(244,170,11)" fg:x="340603802238" fg:w="76228684"/><text x="79.4101%" y="495.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (76,228,684 samples, 0.02%)</title><rect x="79.1601%" y="469" width="0.0177%" height="15" fill="rgb(207,114,54)" fg:x="340603802238" fg:w="76228684"/><text x="79.4101%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (76,228,684 samples, 0.02%)</title><rect x="79.1601%" y="453" width="0.0177%" height="15" fill="rgb(205,42,20)" fg:x="340603802238" fg:w="76228684"/><text x="79.4101%" y="463.50"></text></g><g><title>_int_free (69,207,621 samples, 0.02%)</title><rect x="79.1870%" y="373" width="0.0161%" height="15" fill="rgb(230,30,28)" fg:x="340719148273" fg:w="69207621"/><text x="79.4370%" y="383.50"></text></g><g><title>__GI___libc_free (108,324,972 samples, 0.03%)</title><rect x="79.1870%" y="389" width="0.0252%" height="15" fill="rgb(205,73,54)" fg:x="340719148273" fg:w="108324972"/><text x="79.4370%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (150,451,350 samples, 0.03%)</title><rect x="79.1779%" y="437" width="0.0350%" height="15" fill="rgb(254,227,23)" fg:x="340680030922" fg:w="150451350"/><text x="79.4279%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (150,451,350 samples, 0.03%)</title><rect x="79.1779%" y="421" width="0.0350%" height="15" fill="rgb(228,202,34)" fg:x="340680030922" fg:w="150451350"/><text x="79.4279%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (150,451,350 samples, 0.03%)</title><rect x="79.1779%" y="405" width="0.0350%" height="15" fill="rgb(222,225,37)" fg:x="340680030922" fg:w="150451350"/><text x="79.4279%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (159,478,431 samples, 0.04%)</title><rect x="79.1779%" y="485" width="0.0371%" height="15" fill="rgb(221,14,54)" fg:x="340680030922" fg:w="159478431"/><text x="79.4279%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (159,478,431 samples, 0.04%)</title><rect x="79.1779%" y="469" width="0.0371%" height="15" fill="rgb(254,102,2)" fg:x="340680030922" fg:w="159478431"/><text x="79.4279%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (159,478,431 samples, 0.04%)</title><rect x="79.1779%" y="453" width="0.0371%" height="15" fill="rgb(232,104,17)" fg:x="340680030922" fg:w="159478431"/><text x="79.4279%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (243,731,187 samples, 0.06%)</title><rect x="79.2278%" y="469" width="0.0566%" height="15" fill="rgb(250,220,14)" fg:x="340894674848" fg:w="243731187"/><text x="79.4778%" y="479.50"></text></g><g><title>chlang::board::Position::bitboard (245,737,205 samples, 0.06%)</title><rect x="79.2278%" y="485" width="0.0571%" height="15" fill="rgb(241,158,9)" fg:x="340894674848" fg:w="245737205"/><text x="79.4778%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (710,130,372 samples, 0.17%)</title><rect x="79.2900%" y="453" width="0.1650%" height="15" fill="rgb(246,9,43)" fg:x="341162478251" fg:w="710130372"/><text x="79.5400%" y="463.50"></text></g><g><title>chlang::board::Position::bitboard (763,289,849 samples, 0.18%)</title><rect x="79.2900%" y="469" width="0.1774%" height="15" fill="rgb(206,73,33)" fg:x="341162478251" fg:w="763289849"/><text x="79.5400%" y="479.50"></text></g><g><title>chlang::board::Board::piece_type (987,963,865 samples, 0.23%)</title><rect x="79.2900%" y="485" width="0.2296%" height="15" fill="rgb(222,79,8)" fg:x="341162478251" fg:w="987963865"/><text x="79.5400%" y="495.50"></text></g><g><title>chlang::board::Board::key (50,150,450 samples, 0.01%)</title><rect x="79.5196%" y="485" width="0.0117%" height="15" fill="rgb(234,8,54)" fg:x="342150442116" fg:w="50150450"/><text x="79.7696%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (54,162,486 samples, 0.01%)</title><rect x="79.5313%" y="341" width="0.0126%" height="15" fill="rgb(209,134,38)" fg:x="342200592566" fg:w="54162486"/><text x="79.7813%" y="351.50"></text></g><g><title>__rust_dealloc (160,481,440 samples, 0.04%)</title><rect x="79.5438%" y="309" width="0.0373%" height="15" fill="rgb(230,127,29)" fg:x="342254755052" fg:w="160481440"/><text x="79.7938%" y="319.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (77,231,693 samples, 0.02%)</title><rect x="79.5811%" y="293" width="0.0179%" height="15" fill="rgb(242,44,41)" fg:x="342415236492" fg:w="77231693"/><text x="79.8311%" y="303.50"></text></g><g><title>__rdl_dealloc (99,297,891 samples, 0.02%)</title><rect x="79.5811%" y="309" width="0.0231%" height="15" fill="rgb(222,56,43)" fg:x="342415236492" fg:w="99297891"/><text x="79.8311%" y="319.50"></text></g><g><title>_int_free (258,776,322 samples, 0.06%)</title><rect x="79.6042%" y="293" width="0.0601%" height="15" fill="rgb(238,39,47)" fg:x="342514534383" fg:w="258776322"/><text x="79.8542%" y="303.50"></text></g><g><title>__GI___libc_free (371,113,330 samples, 0.09%)</title><rect x="79.6042%" y="309" width="0.0863%" height="15" fill="rgb(226,79,43)" fg:x="342514534383" fg:w="371113330"/><text x="79.8542%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (687,061,165 samples, 0.16%)</title><rect x="79.5313%" y="453" width="0.1597%" height="15" fill="rgb(242,105,53)" fg:x="342200592566" fg:w="687061165"/><text x="79.7813%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (687,061,165 samples, 0.16%)</title><rect x="79.5313%" y="437" width="0.1597%" height="15" fill="rgb(251,132,46)" fg:x="342200592566" fg:w="687061165"/><text x="79.7813%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (687,061,165 samples, 0.16%)</title><rect x="79.5313%" y="421" width="0.1597%" height="15" fill="rgb(231,77,14)" fg:x="342200592566" fg:w="687061165"/><text x="79.7813%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (687,061,165 samples, 0.16%)</title><rect x="79.5313%" y="405" width="0.1597%" height="15" fill="rgb(240,135,9)" fg:x="342200592566" fg:w="687061165"/><text x="79.7813%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (687,061,165 samples, 0.16%)</title><rect x="79.5313%" y="389" width="0.1597%" height="15" fill="rgb(248,109,14)" fg:x="342200592566" fg:w="687061165"/><text x="79.7813%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (687,061,165 samples, 0.16%)</title><rect x="79.5313%" y="373" width="0.1597%" height="15" fill="rgb(227,146,52)" fg:x="342200592566" fg:w="687061165"/><text x="79.7813%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (687,061,165 samples, 0.16%)</title><rect x="79.5313%" y="357" width="0.1597%" height="15" fill="rgb(232,54,3)" fg:x="342200592566" fg:w="687061165"/><text x="79.7813%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (632,898,679 samples, 0.15%)</title><rect x="79.5438%" y="341" width="0.1471%" height="15" fill="rgb(229,201,43)" fg:x="342254755052" fg:w="632898679"/><text x="79.7938%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (632,898,679 samples, 0.15%)</title><rect x="79.5438%" y="325" width="0.1471%" height="15" fill="rgb(252,161,33)" fg:x="342254755052" fg:w="632898679"/><text x="79.7938%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (77,231,693 samples, 0.02%)</title><rect x="79.6909%" y="453" width="0.0179%" height="15" fill="rgb(226,146,40)" fg:x="342887653731" fg:w="77231693"/><text x="79.9409%" y="463.50"></text></g><g><title>chlang::cmove::Move::to (232,698,088 samples, 0.05%)</title><rect x="79.7089%" y="453" width="0.0541%" height="15" fill="rgb(219,47,25)" fg:x="342964885424" fg:w="232698088"/><text x="79.9589%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,575,727,139 samples, 0.37%)</title><rect x="79.7630%" y="421" width="0.3662%" height="15" fill="rgb(250,135,13)" fg:x="343197583512" fg:w="1575727139"/><text x="80.0130%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (1,969,909,676 samples, 0.46%)</title><rect x="79.7630%" y="437" width="0.4578%" height="15" fill="rgb(219,229,18)" fg:x="343197583512" fg:w="1969909676"/><text x="80.0130%" y="447.50"></text></g><g><title>chlang::board::Board::piece_type (2,374,122,303 samples, 0.55%)</title><rect x="79.7630%" y="453" width="0.5518%" height="15" fill="rgb(217,152,27)" fg:x="343197583512" fg:w="2374122303"/><text x="80.0130%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (266,800,394 samples, 0.06%)</title><rect x="80.3194%" y="421" width="0.0620%" height="15" fill="rgb(225,71,47)" fg:x="345591765995" fg:w="266800394"/><text x="80.5694%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (274,824,466 samples, 0.06%)</title><rect x="80.3194%" y="437" width="0.0639%" height="15" fill="rgb(220,139,14)" fg:x="345591765995" fg:w="274824466"/><text x="80.5694%" y="447.50"></text></g><g><title>__GI___libc_malloc (64,192,576 samples, 0.01%)</title><rect x="80.3868%" y="309" width="0.0149%" height="15" fill="rgb(247,54,32)" fg:x="345881635596" fg:w="64192576"/><text x="80.6368%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81,243,729 samples, 0.02%)</title><rect x="80.3833%" y="357" width="0.0189%" height="15" fill="rgb(252,131,39)" fg:x="345866590461" fg:w="81243729"/><text x="80.6333%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81,243,729 samples, 0.02%)</title><rect x="80.3833%" y="341" width="0.0189%" height="15" fill="rgb(210,108,39)" fg:x="345866590461" fg:w="81243729"/><text x="80.6333%" y="351.50"></text></g><g><title>alloc::alloc::alloc (81,243,729 samples, 0.02%)</title><rect x="80.3833%" y="325" width="0.0189%" height="15" fill="rgb(205,23,29)" fg:x="345866590461" fg:w="81243729"/><text x="80.6333%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86,258,774 samples, 0.02%)</title><rect x="80.3833%" y="405" width="0.0200%" height="15" fill="rgb(246,139,46)" fg:x="345866590461" fg:w="86258774"/><text x="80.6333%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (86,258,774 samples, 0.02%)</title><rect x="80.3833%" y="389" width="0.0200%" height="15" fill="rgb(250,81,26)" fg:x="345866590461" fg:w="86258774"/><text x="80.6333%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (86,258,774 samples, 0.02%)</title><rect x="80.3833%" y="373" width="0.0200%" height="15" fill="rgb(214,104,7)" fg:x="345866590461" fg:w="86258774"/><text x="80.6333%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (92,276,828 samples, 0.02%)</title><rect x="80.3833%" y="437" width="0.0214%" height="15" fill="rgb(233,189,8)" fg:x="345866590461" fg:w="92276828"/><text x="80.6333%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (92,276,828 samples, 0.02%)</title><rect x="80.3833%" y="421" width="0.0214%" height="15" fill="rgb(228,141,17)" fg:x="345866590461" fg:w="92276828"/><text x="80.6333%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (89,267,801 samples, 0.02%)</title><rect x="80.4047%" y="437" width="0.0207%" height="15" fill="rgb(247,157,1)" fg:x="345958867289" fg:w="89267801"/><text x="80.6547%" y="447.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (57,171,513 samples, 0.01%)</title><rect x="80.4255%" y="437" width="0.0133%" height="15" fill="rgb(249,225,5)" fg:x="346048135090" fg:w="57171513"/><text x="80.6755%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (709,127,363 samples, 0.16%)</title><rect x="80.3147%" y="453" width="0.1648%" height="15" fill="rgb(242,55,13)" fg:x="345571705815" fg:w="709127363"/><text x="80.5647%" y="463.50"></text></g><g><title>_int_free (51,153,459 samples, 0.01%)</title><rect x="80.4870%" y="309" width="0.0119%" height="15" fill="rgb(230,49,50)" fg:x="346312929466" fg:w="51153459"/><text x="80.7370%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (109,327,981 samples, 0.03%)</title><rect x="80.4796%" y="373" width="0.0254%" height="15" fill="rgb(241,111,38)" fg:x="346280833178" fg:w="109327981"/><text x="80.7296%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (108,324,972 samples, 0.03%)</title><rect x="80.4798%" y="357" width="0.0252%" height="15" fill="rgb(252,155,4)" fg:x="346281836187" fg:w="108324972"/><text x="80.7298%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (108,324,972 samples, 0.03%)</title><rect x="80.4798%" y="341" width="0.0252%" height="15" fill="rgb(212,69,32)" fg:x="346281836187" fg:w="108324972"/><text x="80.7298%" y="351.50"></text></g><g><title>__GI___libc_free (77,231,693 samples, 0.02%)</title><rect x="80.4870%" y="325" width="0.0179%" height="15" fill="rgb(243,107,47)" fg:x="346312929466" fg:w="77231693"/><text x="80.7370%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (115,346,035 samples, 0.03%)</title><rect x="80.4796%" y="437" width="0.0268%" height="15" fill="rgb(247,130,12)" fg:x="346280833178" fg:w="115346035"/><text x="80.7296%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (115,346,035 samples, 0.03%)</title><rect x="80.4796%" y="421" width="0.0268%" height="15" fill="rgb(233,74,16)" fg:x="346280833178" fg:w="115346035"/><text x="80.7296%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (115,346,035 samples, 0.03%)</title><rect x="80.4796%" y="405" width="0.0268%" height="15" fill="rgb(208,58,18)" fg:x="346280833178" fg:w="115346035"/><text x="80.7296%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115,346,035 samples, 0.03%)</title><rect x="80.4796%" y="389" width="0.0268%" height="15" fill="rgb(242,225,1)" fg:x="346280833178" fg:w="115346035"/><text x="80.7296%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (97,291,873 samples, 0.02%)</title><rect x="80.5150%" y="421" width="0.0226%" height="15" fill="rgb(249,39,40)" fg:x="346433290546" fg:w="97291873"/><text x="80.7650%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (98,294,882 samples, 0.02%)</title><rect x="80.5150%" y="437" width="0.0228%" height="15" fill="rgb(207,72,44)" fg:x="346433290546" fg:w="98294882"/><text x="80.7650%" y="447.50"></text></g><g><title>__GI___libc_malloc (61,183,549 samples, 0.01%)</title><rect x="80.5411%" y="309" width="0.0142%" height="15" fill="rgb(215,193,12)" fg:x="346545627554" fg:w="61183549"/><text x="80.7911%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77,231,693 samples, 0.02%)</title><rect x="80.5378%" y="357" width="0.0179%" height="15" fill="rgb(248,41,39)" fg:x="346531585428" fg:w="77231693"/><text x="80.7878%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77,231,693 samples, 0.02%)</title><rect x="80.5378%" y="341" width="0.0179%" height="15" fill="rgb(253,85,4)" fg:x="346531585428" fg:w="77231693"/><text x="80.7878%" y="351.50"></text></g><g><title>alloc::alloc::alloc (77,231,693 samples, 0.02%)</title><rect x="80.5378%" y="325" width="0.0179%" height="15" fill="rgb(243,70,31)" fg:x="346531585428" fg:w="77231693"/><text x="80.7878%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (80,240,720 samples, 0.02%)</title><rect x="80.5378%" y="405" width="0.0186%" height="15" fill="rgb(253,195,26)" fg:x="346531585428" fg:w="80240720"/><text x="80.7878%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (80,240,720 samples, 0.02%)</title><rect x="80.5378%" y="389" width="0.0186%" height="15" fill="rgb(243,42,11)" fg:x="346531585428" fg:w="80240720"/><text x="80.7878%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (80,240,720 samples, 0.02%)</title><rect x="80.5378%" y="373" width="0.0186%" height="15" fill="rgb(239,66,17)" fg:x="346531585428" fg:w="80240720"/><text x="80.7878%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (81,243,729 samples, 0.02%)</title><rect x="80.5378%" y="437" width="0.0189%" height="15" fill="rgb(217,132,21)" fg:x="346531585428" fg:w="81243729"/><text x="80.7878%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81,243,729 samples, 0.02%)</title><rect x="80.5378%" y="421" width="0.0189%" height="15" fill="rgb(252,202,21)" fg:x="346531585428" fg:w="81243729"/><text x="80.7878%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (45,135,405 samples, 0.01%)</title><rect x="80.5660%" y="405" width="0.0105%" height="15" fill="rgb(233,98,36)" fg:x="346652949517" fg:w="45135405"/><text x="80.8160%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45,135,405 samples, 0.01%)</title><rect x="80.5660%" y="389" width="0.0105%" height="15" fill="rgb(216,153,54)" fg:x="346652949517" fg:w="45135405"/><text x="80.8160%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (135,406,215 samples, 0.03%)</title><rect x="80.5600%" y="437" width="0.0315%" height="15" fill="rgb(250,99,7)" fg:x="346626871283" fg:w="135406215"/><text x="80.8100%" y="447.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (135,406,215 samples, 0.03%)</title><rect x="80.5600%" y="421" width="0.0315%" height="15" fill="rgb(207,56,50)" fg:x="346626871283" fg:w="135406215"/><text x="80.8100%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (575,727,166 samples, 0.13%)</title><rect x="80.4796%" y="453" width="0.1338%" height="15" fill="rgb(244,61,34)" fg:x="346280833178" fg:w="575727166"/><text x="80.7296%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69,207,621 samples, 0.02%)</title><rect x="80.6222%" y="357" width="0.0161%" height="15" fill="rgb(241,50,38)" fg:x="346894674686" fg:w="69207621"/><text x="80.8722%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69,207,621 samples, 0.02%)</title><rect x="80.6222%" y="341" width="0.0161%" height="15" fill="rgb(212,166,30)" fg:x="346894674686" fg:w="69207621"/><text x="80.8722%" y="351.50"></text></g><g><title>alloc::alloc::alloc (69,207,621 samples, 0.02%)</title><rect x="80.6222%" y="325" width="0.0161%" height="15" fill="rgb(249,127,32)" fg:x="346894674686" fg:w="69207621"/><text x="80.8722%" y="335.50"></text></g><g><title>__GI___libc_malloc (57,171,513 samples, 0.01%)</title><rect x="80.6250%" y="309" width="0.0133%" height="15" fill="rgb(209,103,0)" fg:x="346906710794" fg:w="57171513"/><text x="80.8750%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79,237,711 samples, 0.02%)</title><rect x="80.6222%" y="405" width="0.0184%" height="15" fill="rgb(238,209,51)" fg:x="346894674686" fg:w="79237711"/><text x="80.8722%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (79,237,711 samples, 0.02%)</title><rect x="80.6222%" y="389" width="0.0184%" height="15" fill="rgb(237,56,23)" fg:x="346894674686" fg:w="79237711"/><text x="80.8722%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (79,237,711 samples, 0.02%)</title><rect x="80.6222%" y="373" width="0.0184%" height="15" fill="rgb(215,153,46)" fg:x="346894674686" fg:w="79237711"/><text x="80.8722%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (80,240,720 samples, 0.02%)</title><rect x="80.6222%" y="437" width="0.0186%" height="15" fill="rgb(224,49,31)" fg:x="346894674686" fg:w="80240720"/><text x="80.8722%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (80,240,720 samples, 0.02%)</title><rect x="80.6222%" y="421" width="0.0186%" height="15" fill="rgb(250,18,42)" fg:x="346894674686" fg:w="80240720"/><text x="80.8722%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (61,183,549 samples, 0.01%)</title><rect x="80.6409%" y="437" width="0.0142%" height="15" fill="rgb(215,176,39)" fg:x="346974915406" fg:w="61183549"/><text x="80.8909%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (225,677,025 samples, 0.05%)</title><rect x="80.6134%" y="453" width="0.0524%" height="15" fill="rgb(223,77,29)" fg:x="346856560344" fg:w="225677025"/><text x="80.8634%" y="463.50"></text></g><g><title>__GI___libc_malloc (64,192,576 samples, 0.01%)</title><rect x="80.6805%" y="309" width="0.0149%" height="15" fill="rgb(234,94,52)" fg:x="347145426936" fg:w="64192576"/><text x="80.9305%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (80,240,720 samples, 0.02%)</title><rect x="80.6770%" y="357" width="0.0186%" height="15" fill="rgb(220,154,50)" fg:x="347130381801" fg:w="80240720"/><text x="80.9270%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (80,240,720 samples, 0.02%)</title><rect x="80.6770%" y="341" width="0.0186%" height="15" fill="rgb(212,11,10)" fg:x="347130381801" fg:w="80240720"/><text x="80.9270%" y="351.50"></text></g><g><title>alloc::alloc::alloc (80,240,720 samples, 0.02%)</title><rect x="80.6770%" y="325" width="0.0186%" height="15" fill="rgb(205,166,19)" fg:x="347130381801" fg:w="80240720"/><text x="80.9270%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (91,273,819 samples, 0.02%)</title><rect x="80.6770%" y="405" width="0.0212%" height="15" fill="rgb(244,198,16)" fg:x="347130381801" fg:w="91273819"/><text x="80.9270%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (91,273,819 samples, 0.02%)</title><rect x="80.6770%" y="389" width="0.0212%" height="15" fill="rgb(219,69,12)" fg:x="347130381801" fg:w="91273819"/><text x="80.9270%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (91,273,819 samples, 0.02%)</title><rect x="80.6770%" y="373" width="0.0212%" height="15" fill="rgb(245,30,7)" fg:x="347130381801" fg:w="91273819"/><text x="80.9270%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (94,282,846 samples, 0.02%)</title><rect x="80.6770%" y="437" width="0.0219%" height="15" fill="rgb(218,221,48)" fg:x="347130381801" fg:w="94282846"/><text x="80.9270%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (94,282,846 samples, 0.02%)</title><rect x="80.6770%" y="421" width="0.0219%" height="15" fill="rgb(216,66,15)" fg:x="347130381801" fg:w="94282846"/><text x="80.9270%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48,144,432 samples, 0.01%)</title><rect x="80.6989%" y="437" width="0.0112%" height="15" fill="rgb(226,122,50)" fg:x="347224664647" fg:w="48144432"/><text x="80.9489%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (286,860,574 samples, 0.07%)</title><rect x="80.6658%" y="453" width="0.0667%" height="15" fill="rgb(239,156,16)" fg:x="347082237369" fg:w="286860574"/><text x="80.9158%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (280,842,520 samples, 0.07%)</title><rect x="80.7397%" y="421" width="0.0653%" height="15" fill="rgb(224,27,38)" fg:x="347400191222" fg:w="280842520"/><text x="80.9897%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (289,869,601 samples, 0.07%)</title><rect x="80.7397%" y="437" width="0.0674%" height="15" fill="rgb(224,39,27)" fg:x="347400191222" fg:w="289869601"/><text x="80.9897%" y="447.50"></text></g><g><title>__GI___libc_malloc (72,216,648 samples, 0.02%)</title><rect x="80.8108%" y="309" width="0.0168%" height="15" fill="rgb(215,92,29)" fg:x="347706108967" fg:w="72216648"/><text x="81.0608%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92,276,828 samples, 0.02%)</title><rect x="80.8071%" y="357" width="0.0214%" height="15" fill="rgb(207,159,16)" fg:x="347690060823" fg:w="92276828"/><text x="81.0571%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92,276,828 samples, 0.02%)</title><rect x="80.8071%" y="341" width="0.0214%" height="15" fill="rgb(238,163,47)" fg:x="347690060823" fg:w="92276828"/><text x="81.0571%" y="351.50"></text></g><g><title>alloc::alloc::alloc (92,276,828 samples, 0.02%)</title><rect x="80.8071%" y="325" width="0.0214%" height="15" fill="rgb(219,91,49)" fg:x="347690060823" fg:w="92276828"/><text x="81.0571%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (96,288,864 samples, 0.02%)</title><rect x="80.8071%" y="405" width="0.0224%" height="15" fill="rgb(227,167,31)" fg:x="347690060823" fg:w="96288864"/><text x="81.0571%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (96,288,864 samples, 0.02%)</title><rect x="80.8071%" y="389" width="0.0224%" height="15" fill="rgb(234,80,54)" fg:x="347690060823" fg:w="96288864"/><text x="81.0571%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (96,288,864 samples, 0.02%)</title><rect x="80.8071%" y="373" width="0.0224%" height="15" fill="rgb(212,114,2)" fg:x="347690060823" fg:w="96288864"/><text x="81.0571%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (104,312,936 samples, 0.02%)</title><rect x="80.8071%" y="437" width="0.0242%" height="15" fill="rgb(234,50,24)" fg:x="347690060823" fg:w="104312936"/><text x="81.0571%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (104,312,936 samples, 0.02%)</title><rect x="80.8071%" y="421" width="0.0242%" height="15" fill="rgb(221,68,8)" fg:x="347690060823" fg:w="104312936"/><text x="81.0571%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (76,228,684 samples, 0.02%)</title><rect x="80.8313%" y="437" width="0.0177%" height="15" fill="rgb(254,180,31)" fg:x="347794373759" fg:w="76228684"/><text x="81.0813%" y="447.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (53,159,477 samples, 0.01%)</title><rect x="80.8493%" y="437" width="0.0124%" height="15" fill="rgb(247,130,50)" fg:x="347871605452" fg:w="53159477"/><text x="81.0993%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (687,061,165 samples, 0.16%)</title><rect x="80.7325%" y="453" width="0.1597%" height="15" fill="rgb(211,109,4)" fg:x="347369097943" fg:w="687061165"/><text x="80.9825%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (71,213,639 samples, 0.02%)</title><rect x="80.8922%" y="453" width="0.0166%" height="15" fill="rgb(238,50,21)" fg:x="348056159108" fg:w="71213639"/><text x="81.1422%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (107,321,963 samples, 0.02%)</title><rect x="80.9087%" y="453" width="0.0249%" height="15" fill="rgb(225,57,45)" fg:x="348127372747" fg:w="107321963"/><text x="81.1587%" y="463.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (107,321,963 samples, 0.02%)</title><rect x="80.9087%" y="437" width="0.0249%" height="15" fill="rgb(209,196,50)" fg:x="348127372747" fg:w="107321963"/><text x="81.1587%" y="447.50"></text></g><g><title>chlang::board::Board::attacked_by_color (6,272,818,286 samples, 1.46%)</title><rect x="79.5313%" y="469" width="1.4579%" height="15" fill="rgb(242,140,13)" fg:x="342200592566" fg:w="6272818286"/><text x="79.7813%" y="479.50"></text></g><g><title>chlang::board::Board::is_valid (6,314,944,664 samples, 1.47%)</title><rect x="79.5313%" y="485" width="1.4677%" height="15" fill="rgb(217,111,7)" fg:x="342200592566" fg:w="6314944664"/><text x="79.7813%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (249,749,241 samples, 0.06%)</title><rect x="81.0064%" y="437" width="0.0580%" height="15" fill="rgb(253,193,51)" fg:x="348547633518" fg:w="249749241"/><text x="81.2564%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (250,752,250 samples, 0.06%)</title><rect x="81.0064%" y="453" width="0.0583%" height="15" fill="rgb(252,70,29)" fg:x="348547633518" fg:w="250752250"/><text x="81.2564%" y="463.50"></text></g><g><title>chlang::board::Board::piece_type (325,977,925 samples, 0.08%)</title><rect x="81.0064%" y="469" width="0.0758%" height="15" fill="rgb(232,127,12)" fg:x="348547633518" fg:w="325977925"/><text x="81.2564%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (155,466,395 samples, 0.04%)</title><rect x="81.0826%" y="437" width="0.0361%" height="15" fill="rgb(211,180,21)" fg:x="348875617461" fg:w="155466395"/><text x="81.3326%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (160,481,440 samples, 0.04%)</title><rect x="81.0826%" y="453" width="0.0373%" height="15" fill="rgb(229,72,13)" fg:x="348875617461" fg:w="160481440"/><text x="81.3326%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53,159,477 samples, 0.01%)</title><rect x="81.1295%" y="453" width="0.0124%" height="15" fill="rgb(240,211,49)" fg:x="349077222270" fg:w="53159477"/><text x="81.3795%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (354,062,177 samples, 0.08%)</title><rect x="81.0821%" y="469" width="0.0823%" height="15" fill="rgb(219,149,40)" fg:x="348873611443" fg:w="354062177"/><text x="81.3321%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (74,222,666 samples, 0.02%)</title><rect x="81.1777%" y="437" width="0.0173%" height="15" fill="rgb(210,127,46)" fg:x="349284845133" fg:w="74222666"/><text x="81.4277%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (77,231,693 samples, 0.02%)</title><rect x="81.1777%" y="453" width="0.0179%" height="15" fill="rgb(220,106,7)" fg:x="349284845133" fg:w="77231693"/><text x="81.4277%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (44,132,396 samples, 0.01%)</title><rect x="81.1957%" y="453" width="0.0103%" height="15" fill="rgb(249,31,22)" fg:x="349362076826" fg:w="44132396"/><text x="81.4457%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="81.1957%" y="437" width="0.0103%" height="15" fill="rgb(253,1,49)" fg:x="349362076826" fg:w="44132396"/><text x="81.4457%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="81.1957%" y="421" width="0.0103%" height="15" fill="rgb(227,144,33)" fg:x="349362076826" fg:w="44132396"/><text x="81.4457%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="81.1957%" y="405" width="0.0103%" height="15" fill="rgb(249,163,44)" fg:x="349362076826" fg:w="44132396"/><text x="81.4457%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (44,132,396 samples, 0.01%)</title><rect x="81.1957%" y="389" width="0.0103%" height="15" fill="rgb(234,15,39)" fg:x="349362076826" fg:w="44132396"/><text x="81.4457%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (63,189,567 samples, 0.01%)</title><rect x="81.2108%" y="453" width="0.0147%" height="15" fill="rgb(207,66,16)" fg:x="349427272411" fg:w="63189567"/><text x="81.4608%" y="463.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (63,189,567 samples, 0.01%)</title><rect x="81.2108%" y="437" width="0.0147%" height="15" fill="rgb(233,112,24)" fg:x="349427272411" fg:w="63189567"/><text x="81.4608%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (303,911,727 samples, 0.07%)</title><rect x="81.1644%" y="469" width="0.0706%" height="15" fill="rgb(230,90,22)" fg:x="349227673620" fg:w="303911727"/><text x="81.4144%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (94,282,846 samples, 0.02%)</title><rect x="81.2351%" y="469" width="0.0219%" height="15" fill="rgb(229,61,13)" fg:x="349531585347" fg:w="94282846"/><text x="81.4851%" y="479.50"></text></g><g><title>_int_free (48,144,432 samples, 0.01%)</title><rect x="81.2696%" y="277" width="0.0112%" height="15" fill="rgb(225,57,24)" fg:x="349680030679" fg:w="48144432"/><text x="81.5196%" y="287.50"></text></g><g><title>__GI___libc_free (66,198,594 samples, 0.02%)</title><rect x="81.2696%" y="293" width="0.0154%" height="15" fill="rgb(208,169,48)" fg:x="349680030679" fg:w="66198594"/><text x="81.5196%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (112,337,008 samples, 0.03%)</title><rect x="81.2595%" y="437" width="0.0261%" height="15" fill="rgb(244,218,51)" fg:x="349636901292" fg:w="112337008"/><text x="81.5095%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112,337,008 samples, 0.03%)</title><rect x="81.2595%" y="421" width="0.0261%" height="15" fill="rgb(214,148,10)" fg:x="349636901292" fg:w="112337008"/><text x="81.5095%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (112,337,008 samples, 0.03%)</title><rect x="81.2595%" y="405" width="0.0261%" height="15" fill="rgb(225,174,27)" fg:x="349636901292" fg:w="112337008"/><text x="81.5095%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112,337,008 samples, 0.03%)</title><rect x="81.2595%" y="389" width="0.0261%" height="15" fill="rgb(230,96,26)" fg:x="349636901292" fg:w="112337008"/><text x="81.5095%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (112,337,008 samples, 0.03%)</title><rect x="81.2595%" y="373" width="0.0261%" height="15" fill="rgb(232,10,30)" fg:x="349636901292" fg:w="112337008"/><text x="81.5095%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112,337,008 samples, 0.03%)</title><rect x="81.2595%" y="357" width="0.0261%" height="15" fill="rgb(222,8,50)" fg:x="349636901292" fg:w="112337008"/><text x="81.5095%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (112,337,008 samples, 0.03%)</title><rect x="81.2595%" y="341" width="0.0261%" height="15" fill="rgb(213,81,27)" fg:x="349636901292" fg:w="112337008"/><text x="81.5095%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (101,303,909 samples, 0.02%)</title><rect x="81.2621%" y="325" width="0.0235%" height="15" fill="rgb(245,50,10)" fg:x="349647934391" fg:w="101303909"/><text x="81.5121%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (101,303,909 samples, 0.02%)</title><rect x="81.2621%" y="309" width="0.0235%" height="15" fill="rgb(216,100,18)" fg:x="349647934391" fg:w="101303909"/><text x="81.5121%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (187,562,683 samples, 0.04%)</title><rect x="81.2954%" y="405" width="0.0436%" height="15" fill="rgb(236,147,54)" fg:x="349791364678" fg:w="187562683"/><text x="81.5454%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (243,731,187 samples, 0.06%)</title><rect x="81.2954%" y="421" width="0.0566%" height="15" fill="rgb(205,143,26)" fg:x="349791364678" fg:w="243731187"/><text x="81.5454%" y="431.50"></text></g><g><title>chlang::board::Board::piece_type (298,896,682 samples, 0.07%)</title><rect x="81.2954%" y="437" width="0.0695%" height="15" fill="rgb(236,26,9)" fg:x="349791364678" fg:w="298896682"/><text x="81.5454%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (49,147,441 samples, 0.01%)</title><rect x="81.3651%" y="405" width="0.0114%" height="15" fill="rgb(221,165,53)" fg:x="350091264369" fg:w="49147441"/><text x="81.6151%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (52,156,468 samples, 0.01%)</title><rect x="81.3651%" y="421" width="0.0121%" height="15" fill="rgb(214,110,17)" fg:x="350091264369" fg:w="52156468"/><text x="81.6151%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (123,370,107 samples, 0.03%)</title><rect x="81.3649%" y="437" width="0.0287%" height="15" fill="rgb(237,197,12)" fg:x="350090261360" fg:w="123370107"/><text x="81.6149%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (125,376,125 samples, 0.03%)</title><rect x="81.3936%" y="437" width="0.0291%" height="15" fill="rgb(205,84,17)" fg:x="350213631467" fg:w="125376125"/><text x="81.6436%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (50,150,450 samples, 0.01%)</title><rect x="81.4306%" y="437" width="0.0117%" height="15" fill="rgb(237,18,45)" fg:x="350373109898" fg:w="50150450"/><text x="81.6806%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (100,300,900 samples, 0.02%)</title><rect x="81.4423%" y="437" width="0.0233%" height="15" fill="rgb(221,87,14)" fg:x="350423260348" fg:w="100300900"/><text x="81.6923%" y="447.50"></text></g><g><title>chlang::board::Board::attacked_by_color (942,828,460 samples, 0.22%)</title><rect x="81.2595%" y="453" width="0.2191%" height="15" fill="rgb(238,186,15)" fg:x="349636901292" fg:w="942828460"/><text x="81.5095%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (1,043,129,360 samples, 0.24%)</title><rect x="81.2570%" y="469" width="0.2424%" height="15" fill="rgb(208,115,11)" fg:x="349625868193" fg:w="1043129360"/><text x="81.5070%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (136,409,224 samples, 0.03%)</title><rect x="81.5006%" y="437" width="0.0317%" height="15" fill="rgb(254,175,0)" fg:x="350674012598" fg:w="136409224"/><text x="81.7506%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (141,424,269 samples, 0.03%)</title><rect x="81.5006%" y="453" width="0.0329%" height="15" fill="rgb(227,24,42)" fg:x="350674012598" fg:w="141424269"/><text x="81.7506%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (60,180,540 samples, 0.01%)</title><rect x="81.5411%" y="453" width="0.0140%" height="15" fill="rgb(223,211,37)" fg:x="350848536164" fg:w="60180540"/><text x="81.7911%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (306,920,754 samples, 0.07%)</title><rect x="81.4994%" y="469" width="0.0713%" height="15" fill="rgb(235,49,27)" fg:x="350668997553" fg:w="306920754"/><text x="81.7494%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (3,040,120,279 samples, 0.71%)</title><rect x="80.9989%" y="485" width="0.7066%" height="15" fill="rgb(254,97,51)" fg:x="348515537230" fg:w="3040120279"/><text x="81.2489%" y="495.50"></text></g><g><title>core::ptr::write (56,168,504 samples, 0.01%)</title><rect x="81.7055%" y="469" width="0.0131%" height="15" fill="rgb(249,51,40)" fg:x="351555657509" fg:w="56168504"/><text x="81.9555%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (60,180,540 samples, 0.01%)</title><rect x="81.7055%" y="485" width="0.0140%" height="15" fill="rgb(210,128,45)" fg:x="351555657509" fg:w="60180540"/><text x="81.9555%" y="495.50"></text></g><g><title>chlang::board::Board::make_move (11,350,049,844 samples, 2.64%)</title><rect x="79.1601%" y="501" width="2.6379%" height="15" fill="rgb(224,137,50)" fg:x="340603802238" fg:w="11350049844"/><text x="79.4101%" y="511.50">ch..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (121,364,089 samples, 0.03%)</title><rect x="81.7980%" y="485" width="0.0282%" height="15" fill="rgb(242,15,9)" fg:x="351953852082" fg:w="121364089"/><text x="82.0480%" y="495.50"></text></g><g><title>chlang::board::Board::key (130,391,170 samples, 0.03%)</title><rect x="81.7980%" y="501" width="0.0303%" height="15" fill="rgb(233,187,41)" fg:x="351953852082" fg:w="130391170"/><text x="82.0480%" y="511.50"></text></g><g><title>_int_free (84,252,756 samples, 0.02%)</title><rect x="81.8381%" y="325" width="0.0196%" height="15" fill="rgb(227,2,29)" fg:x="352126369630" fg:w="84252756"/><text x="82.0881%" y="335.50"></text></g><g><title>__GI___libc_free (119,358,071 samples, 0.03%)</title><rect x="81.8381%" y="341" width="0.0277%" height="15" fill="rgb(222,70,3)" fg:x="352126369630" fg:w="119358071"/><text x="82.0881%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="485" width="0.0382%" height="15" fill="rgb(213,11,42)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="469" width="0.0382%" height="15" fill="rgb(225,150,9)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="453" width="0.0382%" height="15" fill="rgb(230,162,45)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="437" width="0.0382%" height="15" fill="rgb(222,14,52)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="421" width="0.0382%" height="15" fill="rgb(254,198,14)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="405" width="0.0382%" height="15" fill="rgb(220,217,30)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="389" width="0.0382%" height="15" fill="rgb(215,146,41)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="373" width="0.0382%" height="15" fill="rgb(217,27,36)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (164,493,476 samples, 0.04%)</title><rect x="81.8283%" y="357" width="0.0382%" height="15" fill="rgb(219,218,39)" fg:x="352084243252" fg:w="164493476"/><text x="82.0783%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (676,028,066 samples, 0.16%)</title><rect x="81.8710%" y="485" width="0.1571%" height="15" fill="rgb(219,4,42)" fg:x="352267793899" fg:w="676028066"/><text x="82.1210%" y="495.50"></text></g><g><title>chlang::board::Position::bitboard (284,854,556 samples, 0.07%)</title><rect x="82.0435%" y="453" width="0.0662%" height="15" fill="rgb(249,119,36)" fg:x="353010020559" fg:w="284854556"/><text x="82.2935%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (284,854,556 samples, 0.07%)</title><rect x="82.0435%" y="437" width="0.0662%" height="15" fill="rgb(209,23,33)" fg:x="353010020559" fg:w="284854556"/><text x="82.2935%" y="447.50"></text></g><g><title>chlang::board::Board::piece_type (379,137,402 samples, 0.09%)</title><rect x="82.0435%" y="469" width="0.0881%" height="15" fill="rgb(211,10,0)" fg:x="353010020559" fg:w="379137402"/><text x="82.2935%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (115,346,035 samples, 0.03%)</title><rect x="82.1339%" y="437" width="0.0268%" height="15" fill="rgb(208,99,37)" fg:x="353399188051" fg:w="115346035"/><text x="82.3839%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (119,358,071 samples, 0.03%)</title><rect x="82.1339%" y="453" width="0.0277%" height="15" fill="rgb(213,132,31)" fg:x="353399188051" fg:w="119358071"/><text x="82.3839%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (308,926,772 samples, 0.07%)</title><rect x="82.1316%" y="469" width="0.0718%" height="15" fill="rgb(243,129,40)" fg:x="353389157961" fg:w="308926772"/><text x="82.3816%" y="479.50"></text></g><g><title>_int_free (61,183,549 samples, 0.01%)</title><rect x="82.2095%" y="325" width="0.0142%" height="15" fill="rgb(210,66,33)" fg:x="353724162967" fg:w="61183549"/><text x="82.4595%" y="335.50"></text></g><g><title>__GI___libc_free (76,228,684 samples, 0.02%)</title><rect x="82.2095%" y="341" width="0.0177%" height="15" fill="rgb(209,189,4)" fg:x="353724162967" fg:w="76228684"/><text x="82.4595%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (104,312,936 samples, 0.02%)</title><rect x="82.2034%" y="389" width="0.0242%" height="15" fill="rgb(214,107,37)" fg:x="353698084733" fg:w="104312936"/><text x="82.4534%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (99,297,891 samples, 0.02%)</title><rect x="82.2046%" y="373" width="0.0231%" height="15" fill="rgb(245,88,54)" fg:x="353703099778" fg:w="99297891"/><text x="82.4546%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (99,297,891 samples, 0.02%)</title><rect x="82.2046%" y="357" width="0.0231%" height="15" fill="rgb(205,146,20)" fg:x="353703099778" fg:w="99297891"/><text x="82.4546%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (109,327,981 samples, 0.03%)</title><rect x="82.2034%" y="453" width="0.0254%" height="15" fill="rgb(220,161,25)" fg:x="353698084733" fg:w="109327981"/><text x="82.4534%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (109,327,981 samples, 0.03%)</title><rect x="82.2034%" y="437" width="0.0254%" height="15" fill="rgb(215,152,15)" fg:x="353698084733" fg:w="109327981"/><text x="82.4534%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (109,327,981 samples, 0.03%)</title><rect x="82.2034%" y="421" width="0.0254%" height="15" fill="rgb(233,192,44)" fg:x="353698084733" fg:w="109327981"/><text x="82.4534%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (109,327,981 samples, 0.03%)</title><rect x="82.2034%" y="405" width="0.0254%" height="15" fill="rgb(240,170,46)" fg:x="353698084733" fg:w="109327981"/><text x="82.4534%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (172,517,548 samples, 0.04%)</title><rect x="82.2372%" y="437" width="0.0401%" height="15" fill="rgb(207,104,33)" fg:x="353843521038" fg:w="172517548"/><text x="82.4872%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (178,535,602 samples, 0.04%)</title><rect x="82.2372%" y="453" width="0.0415%" height="15" fill="rgb(219,21,39)" fg:x="353843521038" fg:w="178535602"/><text x="82.4872%" y="463.50"></text></g><g><title>__GI___libc_malloc (71,213,639 samples, 0.02%)</title><rect x="82.2817%" y="325" width="0.0166%" height="15" fill="rgb(214,133,29)" fg:x="354035095757" fg:w="71213639"/><text x="82.5317%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86,258,774 samples, 0.02%)</title><rect x="82.2787%" y="373" width="0.0200%" height="15" fill="rgb(226,93,6)" fg:x="354022056640" fg:w="86258774"/><text x="82.5287%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86,258,774 samples, 0.02%)</title><rect x="82.2787%" y="357" width="0.0200%" height="15" fill="rgb(252,222,34)" fg:x="354022056640" fg:w="86258774"/><text x="82.5287%" y="367.50"></text></g><g><title>alloc::alloc::alloc (86,258,774 samples, 0.02%)</title><rect x="82.2787%" y="341" width="0.0200%" height="15" fill="rgb(252,92,48)" fg:x="354022056640" fg:w="86258774"/><text x="82.5287%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (95,285,855 samples, 0.02%)</title><rect x="82.2787%" y="453" width="0.0221%" height="15" fill="rgb(245,223,24)" fg:x="354022056640" fg:w="95285855"/><text x="82.5287%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (95,285,855 samples, 0.02%)</title><rect x="82.2787%" y="437" width="0.0221%" height="15" fill="rgb(205,176,3)" fg:x="354022056640" fg:w="95285855"/><text x="82.5287%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95,285,855 samples, 0.02%)</title><rect x="82.2787%" y="421" width="0.0221%" height="15" fill="rgb(235,151,15)" fg:x="354022056640" fg:w="95285855"/><text x="82.5287%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (95,285,855 samples, 0.02%)</title><rect x="82.2787%" y="405" width="0.0221%" height="15" fill="rgb(237,209,11)" fg:x="354022056640" fg:w="95285855"/><text x="82.5287%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (95,285,855 samples, 0.02%)</title><rect x="82.2787%" y="389" width="0.0221%" height="15" fill="rgb(243,227,24)" fg:x="354022056640" fg:w="95285855"/><text x="82.5287%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58,174,522 samples, 0.01%)</title><rect x="82.3116%" y="341" width="0.0135%" height="15" fill="rgb(239,193,16)" fg:x="354163480909" fg:w="58174522"/><text x="82.5616%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58,174,522 samples, 0.01%)</title><rect x="82.3116%" y="325" width="0.0135%" height="15" fill="rgb(231,27,9)" fg:x="354163480909" fg:w="58174522"/><text x="82.5616%" y="335.50"></text></g><g><title>alloc::alloc::alloc (58,174,522 samples, 0.01%)</title><rect x="82.3116%" y="309" width="0.0135%" height="15" fill="rgb(219,169,10)" fg:x="354163480909" fg:w="58174522"/><text x="82.5616%" y="319.50"></text></g><g><title>__GI___libc_malloc (46,138,414 samples, 0.01%)</title><rect x="82.3144%" y="293" width="0.0107%" height="15" fill="rgb(244,229,43)" fg:x="354175517017" fg:w="46138414"/><text x="82.5644%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74,222,666 samples, 0.02%)</title><rect x="82.3085%" y="389" width="0.0173%" height="15" fill="rgb(254,38,20)" fg:x="354150441792" fg:w="74222666"/><text x="82.5585%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (74,222,666 samples, 0.02%)</title><rect x="82.3085%" y="373" width="0.0173%" height="15" fill="rgb(250,47,30)" fg:x="354150441792" fg:w="74222666"/><text x="82.5585%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (74,222,666 samples, 0.02%)</title><rect x="82.3085%" y="357" width="0.0173%" height="15" fill="rgb(224,124,36)" fg:x="354150441792" fg:w="74222666"/><text x="82.5585%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (82,246,738 samples, 0.02%)</title><rect x="82.3085%" y="421" width="0.0191%" height="15" fill="rgb(246,68,51)" fg:x="354150441792" fg:w="82246738"/><text x="82.5585%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (82,246,738 samples, 0.02%)</title><rect x="82.3085%" y="405" width="0.0191%" height="15" fill="rgb(253,43,49)" fg:x="354150441792" fg:w="82246738"/><text x="82.5585%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (150,451,350 samples, 0.03%)</title><rect x="82.3050%" y="453" width="0.0350%" height="15" fill="rgb(219,54,36)" fg:x="354135396657" fg:w="150451350"/><text x="82.5550%" y="463.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (150,451,350 samples, 0.03%)</title><rect x="82.3050%" y="437" width="0.0350%" height="15" fill="rgb(227,133,34)" fg:x="354135396657" fg:w="150451350"/><text x="82.5550%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (674,022,048 samples, 0.16%)</title><rect x="82.2034%" y="469" width="0.1567%" height="15" fill="rgb(247,227,15)" fg:x="353698084733" fg:w="674022048"/><text x="82.4534%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (64,192,576 samples, 0.01%)</title><rect x="82.3601%" y="469" width="0.0149%" height="15" fill="rgb(229,96,14)" fg:x="354372106781" fg:w="64192576"/><text x="82.6101%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (81,243,729 samples, 0.02%)</title><rect x="82.3771%" y="437" width="0.0189%" height="15" fill="rgb(220,79,17)" fg:x="354445326438" fg:w="81243729"/><text x="82.6271%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81,243,729 samples, 0.02%)</title><rect x="82.3771%" y="421" width="0.0189%" height="15" fill="rgb(205,131,53)" fg:x="354445326438" fg:w="81243729"/><text x="82.6271%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (81,243,729 samples, 0.02%)</title><rect x="82.3771%" y="405" width="0.0189%" height="15" fill="rgb(209,50,29)" fg:x="354445326438" fg:w="81243729"/><text x="82.6271%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81,243,729 samples, 0.02%)</title><rect x="82.3771%" y="389" width="0.0189%" height="15" fill="rgb(245,86,46)" fg:x="354445326438" fg:w="81243729"/><text x="82.6271%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (81,243,729 samples, 0.02%)</title><rect x="82.3771%" y="373" width="0.0189%" height="15" fill="rgb(235,66,46)" fg:x="354445326438" fg:w="81243729"/><text x="82.6271%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81,243,729 samples, 0.02%)</title><rect x="82.3771%" y="357" width="0.0189%" height="15" fill="rgb(232,148,31)" fg:x="354445326438" fg:w="81243729"/><text x="82.6271%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (81,243,729 samples, 0.02%)</title><rect x="82.3771%" y="341" width="0.0189%" height="15" fill="rgb(217,149,8)" fg:x="354445326438" fg:w="81243729"/><text x="82.6271%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79,237,711 samples, 0.02%)</title><rect x="82.3775%" y="325" width="0.0184%" height="15" fill="rgb(209,183,11)" fg:x="354447332456" fg:w="79237711"/><text x="82.6275%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (79,237,711 samples, 0.02%)</title><rect x="82.3775%" y="309" width="0.0184%" height="15" fill="rgb(208,55,20)" fg:x="354447332456" fg:w="79237711"/><text x="82.6275%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (123,370,107 samples, 0.03%)</title><rect x="82.3999%" y="405" width="0.0287%" height="15" fill="rgb(218,39,14)" fg:x="354543621320" fg:w="123370107"/><text x="82.6499%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (154,463,386 samples, 0.04%)</title><rect x="82.3999%" y="421" width="0.0359%" height="15" fill="rgb(216,169,33)" fg:x="354543621320" fg:w="154463386"/><text x="82.6499%" y="431.50"></text></g><g><title>chlang::board::Board::piece_type (178,535,602 samples, 0.04%)</title><rect x="82.3999%" y="437" width="0.0415%" height="15" fill="rgb(233,80,24)" fg:x="354543621320" fg:w="178535602"/><text x="82.6499%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (70,210,630 samples, 0.02%)</title><rect x="82.4414%" y="437" width="0.0163%" height="15" fill="rgb(213,179,31)" fg:x="354722156922" fg:w="70210630"/><text x="82.6914%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (66,198,594 samples, 0.02%)</title><rect x="82.4577%" y="437" width="0.0154%" height="15" fill="rgb(209,19,5)" fg:x="354792367552" fg:w="66198594"/><text x="82.7077%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (50,150,450 samples, 0.01%)</title><rect x="82.4850%" y="437" width="0.0117%" height="15" fill="rgb(219,18,35)" fg:x="354909719605" fg:w="50150450"/><text x="82.7350%" y="447.50"></text></g><g><title>chlang::board::Board::attacked_by_color (550,651,941 samples, 0.13%)</title><rect x="82.3771%" y="453" width="0.1280%" height="15" fill="rgb(209,169,16)" fg:x="354445326438" fg:w="550651941"/><text x="82.6271%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (605,817,436 samples, 0.14%)</title><rect x="82.3750%" y="469" width="0.1408%" height="15" fill="rgb(245,90,51)" fg:x="354436299357" fg:w="605817436"/><text x="82.6250%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (74,222,666 samples, 0.02%)</title><rect x="82.5169%" y="437" width="0.0173%" height="15" fill="rgb(220,99,45)" fg:x="355047131838" fg:w="74222666"/><text x="82.7669%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (79,237,711 samples, 0.02%)</title><rect x="82.5169%" y="453" width="0.0184%" height="15" fill="rgb(249,89,25)" fg:x="355047131838" fg:w="79237711"/><text x="82.7669%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (192,577,728 samples, 0.04%)</title><rect x="82.5158%" y="469" width="0.0448%" height="15" fill="rgb(239,193,0)" fg:x="355042116793" fg:w="192577728"/><text x="82.7658%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (2,430,290,807 samples, 0.56%)</title><rect x="82.0358%" y="485" width="0.5648%" height="15" fill="rgb(231,126,1)" fg:x="352976921262" fg:w="2430290807"/><text x="82.2858%" y="495.50"></text></g><g><title>_int_malloc (72,216,648 samples, 0.02%)</title><rect x="82.6037%" y="341" width="0.0168%" height="15" fill="rgb(243,166,3)" fg:x="355420251186" fg:w="72216648"/><text x="82.8537%" y="351.50"></text></g><g><title>__GI___libc_malloc (95,285,855 samples, 0.02%)</title><rect x="82.6020%" y="357" width="0.0221%" height="15" fill="rgb(223,22,34)" fg:x="355413230123" fg:w="95285855"/><text x="82.8520%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (99,297,891 samples, 0.02%)</title><rect x="82.6013%" y="405" width="0.0231%" height="15" fill="rgb(251,52,51)" fg:x="355410221096" fg:w="99297891"/><text x="82.8513%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (99,297,891 samples, 0.02%)</title><rect x="82.6013%" y="389" width="0.0231%" height="15" fill="rgb(221,165,28)" fg:x="355410221096" fg:w="99297891"/><text x="82.8513%" y="399.50"></text></g><g><title>alloc::alloc::alloc (99,297,891 samples, 0.02%)</title><rect x="82.6013%" y="373" width="0.0231%" height="15" fill="rgb(218,121,47)" fg:x="355410221096" fg:w="99297891"/><text x="82.8513%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (111,333,999 samples, 0.03%)</title><rect x="82.6006%" y="485" width="0.0259%" height="15" fill="rgb(209,120,9)" fg:x="355407212069" fg:w="111333999"/><text x="82.8506%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (111,333,999 samples, 0.03%)</title><rect x="82.6006%" y="469" width="0.0259%" height="15" fill="rgb(236,68,12)" fg:x="355407212069" fg:w="111333999"/><text x="82.8506%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (111,333,999 samples, 0.03%)</title><rect x="82.6006%" y="453" width="0.0259%" height="15" fill="rgb(225,194,26)" fg:x="355407212069" fg:w="111333999"/><text x="82.8506%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (111,333,999 samples, 0.03%)</title><rect x="82.6006%" y="437" width="0.0259%" height="15" fill="rgb(231,84,39)" fg:x="355407212069" fg:w="111333999"/><text x="82.8506%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (111,333,999 samples, 0.03%)</title><rect x="82.6006%" y="421" width="0.0259%" height="15" fill="rgb(210,11,45)" fg:x="355407212069" fg:w="111333999"/><text x="82.8506%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (114,343,026 samples, 0.03%)</title><rect x="82.6265%" y="485" width="0.0266%" height="15" fill="rgb(224,54,52)" fg:x="355518546068" fg:w="114343026"/><text x="82.8765%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (3,694,082,147 samples, 0.86%)</title><rect x="81.8283%" y="501" width="0.8585%" height="15" fill="rgb(238,102,14)" fg:x="352084243252" fg:w="3694082147"/><text x="82.0783%" y="511.50"></text></g><g><title>_int_free (50,150,450 samples, 0.01%)</title><rect x="82.6880%" y="373" width="0.0117%" height="15" fill="rgb(243,160,52)" fg:x="355783340444" fg:w="50150450"/><text x="82.9380%" y="383.50"></text></g><g><title>__GI___libc_free (56,168,504 samples, 0.01%)</title><rect x="82.6878%" y="389" width="0.0131%" height="15" fill="rgb(216,114,19)" fg:x="355782337435" fg:w="56168504"/><text x="82.9378%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (61,183,549 samples, 0.01%)</title><rect x="82.6869%" y="437" width="0.0142%" height="15" fill="rgb(244,166,37)" fg:x="355778325399" fg:w="61183549"/><text x="82.9369%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (61,183,549 samples, 0.01%)</title><rect x="82.6869%" y="421" width="0.0142%" height="15" fill="rgb(246,29,44)" fg:x="355778325399" fg:w="61183549"/><text x="82.9369%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (61,183,549 samples, 0.01%)</title><rect x="82.6869%" y="405" width="0.0142%" height="15" fill="rgb(215,56,53)" fg:x="355778325399" fg:w="61183549"/><text x="82.9369%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (67,201,603 samples, 0.02%)</title><rect x="82.6869%" y="485" width="0.0156%" height="15" fill="rgb(217,60,2)" fg:x="355778325399" fg:w="67201603"/><text x="82.9369%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (67,201,603 samples, 0.02%)</title><rect x="82.6869%" y="469" width="0.0156%" height="15" fill="rgb(207,26,24)" fg:x="355778325399" fg:w="67201603"/><text x="82.9369%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67,201,603 samples, 0.02%)</title><rect x="82.6869%" y="453" width="0.0156%" height="15" fill="rgb(252,210,15)" fg:x="355778325399" fg:w="67201603"/><text x="82.9369%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (62,186,558 samples, 0.01%)</title><rect x="82.7086%" y="405" width="0.0145%" height="15" fill="rgb(253,209,26)" fg:x="355871605236" fg:w="62186558"/><text x="82.9586%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (62,186,558 samples, 0.01%)</title><rect x="82.7086%" y="389" width="0.0145%" height="15" fill="rgb(238,170,14)" fg:x="355871605236" fg:w="62186558"/><text x="82.9586%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (62,186,558 samples, 0.01%)</title><rect x="82.7086%" y="373" width="0.0145%" height="15" fill="rgb(216,178,15)" fg:x="355871605236" fg:w="62186558"/><text x="82.9586%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (98,294,882 samples, 0.02%)</title><rect x="82.7251%" y="405" width="0.0228%" height="15" fill="rgb(250,197,2)" fg:x="355942818875" fg:w="98294882"/><text x="82.9751%" y="415.50"></text></g><g><title>core::intrinsics::likely (51,153,459 samples, 0.01%)</title><rect x="82.7512%" y="405" width="0.0119%" height="15" fill="rgb(212,70,42)" fg:x="356055155883" fg:w="51153459"/><text x="83.0012%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (265,797,385 samples, 0.06%)</title><rect x="82.7086%" y="437" width="0.0618%" height="15" fill="rgb(227,213,9)" fg:x="355871605236" fg:w="265797385"/><text x="82.9586%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (265,797,385 samples, 0.06%)</title><rect x="82.7086%" y="421" width="0.0618%" height="15" fill="rgb(245,99,25)" fg:x="355871605236" fg:w="265797385"/><text x="82.9586%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (45,135,405 samples, 0.01%)</title><rect x="82.7832%" y="261" width="0.0105%" height="15" fill="rgb(250,82,29)" fg:x="356192568116" fg:w="45135405"/><text x="83.0332%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (114,343,026 samples, 0.03%)</title><rect x="82.7811%" y="277" width="0.0266%" height="15" fill="rgb(241,226,54)" fg:x="356183541035" fg:w="114343026"/><text x="83.0311%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (314,944,826 samples, 0.07%)</title><rect x="82.7722%" y="309" width="0.0732%" height="15" fill="rgb(221,99,41)" fg:x="356145426693" fg:w="314944826"/><text x="83.0222%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (314,944,826 samples, 0.07%)</title><rect x="82.7722%" y="293" width="0.0732%" height="15" fill="rgb(213,90,21)" fg:x="356145426693" fg:w="314944826"/><text x="83.0222%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (315,947,835 samples, 0.07%)</title><rect x="82.7722%" y="325" width="0.0734%" height="15" fill="rgb(205,208,24)" fg:x="356145426693" fg:w="315947835"/><text x="83.0222%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (330,992,970 samples, 0.08%)</title><rect x="82.7703%" y="357" width="0.0769%" height="15" fill="rgb(246,31,12)" fg:x="356137402621" fg:w="330992970"/><text x="83.0203%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u64 (330,992,970 samples, 0.08%)</title><rect x="82.7703%" y="341" width="0.0769%" height="15" fill="rgb(213,154,6)" fg:x="356137402621" fg:w="330992970"/><text x="83.0203%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (74,222,666 samples, 0.02%)</title><rect x="82.8522%" y="245" width="0.0173%" height="15" fill="rgb(222,163,29)" fg:x="356489458780" fg:w="74222666"/><text x="83.1022%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (201,604,809 samples, 0.05%)</title><rect x="82.8694%" y="245" width="0.0469%" height="15" fill="rgb(227,201,8)" fg:x="356563681446" fg:w="201604809"/><text x="83.1194%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (387,161,474 samples, 0.09%)</title><rect x="82.8522%" y="261" width="0.0900%" height="15" fill="rgb(233,9,32)" fg:x="356489458780" fg:w="387161474"/><text x="83.1022%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (523,570,698 samples, 0.12%)</title><rect x="82.8473%" y="309" width="0.1217%" height="15" fill="rgb(217,54,24)" fg:x="356468395591" fg:w="523570698"/><text x="83.0973%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (523,570,698 samples, 0.12%)</title><rect x="82.8473%" y="293" width="0.1217%" height="15" fill="rgb(235,192,0)" fg:x="356468395591" fg:w="523570698"/><text x="83.0973%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (523,570,698 samples, 0.12%)</title><rect x="82.8473%" y="277" width="0.1217%" height="15" fill="rgb(235,45,9)" fg:x="356468395591" fg:w="523570698"/><text x="83.0973%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (529,588,752 samples, 0.12%)</title><rect x="82.8473%" y="325" width="0.1231%" height="15" fill="rgb(246,42,40)" fg:x="356468395591" fg:w="529588752"/><text x="83.0973%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (53,159,477 samples, 0.01%)</title><rect x="82.9727%" y="245" width="0.0124%" height="15" fill="rgb(248,111,24)" fg:x="357008014433" fg:w="53159477"/><text x="83.2227%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (55,165,495 samples, 0.01%)</title><rect x="82.9916%" y="229" width="0.0128%" height="15" fill="rgb(249,65,22)" fg:x="357089258162" fg:w="55165495"/><text x="83.2416%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (126,379,134 samples, 0.03%)</title><rect x="82.9860%" y="245" width="0.0294%" height="15" fill="rgb(238,111,51)" fg:x="357065185946" fg:w="126379134"/><text x="83.2360%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (379,137,402 samples, 0.09%)</title><rect x="82.9717%" y="277" width="0.0881%" height="15" fill="rgb(250,118,22)" fg:x="357004002397" fg:w="379137402"/><text x="83.2217%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (379,137,402 samples, 0.09%)</title><rect x="82.9717%" y="261" width="0.0881%" height="15" fill="rgb(234,84,26)" fg:x="357004002397" fg:w="379137402"/><text x="83.2217%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (380,140,411 samples, 0.09%)</title><rect x="82.9717%" y="293" width="0.0883%" height="15" fill="rgb(243,172,12)" fg:x="357004002397" fg:w="380140411"/><text x="83.2217%" y="303.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (533,600,788 samples, 0.12%)</title><rect x="82.9703%" y="325" width="0.1240%" height="15" fill="rgb(236,150,49)" fg:x="356997984343" fg:w="533600788"/><text x="83.2203%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (533,600,788 samples, 0.12%)</title><rect x="82.9703%" y="309" width="0.1240%" height="15" fill="rgb(225,197,26)" fg:x="356997984343" fg:w="533600788"/><text x="83.2203%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (55,165,495 samples, 0.01%)</title><rect x="83.0944%" y="309" width="0.0128%" height="15" fill="rgb(214,17,42)" fg:x="357531585131" fg:w="55165495"/><text x="83.3444%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u8 (55,165,495 samples, 0.01%)</title><rect x="83.0944%" y="293" width="0.0128%" height="15" fill="rgb(224,165,40)" fg:x="357531585131" fg:w="55165495"/><text x="83.3444%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (55,165,495 samples, 0.01%)</title><rect x="83.0944%" y="277" width="0.0128%" height="15" fill="rgb(246,100,4)" fg:x="357531585131" fg:w="55165495"/><text x="83.3444%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55,165,495 samples, 0.01%)</title><rect x="83.0944%" y="261" width="0.0128%" height="15" fill="rgb(222,103,0)" fg:x="357531585131" fg:w="55165495"/><text x="83.3444%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55,165,495 samples, 0.01%)</title><rect x="83.0944%" y="245" width="0.0128%" height="15" fill="rgb(227,189,26)" fg:x="357531585131" fg:w="55165495"/><text x="83.3444%" y="255.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1,131,394,152 samples, 0.26%)</title><rect x="82.8473%" y="357" width="0.2629%" height="15" fill="rgb(214,202,17)" fg:x="356468395591" fg:w="1131394152"/><text x="83.0973%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,131,394,152 samples, 0.26%)</title><rect x="82.8473%" y="341" width="0.2629%" height="15" fill="rgb(229,111,3)" fg:x="356468395591" fg:w="1131394152"/><text x="83.0973%" y="351.50"></text></g><g><title>core::hash::Hash::hash_slice (68,204,612 samples, 0.02%)</title><rect x="83.0944%" y="325" width="0.0159%" height="15" fill="rgb(229,172,15)" fg:x="357531585131" fg:w="68204612"/><text x="83.3444%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (45,135,405 samples, 0.01%)</title><rect x="83.1116%" y="245" width="0.0105%" height="15" fill="rgb(230,224,35)" fg:x="357605807797" fg:w="45135405"/><text x="83.3616%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (65,195,585 samples, 0.02%)</title><rect x="83.1228%" y="245" width="0.0152%" height="15" fill="rgb(251,141,6)" fg:x="357653952229" fg:w="65195585"/><text x="83.3728%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (198,595,782 samples, 0.05%)</title><rect x="83.1116%" y="277" width="0.0462%" height="15" fill="rgb(225,208,6)" fg:x="357605807797" fg:w="198595782"/><text x="83.3616%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (198,595,782 samples, 0.05%)</title><rect x="83.1116%" y="261" width="0.0462%" height="15" fill="rgb(246,181,16)" fg:x="357605807797" fg:w="198595782"/><text x="83.3616%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (203,610,827 samples, 0.05%)</title><rect x="83.1116%" y="293" width="0.0473%" height="15" fill="rgb(227,129,36)" fg:x="357605807797" fg:w="203610827"/><text x="83.3616%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (211,634,899 samples, 0.05%)</title><rect x="83.1102%" y="341" width="0.0492%" height="15" fill="rgb(248,117,24)" fg:x="357599789743" fg:w="211634899"/><text x="83.3602%" y="351.50"></text></g><g><title>core::hash::Hasher::write_isize (211,634,899 samples, 0.05%)</title><rect x="83.1102%" y="325" width="0.0492%" height="15" fill="rgb(214,185,35)" fg:x="357599789743" fg:w="211634899"/><text x="83.3602%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (211,634,899 samples, 0.05%)</title><rect x="83.1102%" y="309" width="0.0492%" height="15" fill="rgb(236,150,34)" fg:x="357599789743" fg:w="211634899"/><text x="83.3602%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (74,222,666 samples, 0.02%)</title><rect x="83.1634%" y="261" width="0.0173%" height="15" fill="rgb(243,228,27)" fg:x="357828475795" fg:w="74222666"/><text x="83.4134%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74,222,666 samples, 0.02%)</title><rect x="83.1634%" y="245" width="0.0173%" height="15" fill="rgb(245,77,44)" fg:x="357828475795" fg:w="74222666"/><text x="83.4134%" y="255.50"></text></g><g><title>core::hash::Hasher::write_i64 (93,279,837 samples, 0.02%)</title><rect x="83.1594%" y="309" width="0.0217%" height="15" fill="rgb(235,214,42)" fg:x="357811424642" fg:w="93279837"/><text x="83.4094%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u64 (93,279,837 samples, 0.02%)</title><rect x="83.1594%" y="293" width="0.0217%" height="15" fill="rgb(221,74,3)" fg:x="357811424642" fg:w="93279837"/><text x="83.4094%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (76,228,684 samples, 0.02%)</title><rect x="83.1634%" y="277" width="0.0177%" height="15" fill="rgb(206,121,29)" fg:x="357828475795" fg:w="76228684"/><text x="83.4134%" y="287.50"></text></g><g><title>&lt;chlang::board::Position as core::hash::Hash&gt;::hash (94,282,846 samples, 0.02%)</title><rect x="83.1594%" y="341" width="0.0219%" height="15" fill="rgb(249,131,53)" fg:x="357811424642" fg:w="94282846"/><text x="83.4094%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (94,282,846 samples, 0.02%)</title><rect x="83.1594%" y="325" width="0.0219%" height="15" fill="rgb(236,170,29)" fg:x="357811424642" fg:w="94282846"/><text x="83.4094%" y="335.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (309,929,781 samples, 0.07%)</title><rect x="83.1102%" y="357" width="0.0720%" height="15" fill="rgb(247,96,15)" fg:x="357599789743" fg:w="309929781"/><text x="83.3602%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (96,288,864 samples, 0.02%)</title><rect x="83.1839%" y="277" width="0.0224%" height="15" fill="rgb(211,210,7)" fg:x="357916740587" fg:w="96288864"/><text x="83.4339%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (96,288,864 samples, 0.02%)</title><rect x="83.1839%" y="261" width="0.0224%" height="15" fill="rgb(240,88,50)" fg:x="357916740587" fg:w="96288864"/><text x="83.4339%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (97,291,873 samples, 0.02%)</title><rect x="83.1839%" y="293" width="0.0226%" height="15" fill="rgb(209,229,26)" fg:x="357916740587" fg:w="97291873"/><text x="83.4339%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (105,315,945 samples, 0.02%)</title><rect x="83.1822%" y="341" width="0.0245%" height="15" fill="rgb(210,68,23)" fg:x="357909719524" fg:w="105315945"/><text x="83.4322%" y="351.50"></text></g><g><title>core::hash::Hasher::write_isize (105,315,945 samples, 0.02%)</title><rect x="83.1822%" y="325" width="0.0245%" height="15" fill="rgb(229,180,13)" fg:x="357909719524" fg:w="105315945"/><text x="83.4322%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (105,315,945 samples, 0.02%)</title><rect x="83.1822%" y="309" width="0.0245%" height="15" fill="rgb(236,53,44)" fg:x="357909719524" fg:w="105315945"/><text x="83.4322%" y="319.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (108,324,972 samples, 0.03%)</title><rect x="83.1822%" y="357" width="0.0252%" height="15" fill="rgb(244,214,29)" fg:x="357909719524" fg:w="108324972"/><text x="83.4322%" y="367.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (1,932,798,343 samples, 0.45%)</title><rect x="82.7703%" y="373" width="0.4492%" height="15" fill="rgb(220,75,29)" fg:x="356137402621" fg:w="1932798343"/><text x="83.0203%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,933,801,352 samples, 0.45%)</title><rect x="82.7703%" y="405" width="0.4494%" height="15" fill="rgb(214,183,37)" fg:x="356137402621" fg:w="1933801352"/><text x="83.0203%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,933,801,352 samples, 0.45%)</title><rect x="82.7703%" y="389" width="0.4494%" height="15" fill="rgb(239,117,29)" fg:x="356137402621" fg:w="1933801352"/><text x="83.0203%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (55,165,495 samples, 0.01%)</title><rect x="83.2240%" y="341" width="0.0128%" height="15" fill="rgb(237,171,35)" fg:x="358089258135" fg:w="55165495"/><text x="83.4740%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (131,394,179 samples, 0.03%)</title><rect x="83.2368%" y="341" width="0.0305%" height="15" fill="rgb(229,178,53)" fg:x="358144423630" fg:w="131394179"/><text x="83.4868%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (219,658,971 samples, 0.05%)</title><rect x="83.2240%" y="357" width="0.0511%" height="15" fill="rgb(210,102,19)" fg:x="358089258135" fg:w="219658971"/><text x="83.4740%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (68,204,612 samples, 0.02%)</title><rect x="83.2750%" y="357" width="0.0159%" height="15" fill="rgb(235,127,22)" fg:x="358308917106" fg:w="68204612"/><text x="83.5250%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (357,071,204 samples, 0.08%)</title><rect x="83.2240%" y="405" width="0.0830%" height="15" fill="rgb(244,31,31)" fg:x="358089258135" fg:w="357071204"/><text x="83.4740%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (357,071,204 samples, 0.08%)</title><rect x="83.2240%" y="389" width="0.0830%" height="15" fill="rgb(231,43,21)" fg:x="358089258135" fg:w="357071204"/><text x="83.4740%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (357,071,204 samples, 0.08%)</title><rect x="83.2240%" y="373" width="0.0830%" height="15" fill="rgb(217,131,35)" fg:x="358089258135" fg:w="357071204"/><text x="83.4740%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,328,986,898 samples, 0.54%)</title><rect x="82.7703%" y="421" width="0.5413%" height="15" fill="rgb(221,149,4)" fg:x="356137402621" fg:w="2328986898"/><text x="83.0203%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (2,332,998,934 samples, 0.54%)</title><rect x="82.7703%" y="437" width="0.5422%" height="15" fill="rgb(232,170,28)" fg:x="356137402621" fg:w="2332998934"/><text x="83.0203%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51,153,459 samples, 0.01%)</title><rect x="83.3195%" y="293" width="0.0119%" height="15" fill="rgb(238,56,10)" fg:x="358500491825" fg:w="51153459"/><text x="83.5695%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51,153,459 samples, 0.01%)</title><rect x="83.3195%" y="277" width="0.0119%" height="15" fill="rgb(235,196,14)" fg:x="358500491825" fg:w="51153459"/><text x="83.5695%" y="287.50"></text></g><g><title>alloc::alloc::alloc (51,153,459 samples, 0.01%)</title><rect x="83.3195%" y="261" width="0.0119%" height="15" fill="rgb(216,45,48)" fg:x="358500491825" fg:w="51153459"/><text x="83.5695%" y="271.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (57,171,513 samples, 0.01%)</title><rect x="83.3195%" y="309" width="0.0133%" height="15" fill="rgb(238,213,17)" fg:x="358500491825" fg:w="57171513"/><text x="83.5695%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (73,219,657 samples, 0.02%)</title><rect x="83.3193%" y="325" width="0.0170%" height="15" fill="rgb(212,13,2)" fg:x="358499488816" fg:w="73219657"/><text x="83.5693%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (127,382,143 samples, 0.03%)</title><rect x="83.3132%" y="357" width="0.0296%" height="15" fill="rgb(240,114,20)" fg:x="358473410582" fg:w="127382143"/><text x="83.5632%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (127,382,143 samples, 0.03%)</title><rect x="83.3132%" y="341" width="0.0296%" height="15" fill="rgb(228,41,40)" fg:x="358473410582" fg:w="127382143"/><text x="83.5632%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (59,177,531 samples, 0.01%)</title><rect x="83.3517%" y="325" width="0.0138%" height="15" fill="rgb(244,132,35)" fg:x="358638907067" fg:w="59177531"/><text x="83.6017%" y="335.50"></text></g><g><title>core::intrinsics::unlikely (50,150,450 samples, 0.01%)</title><rect x="83.3538%" y="309" width="0.0117%" height="15" fill="rgb(253,189,4)" fg:x="358647934148" fg:w="50150450"/><text x="83.6038%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (50,150,450 samples, 0.01%)</title><rect x="83.3741%" y="309" width="0.0117%" height="15" fill="rgb(224,37,19)" fg:x="358735195931" fg:w="50150450"/><text x="83.6241%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (191,574,719 samples, 0.04%)</title><rect x="83.3429%" y="357" width="0.0445%" height="15" fill="rgb(235,223,18)" fg:x="358600792725" fg:w="191574719"/><text x="83.5929%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (165,496,485 samples, 0.04%)</title><rect x="83.3489%" y="341" width="0.0385%" height="15" fill="rgb(235,163,25)" fg:x="358626870959" fg:w="165496485"/><text x="83.5989%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (94,282,846 samples, 0.02%)</title><rect x="83.3655%" y="325" width="0.0219%" height="15" fill="rgb(217,145,28)" fg:x="358698084598" fg:w="94282846"/><text x="83.6155%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43,129,387 samples, 0.01%)</title><rect x="83.4060%" y="149" width="0.0100%" height="15" fill="rgb(223,223,32)" fg:x="358872608164" fg:w="43129387"/><text x="83.6560%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (107,321,963 samples, 0.02%)</title><rect x="83.4025%" y="165" width="0.0249%" height="15" fill="rgb(227,189,39)" fg:x="358857563029" fg:w="107321963"/><text x="83.6525%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (233,701,097 samples, 0.05%)</title><rect x="83.3972%" y="213" width="0.0543%" height="15" fill="rgb(248,10,22)" fg:x="358834493822" fg:w="233701097"/><text x="83.6472%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (233,701,097 samples, 0.05%)</title><rect x="83.3972%" y="197" width="0.0543%" height="15" fill="rgb(248,46,39)" fg:x="358834493822" fg:w="233701097"/><text x="83.6472%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (233,701,097 samples, 0.05%)</title><rect x="83.3972%" y="181" width="0.0543%" height="15" fill="rgb(248,113,48)" fg:x="358834493822" fg:w="233701097"/><text x="83.6472%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (250,752,250 samples, 0.06%)</title><rect x="83.3955%" y="245" width="0.0583%" height="15" fill="rgb(245,16,25)" fg:x="358827472759" fg:w="250752250"/><text x="83.6455%" y="255.50"></text></g><g><title>core::hash::Hasher::write_u64 (250,752,250 samples, 0.06%)</title><rect x="83.3955%" y="229" width="0.0583%" height="15" fill="rgb(249,152,16)" fg:x="358827472759" fg:w="250752250"/><text x="83.6455%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (48,144,432 samples, 0.01%)</title><rect x="83.4575%" y="133" width="0.0112%" height="15" fill="rgb(250,16,1)" fg:x="359094273153" fg:w="48144432"/><text x="83.7075%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (137,412,233 samples, 0.03%)</title><rect x="83.4687%" y="133" width="0.0319%" height="15" fill="rgb(249,138,3)" fg:x="359142417585" fg:w="137412233"/><text x="83.7187%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (256,770,304 samples, 0.06%)</title><rect x="83.4575%" y="149" width="0.0597%" height="15" fill="rgb(227,71,41)" fg:x="359094273153" fg:w="256770304"/><text x="83.7075%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (367,101,294 samples, 0.09%)</title><rect x="83.4538%" y="197" width="0.0853%" height="15" fill="rgb(209,184,23)" fg:x="359078225009" fg:w="367101294"/><text x="83.7038%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (367,101,294 samples, 0.09%)</title><rect x="83.4538%" y="181" width="0.0853%" height="15" fill="rgb(223,215,31)" fg:x="359078225009" fg:w="367101294"/><text x="83.7038%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (367,101,294 samples, 0.09%)</title><rect x="83.4538%" y="165" width="0.0853%" height="15" fill="rgb(210,146,28)" fg:x="359078225009" fg:w="367101294"/><text x="83.7038%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (368,104,303 samples, 0.09%)</title><rect x="83.4538%" y="213" width="0.0856%" height="15" fill="rgb(209,183,41)" fg:x="359078225009" fg:w="368104303"/><text x="83.7038%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (65,195,585 samples, 0.02%)</title><rect x="83.5426%" y="133" width="0.0152%" height="15" fill="rgb(209,224,45)" fg:x="359460371438" fg:w="65195585"/><text x="83.7926%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (120,361,080 samples, 0.03%)</title><rect x="83.5599%" y="133" width="0.0280%" height="15" fill="rgb(224,209,51)" fg:x="359534594104" fg:w="120361080"/><text x="83.8099%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (334,001,997 samples, 0.08%)</title><rect x="83.5417%" y="165" width="0.0776%" height="15" fill="rgb(223,17,39)" fg:x="359456359402" fg:w="334001997"/><text x="83.7917%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (334,001,997 samples, 0.08%)</title><rect x="83.5417%" y="149" width="0.0776%" height="15" fill="rgb(234,204,37)" fg:x="359456359402" fg:w="334001997"/><text x="83.7917%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (336,008,015 samples, 0.08%)</title><rect x="83.5417%" y="181" width="0.0781%" height="15" fill="rgb(236,120,5)" fg:x="359456359402" fg:w="336008015"/><text x="83.7917%" y="191.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (443,329,978 samples, 0.10%)</title><rect x="83.5394%" y="213" width="0.1030%" height="15" fill="rgb(248,97,27)" fg:x="359446329312" fg:w="443329978"/><text x="83.7894%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (443,329,978 samples, 0.10%)</title><rect x="83.5394%" y="197" width="0.1030%" height="15" fill="rgb(240,66,17)" fg:x="359446329312" fg:w="443329978"/><text x="83.7894%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (45,135,405 samples, 0.01%)</title><rect x="83.6424%" y="197" width="0.0105%" height="15" fill="rgb(210,79,3)" fg:x="359889659290" fg:w="45135405"/><text x="83.8924%" y="207.50"></text></g><g><title>core::hash::Hasher::write_u8 (45,135,405 samples, 0.01%)</title><rect x="83.6424%" y="181" width="0.0105%" height="15" fill="rgb(214,176,27)" fg:x="359889659290" fg:w="45135405"/><text x="83.8924%" y="191.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (45,135,405 samples, 0.01%)</title><rect x="83.6424%" y="165" width="0.0105%" height="15" fill="rgb(235,185,3)" fg:x="359889659290" fg:w="45135405"/><text x="83.8924%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (45,135,405 samples, 0.01%)</title><rect x="83.6424%" y="149" width="0.0105%" height="15" fill="rgb(227,24,12)" fg:x="359889659290" fg:w="45135405"/><text x="83.8924%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (45,135,405 samples, 0.01%)</title><rect x="83.6424%" y="133" width="0.0105%" height="15" fill="rgb(252,169,48)" fg:x="359889659290" fg:w="45135405"/><text x="83.8924%" y="143.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (873,620,839 samples, 0.20%)</title><rect x="83.4538%" y="245" width="0.2030%" height="15" fill="rgb(212,65,1)" fg:x="359078225009" fg:w="873620839"/><text x="83.7038%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (873,620,839 samples, 0.20%)</title><rect x="83.4538%" y="229" width="0.2030%" height="15" fill="rgb(242,39,24)" fg:x="359078225009" fg:w="873620839"/><text x="83.7038%" y="239.50"></text></g><g><title>core::hash::Hash::hash_slice (62,186,558 samples, 0.01%)</title><rect x="83.6424%" y="213" width="0.0145%" height="15" fill="rgb(249,32,23)" fg:x="359889659290" fg:w="62186558"/><text x="83.8924%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (45,135,405 samples, 0.01%)</title><rect x="83.6659%" y="133" width="0.0105%" height="15" fill="rgb(251,195,23)" fg:x="359990963199" fg:w="45135405"/><text x="83.9159%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (137,412,233 samples, 0.03%)</title><rect x="83.6580%" y="165" width="0.0319%" height="15" fill="rgb(236,174,8)" fg:x="359956860893" fg:w="137412233"/><text x="83.9080%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (137,412,233 samples, 0.03%)</title><rect x="83.6580%" y="149" width="0.0319%" height="15" fill="rgb(220,197,8)" fg:x="359956860893" fg:w="137412233"/><text x="83.9080%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (143,430,287 samples, 0.03%)</title><rect x="83.6580%" y="181" width="0.0333%" height="15" fill="rgb(240,108,37)" fg:x="359956860893" fg:w="143430287"/><text x="83.9080%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (149,448,341 samples, 0.03%)</title><rect x="83.6569%" y="229" width="0.0347%" height="15" fill="rgb(232,176,24)" fg:x="359951845848" fg:w="149448341"/><text x="83.9069%" y="239.50"></text></g><g><title>core::hash::Hasher::write_isize (149,448,341 samples, 0.03%)</title><rect x="83.6569%" y="213" width="0.0347%" height="15" fill="rgb(243,35,29)" fg:x="359951845848" fg:w="149448341"/><text x="83.9069%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (149,448,341 samples, 0.03%)</title><rect x="83.6569%" y="197" width="0.0347%" height="15" fill="rgb(210,37,18)" fg:x="359951845848" fg:w="149448341"/><text x="83.9069%" y="207.50"></text></g><g><title>core::hash::Hasher::write_i64 (52,156,468 samples, 0.01%)</title><rect x="83.6916%" y="197" width="0.0121%" height="15" fill="rgb(224,184,40)" fg:x="360101294189" fg:w="52156468"/><text x="83.9416%" y="207.50"></text></g><g><title>core::hash::Hasher::write_u64 (52,156,468 samples, 0.01%)</title><rect x="83.6916%" y="181" width="0.0121%" height="15" fill="rgb(236,39,29)" fg:x="360101294189" fg:w="52156468"/><text x="83.9416%" y="191.50"></text></g><g><title>&lt;chlang::board::Position as core::hash::Hash&gt;::hash (53,159,477 samples, 0.01%)</title><rect x="83.6916%" y="229" width="0.0124%" height="15" fill="rgb(232,48,39)" fg:x="360101294189" fg:w="53159477"/><text x="83.9416%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (53,159,477 samples, 0.01%)</title><rect x="83.6916%" y="213" width="0.0124%" height="15" fill="rgb(236,34,42)" fg:x="360101294189" fg:w="53159477"/><text x="83.9416%" y="223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (204,613,836 samples, 0.05%)</title><rect x="83.6569%" y="245" width="0.0476%" height="15" fill="rgb(243,106,37)" fg:x="359951845848" fg:w="204613836"/><text x="83.9069%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (69,207,621 samples, 0.02%)</title><rect x="83.7051%" y="165" width="0.0161%" height="15" fill="rgb(218,96,6)" fg:x="360159468711" fg:w="69207621"/><text x="83.9551%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69,207,621 samples, 0.02%)</title><rect x="83.7051%" y="149" width="0.0161%" height="15" fill="rgb(235,130,12)" fg:x="360159468711" fg:w="69207621"/><text x="83.9551%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (76,228,684 samples, 0.02%)</title><rect x="83.7044%" y="229" width="0.0177%" height="15" fill="rgb(231,95,0)" fg:x="360156459684" fg:w="76228684"/><text x="83.9544%" y="239.50"></text></g><g><title>core::hash::Hasher::write_isize (76,228,684 samples, 0.02%)</title><rect x="83.7044%" y="213" width="0.0177%" height="15" fill="rgb(228,12,23)" fg:x="360156459684" fg:w="76228684"/><text x="83.9544%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (76,228,684 samples, 0.02%)</title><rect x="83.7044%" y="197" width="0.0177%" height="15" fill="rgb(216,12,1)" fg:x="360156459684" fg:w="76228684"/><text x="83.9544%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (73,219,657 samples, 0.02%)</title><rect x="83.7051%" y="181" width="0.0170%" height="15" fill="rgb(219,59,3)" fg:x="360159468711" fg:w="73219657"/><text x="83.9551%" y="191.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (82,246,738 samples, 0.02%)</title><rect x="83.7044%" y="245" width="0.0191%" height="15" fill="rgb(215,208,46)" fg:x="360156459684" fg:w="82246738"/><text x="83.9544%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,445,335,969 samples, 0.34%)</title><rect x="83.3955%" y="277" width="0.3359%" height="15" fill="rgb(254,224,29)" fg:x="358827472759" fg:w="1445335969"/><text x="83.6455%" y="287.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (1,445,335,969 samples, 0.34%)</title><rect x="83.3955%" y="261" width="0.3359%" height="15" fill="rgb(232,14,29)" fg:x="358827472759" fg:w="1445335969"/><text x="83.6455%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,454,363,050 samples, 0.34%)</title><rect x="83.3955%" y="293" width="0.3380%" height="15" fill="rgb(208,45,52)" fg:x="358827472759" fg:w="1454363050"/><text x="83.6455%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (69,207,621 samples, 0.02%)</title><rect x="83.7447%" y="229" width="0.0161%" height="15" fill="rgb(234,191,28)" fg:x="360329980241" fg:w="69207621"/><text x="83.9947%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (127,382,143 samples, 0.03%)</title><rect x="83.7366%" y="245" width="0.0296%" height="15" fill="rgb(244,67,43)" fg:x="360294874926" fg:w="127382143"/><text x="83.9866%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (57,171,513 samples, 0.01%)</title><rect x="83.7662%" y="245" width="0.0133%" height="15" fill="rgb(236,189,24)" fg:x="360422257069" fg:w="57171513"/><text x="84.0162%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (231,695,079 samples, 0.05%)</title><rect x="83.7366%" y="293" width="0.0538%" height="15" fill="rgb(239,214,33)" fg:x="360294874926" fg:w="231695079"/><text x="83.9866%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (231,695,079 samples, 0.05%)</title><rect x="83.7366%" y="277" width="0.0538%" height="15" fill="rgb(226,176,41)" fg:x="360294874926" fg:w="231695079"/><text x="83.9866%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (231,695,079 samples, 0.05%)</title><rect x="83.7366%" y="261" width="0.0538%" height="15" fill="rgb(248,47,8)" fg:x="360294874926" fg:w="231695079"/><text x="83.9866%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1,729,187,516 samples, 0.40%)</title><rect x="83.3909%" y="357" width="0.4019%" height="15" fill="rgb(218,81,44)" fg:x="358807412579" fg:w="1729187516"/><text x="83.6409%" y="367.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1,709,127,336 samples, 0.40%)</title><rect x="83.3955%" y="341" width="0.3972%" height="15" fill="rgb(213,98,6)" fg:x="358827472759" fg:w="1709127336"/><text x="83.6455%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (1,709,127,336 samples, 0.40%)</title><rect x="83.3955%" y="325" width="0.3972%" height="15" fill="rgb(222,85,22)" fg:x="358827472759" fg:w="1709127336"/><text x="83.6455%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,709,127,336 samples, 0.40%)</title><rect x="83.3955%" y="309" width="0.3972%" height="15" fill="rgb(239,46,39)" fg:x="358827472759" fg:w="1709127336"/><text x="83.6455%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (64,192,576 samples, 0.01%)</title><rect x="83.7930%" y="277" width="0.0149%" height="15" fill="rgb(237,12,29)" fg:x="360537603104" fg:w="64192576"/><text x="84.0430%" y="287.50"></text></g><g><title>__GI___libc_free (48,144,432 samples, 0.01%)</title><rect x="83.7967%" y="261" width="0.0112%" height="15" fill="rgb(214,77,8)" fg:x="360553651248" fg:w="48144432"/><text x="84.0467%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (66,198,594 samples, 0.02%)</title><rect x="83.7928%" y="309" width="0.0154%" height="15" fill="rgb(217,168,37)" fg:x="360536600095" fg:w="66198594"/><text x="84.0428%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65,195,585 samples, 0.02%)</title><rect x="83.7930%" y="293" width="0.0152%" height="15" fill="rgb(221,217,23)" fg:x="360537603104" fg:w="65195585"/><text x="84.0430%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize&lt;alloc::alloc::Global&gt;::{{closure}}&gt;&gt; (68,204,612 samples, 0.02%)</title><rect x="83.7928%" y="357" width="0.0159%" height="15" fill="rgb(243,229,36)" fg:x="360536600095" fg:w="68204612"/><text x="84.0428%" y="367.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (68,204,612 samples, 0.02%)</title><rect x="83.7928%" y="341" width="0.0159%" height="15" fill="rgb(251,163,40)" fg:x="360536600095" fg:w="68204612"/><text x="84.0428%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize::{{closure}} (68,204,612 samples, 0.02%)</title><rect x="83.7928%" y="325" width="0.0159%" height="15" fill="rgb(237,222,12)" fg:x="360536600095" fg:w="68204612"/><text x="84.0428%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2,145,436,251 samples, 0.50%)</title><rect x="83.3132%" y="373" width="0.4986%" height="15" fill="rgb(248,132,6)" fg:x="358473410582" fg:w="2145436251"/><text x="83.5632%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2,158,475,368 samples, 0.50%)</title><rect x="83.3125%" y="389" width="0.5017%" height="15" fill="rgb(227,167,50)" fg:x="358470401555" fg:w="2158475368"/><text x="83.5625%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,179,538,557 samples, 0.51%)</title><rect x="83.3125%" y="405" width="0.5065%" height="15" fill="rgb(242,84,37)" fg:x="358470401555" fg:w="2179538557"/><text x="83.5625%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2,196,589,710 samples, 0.51%)</title><rect x="83.3125%" y="437" width="0.5105%" height="15" fill="rgb(212,4,50)" fg:x="358470401555" fg:w="2196589710"/><text x="83.5625%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2,196,589,710 samples, 0.51%)</title><rect x="83.3125%" y="421" width="0.5105%" height="15" fill="rgb(230,228,32)" fg:x="358470401555" fg:w="2196589710"/><text x="83.5625%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4,858,575,596 samples, 1.13%)</title><rect x="82.7086%" y="453" width="1.1292%" height="15" fill="rgb(248,217,23)" fg:x="355871605236" fg:w="4858575596"/><text x="82.9586%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (4,880,641,794 samples, 1.13%)</title><rect x="82.7048%" y="469" width="1.1343%" height="15" fill="rgb(238,197,32)" fg:x="355855557092" fg:w="4880641794"/><text x="82.9548%" y="479.50"></text></g><g><title>hashbrown::raw::is_full (65,195,585 samples, 0.02%)</title><rect x="83.8447%" y="341" width="0.0152%" height="15" fill="rgb(236,106,1)" fg:x="360760271102" fg:w="65195585"/><text x="84.0947%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (84,252,756 samples, 0.02%)</title><rect x="83.8422%" y="373" width="0.0196%" height="15" fill="rgb(219,228,13)" fg:x="360749238003" fg:w="84252756"/><text x="84.0922%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (73,219,657 samples, 0.02%)</title><rect x="83.8447%" y="357" width="0.0170%" height="15" fill="rgb(238,30,35)" fg:x="360760271102" fg:w="73219657"/><text x="84.0947%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (161,484,449 samples, 0.04%)</title><rect x="83.8405%" y="389" width="0.0375%" height="15" fill="rgb(236,70,23)" fg:x="360742216940" fg:w="161484449"/><text x="84.0905%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (70,210,630 samples, 0.02%)</title><rect x="83.8618%" y="373" width="0.0163%" height="15" fill="rgb(249,104,48)" fg:x="360833490759" fg:w="70210630"/><text x="84.1118%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (174,523,566 samples, 0.04%)</title><rect x="83.8391%" y="405" width="0.0406%" height="15" fill="rgb(254,117,50)" fg:x="360736198886" fg:w="174523566"/><text x="84.0891%" y="415.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (228,686,052 samples, 0.05%)</title><rect x="83.8391%" y="469" width="0.0531%" height="15" fill="rgb(223,152,4)" fg:x="360736198886" fg:w="228686052"/><text x="84.0891%" y="479.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (228,686,052 samples, 0.05%)</title><rect x="83.8391%" y="453" width="0.0531%" height="15" fill="rgb(245,6,2)" fg:x="360736198886" fg:w="228686052"/><text x="84.0891%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (228,686,052 samples, 0.05%)</title><rect x="83.8391%" y="437" width="0.0531%" height="15" fill="rgb(249,150,24)" fg:x="360736198886" fg:w="228686052"/><text x="84.0891%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (228,686,052 samples, 0.05%)</title><rect x="83.8391%" y="421" width="0.0531%" height="15" fill="rgb(228,185,42)" fg:x="360736198886" fg:w="228686052"/><text x="84.0891%" y="431.50"></text></g><g><title>__GI___libc_free (56,168,504 samples, 0.01%)</title><rect x="83.8944%" y="341" width="0.0131%" height="15" fill="rgb(226,39,33)" fg:x="360973912019" fg:w="56168504"/><text x="84.1444%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (68,204,612 samples, 0.02%)</title><rect x="83.8923%" y="405" width="0.0159%" height="15" fill="rgb(221,166,19)" fg:x="360964884938" fg:w="68204612"/><text x="84.1423%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (68,204,612 samples, 0.02%)</title><rect x="83.8923%" y="389" width="0.0159%" height="15" fill="rgb(209,109,2)" fg:x="360964884938" fg:w="68204612"/><text x="84.1423%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (68,204,612 samples, 0.02%)</title><rect x="83.8923%" y="373" width="0.0159%" height="15" fill="rgb(252,216,26)" fg:x="360964884938" fg:w="68204612"/><text x="84.1423%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (68,204,612 samples, 0.02%)</title><rect x="83.8923%" y="357" width="0.0159%" height="15" fill="rgb(227,173,36)" fg:x="360964884938" fg:w="68204612"/><text x="84.1423%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32&gt;&gt; (73,219,657 samples, 0.02%)</title><rect x="83.8923%" y="469" width="0.0170%" height="15" fill="rgb(209,90,7)" fg:x="360964884938" fg:w="73219657"/><text x="84.1423%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32,std::hash::random::RandomState&gt;&gt; (73,219,657 samples, 0.02%)</title><rect x="83.8923%" y="453" width="0.0170%" height="15" fill="rgb(250,194,11)" fg:x="360964884938" fg:w="73219657"/><text x="84.1423%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;chlang::board::KeyStruct,i32)&gt;&gt; (73,219,657 samples, 0.02%)</title><rect x="83.8923%" y="437" width="0.0170%" height="15" fill="rgb(220,72,50)" fg:x="360964884938" fg:w="73219657"/><text x="84.1423%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73,219,657 samples, 0.02%)</title><rect x="83.8923%" y="421" width="0.0170%" height="15" fill="rgb(222,106,48)" fg:x="360964884938" fg:w="73219657"/><text x="84.1423%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (46,138,414 samples, 0.01%)</title><rect x="83.9210%" y="373" width="0.0107%" height="15" fill="rgb(216,220,45)" fg:x="361088255045" fg:w="46138414"/><text x="84.1710%" y="383.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (65,195,585 samples, 0.02%)</title><rect x="83.9200%" y="437" width="0.0152%" height="15" fill="rgb(234,112,18)" fg:x="361084243009" fg:w="65195585"/><text x="84.1700%" y="447.50"></text></g><g><title>std::hash::random::RandomState::new (65,195,585 samples, 0.02%)</title><rect x="83.9200%" y="421" width="0.0152%" height="15" fill="rgb(206,179,9)" fg:x="361084243009" fg:w="65195585"/><text x="84.1700%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (65,195,585 samples, 0.02%)</title><rect x="83.9200%" y="405" width="0.0152%" height="15" fill="rgb(215,115,40)" fg:x="361084243009" fg:w="65195585"/><text x="84.1700%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (65,195,585 samples, 0.02%)</title><rect x="83.9200%" y="389" width="0.0152%" height="15" fill="rgb(222,69,34)" fg:x="361084243009" fg:w="65195585"/><text x="84.1700%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (88,264,792 samples, 0.02%)</title><rect x="83.9417%" y="261" width="0.0205%" height="15" fill="rgb(209,161,10)" fg:x="361177522846" fg:w="88264792"/><text x="84.1917%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (88,264,792 samples, 0.02%)</title><rect x="83.9417%" y="245" width="0.0205%" height="15" fill="rgb(217,6,38)" fg:x="361177522846" fg:w="88264792"/><text x="84.1917%" y="255.50"></text></g><g><title>alloc::alloc::alloc (88,264,792 samples, 0.02%)</title><rect x="83.9417%" y="229" width="0.0205%" height="15" fill="rgb(229,229,48)" fg:x="361177522846" fg:w="88264792"/><text x="84.1917%" y="239.50"></text></g><g><title>__GI___libc_malloc (77,231,693 samples, 0.02%)</title><rect x="83.9443%" y="213" width="0.0179%" height="15" fill="rgb(225,21,28)" fg:x="361188555945" fg:w="77231693"/><text x="84.1943%" y="223.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (92,276,828 samples, 0.02%)</title><rect x="83.9417%" y="277" width="0.0214%" height="15" fill="rgb(206,33,13)" fg:x="361177522846" fg:w="92276828"/><text x="84.1917%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (129,388,161 samples, 0.03%)</title><rect x="83.9401%" y="293" width="0.0301%" height="15" fill="rgb(242,178,17)" fg:x="361170501783" fg:w="129388161"/><text x="84.1901%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (187,562,683 samples, 0.04%)</title><rect x="83.9373%" y="325" width="0.0436%" height="15" fill="rgb(220,162,5)" fg:x="361158465675" fg:w="187562683"/><text x="84.1873%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (187,562,683 samples, 0.04%)</title><rect x="83.9373%" y="309" width="0.0436%" height="15" fill="rgb(210,33,43)" fg:x="361158465675" fg:w="187562683"/><text x="84.1873%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (46,138,414 samples, 0.01%)</title><rect x="83.9702%" y="293" width="0.0107%" height="15" fill="rgb(216,116,54)" fg:x="361299889944" fg:w="46138414"/><text x="84.2202%" y="303.50"></text></g><g><title>core::intrinsics::write_bytes (46,138,414 samples, 0.01%)</title><rect x="83.9702%" y="277" width="0.0107%" height="15" fill="rgb(249,92,24)" fg:x="361299889944" fg:w="46138414"/><text x="84.2202%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (219,658,971 samples, 0.05%)</title><rect x="83.9373%" y="341" width="0.0511%" height="15" fill="rgb(231,189,14)" fg:x="361158465675" fg:w="219658971"/><text x="84.1873%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (242,728,178 samples, 0.06%)</title><rect x="83.9352%" y="357" width="0.0564%" height="15" fill="rgb(230,8,41)" fg:x="361149438594" fg:w="242728178"/><text x="84.1852%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (263,791,367 samples, 0.06%)</title><rect x="83.9352%" y="373" width="0.0613%" height="15" fill="rgb(249,7,27)" fg:x="361149438594" fg:w="263791367"/><text x="84.1852%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (269,809,421 samples, 0.06%)</title><rect x="83.9352%" y="389" width="0.0627%" height="15" fill="rgb(232,86,5)" fg:x="361149438594" fg:w="269809421"/><text x="84.1852%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (270,812,430 samples, 0.06%)</title><rect x="83.9352%" y="405" width="0.0629%" height="15" fill="rgb(224,175,18)" fg:x="361149438594" fg:w="270812430"/><text x="84.1852%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48,144,432 samples, 0.01%)</title><rect x="84.0061%" y="101" width="0.0112%" height="15" fill="rgb(220,129,12)" fg:x="361454353330" fg:w="48144432"/><text x="84.2561%" y="111.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (114,343,026 samples, 0.03%)</title><rect x="84.0023%" y="149" width="0.0266%" height="15" fill="rgb(210,19,36)" fg:x="361438305186" fg:w="114343026"/><text x="84.2523%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (114,343,026 samples, 0.03%)</title><rect x="84.0023%" y="133" width="0.0266%" height="15" fill="rgb(219,96,14)" fg:x="361438305186" fg:w="114343026"/><text x="84.2523%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (114,343,026 samples, 0.03%)</title><rect x="84.0023%" y="117" width="0.0266%" height="15" fill="rgb(249,106,1)" fg:x="361438305186" fg:w="114343026"/><text x="84.2523%" y="127.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (122,367,098 samples, 0.03%)</title><rect x="84.0014%" y="181" width="0.0284%" height="15" fill="rgb(249,155,20)" fg:x="361434293150" fg:w="122367098"/><text x="84.2514%" y="191.50"></text></g><g><title>core::hash::Hasher::write_u64 (122,367,098 samples, 0.03%)</title><rect x="84.0014%" y="165" width="0.0284%" height="15" fill="rgb(244,168,9)" fg:x="361434293150" fg:w="122367098"/><text x="84.2514%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (67,201,603 samples, 0.02%)</title><rect x="84.0382%" y="69" width="0.0156%" height="15" fill="rgb(216,23,50)" fg:x="361592768572" fg:w="67201603"/><text x="84.2882%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (134,403,206 samples, 0.03%)</title><rect x="84.0308%" y="85" width="0.0312%" height="15" fill="rgb(224,219,20)" fg:x="361560672284" fg:w="134403206"/><text x="84.2808%" y="95.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (194,583,746 samples, 0.05%)</title><rect x="84.0298%" y="149" width="0.0452%" height="15" fill="rgb(222,156,15)" fg:x="361556660248" fg:w="194583746"/><text x="84.2798%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (194,583,746 samples, 0.05%)</title><rect x="84.0298%" y="133" width="0.0452%" height="15" fill="rgb(231,97,17)" fg:x="361556660248" fg:w="194583746"/><text x="84.2798%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (194,583,746 samples, 0.05%)</title><rect x="84.0298%" y="117" width="0.0452%" height="15" fill="rgb(218,70,48)" fg:x="361556660248" fg:w="194583746"/><text x="84.2798%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (194,583,746 samples, 0.05%)</title><rect x="84.0298%" y="101" width="0.0452%" height="15" fill="rgb(212,196,52)" fg:x="361556660248" fg:w="194583746"/><text x="84.2798%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (63,189,567 samples, 0.01%)</title><rect x="84.0881%" y="69" width="0.0147%" height="15" fill="rgb(243,203,18)" fg:x="361807412498" fg:w="63189567"/><text x="84.3381%" y="79.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (195,586,755 samples, 0.05%)</title><rect x="84.0769%" y="101" width="0.0455%" height="15" fill="rgb(252,125,41)" fg:x="361759268066" fg:w="195586755"/><text x="84.3269%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (195,586,755 samples, 0.05%)</title><rect x="84.0769%" y="85" width="0.0455%" height="15" fill="rgb(223,180,33)" fg:x="361759268066" fg:w="195586755"/><text x="84.3269%" y="95.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (198,595,782 samples, 0.05%)</title><rect x="84.0769%" y="117" width="0.0462%" height="15" fill="rgb(254,159,46)" fg:x="361759268066" fg:w="198595782"/><text x="84.3269%" y="127.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (260,782,340 samples, 0.06%)</title><rect x="84.0751%" y="149" width="0.0606%" height="15" fill="rgb(254,38,10)" fg:x="361751243994" fg:w="260782340"/><text x="84.3251%" y="159.50"></text></g><g><title>core::hash::Hasher::write_usize (260,782,340 samples, 0.06%)</title><rect x="84.0751%" y="133" width="0.0606%" height="15" fill="rgb(208,217,32)" fg:x="361751243994" fg:w="260782340"/><text x="84.3251%" y="143.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (481,444,320 samples, 0.11%)</title><rect x="84.0298%" y="181" width="0.1119%" height="15" fill="rgb(221,120,13)" fg:x="361556660248" fg:w="481444320"/><text x="84.2798%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (481,444,320 samples, 0.11%)</title><rect x="84.0298%" y="165" width="0.1119%" height="15" fill="rgb(246,54,52)" fg:x="361556660248" fg:w="481444320"/><text x="84.2798%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (81,243,729 samples, 0.02%)</title><rect x="84.1417%" y="165" width="0.0189%" height="15" fill="rgb(242,34,25)" fg:x="362038104568" fg:w="81243729"/><text x="84.3917%" y="175.50"></text></g><g><title>core::hash::Hasher::write_isize (81,243,729 samples, 0.02%)</title><rect x="84.1417%" y="149" width="0.0189%" height="15" fill="rgb(247,209,9)" fg:x="362038104568" fg:w="81243729"/><text x="84.3917%" y="159.50"></text></g><g><title>core::hash::Hasher::write_usize (81,243,729 samples, 0.02%)</title><rect x="84.1417%" y="133" width="0.0189%" height="15" fill="rgb(228,71,26)" fg:x="362038104568" fg:w="81243729"/><text x="84.3917%" y="143.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (79,237,711 samples, 0.02%)</title><rect x="84.1422%" y="117" width="0.0184%" height="15" fill="rgb(222,145,49)" fg:x="362040110586" fg:w="79237711"/><text x="84.3922%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (79,237,711 samples, 0.02%)</title><rect x="84.1422%" y="101" width="0.0184%" height="15" fill="rgb(218,121,17)" fg:x="362040110586" fg:w="79237711"/><text x="84.3922%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79,237,711 samples, 0.02%)</title><rect x="84.1422%" y="85" width="0.0184%" height="15" fill="rgb(244,50,7)" fg:x="362040110586" fg:w="79237711"/><text x="84.3922%" y="95.50"></text></g><g><title>&lt;chlang::board::Position as core::hash::Hash&gt;::hash (59,177,531 samples, 0.01%)</title><rect x="84.1606%" y="165" width="0.0138%" height="15" fill="rgb(246,229,37)" fg:x="362119348297" fg:w="59177531"/><text x="84.4106%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (59,177,531 samples, 0.01%)</title><rect x="84.1606%" y="149" width="0.0138%" height="15" fill="rgb(225,18,5)" fg:x="362119348297" fg:w="59177531"/><text x="84.4106%" y="159.50"></text></g><g><title>core::hash::Hasher::write_i64 (59,177,531 samples, 0.01%)</title><rect x="84.1606%" y="133" width="0.0138%" height="15" fill="rgb(213,204,8)" fg:x="362119348297" fg:w="59177531"/><text x="84.4106%" y="143.50"></text></g><g><title>core::hash::Hasher::write_u64 (59,177,531 samples, 0.01%)</title><rect x="84.1606%" y="117" width="0.0138%" height="15" fill="rgb(238,103,6)" fg:x="362119348297" fg:w="59177531"/><text x="84.4106%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (44,132,396 samples, 0.01%)</title><rect x="84.1641%" y="101" width="0.0103%" height="15" fill="rgb(222,25,35)" fg:x="362134393432" fg:w="44132396"/><text x="84.4141%" y="111.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (142,427,278 samples, 0.03%)</title><rect x="84.1417%" y="181" width="0.0331%" height="15" fill="rgb(213,203,35)" fg:x="362038104568" fg:w="142427278"/><text x="84.3917%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (74,222,666 samples, 0.02%)</title><rect x="84.1760%" y="101" width="0.0173%" height="15" fill="rgb(221,79,53)" fg:x="362185546891" fg:w="74222666"/><text x="84.4260%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74,222,666 samples, 0.02%)</title><rect x="84.1760%" y="85" width="0.0173%" height="15" fill="rgb(243,200,35)" fg:x="362185546891" fg:w="74222666"/><text x="84.4260%" y="95.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (76,228,684 samples, 0.02%)</title><rect x="84.1760%" y="117" width="0.0177%" height="15" fill="rgb(248,60,25)" fg:x="362185546891" fg:w="76228684"/><text x="84.4260%" y="127.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (82,246,738 samples, 0.02%)</title><rect x="84.1748%" y="165" width="0.0191%" height="15" fill="rgb(227,53,46)" fg:x="362180531846" fg:w="82246738"/><text x="84.4248%" y="175.50"></text></g><g><title>core::hash::Hasher::write_isize (82,246,738 samples, 0.02%)</title><rect x="84.1748%" y="149" width="0.0191%" height="15" fill="rgb(216,120,32)" fg:x="362180531846" fg:w="82246738"/><text x="84.4248%" y="159.50"></text></g><g><title>core::hash::Hasher::write_usize (82,246,738 samples, 0.02%)</title><rect x="84.1748%" y="133" width="0.0191%" height="15" fill="rgb(220,134,1)" fg:x="362180531846" fg:w="82246738"/><text x="84.4248%" y="143.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (85,255,765 samples, 0.02%)</title><rect x="84.1748%" y="181" width="0.0198%" height="15" fill="rgb(237,168,5)" fg:x="362180531846" fg:w="85255765"/><text x="84.4248%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (856,569,686 samples, 0.20%)</title><rect x="84.0014%" y="229" width="0.1991%" height="15" fill="rgb(231,100,33)" fg:x="361434293150" fg:w="856569686"/><text x="84.2514%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (856,569,686 samples, 0.20%)</title><rect x="84.0014%" y="213" width="0.1991%" height="15" fill="rgb(236,177,47)" fg:x="361434293150" fg:w="856569686"/><text x="84.2514%" y="223.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (856,569,686 samples, 0.20%)</title><rect x="84.0014%" y="197" width="0.1991%" height="15" fill="rgb(235,7,49)" fg:x="361434293150" fg:w="856569686"/><text x="84.2514%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (53,159,477 samples, 0.01%)</title><rect x="84.2103%" y="181" width="0.0124%" height="15" fill="rgb(232,119,22)" fg:x="362332989214" fg:w="53159477"/><text x="84.4603%" y="191.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (114,343,026 samples, 0.03%)</title><rect x="84.2103%" y="229" width="0.0266%" height="15" fill="rgb(254,73,53)" fg:x="362332989214" fg:w="114343026"/><text x="84.4603%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (114,343,026 samples, 0.03%)</title><rect x="84.2103%" y="213" width="0.0266%" height="15" fill="rgb(251,35,20)" fg:x="362332989214" fg:w="114343026"/><text x="84.4603%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (114,343,026 samples, 0.03%)</title><rect x="84.2103%" y="197" width="0.0266%" height="15" fill="rgb(241,119,20)" fg:x="362332989214" fg:w="114343026"/><text x="84.4603%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,024,072,189 samples, 0.24%)</title><rect x="84.0014%" y="245" width="0.2380%" height="15" fill="rgb(207,102,14)" fg:x="361434293150" fg:w="1024072189"/><text x="84.2514%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (1,025,075,198 samples, 0.24%)</title><rect x="84.0014%" y="261" width="0.2382%" height="15" fill="rgb(248,201,50)" fg:x="361434293150" fg:w="1025075198"/><text x="84.2514%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (91,273,819 samples, 0.02%)</title><rect x="84.2396%" y="229" width="0.0212%" height="15" fill="rgb(222,185,44)" fg:x="362459368348" fg:w="91273819"/><text x="84.4896%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (92,276,828 samples, 0.02%)</title><rect x="84.2396%" y="261" width="0.0214%" height="15" fill="rgb(218,107,18)" fg:x="362459368348" fg:w="92276828"/><text x="84.4896%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (92,276,828 samples, 0.02%)</title><rect x="84.2396%" y="245" width="0.0214%" height="15" fill="rgb(237,177,39)" fg:x="362459368348" fg:w="92276828"/><text x="84.4896%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="405" width="0.2634%" height="15" fill="rgb(246,69,6)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="415.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="389" width="0.2634%" height="15" fill="rgb(234,208,37)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="373" width="0.2634%" height="15" fill="rgb(225,4,6)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="357" width="0.2634%" height="15" fill="rgb(233,45,0)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="367.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="341" width="0.2634%" height="15" fill="rgb(226,136,5)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="325" width="0.2634%" height="15" fill="rgb(211,91,47)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="309" width="0.2634%" height="15" fill="rgb(242,88,51)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="293" width="0.2634%" height="15" fill="rgb(230,91,28)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,133,400,170 samples, 0.26%)</title><rect x="83.9981%" y="277" width="0.2634%" height="15" fill="rgb(254,186,29)" fg:x="361420251024" fg:w="1133400170"/><text x="84.2481%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,446,338,978 samples, 0.34%)</title><rect x="83.9352%" y="437" width="0.3361%" height="15" fill="rgb(238,6,4)" fg:x="361149438594" fg:w="1446338978"/><text x="84.1852%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,446,338,978 samples, 0.34%)</title><rect x="83.9352%" y="421" width="0.3361%" height="15" fill="rgb(221,151,16)" fg:x="361149438594" fg:w="1446338978"/><text x="84.1852%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (1,623,871,571 samples, 0.38%)</title><rect x="83.9186%" y="469" width="0.3774%" height="15" fill="rgb(251,143,52)" fg:x="361078224955" fg:w="1623871571"/><text x="84.1686%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,623,871,571 samples, 0.38%)</title><rect x="83.9186%" y="453" width="0.3774%" height="15" fill="rgb(206,90,15)" fg:x="361078224955" fg:w="1623871571"/><text x="84.1686%" y="463.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (6,973,921,577 samples, 1.62%)</title><rect x="82.7025%" y="485" width="1.6208%" height="15" fill="rgb(218,35,8)" fg:x="355845527002" fg:w="6973921577"/><text x="82.9525%" y="495.50"></text></g><g><title>_int_free (47,141,423 samples, 0.01%)</title><rect x="84.3294%" y="309" width="0.0110%" height="15" fill="rgb(239,215,6)" fg:x="362845526813" fg:w="47141423"/><text x="84.5794%" y="319.50"></text></g><g><title>__GI___libc_free (55,165,495 samples, 0.01%)</title><rect x="84.3294%" y="325" width="0.0128%" height="15" fill="rgb(245,116,39)" fg:x="362845526813" fg:w="55165495"/><text x="84.5794%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="469" width="0.0138%" height="15" fill="rgb(242,65,28)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="453" width="0.0138%" height="15" fill="rgb(252,132,53)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="437" width="0.0138%" height="15" fill="rgb(224,159,50)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="421" width="0.0138%" height="15" fill="rgb(224,93,4)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="405" width="0.0138%" height="15" fill="rgb(208,81,34)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="389" width="0.0138%" height="15" fill="rgb(233,92,54)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="373" width="0.0138%" height="15" fill="rgb(237,21,14)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="357" width="0.0138%" height="15" fill="rgb(249,128,51)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (59,177,531 samples, 0.01%)</title><rect x="84.3287%" y="341" width="0.0138%" height="15" fill="rgb(223,129,24)" fg:x="362842517786" fg:w="59177531"/><text x="84.5787%" y="351.50"></text></g><g><title>core::ptr::read (140,421,260 samples, 0.03%)</title><rect x="84.3424%" y="437" width="0.0326%" height="15" fill="rgb(231,168,25)" fg:x="362901695317" fg:w="140421260"/><text x="84.5924%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (164,493,476 samples, 0.04%)</title><rect x="84.3424%" y="453" width="0.0382%" height="15" fill="rgb(224,39,20)" fg:x="362901695317" fg:w="164493476"/><text x="84.5924%" y="463.50"></text></g><g><title>chlang::board::Board::unmake_last (329,989,961 samples, 0.08%)</title><rect x="84.3424%" y="469" width="0.0767%" height="15" fill="rgb(225,152,53)" fg:x="362901695317" fg:w="329989961"/><text x="84.5924%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (69,207,621 samples, 0.02%)</title><rect x="84.4191%" y="389" width="0.0161%" height="15" fill="rgb(252,17,24)" fg:x="363231685278" fg:w="69207621"/><text x="84.6691%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (180,541,620 samples, 0.04%)</title><rect x="84.4191%" y="405" width="0.0420%" height="15" fill="rgb(250,114,30)" fg:x="363231685278" fg:w="180541620"/><text x="84.6691%" y="415.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (108,324,972 samples, 0.03%)</title><rect x="84.4611%" y="405" width="0.0252%" height="15" fill="rgb(229,5,4)" fg:x="363412226898" fg:w="108324972"/><text x="84.7111%" y="415.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (108,324,972 samples, 0.03%)</title><rect x="84.4611%" y="389" width="0.0252%" height="15" fill="rgb(225,176,49)" fg:x="363412226898" fg:w="108324972"/><text x="84.7111%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (300,902,700 samples, 0.07%)</title><rect x="84.4191%" y="453" width="0.0699%" height="15" fill="rgb(224,221,49)" fg:x="363231685278" fg:w="300902700"/><text x="84.6691%" y="463.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (300,902,700 samples, 0.07%)</title><rect x="84.4191%" y="437" width="0.0699%" height="15" fill="rgb(253,169,27)" fg:x="363231685278" fg:w="300902700"/><text x="84.6691%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (300,902,700 samples, 0.07%)</title><rect x="84.4191%" y="421" width="0.0699%" height="15" fill="rgb(211,206,16)" fg:x="363231685278" fg:w="300902700"/><text x="84.6691%" y="431.50"></text></g><g><title>__rust_dealloc (61,183,549 samples, 0.01%)</title><rect x="84.4905%" y="357" width="0.0142%" height="15" fill="rgb(244,87,35)" fg:x="363538606032" fg:w="61183549"/><text x="84.7405%" y="367.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (108,324,972 samples, 0.03%)</title><rect x="84.5047%" y="341" width="0.0252%" height="15" fill="rgb(246,28,10)" fg:x="363599789581" fg:w="108324972"/><text x="84.7547%" y="351.50"></text></g><g><title>__rdl_dealloc (138,415,242 samples, 0.03%)</title><rect x="84.5047%" y="357" width="0.0322%" height="15" fill="rgb(229,12,44)" fg:x="363599789581" fg:w="138415242"/><text x="84.7547%" y="367.50"></text></g><g><title>tcache_put (59,177,531 samples, 0.01%)</title><rect x="84.5368%" y="325" width="0.0138%" height="15" fill="rgb(210,145,37)" fg:x="363738204823" fg:w="59177531"/><text x="84.7868%" y="335.50"></text></g><g><title>_int_free (348,044,123 samples, 0.08%)</title><rect x="84.5368%" y="341" width="0.0809%" height="15" fill="rgb(227,112,52)" fg:x="363738204823" fg:w="348044123"/><text x="84.7868%" y="351.50"></text></g><g><title>__GI___libc_free (511,534,590 samples, 0.12%)</title><rect x="84.5368%" y="357" width="0.1189%" height="15" fill="rgb(238,155,34)" fg:x="363738204823" fg:w="511534590"/><text x="84.7868%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (738,214,624 samples, 0.17%)</title><rect x="84.4891%" y="405" width="0.1716%" height="15" fill="rgb(239,226,36)" fg:x="363532587978" fg:w="738214624"/><text x="84.7391%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (732,196,570 samples, 0.17%)</title><rect x="84.4905%" y="389" width="0.1702%" height="15" fill="rgb(230,16,23)" fg:x="363538606032" fg:w="732196570"/><text x="84.7405%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (732,196,570 samples, 0.17%)</title><rect x="84.4905%" y="373" width="0.1702%" height="15" fill="rgb(236,171,36)" fg:x="363538606032" fg:w="732196570"/><text x="84.7405%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (755,265,777 samples, 0.18%)</title><rect x="84.4891%" y="453" width="0.1755%" height="15" fill="rgb(221,22,14)" fg:x="363532587978" fg:w="755265777"/><text x="84.7391%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (755,265,777 samples, 0.18%)</title><rect x="84.4891%" y="437" width="0.1755%" height="15" fill="rgb(242,43,11)" fg:x="363532587978" fg:w="755265777"/><text x="84.7391%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (755,265,777 samples, 0.18%)</title><rect x="84.4891%" y="421" width="0.1755%" height="15" fill="rgb(232,69,23)" fg:x="363532587978" fg:w="755265777"/><text x="84.7391%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (123,370,107 samples, 0.03%)</title><rect x="84.6646%" y="453" width="0.0287%" height="15" fill="rgb(216,180,54)" fg:x="364287853755" fg:w="123370107"/><text x="84.9146%" y="463.50"></text></g><g><title>chlang::cmove::Move::to (85,255,765 samples, 0.02%)</title><rect x="84.6947%" y="453" width="0.0198%" height="15" fill="rgb(216,5,24)" fg:x="364417241916" fg:w="85255765"/><text x="84.9447%" y="463.50"></text></g><g><title>chlang::cmove::Move::from (91,273,819 samples, 0.02%)</title><rect x="84.7145%" y="453" width="0.0212%" height="15" fill="rgb(225,89,9)" fg:x="364502497681" fg:w="91273819"/><text x="84.9645%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,247,743,196 samples, 0.29%)</title><rect x="84.7357%" y="437" width="0.2900%" height="15" fill="rgb(243,75,33)" fg:x="364593771500" fg:w="1247743196"/><text x="84.9857%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (1,263,791,340 samples, 0.29%)</title><rect x="84.7357%" y="453" width="0.2937%" height="15" fill="rgb(247,141,45)" fg:x="364593771500" fg:w="1263791340"/><text x="84.9857%" y="463.50"></text></g><g><title>chlang::board::Board::unmake_last (44,132,396 samples, 0.01%)</title><rect x="85.0294%" y="453" width="0.0103%" height="15" fill="rgb(232,177,36)" fg:x="365857562840" fg:w="44132396"/><text x="85.2794%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (3,301,905,628 samples, 0.77%)</title><rect x="85.0397%" y="421" width="0.7674%" height="15" fill="rgb(219,125,36)" fg:x="365901695236" fg:w="3301905628"/><text x="85.2897%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (3,521,564,599 samples, 0.82%)</title><rect x="85.0397%" y="437" width="0.8185%" height="15" fill="rgb(227,94,9)" fg:x="365901695236" fg:w="3521564599"/><text x="85.2897%" y="447.50"></text></g><g><title>chlang::board::Board::piece_type (4,500,501,383 samples, 1.05%)</title><rect x="85.0397%" y="453" width="1.0460%" height="15" fill="rgb(240,34,52)" fg:x="365901695236" fg:w="4500501383"/><text x="85.2897%" y="463.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (49,147,441 samples, 0.01%)</title><rect x="86.0877%" y="437" width="0.0114%" height="15" fill="rgb(216,45,12)" fg:x="370411223700" fg:w="49147441"/><text x="86.3377%" y="447.50"></text></g><g><title>chlang::board::Board::key (218,655,962 samples, 0.05%)</title><rect x="86.0856%" y="453" width="0.0508%" height="15" fill="rgb(246,21,19)" fg:x="370402196619" fg:w="218655962"/><text x="86.3356%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (186,559,674 samples, 0.04%)</title><rect x="86.1364%" y="309" width="0.0434%" height="15" fill="rgb(213,98,42)" fg:x="370620852581" fg:w="186559674"/><text x="86.3864%" y="319.50"></text></g><g><title>__rust_dealloc (629,889,652 samples, 0.15%)</title><rect x="86.1798%" y="277" width="0.1464%" height="15" fill="rgb(250,136,47)" fg:x="370807412255" fg:w="629889652"/><text x="86.4298%" y="287.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (395,185,546 samples, 0.09%)</title><rect x="86.3262%" y="261" width="0.0918%" height="15" fill="rgb(251,124,27)" fg:x="371437301907" fg:w="395185546"/><text x="86.5762%" y="271.50"></text></g><g><title>__rdl_dealloc (482,447,329 samples, 0.11%)</title><rect x="86.3262%" y="277" width="0.1121%" height="15" fill="rgb(229,180,14)" fg:x="371437301907" fg:w="482447329"/><text x="86.5762%" y="287.50"></text></g><g><title>tcache_put (250,752,250 samples, 0.06%)</title><rect x="86.4383%" y="245" width="0.0583%" height="15" fill="rgb(245,216,25)" fg:x="371919749236" fg:w="250752250"/><text x="86.6883%" y="255.50"></text></g><g><title>_int_free (1,774,322,921 samples, 0.41%)</title><rect x="86.4383%" y="261" width="0.4124%" height="15" fill="rgb(251,43,5)" fg:x="371919749236" fg:w="1774322921"/><text x="86.6883%" y="271.50"></text></g><g><title>__GI___libc_free (2,129,388,107 samples, 0.49%)</title><rect x="86.4383%" y="277" width="0.4949%" height="15" fill="rgb(250,128,24)" fg:x="371919749236" fg:w="2129388107"/><text x="86.6883%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (3,449,347,951 samples, 0.80%)</title><rect x="86.1364%" y="421" width="0.8017%" height="15" fill="rgb(217,117,27)" fg:x="370620852581" fg:w="3449347951"/><text x="86.3864%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,449,347,951 samples, 0.80%)</title><rect x="86.1364%" y="405" width="0.8017%" height="15" fill="rgb(245,147,4)" fg:x="370620852581" fg:w="3449347951"/><text x="86.3864%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (3,449,347,951 samples, 0.80%)</title><rect x="86.1364%" y="389" width="0.8017%" height="15" fill="rgb(242,201,35)" fg:x="370620852581" fg:w="3449347951"/><text x="86.3864%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,449,347,951 samples, 0.80%)</title><rect x="86.1364%" y="373" width="0.8017%" height="15" fill="rgb(218,181,1)" fg:x="370620852581" fg:w="3449347951"/><text x="86.3864%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (3,449,347,951 samples, 0.80%)</title><rect x="86.1364%" y="357" width="0.8017%" height="15" fill="rgb(222,6,29)" fg:x="370620852581" fg:w="3449347951"/><text x="86.3864%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,449,347,951 samples, 0.80%)</title><rect x="86.1364%" y="341" width="0.8017%" height="15" fill="rgb(208,186,3)" fg:x="370620852581" fg:w="3449347951"/><text x="86.3864%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,449,347,951 samples, 0.80%)</title><rect x="86.1364%" y="325" width="0.8017%" height="15" fill="rgb(216,36,26)" fg:x="370620852581" fg:w="3449347951"/><text x="86.3864%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,262,788,277 samples, 0.76%)</title><rect x="86.1798%" y="309" width="0.7583%" height="15" fill="rgb(248,201,23)" fg:x="370807412255" fg:w="3262788277"/><text x="86.4298%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3,262,788,277 samples, 0.76%)</title><rect x="86.1798%" y="293" width="0.7583%" height="15" fill="rgb(251,170,31)" fg:x="370807412255" fg:w="3262788277"/><text x="86.4298%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (287,863,583 samples, 0.07%)</title><rect x="86.9381%" y="421" width="0.0669%" height="15" fill="rgb(207,110,25)" fg:x="374070200532" fg:w="287863583"/><text x="87.1881%" y="431.50"></text></g><g><title>chlang::cmove::Move::to (910,732,172 samples, 0.21%)</title><rect x="87.0050%" y="421" width="0.2117%" height="15" fill="rgb(250,54,15)" fg:x="374358064115" fg:w="910732172"/><text x="87.2550%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (6,583,751,076 samples, 1.53%)</title><rect x="87.2167%" y="389" width="1.5301%" height="15" fill="rgb(227,68,33)" fg:x="375268796287" fg:w="6583751076"/><text x="87.4667%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (8,558,675,797 samples, 1.99%)</title><rect x="87.2167%" y="405" width="1.9891%" height="15" fill="rgb(238,34,41)" fg:x="375268796287" fg:w="8558675797"/><text x="87.4667%" y="415.50">c..</text></g><g><title>chlang::board::Board::piece_type (10,196,589,494 samples, 2.37%)</title><rect x="87.2167%" y="421" width="2.3698%" height="15" fill="rgb(220,11,15)" fg:x="375268796287" fg:w="10196589494"/><text x="87.4667%" y="431.50">ch..</text></g><g><title>chlang::board::Position::valid (155,466,395 samples, 0.04%)</title><rect x="89.5865%" y="405" width="0.0361%" height="15" fill="rgb(246,111,35)" fg:x="385465385781" fg:w="155466395"/><text x="89.8365%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,246,740,187 samples, 0.29%)</title><rect x="89.6226%" y="389" width="0.2898%" height="15" fill="rgb(209,88,53)" fg:x="385620852176" fg:w="1246740187"/><text x="89.8726%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (1,312,938,781 samples, 0.31%)</title><rect x="89.6226%" y="405" width="0.3051%" height="15" fill="rgb(231,185,47)" fg:x="385620852176" fg:w="1312938781"/><text x="89.8726%" y="415.50"></text></g><g><title>__rust_alloc (74,222,666 samples, 0.02%)</title><rect x="89.9278%" y="277" width="0.0173%" height="15" fill="rgb(233,154,1)" fg:x="386933790957" fg:w="74222666"/><text x="90.1778%" y="287.50"></text></g><g><title>tcache_get (85,255,765 samples, 0.02%)</title><rect x="89.9494%" y="261" width="0.0198%" height="15" fill="rgb(225,15,46)" fg:x="387027070794" fg:w="85255765"/><text x="90.1994%" y="271.50"></text></g><g><title>__GI___libc_malloc (327,983,943 samples, 0.08%)</title><rect x="89.9494%" y="277" width="0.0762%" height="15" fill="rgb(211,135,41)" fg:x="387027070794" fg:w="327983943"/><text x="90.1994%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (431,293,870 samples, 0.10%)</title><rect x="89.9278%" y="325" width="0.1002%" height="15" fill="rgb(208,54,0)" fg:x="386933790957" fg:w="431293870"/><text x="90.1778%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (431,293,870 samples, 0.10%)</title><rect x="89.9278%" y="309" width="0.1002%" height="15" fill="rgb(244,136,14)" fg:x="386933790957" fg:w="431293870"/><text x="90.1778%" y="319.50"></text></g><g><title>alloc::alloc::alloc (431,293,870 samples, 0.10%)</title><rect x="89.9278%" y="293" width="0.1002%" height="15" fill="rgb(241,56,14)" fg:x="386933790957" fg:w="431293870"/><text x="90.1778%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (452,357,059 samples, 0.11%)</title><rect x="89.9278%" y="373" width="0.1051%" height="15" fill="rgb(205,80,24)" fg:x="386933790957" fg:w="452357059"/><text x="90.1778%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (452,357,059 samples, 0.11%)</title><rect x="89.9278%" y="357" width="0.1051%" height="15" fill="rgb(220,57,4)" fg:x="386933790957" fg:w="452357059"/><text x="90.1778%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (452,357,059 samples, 0.11%)</title><rect x="89.9278%" y="341" width="0.1051%" height="15" fill="rgb(226,193,50)" fg:x="386933790957" fg:w="452357059"/><text x="90.1778%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (482,447,329 samples, 0.11%)</title><rect x="89.9278%" y="405" width="0.1121%" height="15" fill="rgb(231,168,22)" fg:x="386933790957" fg:w="482447329"/><text x="90.1778%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (482,447,329 samples, 0.11%)</title><rect x="89.9278%" y="389" width="0.1121%" height="15" fill="rgb(254,215,14)" fg:x="386933790957" fg:w="482447329"/><text x="90.1778%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (122,367,098 samples, 0.03%)</title><rect x="90.0436%" y="389" width="0.0284%" height="15" fill="rgb(211,115,16)" fg:x="387432286430" fg:w="122367098"/><text x="90.2936%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (122,367,098 samples, 0.03%)</title><rect x="90.0436%" y="373" width="0.0284%" height="15" fill="rgb(236,210,16)" fg:x="387432286430" fg:w="122367098"/><text x="90.2936%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (122,367,098 samples, 0.03%)</title><rect x="90.0436%" y="357" width="0.0284%" height="15" fill="rgb(221,94,12)" fg:x="387432286430" fg:w="122367098"/><text x="90.2936%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (122,367,098 samples, 0.03%)</title><rect x="90.0436%" y="341" width="0.0284%" height="15" fill="rgb(235,218,49)" fg:x="387432286430" fg:w="122367098"/><text x="90.2936%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (526,579,725 samples, 0.12%)</title><rect x="90.0399%" y="405" width="0.1224%" height="15" fill="rgb(217,114,14)" fg:x="387416238286" fg:w="526579725"/><text x="90.2899%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (237,713,133 samples, 0.06%)</title><rect x="90.1623%" y="405" width="0.0552%" height="15" fill="rgb(216,145,22)" fg:x="387942818011" fg:w="237713133"/><text x="90.4123%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (57,171,513 samples, 0.01%)</title><rect x="90.2175%" y="389" width="0.0133%" height="15" fill="rgb(217,112,39)" fg:x="388180531144" fg:w="57171513"/><text x="90.4675%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (88,264,792 samples, 0.02%)</title><rect x="90.2175%" y="405" width="0.0205%" height="15" fill="rgb(225,85,32)" fg:x="388180531144" fg:w="88264792"/><text x="90.4675%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (3,599,799,301 samples, 0.84%)</title><rect x="89.5865%" y="421" width="0.8366%" height="15" fill="rgb(245,209,47)" fg:x="385465385781" fg:w="3599799301"/><text x="89.8365%" y="431.50"></text></g><g><title>__rust_dealloc (55,165,495 samples, 0.01%)</title><rect x="90.4268%" y="293" width="0.0128%" height="15" fill="rgb(218,220,15)" fg:x="389081233226" fg:w="55165495"/><text x="90.6768%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (87,261,783 samples, 0.02%)</title><rect x="90.4397%" y="277" width="0.0203%" height="15" fill="rgb(222,202,31)" fg:x="389136398721" fg:w="87261783"/><text x="90.6897%" y="287.50"></text></g><g><title>__rdl_dealloc (103,309,927 samples, 0.02%)</title><rect x="90.4397%" y="293" width="0.0240%" height="15" fill="rgb(243,203,4)" fg:x="389136398721" fg:w="103309927"/><text x="90.6897%" y="303.50"></text></g><g><title>tcache_put (65,195,585 samples, 0.02%)</title><rect x="90.4637%" y="261" width="0.0152%" height="15" fill="rgb(237,92,17)" fg:x="389239708648" fg:w="65195585"/><text x="90.7137%" y="271.50"></text></g><g><title>_int_free (301,905,709 samples, 0.07%)</title><rect x="90.4637%" y="277" width="0.0702%" height="15" fill="rgb(231,119,7)" fg:x="389239708648" fg:w="301905709"/><text x="90.7137%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (587,763,274 samples, 0.14%)</title><rect x="90.4231%" y="341" width="0.1366%" height="15" fill="rgb(237,82,41)" fg:x="389065185082" fg:w="587763274"/><text x="90.6731%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (571,715,130 samples, 0.13%)</title><rect x="90.4268%" y="325" width="0.1329%" height="15" fill="rgb(226,81,48)" fg:x="389081233226" fg:w="571715130"/><text x="90.6768%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (571,715,130 samples, 0.13%)</title><rect x="90.4268%" y="309" width="0.1329%" height="15" fill="rgb(234,70,51)" fg:x="389081233226" fg:w="571715130"/><text x="90.6768%" y="319.50"></text></g><g><title>__GI___libc_free (413,239,708 samples, 0.10%)</title><rect x="90.4637%" y="293" width="0.0960%" height="15" fill="rgb(251,86,4)" fg:x="389239708648" fg:w="413239708"/><text x="90.7137%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (601,805,400 samples, 0.14%)</title><rect x="90.4231%" y="405" width="0.1399%" height="15" fill="rgb(244,144,28)" fg:x="389065185082" fg:w="601805400"/><text x="90.6731%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (601,805,400 samples, 0.14%)</title><rect x="90.4231%" y="389" width="0.1399%" height="15" fill="rgb(232,161,39)" fg:x="389065185082" fg:w="601805400"/><text x="90.6731%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (601,805,400 samples, 0.14%)</title><rect x="90.4231%" y="373" width="0.1399%" height="15" fill="rgb(247,34,51)" fg:x="389065185082" fg:w="601805400"/><text x="90.6731%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (601,805,400 samples, 0.14%)</title><rect x="90.4231%" y="357" width="0.1399%" height="15" fill="rgb(225,132,2)" fg:x="389065185082" fg:w="601805400"/><text x="90.6731%" y="367.50"></text></g><g><title>chlang::board::Position::valid (74,222,666 samples, 0.02%)</title><rect x="90.5823%" y="405" width="0.0173%" height="15" fill="rgb(209,159,44)" fg:x="389750240229" fg:w="74222666"/><text x="90.8323%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (538,615,833 samples, 0.13%)</title><rect x="90.5996%" y="389" width="0.1252%" height="15" fill="rgb(251,214,1)" fg:x="389824462895" fg:w="538615833"/><text x="90.8496%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (559,679,022 samples, 0.13%)</title><rect x="90.5996%" y="405" width="0.1301%" height="15" fill="rgb(247,84,47)" fg:x="389824462895" fg:w="559679022"/><text x="90.8496%" y="415.50"></text></g><g><title>__rust_alloc (47,141,423 samples, 0.01%)</title><rect x="90.7297%" y="277" width="0.0110%" height="15" fill="rgb(240,111,43)" fg:x="390384141917" fg:w="47141423"/><text x="90.9797%" y="287.50"></text></g><g><title>tcache_get (93,279,837 samples, 0.02%)</title><rect x="90.7464%" y="261" width="0.0217%" height="15" fill="rgb(215,214,35)" fg:x="390456358565" fg:w="93279837"/><text x="90.9964%" y="271.50"></text></g><g><title>__GI___libc_malloc (293,881,637 samples, 0.07%)</title><rect x="90.7464%" y="277" width="0.0683%" height="15" fill="rgb(248,207,23)" fg:x="390456358565" fg:w="293881637"/><text x="90.9964%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (380,140,411 samples, 0.09%)</title><rect x="90.7297%" y="325" width="0.0883%" height="15" fill="rgb(214,186,4)" fg:x="390384141917" fg:w="380140411"/><text x="90.9797%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (380,140,411 samples, 0.09%)</title><rect x="90.7297%" y="309" width="0.0883%" height="15" fill="rgb(220,133,22)" fg:x="390384141917" fg:w="380140411"/><text x="90.9797%" y="319.50"></text></g><g><title>alloc::alloc::alloc (380,140,411 samples, 0.09%)</title><rect x="90.7297%" y="293" width="0.0883%" height="15" fill="rgb(239,134,19)" fg:x="390384141917" fg:w="380140411"/><text x="90.9797%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (400,200,591 samples, 0.09%)</title><rect x="90.7297%" y="373" width="0.0930%" height="15" fill="rgb(250,140,9)" fg:x="390384141917" fg:w="400200591"/><text x="90.9797%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (400,200,591 samples, 0.09%)</title><rect x="90.7297%" y="357" width="0.0930%" height="15" fill="rgb(225,59,14)" fg:x="390384141917" fg:w="400200591"/><text x="90.9797%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (400,200,591 samples, 0.09%)</title><rect x="90.7297%" y="341" width="0.0930%" height="15" fill="rgb(214,152,51)" fg:x="390384141917" fg:w="400200591"/><text x="90.9797%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (411,233,690 samples, 0.10%)</title><rect x="90.7297%" y="405" width="0.0956%" height="15" fill="rgb(251,227,43)" fg:x="390384141917" fg:w="411233690"/><text x="90.9797%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (411,233,690 samples, 0.10%)</title><rect x="90.7297%" y="389" width="0.0956%" height="15" fill="rgb(241,96,17)" fg:x="390384141917" fg:w="411233690"/><text x="90.9797%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (51,153,459 samples, 0.01%)</title><rect x="90.8329%" y="373" width="0.0119%" height="15" fill="rgb(234,198,43)" fg:x="390828474904" fg:w="51153459"/><text x="91.0829%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (51,153,459 samples, 0.01%)</title><rect x="90.8329%" y="357" width="0.0119%" height="15" fill="rgb(220,108,29)" fg:x="390828474904" fg:w="51153459"/><text x="91.0829%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51,153,459 samples, 0.01%)</title><rect x="90.8329%" y="341" width="0.0119%" height="15" fill="rgb(226,163,33)" fg:x="390828474904" fg:w="51153459"/><text x="91.0829%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51,153,459 samples, 0.01%)</title><rect x="90.8329%" y="325" width="0.0119%" height="15" fill="rgb(205,194,45)" fg:x="390828474904" fg:w="51153459"/><text x="91.0829%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (156,469,404 samples, 0.04%)</title><rect x="90.8450%" y="293" width="0.0364%" height="15" fill="rgb(206,143,44)" fg:x="390880631372" fg:w="156469404"/><text x="91.0950%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (156,469,404 samples, 0.04%)</title><rect x="90.8450%" y="277" width="0.0364%" height="15" fill="rgb(236,136,36)" fg:x="390880631372" fg:w="156469404"/><text x="91.0950%" y="287.50"></text></g><g><title>alloc::alloc::alloc (156,469,404 samples, 0.04%)</title><rect x="90.8450%" y="261" width="0.0364%" height="15" fill="rgb(249,172,42)" fg:x="390880631372" fg:w="156469404"/><text x="91.0950%" y="271.50"></text></g><g><title>__GI___libc_malloc (132,397,188 samples, 0.03%)</title><rect x="90.8506%" y="245" width="0.0308%" height="15" fill="rgb(216,139,23)" fg:x="390904703588" fg:w="132397188"/><text x="91.1006%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (166,499,494 samples, 0.04%)</title><rect x="90.8448%" y="341" width="0.0387%" height="15" fill="rgb(207,166,20)" fg:x="390879628363" fg:w="166499494"/><text x="91.0948%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (166,499,494 samples, 0.04%)</title><rect x="90.8448%" y="325" width="0.0387%" height="15" fill="rgb(210,209,22)" fg:x="390879628363" fg:w="166499494"/><text x="91.0948%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (166,499,494 samples, 0.04%)</title><rect x="90.8448%" y="309" width="0.0387%" height="15" fill="rgb(232,118,20)" fg:x="390879628363" fg:w="166499494"/><text x="91.0948%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (175,526,575 samples, 0.04%)</title><rect x="90.8448%" y="373" width="0.0408%" height="15" fill="rgb(238,113,42)" fg:x="390879628363" fg:w="175526575"/><text x="91.0948%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (175,526,575 samples, 0.04%)</title><rect x="90.8448%" y="357" width="0.0408%" height="15" fill="rgb(231,42,5)" fg:x="390879628363" fg:w="175526575"/><text x="91.0948%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (65,195,585 samples, 0.02%)</title><rect x="90.8856%" y="373" width="0.0152%" height="15" fill="rgb(243,166,24)" fg:x="391055154938" fg:w="65195585"/><text x="91.1356%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (65,195,585 samples, 0.02%)</title><rect x="90.8856%" y="357" width="0.0152%" height="15" fill="rgb(237,226,12)" fg:x="391055154938" fg:w="65195585"/><text x="91.1356%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (65,195,585 samples, 0.02%)</title><rect x="90.8856%" y="341" width="0.0152%" height="15" fill="rgb(229,133,24)" fg:x="391055154938" fg:w="65195585"/><text x="91.1356%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (65,195,585 samples, 0.02%)</title><rect x="90.8856%" y="325" width="0.0152%" height="15" fill="rgb(238,33,43)" fg:x="391055154938" fg:w="65195585"/><text x="91.1356%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (493,480,428 samples, 0.11%)</title><rect x="90.8329%" y="405" width="0.1147%" height="15" fill="rgb(227,59,38)" fg:x="390828474904" fg:w="493480428"/><text x="91.0829%" y="415.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (493,480,428 samples, 0.11%)</title><rect x="90.8329%" y="389" width="0.1147%" height="15" fill="rgb(230,97,0)" fg:x="390828474904" fg:w="493480428"/><text x="91.0829%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (3,025,075,144 samples, 0.70%)</title><rect x="90.4231%" y="421" width="0.7031%" height="15" fill="rgb(250,173,50)" fg:x="389065185082" fg:w="3025075144"/><text x="90.6731%" y="431.50"></text></g><g><title>chlang::board::Position::valid (152,457,368 samples, 0.04%)</title><rect x="91.1322%" y="405" width="0.0354%" height="15" fill="rgb(240,15,50)" fg:x="392116338460" fg:w="152457368"/><text x="91.3822%" y="415.50"></text></g><g><title>tcache_get (79,237,711 samples, 0.02%)</title><rect x="91.1763%" y="261" width="0.0184%" height="15" fill="rgb(221,93,22)" fg:x="392305907161" fg:w="79237711"/><text x="91.4263%" y="271.50"></text></g><g><title>__GI___libc_malloc (322,968,898 samples, 0.08%)</title><rect x="91.1763%" y="277" width="0.0751%" height="15" fill="rgb(245,180,53)" fg:x="392305907161" fg:w="322968898"/><text x="91.4263%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (362,086,249 samples, 0.08%)</title><rect x="91.1677%" y="325" width="0.0842%" height="15" fill="rgb(231,88,51)" fg:x="392268795828" fg:w="362086249"/><text x="91.4177%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (362,086,249 samples, 0.08%)</title><rect x="91.1677%" y="309" width="0.0842%" height="15" fill="rgb(240,58,21)" fg:x="392268795828" fg:w="362086249"/><text x="91.4177%" y="319.50"></text></g><g><title>alloc::alloc::alloc (362,086,249 samples, 0.08%)</title><rect x="91.1677%" y="293" width="0.0842%" height="15" fill="rgb(237,21,10)" fg:x="392268795828" fg:w="362086249"/><text x="91.4177%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (407,221,654 samples, 0.09%)</title><rect x="91.1677%" y="405" width="0.0946%" height="15" fill="rgb(218,43,11)" fg:x="392268795828" fg:w="407221654"/><text x="91.4177%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (407,221,654 samples, 0.09%)</title><rect x="91.1677%" y="389" width="0.0946%" height="15" fill="rgb(218,221,29)" fg:x="392268795828" fg:w="407221654"/><text x="91.4177%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (407,221,654 samples, 0.09%)</title><rect x="91.1677%" y="373" width="0.0946%" height="15" fill="rgb(214,118,42)" fg:x="392268795828" fg:w="407221654"/><text x="91.4177%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (407,221,654 samples, 0.09%)</title><rect x="91.1677%" y="357" width="0.0946%" height="15" fill="rgb(251,200,26)" fg:x="392268795828" fg:w="407221654"/><text x="91.4177%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (407,221,654 samples, 0.09%)</title><rect x="91.1677%" y="341" width="0.0946%" height="15" fill="rgb(237,101,39)" fg:x="392268795828" fg:w="407221654"/><text x="91.4177%" y="351.50"></text></g><g><title>core::ptr::write (45,135,405 samples, 0.01%)</title><rect x="91.2623%" y="389" width="0.0105%" height="15" fill="rgb(251,117,11)" fg:x="392676017482" fg:w="45135405"/><text x="91.5123%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (194,583,746 samples, 0.05%)</title><rect x="91.2623%" y="405" width="0.0452%" height="15" fill="rgb(216,223,23)" fg:x="392676017482" fg:w="194583746"/><text x="91.5123%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (58,174,522 samples, 0.01%)</title><rect x="91.3075%" y="405" width="0.0135%" height="15" fill="rgb(251,54,12)" fg:x="392870601228" fg:w="58174522"/><text x="91.5575%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (58,174,522 samples, 0.01%)</title><rect x="91.3075%" y="389" width="0.0135%" height="15" fill="rgb(254,176,54)" fg:x="392870601228" fg:w="58174522"/><text x="91.5575%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (1,055,165,468 samples, 0.25%)</title><rect x="91.1262%" y="421" width="0.2452%" height="15" fill="rgb(210,32,8)" fg:x="392090260226" fg:w="1055165468"/><text x="91.3762%" y="431.50"></text></g><g><title>chlang::cmove::Move::new (148,445,332 samples, 0.03%)</title><rect x="91.3714%" y="405" width="0.0345%" height="15" fill="rgb(235,52,38)" fg:x="393145425694" fg:w="148445332"/><text x="91.6214%" y="415.50"></text></g><g><title>chlang::board::Position::valid (174,523,566 samples, 0.04%)</title><rect x="91.4059%" y="405" width="0.0406%" height="15" fill="rgb(231,4,44)" fg:x="393293871026" fg:w="174523566"/><text x="91.6559%" y="415.50"></text></g><g><title>__rust_alloc (43,129,387 samples, 0.01%)</title><rect x="91.4465%" y="277" width="0.0100%" height="15" fill="rgb(249,2,32)" fg:x="393468394592" fg:w="43129387"/><text x="91.6965%" y="287.50"></text></g><g><title>tcache_get (111,333,999 samples, 0.03%)</title><rect x="91.4607%" y="261" width="0.0259%" height="15" fill="rgb(224,65,26)" fg:x="393529578141" fg:w="111333999"/><text x="91.7107%" y="271.50"></text></g><g><title>__GI___libc_malloc (324,974,916 samples, 0.08%)</title><rect x="91.4607%" y="277" width="0.0755%" height="15" fill="rgb(250,73,40)" fg:x="393529578141" fg:w="324974916"/><text x="91.7107%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (401,203,600 samples, 0.09%)</title><rect x="91.4465%" y="325" width="0.0932%" height="15" fill="rgb(253,177,16)" fg:x="393468394592" fg:w="401203600"/><text x="91.6965%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (401,203,600 samples, 0.09%)</title><rect x="91.4465%" y="309" width="0.0932%" height="15" fill="rgb(217,32,34)" fg:x="393468394592" fg:w="401203600"/><text x="91.6965%" y="319.50"></text></g><g><title>alloc::alloc::alloc (401,203,600 samples, 0.09%)</title><rect x="91.4465%" y="293" width="0.0932%" height="15" fill="rgb(212,7,10)" fg:x="393468394592" fg:w="401203600"/><text x="91.6965%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (434,302,897 samples, 0.10%)</title><rect x="91.4465%" y="373" width="0.1009%" height="15" fill="rgb(245,89,8)" fg:x="393468394592" fg:w="434302897"/><text x="91.6965%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (434,302,897 samples, 0.10%)</title><rect x="91.4465%" y="357" width="0.1009%" height="15" fill="rgb(237,16,53)" fg:x="393468394592" fg:w="434302897"/><text x="91.6965%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (434,302,897 samples, 0.10%)</title><rect x="91.4465%" y="341" width="0.1009%" height="15" fill="rgb(250,204,30)" fg:x="393468394592" fg:w="434302897"/><text x="91.6965%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (451,354,050 samples, 0.10%)</title><rect x="91.4465%" y="405" width="0.1049%" height="15" fill="rgb(208,77,27)" fg:x="393468394592" fg:w="451354050"/><text x="91.6965%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (451,354,050 samples, 0.10%)</title><rect x="91.4465%" y="389" width="0.1049%" height="15" fill="rgb(250,204,28)" fg:x="393468394592" fg:w="451354050"/><text x="91.6965%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (253,761,277 samples, 0.06%)</title><rect x="91.5514%" y="405" width="0.0590%" height="15" fill="rgb(244,63,21)" fg:x="393919748642" fg:w="253761277"/><text x="91.8014%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (1,402,206,582 samples, 0.33%)</title><rect x="91.3714%" y="421" width="0.3259%" height="15" fill="rgb(236,85,44)" fg:x="393145425694" fg:w="1402206582"/><text x="91.6214%" y="431.50"></text></g><g><title>chlang::board::Position::valid (166,499,494 samples, 0.04%)</title><rect x="91.6973%" y="405" width="0.0387%" height="15" fill="rgb(215,98,4)" fg:x="394547632276" fg:w="166499494"/><text x="91.9473%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,335,004,979 samples, 0.31%)</title><rect x="91.7360%" y="389" width="0.3103%" height="15" fill="rgb(235,38,11)" fg:x="394714131770" fg:w="1335004979"/><text x="91.9860%" y="399.50"></text></g><g><title>chlang::board::Position::bitboard (1,377,131,357 samples, 0.32%)</title><rect x="91.7360%" y="405" width="0.3201%" height="15" fill="rgb(254,186,25)" fg:x="394714131770" fg:w="1377131357"/><text x="91.9860%" y="415.50"></text></g><g><title>tcache_get (88,264,792 samples, 0.02%)</title><rect x="92.0712%" y="261" width="0.0205%" height="15" fill="rgb(225,55,31)" fg:x="396156458712" fg:w="88264792"/><text x="92.3212%" y="271.50"></text></g><g><title>__GI___libc_malloc (362,086,249 samples, 0.08%)</title><rect x="92.0712%" y="277" width="0.0842%" height="15" fill="rgb(211,15,21)" fg:x="396156458712" fg:w="362086249"/><text x="92.3212%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (440,320,951 samples, 0.10%)</title><rect x="92.0561%" y="325" width="0.1023%" height="15" fill="rgb(215,187,41)" fg:x="396091263127" fg:w="440320951"/><text x="92.3061%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (440,320,951 samples, 0.10%)</title><rect x="92.0561%" y="309" width="0.1023%" height="15" fill="rgb(248,69,32)" fg:x="396091263127" fg:w="440320951"/><text x="92.3061%" y="319.50"></text></g><g><title>alloc::alloc::alloc (440,320,951 samples, 0.10%)</title><rect x="92.0561%" y="293" width="0.1023%" height="15" fill="rgb(252,102,52)" fg:x="396091263127" fg:w="440320951"/><text x="92.3061%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (497,492,464 samples, 0.12%)</title><rect x="92.0561%" y="373" width="0.1156%" height="15" fill="rgb(253,140,32)" fg:x="396091263127" fg:w="497492464"/><text x="92.3061%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (497,492,464 samples, 0.12%)</title><rect x="92.0561%" y="357" width="0.1156%" height="15" fill="rgb(216,56,42)" fg:x="396091263127" fg:w="497492464"/><text x="92.3061%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (497,492,464 samples, 0.12%)</title><rect x="92.0561%" y="341" width="0.1156%" height="15" fill="rgb(216,184,14)" fg:x="396091263127" fg:w="497492464"/><text x="92.3061%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (520,561,671 samples, 0.12%)</title><rect x="92.0561%" y="405" width="0.1210%" height="15" fill="rgb(237,187,27)" fg:x="396091263127" fg:w="520561671"/><text x="92.3061%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (520,561,671 samples, 0.12%)</title><rect x="92.0561%" y="389" width="0.1210%" height="15" fill="rgb(219,65,3)" fg:x="396091263127" fg:w="520561671"/><text x="92.3061%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (62,186,558 samples, 0.01%)</title><rect x="92.1801%" y="389" width="0.0145%" height="15" fill="rgb(245,83,25)" fg:x="396624863915" fg:w="62186558"/><text x="92.4301%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (62,186,558 samples, 0.01%)</title><rect x="92.1801%" y="373" width="0.0145%" height="15" fill="rgb(214,205,45)" fg:x="396624863915" fg:w="62186558"/><text x="92.4301%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (62,186,558 samples, 0.01%)</title><rect x="92.1801%" y="357" width="0.0145%" height="15" fill="rgb(241,20,18)" fg:x="396624863915" fg:w="62186558"/><text x="92.4301%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (62,186,558 samples, 0.01%)</title><rect x="92.1801%" y="341" width="0.0145%" height="15" fill="rgb(232,163,23)" fg:x="396624863915" fg:w="62186558"/><text x="92.4301%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (349,047,132 samples, 0.08%)</title><rect x="92.1770%" y="405" width="0.0811%" height="15" fill="rgb(214,5,46)" fg:x="396611824798" fg:w="349047132"/><text x="92.4270%" y="415.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (66,198,594 samples, 0.02%)</title><rect x="92.2589%" y="389" width="0.0154%" height="15" fill="rgb(229,78,17)" fg:x="396963880957" fg:w="66198594"/><text x="92.5089%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (208,625,872 samples, 0.05%)</title><rect x="92.2589%" y="405" width="0.0485%" height="15" fill="rgb(248,89,10)" fg:x="396963880957" fg:w="208625872"/><text x="92.5089%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (3,243,731,106 samples, 0.75%)</title><rect x="91.6973%" y="421" width="0.7539%" height="15" fill="rgb(248,54,15)" fg:x="394547632276" fg:w="3243731106"/><text x="91.9473%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (63,189,567 samples, 0.01%)</title><rect x="92.4512%" y="405" width="0.0147%" height="15" fill="rgb(223,116,6)" fg:x="397791363382" fg:w="63189567"/><text x="92.7012%" y="415.50"></text></g><g><title>core::ptr::read (63,189,567 samples, 0.01%)</title><rect x="92.4512%" y="389" width="0.0147%" height="15" fill="rgb(205,125,38)" fg:x="397791363382" fg:w="63189567"/><text x="92.7012%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (97,291,873 samples, 0.02%)</title><rect x="92.4659%" y="405" width="0.0226%" height="15" fill="rgb(251,78,38)" fg:x="397854552949" fg:w="97291873"/><text x="92.7159%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (277,833,493 samples, 0.06%)</title><rect x="92.4512%" y="421" width="0.0646%" height="15" fill="rgb(253,78,28)" fg:x="397791363382" fg:w="277833493"/><text x="92.7012%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (446,339,005 samples, 0.10%)</title><rect x="92.5158%" y="421" width="0.1037%" height="15" fill="rgb(209,120,3)" fg:x="398069196875" fg:w="446339005"/><text x="92.7658%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (446,339,005 samples, 0.10%)</title><rect x="92.5158%" y="405" width="0.1037%" height="15" fill="rgb(238,229,9)" fg:x="398069196875" fg:w="446339005"/><text x="92.7658%" y="415.50"></text></g><g><title>chlang::board::Board::attacked_by_color (28,990,972,136 samples, 6.74%)</title><rect x="86.1364%" y="437" width="6.7378%" height="15" fill="rgb(253,159,18)" fg:x="370620852581" fg:w="28990972136"/><text x="86.3864%" y="447.50">chlang::b..</text></g><g><title>&lt;chlang::board::Position as core::convert::From&lt;u64&gt;&gt;::from (74,222,666 samples, 0.02%)</title><rect x="92.8743%" y="437" width="0.0173%" height="15" fill="rgb(244,42,34)" fg:x="399611824717" fg:w="74222666"/><text x="93.1243%" y="447.50"></text></g><g><title>chlang::board::Board::is_valid (29,147,441,540 samples, 6.77%)</title><rect x="86.1364%" y="453" width="6.7742%" height="15" fill="rgb(224,8,7)" fg:x="370620852581" fg:w="29147441540"/><text x="86.3864%" y="463.50">chlang::b..</text></g><g><title>_int_free (77,231,693 samples, 0.02%)</title><rect x="92.9190%" y="309" width="0.0179%" height="15" fill="rgb(210,201,45)" fg:x="399804402445" fg:w="77231693"/><text x="93.1690%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (170,511,530 samples, 0.04%)</title><rect x="92.9106%" y="373" width="0.0396%" height="15" fill="rgb(252,185,21)" fg:x="399768294121" fg:w="170511530"/><text x="93.1606%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (170,511,530 samples, 0.04%)</title><rect x="92.9106%" y="357" width="0.0396%" height="15" fill="rgb(223,131,1)" fg:x="399768294121" fg:w="170511530"/><text x="93.1606%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (170,511,530 samples, 0.04%)</title><rect x="92.9106%" y="341" width="0.0396%" height="15" fill="rgb(245,141,16)" fg:x="399768294121" fg:w="170511530"/><text x="93.1606%" y="351.50"></text></g><g><title>__GI___libc_free (134,403,206 samples, 0.03%)</title><rect x="92.9190%" y="325" width="0.0312%" height="15" fill="rgb(229,55,45)" fg:x="399804402445" fg:w="134403206"/><text x="93.1690%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (173,520,557 samples, 0.04%)</title><rect x="92.9106%" y="437" width="0.0403%" height="15" fill="rgb(208,92,15)" fg:x="399768294121" fg:w="173520557"/><text x="93.1606%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (173,520,557 samples, 0.04%)</title><rect x="92.9106%" y="421" width="0.0403%" height="15" fill="rgb(234,185,47)" fg:x="399768294121" fg:w="173520557"/><text x="93.1606%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (173,520,557 samples, 0.04%)</title><rect x="92.9106%" y="405" width="0.0403%" height="15" fill="rgb(253,104,50)" fg:x="399768294121" fg:w="173520557"/><text x="93.1606%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173,520,557 samples, 0.04%)</title><rect x="92.9106%" y="389" width="0.0403%" height="15" fill="rgb(205,70,7)" fg:x="399768294121" fg:w="173520557"/><text x="93.1606%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,170,511,503 samples, 0.27%)</title><rect x="92.9510%" y="405" width="0.2720%" height="15" fill="rgb(240,178,43)" fg:x="399941814678" fg:w="1170511503"/><text x="93.2010%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (1,171,514,512 samples, 0.27%)</title><rect x="92.9510%" y="421" width="0.2723%" height="15" fill="rgb(214,112,2)" fg:x="399941814678" fg:w="1171514512"/><text x="93.2010%" y="431.50"></text></g><g><title>chlang::board::Board::piece_type (1,575,727,139 samples, 0.37%)</title><rect x="92.9510%" y="437" width="0.3662%" height="15" fill="rgb(206,46,17)" fg:x="399941814678" fg:w="1575727139"/><text x="93.2010%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (751,253,741 samples, 0.17%)</title><rect x="93.3260%" y="405" width="0.1746%" height="15" fill="rgb(225,220,16)" fg:x="401555656159" fg:w="751253741"/><text x="93.5760%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (777,331,975 samples, 0.18%)</title><rect x="93.3260%" y="421" width="0.1807%" height="15" fill="rgb(238,65,40)" fg:x="401555656159" fg:w="777331975"/><text x="93.5760%" y="431.50"></text></g><g><title>__GI___libc_malloc (143,430,287 samples, 0.03%)</title><rect x="93.5130%" y="293" width="0.0333%" height="15" fill="rgb(230,151,21)" fg:x="402360069377" fg:w="143430287"/><text x="93.7630%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (171,514,539 samples, 0.04%)</title><rect x="93.5067%" y="341" width="0.0399%" height="15" fill="rgb(218,58,49)" fg:x="402332988134" fg:w="171514539"/><text x="93.7567%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (171,514,539 samples, 0.04%)</title><rect x="93.5067%" y="325" width="0.0399%" height="15" fill="rgb(219,179,14)" fg:x="402332988134" fg:w="171514539"/><text x="93.7567%" y="335.50"></text></g><g><title>alloc::alloc::alloc (171,514,539 samples, 0.04%)</title><rect x="93.5067%" y="309" width="0.0399%" height="15" fill="rgb(223,72,1)" fg:x="402332988134" fg:w="171514539"/><text x="93.7567%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (189,568,701 samples, 0.04%)</title><rect x="93.5067%" y="389" width="0.0441%" height="15" fill="rgb(238,126,10)" fg:x="402332988134" fg:w="189568701"/><text x="93.7567%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (189,568,701 samples, 0.04%)</title><rect x="93.5067%" y="373" width="0.0441%" height="15" fill="rgb(224,206,38)" fg:x="402332988134" fg:w="189568701"/><text x="93.7567%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (189,568,701 samples, 0.04%)</title><rect x="93.5067%" y="357" width="0.0441%" height="15" fill="rgb(212,201,54)" fg:x="402332988134" fg:w="189568701"/><text x="93.7567%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (200,601,800 samples, 0.05%)</title><rect x="93.5067%" y="421" width="0.0466%" height="15" fill="rgb(218,154,48)" fg:x="402332988134" fg:w="200601800"/><text x="93.7567%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (200,601,800 samples, 0.05%)</title><rect x="93.5067%" y="405" width="0.0466%" height="15" fill="rgb(232,93,24)" fg:x="402332988134" fg:w="200601800"/><text x="93.7567%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (66,198,594 samples, 0.02%)</title><rect x="93.5552%" y="405" width="0.0154%" height="15" fill="rgb(245,30,21)" fg:x="402541614006" fg:w="66198594"/><text x="93.8052%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (66,198,594 samples, 0.02%)</title><rect x="93.5552%" y="389" width="0.0154%" height="15" fill="rgb(242,148,29)" fg:x="402541614006" fg:w="66198594"/><text x="93.8052%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (66,198,594 samples, 0.02%)</title><rect x="93.5552%" y="373" width="0.0154%" height="15" fill="rgb(244,153,54)" fg:x="402541614006" fg:w="66198594"/><text x="93.8052%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (66,198,594 samples, 0.02%)</title><rect x="93.5552%" y="357" width="0.0154%" height="15" fill="rgb(252,87,22)" fg:x="402541614006" fg:w="66198594"/><text x="93.8052%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (276,830,484 samples, 0.06%)</title><rect x="93.5533%" y="421" width="0.0643%" height="15" fill="rgb(210,51,29)" fg:x="402533589934" fg:w="276830484"/><text x="93.8033%" y="431.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (78,234,702 samples, 0.02%)</title><rect x="93.6179%" y="421" width="0.0182%" height="15" fill="rgb(242,136,47)" fg:x="402811423427" fg:w="78234702"/><text x="93.8679%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (1,705,115,300 samples, 0.40%)</title><rect x="93.3172%" y="437" width="0.3963%" height="15" fill="rgb(238,68,4)" fg:x="401517541817" fg:w="1705115300"/><text x="93.5672%" y="447.50"></text></g><g><title>_int_free (104,312,936 samples, 0.02%)</title><rect x="93.7240%" y="293" width="0.0242%" height="15" fill="rgb(242,161,30)" fg:x="403267792522" fg:w="104312936"/><text x="93.9740%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (185,556,665 samples, 0.04%)</title><rect x="93.7135%" y="357" width="0.0431%" height="15" fill="rgb(218,58,44)" fg:x="403222657117" fg:w="185556665"/><text x="93.9635%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (179,538,611 samples, 0.04%)</title><rect x="93.7149%" y="341" width="0.0417%" height="15" fill="rgb(252,125,32)" fg:x="403228675171" fg:w="179538611"/><text x="93.9649%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (179,538,611 samples, 0.04%)</title><rect x="93.7149%" y="325" width="0.0417%" height="15" fill="rgb(219,178,0)" fg:x="403228675171" fg:w="179538611"/><text x="93.9649%" y="335.50"></text></g><g><title>__GI___libc_free (140,421,260 samples, 0.03%)</title><rect x="93.7240%" y="309" width="0.0326%" height="15" fill="rgb(213,152,7)" fg:x="403267792522" fg:w="140421260"/><text x="93.9740%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (195,586,755 samples, 0.05%)</title><rect x="93.7135%" y="421" width="0.0455%" height="15" fill="rgb(249,109,34)" fg:x="403222657117" fg:w="195586755"/><text x="93.9635%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (195,586,755 samples, 0.05%)</title><rect x="93.7135%" y="405" width="0.0455%" height="15" fill="rgb(232,96,21)" fg:x="403222657117" fg:w="195586755"/><text x="93.9635%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (195,586,755 samples, 0.05%)</title><rect x="93.7135%" y="389" width="0.0455%" height="15" fill="rgb(228,27,39)" fg:x="403222657117" fg:w="195586755"/><text x="93.9635%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (195,586,755 samples, 0.05%)</title><rect x="93.7135%" y="373" width="0.0455%" height="15" fill="rgb(211,182,52)" fg:x="403222657117" fg:w="195586755"/><text x="93.9635%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (288,866,592 samples, 0.07%)</title><rect x="93.7825%" y="405" width="0.0671%" height="15" fill="rgb(234,178,38)" fg:x="403519547781" fg:w="288866592"/><text x="94.0325%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (299,899,691 samples, 0.07%)</title><rect x="93.7825%" y="421" width="0.0697%" height="15" fill="rgb(221,111,3)" fg:x="403519547781" fg:w="299899691"/><text x="94.0325%" y="431.50"></text></g><g><title>__GI___libc_malloc (118,355,062 samples, 0.03%)</title><rect x="93.8594%" y="293" width="0.0275%" height="15" fill="rgb(228,175,21)" fg:x="403850540751" fg:w="118355062"/><text x="94.1094%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (151,454,359 samples, 0.04%)</title><rect x="93.8522%" y="341" width="0.0352%" height="15" fill="rgb(228,174,43)" fg:x="403819447472" fg:w="151454359"/><text x="94.1022%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (151,454,359 samples, 0.04%)</title><rect x="93.8522%" y="325" width="0.0352%" height="15" fill="rgb(211,191,0)" fg:x="403819447472" fg:w="151454359"/><text x="94.1022%" y="335.50"></text></g><g><title>alloc::alloc::alloc (151,454,359 samples, 0.04%)</title><rect x="93.8522%" y="309" width="0.0352%" height="15" fill="rgb(253,117,3)" fg:x="403819447472" fg:w="151454359"/><text x="94.1022%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (164,493,476 samples, 0.04%)</title><rect x="93.8522%" y="389" width="0.0382%" height="15" fill="rgb(241,127,19)" fg:x="403819447472" fg:w="164493476"/><text x="94.1022%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (164,493,476 samples, 0.04%)</title><rect x="93.8522%" y="373" width="0.0382%" height="15" fill="rgb(218,103,12)" fg:x="403819447472" fg:w="164493476"/><text x="94.1022%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (164,493,476 samples, 0.04%)</title><rect x="93.8522%" y="357" width="0.0382%" height="15" fill="rgb(236,214,43)" fg:x="403819447472" fg:w="164493476"/><text x="94.1022%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (166,499,494 samples, 0.04%)</title><rect x="93.8522%" y="421" width="0.0387%" height="15" fill="rgb(244,144,19)" fg:x="403819447472" fg:w="166499494"/><text x="94.1022%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (166,499,494 samples, 0.04%)</title><rect x="93.8522%" y="405" width="0.0387%" height="15" fill="rgb(246,188,10)" fg:x="403819447472" fg:w="166499494"/><text x="94.1022%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (54,162,486 samples, 0.01%)</title><rect x="93.8972%" y="421" width="0.0126%" height="15" fill="rgb(212,193,33)" fg:x="404013028209" fg:w="54162486"/><text x="94.1472%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (44,132,396 samples, 0.01%)</title><rect x="93.9098%" y="389" width="0.0103%" height="15" fill="rgb(241,51,29)" fg:x="404067190695" fg:w="44132396"/><text x="94.1598%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (44,132,396 samples, 0.01%)</title><rect x="93.9098%" y="373" width="0.0103%" height="15" fill="rgb(211,58,19)" fg:x="404067190695" fg:w="44132396"/><text x="94.1598%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44,132,396 samples, 0.01%)</title><rect x="93.9098%" y="357" width="0.0103%" height="15" fill="rgb(229,111,26)" fg:x="404067190695" fg:w="44132396"/><text x="94.1598%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44,132,396 samples, 0.01%)</title><rect x="93.9098%" y="341" width="0.0103%" height="15" fill="rgb(213,115,40)" fg:x="404067190695" fg:w="44132396"/><text x="94.1598%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128,385,152 samples, 0.03%)</title><rect x="93.9247%" y="309" width="0.0298%" height="15" fill="rgb(209,56,44)" fg:x="404131383271" fg:w="128385152"/><text x="94.1747%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (128,385,152 samples, 0.03%)</title><rect x="93.9247%" y="293" width="0.0298%" height="15" fill="rgb(230,108,32)" fg:x="404131383271" fg:w="128385152"/><text x="94.1747%" y="303.50"></text></g><g><title>alloc::alloc::alloc (128,385,152 samples, 0.03%)</title><rect x="93.9247%" y="277" width="0.0298%" height="15" fill="rgb(216,165,31)" fg:x="404131383271" fg:w="128385152"/><text x="94.1747%" y="287.50"></text></g><g><title>__GI___libc_malloc (105,315,945 samples, 0.02%)</title><rect x="93.9300%" y="261" width="0.0245%" height="15" fill="rgb(218,122,21)" fg:x="404154452478" fg:w="105315945"/><text x="94.1800%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (163,490,467 samples, 0.04%)</title><rect x="93.9200%" y="357" width="0.0380%" height="15" fill="rgb(223,224,47)" fg:x="404111323091" fg:w="163490467"/><text x="94.1700%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (163,490,467 samples, 0.04%)</title><rect x="93.9200%" y="341" width="0.0380%" height="15" fill="rgb(238,102,44)" fg:x="404111323091" fg:w="163490467"/><text x="94.1700%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (163,490,467 samples, 0.04%)</title><rect x="93.9200%" y="325" width="0.0380%" height="15" fill="rgb(236,46,40)" fg:x="404111323091" fg:w="163490467"/><text x="94.1700%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (165,496,485 samples, 0.04%)</title><rect x="93.9200%" y="389" width="0.0385%" height="15" fill="rgb(247,202,50)" fg:x="404111323091" fg:w="165496485"/><text x="94.1700%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (165,496,485 samples, 0.04%)</title><rect x="93.9200%" y="373" width="0.0385%" height="15" fill="rgb(209,99,20)" fg:x="404111323091" fg:w="165496485"/><text x="94.1700%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (335,005,006 samples, 0.08%)</title><rect x="93.9098%" y="421" width="0.0779%" height="15" fill="rgb(252,27,34)" fg:x="404067190695" fg:w="335005006"/><text x="94.1598%" y="431.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (335,005,006 samples, 0.08%)</title><rect x="93.9098%" y="405" width="0.0779%" height="15" fill="rgb(215,206,23)" fg:x="404067190695" fg:w="335005006"/><text x="94.1598%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (1,340,020,024 samples, 0.31%)</title><rect x="93.7135%" y="437" width="0.3114%" height="15" fill="rgb(212,135,36)" fg:x="403222657117" fg:w="1340020024"/><text x="93.9635%" y="447.50"></text></g><g><title>__GI___libc_malloc (80,240,720 samples, 0.02%)</title><rect x="94.0403%" y="293" width="0.0186%" height="15" fill="rgb(240,189,1)" fg:x="404628875735" fg:w="80240720"/><text x="94.2903%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103,309,927 samples, 0.02%)</title><rect x="94.0361%" y="341" width="0.0240%" height="15" fill="rgb(242,56,20)" fg:x="404610821573" fg:w="103309927"/><text x="94.2861%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103,309,927 samples, 0.02%)</title><rect x="94.0361%" y="325" width="0.0240%" height="15" fill="rgb(247,132,33)" fg:x="404610821573" fg:w="103309927"/><text x="94.2861%" y="335.50"></text></g><g><title>alloc::alloc::alloc (103,309,927 samples, 0.02%)</title><rect x="94.0361%" y="309" width="0.0240%" height="15" fill="rgb(208,149,11)" fg:x="404610821573" fg:w="103309927"/><text x="94.2861%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (112,337,008 samples, 0.03%)</title><rect x="94.0361%" y="421" width="0.0261%" height="15" fill="rgb(211,33,11)" fg:x="404610821573" fg:w="112337008"/><text x="94.2861%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (112,337,008 samples, 0.03%)</title><rect x="94.0361%" y="405" width="0.0261%" height="15" fill="rgb(221,29,38)" fg:x="404610821573" fg:w="112337008"/><text x="94.2861%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (112,337,008 samples, 0.03%)</title><rect x="94.0361%" y="389" width="0.0261%" height="15" fill="rgb(206,182,49)" fg:x="404610821573" fg:w="112337008"/><text x="94.2861%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (112,337,008 samples, 0.03%)</title><rect x="94.0361%" y="373" width="0.0261%" height="15" fill="rgb(216,140,1)" fg:x="404610821573" fg:w="112337008"/><text x="94.2861%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (112,337,008 samples, 0.03%)</title><rect x="94.0361%" y="357" width="0.0261%" height="15" fill="rgb(232,57,40)" fg:x="404610821573" fg:w="112337008"/><text x="94.2861%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (58,174,522 samples, 0.01%)</title><rect x="94.0622%" y="421" width="0.0135%" height="15" fill="rgb(224,186,18)" fg:x="404723158581" fg:w="58174522"/><text x="94.3122%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (295,887,655 samples, 0.07%)</title><rect x="94.0249%" y="437" width="0.0688%" height="15" fill="rgb(215,121,11)" fg:x="404562677141" fg:w="295887655"/><text x="94.2749%" y="447.50"></text></g><g><title>chlang::board::Position::valid (44,132,396 samples, 0.01%)</title><rect x="94.0986%" y="421" width="0.0103%" height="15" fill="rgb(245,147,10)" fg:x="404879627985" fg:w="44132396"/><text x="94.3486%" y="431.50"></text></g><g><title>__rust_dealloc (90,270,810 samples, 0.02%)</title><rect x="94.1158%" y="261" width="0.0210%" height="15" fill="rgb(238,153,13)" fg:x="404953850651" fg:w="90270810"/><text x="94.3658%" y="271.50"></text></g><g><title>__rdl_dealloc (46,138,414 samples, 0.01%)</title><rect x="94.1368%" y="261" width="0.0107%" height="15" fill="rgb(233,108,0)" fg:x="405044121461" fg:w="46138414"/><text x="94.3868%" y="271.50"></text></g><g><title>tcache_put (46,138,414 samples, 0.01%)</title><rect x="94.1475%" y="229" width="0.0107%" height="15" fill="rgb(212,157,17)" fg:x="405090259875" fg:w="46138414"/><text x="94.3975%" y="239.50"></text></g><g><title>_int_free (207,622,863 samples, 0.05%)</title><rect x="94.1475%" y="245" width="0.0483%" height="15" fill="rgb(225,213,38)" fg:x="405090259875" fg:w="207622863"/><text x="94.3975%" y="255.50"></text></g><g><title>__GI___libc_free (273,821,457 samples, 0.06%)</title><rect x="94.1475%" y="261" width="0.0636%" height="15" fill="rgb(248,16,11)" fg:x="405090259875" fg:w="273821457"/><text x="94.3975%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (443,329,978 samples, 0.10%)</title><rect x="94.1088%" y="405" width="0.1030%" height="15" fill="rgb(241,33,4)" fg:x="404923760381" fg:w="443329978"/><text x="94.3588%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (443,329,978 samples, 0.10%)</title><rect x="94.1088%" y="389" width="0.1030%" height="15" fill="rgb(222,26,43)" fg:x="404923760381" fg:w="443329978"/><text x="94.3588%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (443,329,978 samples, 0.10%)</title><rect x="94.1088%" y="373" width="0.1030%" height="15" fill="rgb(243,29,36)" fg:x="404923760381" fg:w="443329978"/><text x="94.3588%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (443,329,978 samples, 0.10%)</title><rect x="94.1088%" y="357" width="0.1030%" height="15" fill="rgb(241,9,27)" fg:x="404923760381" fg:w="443329978"/><text x="94.3588%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (443,329,978 samples, 0.10%)</title><rect x="94.1088%" y="341" width="0.1030%" height="15" fill="rgb(205,117,26)" fg:x="404923760381" fg:w="443329978"/><text x="94.3588%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (443,329,978 samples, 0.10%)</title><rect x="94.1088%" y="325" width="0.1030%" height="15" fill="rgb(209,80,39)" fg:x="404923760381" fg:w="443329978"/><text x="94.3588%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (443,329,978 samples, 0.10%)</title><rect x="94.1088%" y="309" width="0.1030%" height="15" fill="rgb(239,155,6)" fg:x="404923760381" fg:w="443329978"/><text x="94.3588%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (413,239,708 samples, 0.10%)</title><rect x="94.1158%" y="293" width="0.0960%" height="15" fill="rgb(212,104,12)" fg:x="404953850651" fg:w="413239708"/><text x="94.3658%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (413,239,708 samples, 0.10%)</title><rect x="94.1158%" y="277" width="0.0960%" height="15" fill="rgb(234,204,3)" fg:x="404953850651" fg:w="413239708"/><text x="94.3658%" y="287.50"></text></g><g><title>chlang::cmove::Move::to (108,324,972 samples, 0.03%)</title><rect x="94.2179%" y="405" width="0.0252%" height="15" fill="rgb(251,218,7)" fg:x="405393168593" fg:w="108324972"/><text x="94.4679%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (692,076,210 samples, 0.16%)</title><rect x="94.2431%" y="373" width="0.1608%" height="15" fill="rgb(221,81,32)" fg:x="405501493565" fg:w="692076210"/><text x="94.4931%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (886,659,956 samples, 0.21%)</title><rect x="94.2431%" y="389" width="0.2061%" height="15" fill="rgb(214,152,26)" fg:x="405501493565" fg:w="886659956"/><text x="94.4931%" y="399.50"></text></g><g><title>chlang::board::Board::piece_type (1,073,219,630 samples, 0.25%)</title><rect x="94.2431%" y="405" width="0.2494%" height="15" fill="rgb(223,22,3)" fg:x="405501493565" fg:w="1073219630"/><text x="94.4931%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (163,490,467 samples, 0.04%)</title><rect x="94.4986%" y="373" width="0.0380%" height="15" fill="rgb(207,174,7)" fg:x="406600791429" fg:w="163490467"/><text x="94.7486%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (170,511,530 samples, 0.04%)</title><rect x="94.4986%" y="389" width="0.0396%" height="15" fill="rgb(224,19,52)" fg:x="406600791429" fg:w="170511530"/><text x="94.7486%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43,129,387 samples, 0.01%)</title><rect x="94.5382%" y="309" width="0.0100%" height="15" fill="rgb(228,24,14)" fg:x="406771302959" fg:w="43129387"/><text x="94.7882%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43,129,387 samples, 0.01%)</title><rect x="94.5382%" y="293" width="0.0100%" height="15" fill="rgb(230,153,43)" fg:x="406771302959" fg:w="43129387"/><text x="94.7882%" y="303.50"></text></g><g><title>alloc::alloc::alloc (43,129,387 samples, 0.01%)</title><rect x="94.5382%" y="277" width="0.0100%" height="15" fill="rgb(231,106,12)" fg:x="406771302959" fg:w="43129387"/><text x="94.7882%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46,138,414 samples, 0.01%)</title><rect x="94.5382%" y="357" width="0.0107%" height="15" fill="rgb(215,92,2)" fg:x="406771302959" fg:w="46138414"/><text x="94.7882%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (46,138,414 samples, 0.01%)</title><rect x="94.5382%" y="341" width="0.0107%" height="15" fill="rgb(249,143,25)" fg:x="406771302959" fg:w="46138414"/><text x="94.7882%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (46,138,414 samples, 0.01%)</title><rect x="94.5382%" y="325" width="0.0107%" height="15" fill="rgb(252,7,35)" fg:x="406771302959" fg:w="46138414"/><text x="94.7882%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (53,159,477 samples, 0.01%)</title><rect x="94.5382%" y="389" width="0.0124%" height="15" fill="rgb(216,69,40)" fg:x="406771302959" fg:w="53159477"/><text x="94.7882%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53,159,477 samples, 0.01%)</title><rect x="94.5382%" y="373" width="0.0124%" height="15" fill="rgb(240,36,33)" fg:x="406771302959" fg:w="53159477"/><text x="94.7882%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (431,293,870 samples, 0.10%)</title><rect x="94.4925%" y="405" width="0.1002%" height="15" fill="rgb(231,128,14)" fg:x="406574713195" fg:w="431293870"/><text x="94.7425%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (74,222,666 samples, 0.02%)</title><rect x="94.5928%" y="325" width="0.0173%" height="15" fill="rgb(245,143,14)" fg:x="407006007065" fg:w="74222666"/><text x="94.8428%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (74,222,666 samples, 0.02%)</title><rect x="94.5928%" y="309" width="0.0173%" height="15" fill="rgb(222,130,28)" fg:x="407006007065" fg:w="74222666"/><text x="94.8428%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (74,222,666 samples, 0.02%)</title><rect x="94.5928%" y="293" width="0.0173%" height="15" fill="rgb(212,10,48)" fg:x="407006007065" fg:w="74222666"/><text x="94.8428%" y="303.50"></text></g><g><title>__GI___libc_free (49,147,441 samples, 0.01%)</title><rect x="94.5986%" y="277" width="0.0114%" height="15" fill="rgb(254,118,45)" fg:x="407031082290" fg:w="49147441"/><text x="94.8486%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (75,225,675 samples, 0.02%)</title><rect x="94.5928%" y="389" width="0.0175%" height="15" fill="rgb(228,6,45)" fg:x="407006007065" fg:w="75225675"/><text x="94.8428%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (75,225,675 samples, 0.02%)</title><rect x="94.5928%" y="373" width="0.0175%" height="15" fill="rgb(241,18,35)" fg:x="407006007065" fg:w="75225675"/><text x="94.8428%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (75,225,675 samples, 0.02%)</title><rect x="94.5928%" y="357" width="0.0175%" height="15" fill="rgb(227,214,53)" fg:x="407006007065" fg:w="75225675"/><text x="94.8428%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75,225,675 samples, 0.02%)</title><rect x="94.5928%" y="341" width="0.0175%" height="15" fill="rgb(224,107,51)" fg:x="407006007065" fg:w="75225675"/><text x="94.8428%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (59,177,531 samples, 0.01%)</title><rect x="94.6135%" y="373" width="0.0138%" height="15" fill="rgb(248,60,28)" fg:x="407095274866" fg:w="59177531"/><text x="94.8635%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (62,186,558 samples, 0.01%)</title><rect x="94.6135%" y="389" width="0.0145%" height="15" fill="rgb(249,101,23)" fg:x="407095274866" fg:w="62186558"/><text x="94.8635%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53,159,477 samples, 0.01%)</title><rect x="94.6280%" y="309" width="0.0124%" height="15" fill="rgb(228,51,19)" fg:x="407157461424" fg:w="53159477"/><text x="94.8780%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53,159,477 samples, 0.01%)</title><rect x="94.6280%" y="293" width="0.0124%" height="15" fill="rgb(213,20,6)" fg:x="407157461424" fg:w="53159477"/><text x="94.8780%" y="303.50"></text></g><g><title>alloc::alloc::alloc (53,159,477 samples, 0.01%)</title><rect x="94.6280%" y="277" width="0.0124%" height="15" fill="rgb(212,124,10)" fg:x="407157461424" fg:w="53159477"/><text x="94.8780%" y="287.50"></text></g><g><title>__GI___libc_malloc (44,132,396 samples, 0.01%)</title><rect x="94.6301%" y="261" width="0.0103%" height="15" fill="rgb(248,3,40)" fg:x="407166488505" fg:w="44132396"/><text x="94.8801%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (55,165,495 samples, 0.01%)</title><rect x="94.6280%" y="357" width="0.0128%" height="15" fill="rgb(223,178,23)" fg:x="407157461424" fg:w="55165495"/><text x="94.8780%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (55,165,495 samples, 0.01%)</title><rect x="94.6280%" y="341" width="0.0128%" height="15" fill="rgb(240,132,45)" fg:x="407157461424" fg:w="55165495"/><text x="94.8780%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (55,165,495 samples, 0.01%)</title><rect x="94.6280%" y="325" width="0.0128%" height="15" fill="rgb(245,164,36)" fg:x="407157461424" fg:w="55165495"/><text x="94.8780%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (56,168,504 samples, 0.01%)</title><rect x="94.6280%" y="389" width="0.0131%" height="15" fill="rgb(231,188,53)" fg:x="407157461424" fg:w="56168504"/><text x="94.8780%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (56,168,504 samples, 0.01%)</title><rect x="94.6280%" y="373" width="0.0131%" height="15" fill="rgb(237,198,39)" fg:x="407157461424" fg:w="56168504"/><text x="94.8780%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (104,312,936 samples, 0.02%)</title><rect x="94.6422%" y="389" width="0.0242%" height="15" fill="rgb(223,120,35)" fg:x="407218644973" fg:w="104312936"/><text x="94.8922%" y="399.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (104,312,936 samples, 0.02%)</title><rect x="94.6422%" y="373" width="0.0242%" height="15" fill="rgb(253,107,49)" fg:x="407218644973" fg:w="104312936"/><text x="94.8922%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (372,116,339 samples, 0.09%)</title><rect x="94.5928%" y="405" width="0.0865%" height="15" fill="rgb(216,44,31)" fg:x="407006007065" fg:w="372116339"/><text x="94.8428%" y="415.50"></text></g><g><title>__GI___libc_malloc (48,144,432 samples, 0.01%)</title><rect x="94.6897%" y="261" width="0.0112%" height="15" fill="rgb(253,87,21)" fg:x="407423258809" fg:w="48144432"/><text x="94.9397%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64,192,576 samples, 0.01%)</title><rect x="94.6865%" y="309" width="0.0149%" height="15" fill="rgb(226,18,2)" fg:x="407409216683" fg:w="64192576"/><text x="94.9365%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64,192,576 samples, 0.01%)</title><rect x="94.6865%" y="293" width="0.0149%" height="15" fill="rgb(216,8,46)" fg:x="407409216683" fg:w="64192576"/><text x="94.9365%" y="303.50"></text></g><g><title>alloc::alloc::alloc (64,192,576 samples, 0.01%)</title><rect x="94.6865%" y="277" width="0.0149%" height="15" fill="rgb(226,140,39)" fg:x="407409216683" fg:w="64192576"/><text x="94.9365%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (73,219,657 samples, 0.02%)</title><rect x="94.6865%" y="389" width="0.0170%" height="15" fill="rgb(221,194,54)" fg:x="407409216683" fg:w="73219657"/><text x="94.9365%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (73,219,657 samples, 0.02%)</title><rect x="94.6865%" y="373" width="0.0170%" height="15" fill="rgb(213,92,11)" fg:x="407409216683" fg:w="73219657"/><text x="94.9365%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (73,219,657 samples, 0.02%)</title><rect x="94.6865%" y="357" width="0.0170%" height="15" fill="rgb(229,162,46)" fg:x="407409216683" fg:w="73219657"/><text x="94.9365%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (73,219,657 samples, 0.02%)</title><rect x="94.6865%" y="341" width="0.0170%" height="15" fill="rgb(214,111,36)" fg:x="407409216683" fg:w="73219657"/><text x="94.9365%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (73,219,657 samples, 0.02%)</title><rect x="94.6865%" y="325" width="0.0170%" height="15" fill="rgb(207,6,21)" fg:x="407409216683" fg:w="73219657"/><text x="94.9365%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (159,478,431 samples, 0.04%)</title><rect x="94.6793%" y="405" width="0.0371%" height="15" fill="rgb(213,127,38)" fg:x="407378123404" fg:w="159478431"/><text x="94.9293%" y="415.50"></text></g><g><title>__GI___libc_malloc (51,153,459 samples, 0.01%)</title><rect x="94.7308%" y="261" width="0.0119%" height="15" fill="rgb(238,118,32)" fg:x="407599788393" fg:w="51153459"/><text x="94.9808%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67,201,603 samples, 0.02%)</title><rect x="94.7282%" y="309" width="0.0156%" height="15" fill="rgb(240,139,39)" fg:x="407588755294" fg:w="67201603"/><text x="94.9782%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67,201,603 samples, 0.02%)</title><rect x="94.7282%" y="293" width="0.0156%" height="15" fill="rgb(235,10,37)" fg:x="407588755294" fg:w="67201603"/><text x="94.9782%" y="303.50"></text></g><g><title>alloc::alloc::alloc (67,201,603 samples, 0.02%)</title><rect x="94.7282%" y="277" width="0.0156%" height="15" fill="rgb(249,171,38)" fg:x="407588755294" fg:w="67201603"/><text x="94.9782%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (76,228,684 samples, 0.02%)</title><rect x="94.7282%" y="357" width="0.0177%" height="15" fill="rgb(242,144,32)" fg:x="407588755294" fg:w="76228684"/><text x="94.9782%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (76,228,684 samples, 0.02%)</title><rect x="94.7282%" y="341" width="0.0177%" height="15" fill="rgb(217,117,21)" fg:x="407588755294" fg:w="76228684"/><text x="94.9782%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (76,228,684 samples, 0.02%)</title><rect x="94.7282%" y="325" width="0.0177%" height="15" fill="rgb(249,87,1)" fg:x="407588755294" fg:w="76228684"/><text x="94.9782%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (81,243,729 samples, 0.02%)</title><rect x="94.7282%" y="389" width="0.0189%" height="15" fill="rgb(248,196,48)" fg:x="407588755294" fg:w="81243729"/><text x="94.9782%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81,243,729 samples, 0.02%)</title><rect x="94.7282%" y="373" width="0.0189%" height="15" fill="rgb(251,206,33)" fg:x="407588755294" fg:w="81243729"/><text x="94.9782%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (221,664,989 samples, 0.05%)</title><rect x="94.7163%" y="405" width="0.0515%" height="15" fill="rgb(232,141,28)" fg:x="407537601835" fg:w="221664989"/><text x="94.9663%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (125,376,125 samples, 0.03%)</title><rect x="94.7713%" y="373" width="0.0291%" height="15" fill="rgb(209,167,14)" fg:x="407774311959" fg:w="125376125"/><text x="95.0213%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (128,385,152 samples, 0.03%)</title><rect x="94.7713%" y="389" width="0.0298%" height="15" fill="rgb(225,11,50)" fg:x="407774311959" fg:w="128385152"/><text x="95.0213%" y="399.50"></text></g><g><title>__GI___libc_malloc (49,147,441 samples, 0.01%)</title><rect x="94.8026%" y="261" width="0.0114%" height="15" fill="rgb(209,50,20)" fg:x="407908715165" fg:w="49147441"/><text x="95.0526%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56,168,504 samples, 0.01%)</title><rect x="94.8012%" y="309" width="0.0131%" height="15" fill="rgb(212,17,46)" fg:x="407902697111" fg:w="56168504"/><text x="95.0512%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56,168,504 samples, 0.01%)</title><rect x="94.8012%" y="293" width="0.0131%" height="15" fill="rgb(216,101,39)" fg:x="407902697111" fg:w="56168504"/><text x="95.0512%" y="303.50"></text></g><g><title>alloc::alloc::alloc (56,168,504 samples, 0.01%)</title><rect x="94.8012%" y="277" width="0.0131%" height="15" fill="rgb(212,228,48)" fg:x="407902697111" fg:w="56168504"/><text x="95.0512%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62,186,558 samples, 0.01%)</title><rect x="94.8012%" y="357" width="0.0145%" height="15" fill="rgb(250,6,50)" fg:x="407902697111" fg:w="62186558"/><text x="95.0512%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (62,186,558 samples, 0.01%)</title><rect x="94.8012%" y="341" width="0.0145%" height="15" fill="rgb(250,160,48)" fg:x="407902697111" fg:w="62186558"/><text x="95.0512%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (62,186,558 samples, 0.01%)</title><rect x="94.8012%" y="325" width="0.0145%" height="15" fill="rgb(244,216,33)" fg:x="407902697111" fg:w="62186558"/><text x="95.0512%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (69,207,621 samples, 0.02%)</title><rect x="94.8012%" y="389" width="0.0161%" height="15" fill="rgb(207,157,5)" fg:x="407902697111" fg:w="69207621"/><text x="95.0512%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (69,207,621 samples, 0.02%)</title><rect x="94.8012%" y="373" width="0.0161%" height="15" fill="rgb(228,199,8)" fg:x="407902697111" fg:w="69207621"/><text x="95.0512%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (352,056,159 samples, 0.08%)</title><rect x="94.7678%" y="405" width="0.0818%" height="15" fill="rgb(227,80,20)" fg:x="407759266824" fg:w="352056159"/><text x="95.0178%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (61,183,549 samples, 0.01%)</title><rect x="94.8534%" y="405" width="0.0142%" height="15" fill="rgb(222,9,33)" fg:x="408127371127" fg:w="61183549"/><text x="95.1034%" y="415.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (61,183,549 samples, 0.01%)</title><rect x="94.8534%" y="389" width="0.0142%" height="15" fill="rgb(239,44,28)" fg:x="408127371127" fg:w="61183549"/><text x="95.1034%" y="399.50"></text></g><g><title>chlang::board::Board::attacked_by_color (3,405,215,555 samples, 0.79%)</title><rect x="94.1088%" y="421" width="0.7914%" height="15" fill="rgb(249,187,43)" fg:x="404923760381" fg:w="3405215555"/><text x="94.3588%" y="431.50"></text></g><g><title>__GI___libc_malloc (77,231,693 samples, 0.02%)</title><rect x="94.9047%" y="293" width="0.0179%" height="15" fill="rgb(216,141,28)" fg:x="408348033107" fg:w="77231693"/><text x="95.1547%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (104,312,936 samples, 0.02%)</title><rect x="94.9002%" y="341" width="0.0242%" height="15" fill="rgb(230,154,53)" fg:x="408328975936" fg:w="104312936"/><text x="95.1502%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (104,312,936 samples, 0.02%)</title><rect x="94.9002%" y="325" width="0.0242%" height="15" fill="rgb(227,82,4)" fg:x="408328975936" fg:w="104312936"/><text x="95.1502%" y="335.50"></text></g><g><title>alloc::alloc::alloc (104,312,936 samples, 0.02%)</title><rect x="94.9002%" y="309" width="0.0242%" height="15" fill="rgb(220,107,16)" fg:x="408328975936" fg:w="104312936"/><text x="95.1502%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (111,333,999 samples, 0.03%)</title><rect x="94.9002%" y="389" width="0.0259%" height="15" fill="rgb(207,187,2)" fg:x="408328975936" fg:w="111333999"/><text x="95.1502%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (111,333,999 samples, 0.03%)</title><rect x="94.9002%" y="373" width="0.0259%" height="15" fill="rgb(210,162,52)" fg:x="408328975936" fg:w="111333999"/><text x="95.1502%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (111,333,999 samples, 0.03%)</title><rect x="94.9002%" y="357" width="0.0259%" height="15" fill="rgb(217,216,49)" fg:x="408328975936" fg:w="111333999"/><text x="95.1502%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (116,349,044 samples, 0.03%)</title><rect x="94.9002%" y="421" width="0.0270%" height="15" fill="rgb(218,146,49)" fg:x="408328975936" fg:w="116349044"/><text x="95.1502%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (116,349,044 samples, 0.03%)</title><rect x="94.9002%" y="405" width="0.0270%" height="15" fill="rgb(216,55,40)" fg:x="408328975936" fg:w="116349044"/><text x="95.1502%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48,144,432 samples, 0.01%)</title><rect x="94.9273%" y="421" width="0.0112%" height="15" fill="rgb(208,196,21)" fg:x="408445324980" fg:w="48144432"/><text x="95.1773%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (3,725,175,426 samples, 0.87%)</title><rect x="94.0937%" y="437" width="0.8658%" height="15" fill="rgb(242,117,42)" fg:x="404858564796" fg:w="3725175426"/><text x="94.3437%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (592,778,319 samples, 0.14%)</title><rect x="94.9646%" y="405" width="0.1378%" height="15" fill="rgb(210,11,23)" fg:x="408605806420" fg:w="592778319"/><text x="95.2146%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (608,826,463 samples, 0.14%)</title><rect x="94.9646%" y="421" width="0.1415%" height="15" fill="rgb(217,110,2)" fg:x="408605806420" fg:w="608826463"/><text x="95.2146%" y="431.50"></text></g><g><title>__GI___libc_malloc (106,318,954 samples, 0.02%)</title><rect x="95.1110%" y="293" width="0.0247%" height="15" fill="rgb(229,77,54)" fg:x="409235696072" fg:w="106318954"/><text x="95.3610%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128,385,152 samples, 0.03%)</title><rect x="95.1061%" y="341" width="0.0298%" height="15" fill="rgb(218,53,16)" fg:x="409214632883" fg:w="128385152"/><text x="95.3561%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (128,385,152 samples, 0.03%)</title><rect x="95.1061%" y="325" width="0.0298%" height="15" fill="rgb(215,38,13)" fg:x="409214632883" fg:w="128385152"/><text x="95.3561%" y="335.50"></text></g><g><title>alloc::alloc::alloc (128,385,152 samples, 0.03%)</title><rect x="95.1061%" y="309" width="0.0298%" height="15" fill="rgb(235,42,18)" fg:x="409214632883" fg:w="128385152"/><text x="95.3561%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (151,454,359 samples, 0.04%)</title><rect x="95.1061%" y="389" width="0.0352%" height="15" fill="rgb(219,66,54)" fg:x="409214632883" fg:w="151454359"/><text x="95.3561%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (151,454,359 samples, 0.04%)</title><rect x="95.1061%" y="373" width="0.0352%" height="15" fill="rgb(222,205,4)" fg:x="409214632883" fg:w="151454359"/><text x="95.3561%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (151,454,359 samples, 0.04%)</title><rect x="95.1061%" y="357" width="0.0352%" height="15" fill="rgb(227,213,46)" fg:x="409214632883" fg:w="151454359"/><text x="95.3561%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (154,463,386 samples, 0.04%)</title><rect x="95.1061%" y="421" width="0.0359%" height="15" fill="rgb(250,145,42)" fg:x="409214632883" fg:w="154463386"/><text x="95.3561%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (154,463,386 samples, 0.04%)</title><rect x="95.1061%" y="405" width="0.0359%" height="15" fill="rgb(219,15,2)" fg:x="409214632883" fg:w="154463386"/><text x="95.3561%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (187,562,683 samples, 0.04%)</title><rect x="95.1420%" y="421" width="0.0436%" height="15" fill="rgb(231,181,52)" fg:x="409369096269" fg:w="187562683"/><text x="95.3920%" y="431.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (45,135,405 samples, 0.01%)</title><rect x="95.1865%" y="421" width="0.0105%" height="15" fill="rgb(235,1,42)" fg:x="409560670988" fg:w="45135405"/><text x="95.4365%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (1,244,734,169 samples, 0.29%)</title><rect x="94.9595%" y="437" width="0.2893%" height="15" fill="rgb(249,88,27)" fg:x="408583740222" fg:w="1244734169"/><text x="95.2095%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62,186,558 samples, 0.01%)</title><rect x="95.2520%" y="325" width="0.0145%" height="15" fill="rgb(235,145,16)" fg:x="409842516517" fg:w="62186558"/><text x="95.5020%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62,186,558 samples, 0.01%)</title><rect x="95.2520%" y="309" width="0.0145%" height="15" fill="rgb(237,114,19)" fg:x="409842516517" fg:w="62186558"/><text x="95.5020%" y="319.50"></text></g><g><title>alloc::alloc::alloc (62,186,558 samples, 0.01%)</title><rect x="95.2520%" y="293" width="0.0145%" height="15" fill="rgb(238,51,50)" fg:x="409842516517" fg:w="62186558"/><text x="95.5020%" y="303.50"></text></g><g><title>__GI___libc_malloc (43,129,387 samples, 0.01%)</title><rect x="95.2564%" y="277" width="0.0100%" height="15" fill="rgb(205,194,25)" fg:x="409861573688" fg:w="43129387"/><text x="95.5064%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74,222,666 samples, 0.02%)</title><rect x="95.2511%" y="373" width="0.0173%" height="15" fill="rgb(215,203,17)" fg:x="409838504481" fg:w="74222666"/><text x="95.5011%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (74,222,666 samples, 0.02%)</title><rect x="95.2511%" y="357" width="0.0173%" height="15" fill="rgb(233,112,49)" fg:x="409838504481" fg:w="74222666"/><text x="95.5011%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (74,222,666 samples, 0.02%)</title><rect x="95.2511%" y="341" width="0.0173%" height="15" fill="rgb(241,130,26)" fg:x="409838504481" fg:w="74222666"/><text x="95.5011%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (75,225,675 samples, 0.02%)</title><rect x="95.2511%" y="405" width="0.0175%" height="15" fill="rgb(252,223,19)" fg:x="409838504481" fg:w="75225675"/><text x="95.5011%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (75,225,675 samples, 0.02%)</title><rect x="95.2511%" y="389" width="0.0175%" height="15" fill="rgb(211,95,25)" fg:x="409838504481" fg:w="75225675"/><text x="95.5011%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (49,147,441 samples, 0.01%)</title><rect x="95.2686%" y="341" width="0.0114%" height="15" fill="rgb(251,182,27)" fg:x="409913730156" fg:w="49147441"/><text x="95.5186%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49,147,441 samples, 0.01%)</title><rect x="95.2686%" y="325" width="0.0114%" height="15" fill="rgb(238,24,4)" fg:x="409913730156" fg:w="49147441"/><text x="95.5186%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49,147,441 samples, 0.01%)</title><rect x="95.2686%" y="309" width="0.0114%" height="15" fill="rgb(224,220,25)" fg:x="409913730156" fg:w="49147441"/><text x="95.5186%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49,147,441 samples, 0.01%)</title><rect x="95.2686%" y="293" width="0.0114%" height="15" fill="rgb(239,133,26)" fg:x="409913730156" fg:w="49147441"/><text x="95.5186%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (59,177,531 samples, 0.01%)</title><rect x="95.2686%" y="405" width="0.0138%" height="15" fill="rgb(211,94,48)" fg:x="409913730156" fg:w="59177531"/><text x="95.5186%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (59,177,531 samples, 0.01%)</title><rect x="95.2686%" y="389" width="0.0138%" height="15" fill="rgb(239,87,6)" fg:x="409913730156" fg:w="59177531"/><text x="95.5186%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (59,177,531 samples, 0.01%)</title><rect x="95.2686%" y="373" width="0.0138%" height="15" fill="rgb(227,62,0)" fg:x="409913730156" fg:w="59177531"/><text x="95.5186%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (59,177,531 samples, 0.01%)</title><rect x="95.2686%" y="357" width="0.0138%" height="15" fill="rgb(211,226,4)" fg:x="409913730156" fg:w="59177531"/><text x="95.5186%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (180,541,620 samples, 0.04%)</title><rect x="95.2487%" y="437" width="0.0420%" height="15" fill="rgb(253,38,52)" fg:x="409828474391" fg:w="180541620"/><text x="95.4987%" y="447.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (180,541,620 samples, 0.04%)</title><rect x="95.2487%" y="421" width="0.0420%" height="15" fill="rgb(229,126,40)" fg:x="409828474391" fg:w="180541620"/><text x="95.4987%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (10,844,533,308 samples, 2.52%)</title><rect x="92.9106%" y="453" width="2.5204%" height="15" fill="rgb(229,165,44)" fg:x="399768294121" fg:w="10844533308"/><text x="93.1606%" y="463.50">ch..</text></g><g><title>core::ptr::write (276,830,484 samples, 0.06%)</title><rect x="95.4310%" y="437" width="0.0643%" height="15" fill="rgb(247,95,47)" fg:x="410612827429" fg:w="276830484"/><text x="95.6810%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (297,893,673 samples, 0.07%)</title><rect x="95.4310%" y="453" width="0.0692%" height="15" fill="rgb(216,140,30)" fg:x="410612827429" fg:w="297893673"/><text x="95.6810%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (99,297,891 samples, 0.02%)</title><rect x="95.5017%" y="421" width="0.0231%" height="15" fill="rgb(246,214,8)" fg:x="410916739156" fg:w="99297891"/><text x="95.7517%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (99,297,891 samples, 0.02%)</title><rect x="95.5017%" y="405" width="0.0231%" height="15" fill="rgb(227,224,15)" fg:x="410916739156" fg:w="99297891"/><text x="95.7517%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (99,297,891 samples, 0.02%)</title><rect x="95.5017%" y="389" width="0.0231%" height="15" fill="rgb(233,175,4)" fg:x="410916739156" fg:w="99297891"/><text x="95.7517%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (99,297,891 samples, 0.02%)</title><rect x="95.5017%" y="373" width="0.0231%" height="15" fill="rgb(221,66,45)" fg:x="410916739156" fg:w="99297891"/><text x="95.7517%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (100,300,900 samples, 0.02%)</title><rect x="95.5017%" y="453" width="0.0233%" height="15" fill="rgb(221,178,18)" fg:x="410916739156" fg:w="100300900"/><text x="95.7517%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (100,300,900 samples, 0.02%)</title><rect x="95.5017%" y="437" width="0.0233%" height="15" fill="rgb(213,81,29)" fg:x="410916739156" fg:w="100300900"/><text x="95.7517%" y="447.50"></text></g><g><title>chlang::board::Board::make_move (49,083,248,424 samples, 11.41%)</title><rect x="84.4191%" y="469" width="11.4075%" height="15" fill="rgb(220,89,49)" fg:x="363231685278" fg:w="49083248424"/><text x="84.6691%" y="479.50">chlang::board::Bo..</text></g><g><title>_int_free (109,327,981 samples, 0.03%)</title><rect x="95.8359%" y="293" width="0.0254%" height="15" fill="rgb(227,60,33)" fg:x="412355054062" fg:w="109327981"/><text x="96.0859%" y="303.50"></text></g><g><title>__GI___libc_free (153,460,377 samples, 0.04%)</title><rect x="95.8359%" y="309" width="0.0357%" height="15" fill="rgb(205,113,12)" fg:x="412355054062" fg:w="153460377"/><text x="96.0859%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="453" width="0.0464%" height="15" fill="rgb(211,32,1)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="437" width="0.0464%" height="15" fill="rgb(246,2,12)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="421" width="0.0464%" height="15" fill="rgb(243,37,27)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="405" width="0.0464%" height="15" fill="rgb(248,211,31)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="389" width="0.0464%" height="15" fill="rgb(242,146,47)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="373" width="0.0464%" height="15" fill="rgb(206,70,20)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="357" width="0.0464%" height="15" fill="rgb(215,10,51)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="341" width="0.0464%" height="15" fill="rgb(243,178,53)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (199,598,791 samples, 0.05%)</title><rect x="95.8266%" y="325" width="0.0464%" height="15" fill="rgb(233,221,20)" fg:x="412314933702" fg:w="199598791"/><text x="96.0766%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (824,473,398 samples, 0.19%)</title><rect x="95.8779%" y="453" width="0.1916%" height="15" fill="rgb(218,95,35)" fg:x="412535595682" fg:w="824473398"/><text x="96.1279%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (48,144,432 samples, 0.01%)</title><rect x="96.0695%" y="453" width="0.0112%" height="15" fill="rgb(229,13,5)" fg:x="413360069080" fg:w="48144432"/><text x="96.3195%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (48,144,432 samples, 0.01%)</title><rect x="96.0695%" y="437" width="0.0112%" height="15" fill="rgb(252,164,30)" fg:x="413360069080" fg:w="48144432"/><text x="96.3195%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (365,095,276 samples, 0.08%)</title><rect x="96.0896%" y="421" width="0.0849%" height="15" fill="rgb(232,68,36)" fg:x="413446327854" fg:w="365095276"/><text x="96.3396%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (365,095,276 samples, 0.08%)</title><rect x="96.0896%" y="405" width="0.0849%" height="15" fill="rgb(219,59,54)" fg:x="413446327854" fg:w="365095276"/><text x="96.3396%" y="415.50"></text></g><g><title>chlang::board::Board::piece_type (522,567,689 samples, 0.12%)</title><rect x="96.0896%" y="437" width="0.1215%" height="15" fill="rgb(250,92,33)" fg:x="413446327854" fg:w="522567689"/><text x="96.3396%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (166,499,494 samples, 0.04%)</title><rect x="96.2134%" y="405" width="0.0387%" height="15" fill="rgb(229,162,54)" fg:x="413978925633" fg:w="166499494"/><text x="96.4634%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (178,535,602 samples, 0.04%)</title><rect x="96.2134%" y="421" width="0.0415%" height="15" fill="rgb(244,114,52)" fg:x="413978925633" fg:w="178535602"/><text x="96.4634%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (46,138,414 samples, 0.01%)</title><rect x="96.2548%" y="421" width="0.0107%" height="15" fill="rgb(212,211,43)" fg:x="414157461235" fg:w="46138414"/><text x="96.5048%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46,138,414 samples, 0.01%)</title><rect x="96.2548%" y="405" width="0.0107%" height="15" fill="rgb(226,147,8)" fg:x="414157461235" fg:w="46138414"/><text x="96.5048%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46,138,414 samples, 0.01%)</title><rect x="96.2548%" y="389" width="0.0107%" height="15" fill="rgb(226,23,13)" fg:x="414157461235" fg:w="46138414"/><text x="96.5048%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (46,138,414 samples, 0.01%)</title><rect x="96.2548%" y="373" width="0.0107%" height="15" fill="rgb(240,63,4)" fg:x="414157461235" fg:w="46138414"/><text x="96.5048%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (46,138,414 samples, 0.01%)</title><rect x="96.2548%" y="357" width="0.0107%" height="15" fill="rgb(221,1,32)" fg:x="414157461235" fg:w="46138414"/><text x="96.5048%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (50,150,450 samples, 0.01%)</title><rect x="96.2656%" y="421" width="0.0117%" height="15" fill="rgb(242,117,10)" fg:x="414203599649" fg:w="50150450"/><text x="96.5156%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (444,332,987 samples, 0.10%)</title><rect x="96.2110%" y="437" width="0.1033%" height="15" fill="rgb(249,172,44)" fg:x="413968895543" fg:w="444332987"/><text x="96.4610%" y="447.50"></text></g><g><title>_int_free (65,195,585 samples, 0.02%)</title><rect x="96.3208%" y="293" width="0.0152%" height="15" fill="rgb(244,46,45)" fg:x="414441312782" fg:w="65195585"/><text x="96.5708%" y="303.50"></text></g><g><title>__GI___libc_free (82,246,738 samples, 0.02%)</title><rect x="96.3208%" y="309" width="0.0191%" height="15" fill="rgb(206,43,17)" fg:x="414441312782" fg:w="82246738"/><text x="96.5708%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (111,333,999 samples, 0.03%)</title><rect x="96.3143%" y="357" width="0.0259%" height="15" fill="rgb(239,218,39)" fg:x="414413228530" fg:w="111333999"/><text x="96.5643%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (108,324,972 samples, 0.03%)</title><rect x="96.3150%" y="341" width="0.0252%" height="15" fill="rgb(208,169,54)" fg:x="414416237557" fg:w="108324972"/><text x="96.5650%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (108,324,972 samples, 0.03%)</title><rect x="96.3150%" y="325" width="0.0252%" height="15" fill="rgb(247,25,42)" fg:x="414416237557" fg:w="108324972"/><text x="96.5650%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (120,361,080 samples, 0.03%)</title><rect x="96.3143%" y="421" width="0.0280%" height="15" fill="rgb(226,23,31)" fg:x="414413228530" fg:w="120361080"/><text x="96.5643%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (120,361,080 samples, 0.03%)</title><rect x="96.3143%" y="405" width="0.0280%" height="15" fill="rgb(247,16,28)" fg:x="414413228530" fg:w="120361080"/><text x="96.5643%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (120,361,080 samples, 0.03%)</title><rect x="96.3143%" y="389" width="0.0280%" height="15" fill="rgb(231,147,38)" fg:x="414413228530" fg:w="120361080"/><text x="96.5643%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (120,361,080 samples, 0.03%)</title><rect x="96.3143%" y="373" width="0.0280%" height="15" fill="rgb(253,81,48)" fg:x="414413228530" fg:w="120361080"/><text x="96.5643%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (222,667,998 samples, 0.05%)</title><rect x="96.3588%" y="405" width="0.0518%" height="15" fill="rgb(249,222,43)" fg:x="414604803249" fg:w="222667998"/><text x="96.6088%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (229,689,061 samples, 0.05%)</title><rect x="96.3588%" y="421" width="0.0534%" height="15" fill="rgb(221,3,27)" fg:x="414604803249" fg:w="229689061"/><text x="96.6088%" y="431.50"></text></g><g><title>__GI___libc_malloc (92,276,828 samples, 0.02%)</title><rect x="96.4215%" y="293" width="0.0214%" height="15" fill="rgb(228,180,5)" fg:x="414874612670" fg:w="92276828"/><text x="96.6715%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (135,406,215 samples, 0.03%)</title><rect x="96.4122%" y="341" width="0.0315%" height="15" fill="rgb(227,131,42)" fg:x="414834492310" fg:w="135406215"/><text x="96.6622%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (135,406,215 samples, 0.03%)</title><rect x="96.4122%" y="325" width="0.0315%" height="15" fill="rgb(212,3,39)" fg:x="414834492310" fg:w="135406215"/><text x="96.6622%" y="335.50"></text></g><g><title>alloc::alloc::alloc (135,406,215 samples, 0.03%)</title><rect x="96.4122%" y="309" width="0.0315%" height="15" fill="rgb(226,45,5)" fg:x="414834492310" fg:w="135406215"/><text x="96.6622%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (143,430,287 samples, 0.03%)</title><rect x="96.4122%" y="389" width="0.0333%" height="15" fill="rgb(215,167,45)" fg:x="414834492310" fg:w="143430287"/><text x="96.6622%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (143,430,287 samples, 0.03%)</title><rect x="96.4122%" y="373" width="0.0333%" height="15" fill="rgb(250,218,53)" fg:x="414834492310" fg:w="143430287"/><text x="96.6622%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (143,430,287 samples, 0.03%)</title><rect x="96.4122%" y="357" width="0.0333%" height="15" fill="rgb(207,140,0)" fg:x="414834492310" fg:w="143430287"/><text x="96.6622%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (147,442,323 samples, 0.03%)</title><rect x="96.4122%" y="421" width="0.0343%" height="15" fill="rgb(238,133,51)" fg:x="414834492310" fg:w="147442323"/><text x="96.6622%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (147,442,323 samples, 0.03%)</title><rect x="96.4122%" y="405" width="0.0343%" height="15" fill="rgb(218,203,53)" fg:x="414834492310" fg:w="147442323"/><text x="96.6622%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (106,318,954 samples, 0.02%)</title><rect x="96.4651%" y="309" width="0.0247%" height="15" fill="rgb(226,184,25)" fg:x="415062175353" fg:w="106318954"/><text x="96.7151%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (106,318,954 samples, 0.02%)</title><rect x="96.4651%" y="293" width="0.0247%" height="15" fill="rgb(231,121,21)" fg:x="415062175353" fg:w="106318954"/><text x="96.7151%" y="303.50"></text></g><g><title>alloc::alloc::alloc (106,318,954 samples, 0.02%)</title><rect x="96.4651%" y="277" width="0.0247%" height="15" fill="rgb(251,14,34)" fg:x="415062175353" fg:w="106318954"/><text x="96.7151%" y="287.50"></text></g><g><title>__GI___libc_malloc (84,252,756 samples, 0.02%)</title><rect x="96.4702%" y="261" width="0.0196%" height="15" fill="rgb(249,193,11)" fg:x="415084241551" fg:w="84252756"/><text x="96.7202%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (127,382,143 samples, 0.03%)</title><rect x="96.4607%" y="357" width="0.0296%" height="15" fill="rgb(220,172,37)" fg:x="415043118182" fg:w="127382143"/><text x="96.7107%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (127,382,143 samples, 0.03%)</title><rect x="96.4607%" y="341" width="0.0296%" height="15" fill="rgb(231,229,43)" fg:x="415043118182" fg:w="127382143"/><text x="96.7107%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (127,382,143 samples, 0.03%)</title><rect x="96.4607%" y="325" width="0.0296%" height="15" fill="rgb(250,161,5)" fg:x="415043118182" fg:w="127382143"/><text x="96.7107%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (130,391,170 samples, 0.03%)</title><rect x="96.4607%" y="389" width="0.0303%" height="15" fill="rgb(218,225,18)" fg:x="415043118182" fg:w="130391170"/><text x="96.7107%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (130,391,170 samples, 0.03%)</title><rect x="96.4607%" y="373" width="0.0303%" height="15" fill="rgb(245,45,42)" fg:x="415043118182" fg:w="130391170"/><text x="96.7107%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (250,752,250 samples, 0.06%)</title><rect x="96.4549%" y="421" width="0.0583%" height="15" fill="rgb(211,115,1)" fg:x="415018042957" fg:w="250752250"/><text x="96.7049%" y="431.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (250,752,250 samples, 0.06%)</title><rect x="96.4549%" y="405" width="0.0583%" height="15" fill="rgb(248,133,52)" fg:x="415018042957" fg:w="250752250"/><text x="96.7049%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (976,930,766 samples, 0.23%)</title><rect x="96.3143%" y="437" width="0.2270%" height="15" fill="rgb(238,100,21)" fg:x="414413228530" fg:w="976930766"/><text x="96.5643%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (74,222,666 samples, 0.02%)</title><rect x="96.5413%" y="437" width="0.0173%" height="15" fill="rgb(247,144,11)" fg:x="415390159296" fg:w="74222666"/><text x="96.7913%" y="447.50"></text></g><g><title>__GI___libc_free (47,141,423 samples, 0.01%)</title><rect x="96.5709%" y="261" width="0.0110%" height="15" fill="rgb(206,164,16)" fg:x="415517541439" fg:w="47141423"/><text x="96.8209%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (89,267,801 samples, 0.02%)</title><rect x="96.5616%" y="405" width="0.0207%" height="15" fill="rgb(222,34,3)" fg:x="415477421079" fg:w="89267801"/><text x="96.8116%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,267,801 samples, 0.02%)</title><rect x="96.5616%" y="389" width="0.0207%" height="15" fill="rgb(248,82,4)" fg:x="415477421079" fg:w="89267801"/><text x="96.8116%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (89,267,801 samples, 0.02%)</title><rect x="96.5616%" y="373" width="0.0207%" height="15" fill="rgb(228,81,46)" fg:x="415477421079" fg:w="89267801"/><text x="96.8116%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,267,801 samples, 0.02%)</title><rect x="96.5616%" y="357" width="0.0207%" height="15" fill="rgb(227,67,47)" fg:x="415477421079" fg:w="89267801"/><text x="96.8116%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (89,267,801 samples, 0.02%)</title><rect x="96.5616%" y="341" width="0.0207%" height="15" fill="rgb(215,93,53)" fg:x="415477421079" fg:w="89267801"/><text x="96.8116%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,267,801 samples, 0.02%)</title><rect x="96.5616%" y="325" width="0.0207%" height="15" fill="rgb(248,194,39)" fg:x="415477421079" fg:w="89267801"/><text x="96.8116%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (89,267,801 samples, 0.02%)</title><rect x="96.5616%" y="309" width="0.0207%" height="15" fill="rgb(215,5,19)" fg:x="415477421079" fg:w="89267801"/><text x="96.8116%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (80,240,720 samples, 0.02%)</title><rect x="96.5637%" y="293" width="0.0186%" height="15" fill="rgb(226,215,51)" fg:x="415486448160" fg:w="80240720"/><text x="96.8137%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (80,240,720 samples, 0.02%)</title><rect x="96.5637%" y="277" width="0.0186%" height="15" fill="rgb(225,56,26)" fg:x="415486448160" fg:w="80240720"/><text x="96.8137%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (154,463,386 samples, 0.04%)</title><rect x="96.5870%" y="373" width="0.0359%" height="15" fill="rgb(222,75,29)" fg:x="415586749060" fg:w="154463386"/><text x="96.8370%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (193,580,737 samples, 0.04%)</title><rect x="96.5870%" y="389" width="0.0450%" height="15" fill="rgb(236,139,6)" fg:x="415586749060" fg:w="193580737"/><text x="96.8370%" y="399.50"></text></g><g><title>chlang::board::Board::piece_type (245,737,205 samples, 0.06%)</title><rect x="96.5870%" y="405" width="0.0571%" height="15" fill="rgb(223,137,36)" fg:x="415586749060" fg:w="245737205"/><text x="96.8370%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (80,240,720 samples, 0.02%)</title><rect x="96.6441%" y="405" width="0.0186%" height="15" fill="rgb(226,99,2)" fg:x="415832486265" fg:w="80240720"/><text x="96.8941%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (77,231,693 samples, 0.02%)</title><rect x="96.6628%" y="405" width="0.0179%" height="15" fill="rgb(206,133,23)" fg:x="415912726985" fg:w="77231693"/><text x="96.9128%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (43,129,387 samples, 0.01%)</title><rect x="96.6807%" y="405" width="0.0100%" height="15" fill="rgb(243,173,15)" fg:x="415989958678" fg:w="43129387"/><text x="96.9307%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (66,198,594 samples, 0.02%)</title><rect x="96.6987%" y="405" width="0.0154%" height="15" fill="rgb(228,69,28)" fg:x="416067190371" fg:w="66198594"/><text x="96.9487%" y="415.50"></text></g><g><title>chlang::board::Board::attacked_by_color (693,079,219 samples, 0.16%)</title><rect x="96.5616%" y="421" width="0.1611%" height="15" fill="rgb(212,51,22)" fg:x="415477421079" fg:w="693079219"/><text x="96.8116%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (771,313,921 samples, 0.18%)</title><rect x="96.5586%" y="437" width="0.1793%" height="15" fill="rgb(227,113,0)" fg:x="415464381962" fg:w="771313921"/><text x="96.8086%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (124,373,116 samples, 0.03%)</title><rect x="96.7399%" y="405" width="0.0289%" height="15" fill="rgb(252,84,27)" fg:x="416244722964" fg:w="124373116"/><text x="96.9899%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (126,379,134 samples, 0.03%)</title><rect x="96.7399%" y="421" width="0.0294%" height="15" fill="rgb(223,145,39)" fg:x="416244722964" fg:w="126379134"/><text x="96.9899%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (44,132,396 samples, 0.01%)</title><rect x="96.7693%" y="421" width="0.0103%" height="15" fill="rgb(239,219,30)" fg:x="416371102098" fg:w="44132396"/><text x="97.0193%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="96.7693%" y="405" width="0.0103%" height="15" fill="rgb(224,196,39)" fg:x="416371102098" fg:w="44132396"/><text x="97.0193%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="96.7693%" y="389" width="0.0103%" height="15" fill="rgb(205,35,43)" fg:x="416371102098" fg:w="44132396"/><text x="97.0193%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="96.7693%" y="373" width="0.0103%" height="15" fill="rgb(228,201,21)" fg:x="416371102098" fg:w="44132396"/><text x="97.0193%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (44,132,396 samples, 0.01%)</title><rect x="96.7693%" y="357" width="0.0103%" height="15" fill="rgb(237,118,16)" fg:x="416371102098" fg:w="44132396"/><text x="97.0193%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (310,932,790 samples, 0.07%)</title><rect x="96.7379%" y="437" width="0.0723%" height="15" fill="rgb(241,17,19)" fg:x="416235695883" fg:w="310932790"/><text x="96.9879%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (3,360,080,150 samples, 0.78%)</title><rect x="96.0807%" y="453" width="0.7809%" height="15" fill="rgb(214,10,25)" fg:x="413408213512" fg:w="3360080150"/><text x="96.3307%" y="463.50"></text></g><g><title>_int_malloc (66,198,594 samples, 0.02%)</title><rect x="96.8677%" y="309" width="0.0154%" height="15" fill="rgb(238,37,29)" fg:x="416794371896" fg:w="66198594"/><text x="97.1177%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103,309,927 samples, 0.02%)</title><rect x="96.8642%" y="373" width="0.0240%" height="15" fill="rgb(253,83,25)" fg:x="416779326761" fg:w="103309927"/><text x="97.1142%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103,309,927 samples, 0.02%)</title><rect x="96.8642%" y="357" width="0.0240%" height="15" fill="rgb(234,192,12)" fg:x="416779326761" fg:w="103309927"/><text x="97.1142%" y="367.50"></text></g><g><title>alloc::alloc::alloc (103,309,927 samples, 0.02%)</title><rect x="96.8642%" y="341" width="0.0240%" height="15" fill="rgb(241,216,45)" fg:x="416779326761" fg:w="103309927"/><text x="97.1142%" y="351.50"></text></g><g><title>__GI___libc_malloc (96,288,864 samples, 0.02%)</title><rect x="96.8658%" y="325" width="0.0224%" height="15" fill="rgb(242,22,33)" fg:x="416786347824" fg:w="96288864"/><text x="97.1158%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (120,361,080 samples, 0.03%)</title><rect x="96.8616%" y="421" width="0.0280%" height="15" fill="rgb(231,105,49)" fg:x="416768293662" fg:w="120361080"/><text x="97.1116%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (120,361,080 samples, 0.03%)</title><rect x="96.8616%" y="405" width="0.0280%" height="15" fill="rgb(218,204,15)" fg:x="416768293662" fg:w="120361080"/><text x="97.1116%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (120,361,080 samples, 0.03%)</title><rect x="96.8616%" y="389" width="0.0280%" height="15" fill="rgb(235,138,41)" fg:x="416768293662" fg:w="120361080"/><text x="97.1116%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (121,364,089 samples, 0.03%)</title><rect x="96.8616%" y="453" width="0.0282%" height="15" fill="rgb(246,0,9)" fg:x="416768293662" fg:w="121364089"/><text x="97.1116%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (121,364,089 samples, 0.03%)</title><rect x="96.8616%" y="437" width="0.0282%" height="15" fill="rgb(210,74,4)" fg:x="416768293662" fg:w="121364089"/><text x="97.1116%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (170,511,530 samples, 0.04%)</title><rect x="96.8898%" y="453" width="0.0396%" height="15" fill="rgb(250,60,41)" fg:x="416889657751" fg:w="170511530"/><text x="97.1398%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (4,972,918,622 samples, 1.16%)</title><rect x="95.8266%" y="469" width="1.1558%" height="15" fill="rgb(220,115,12)" fg:x="412314933702" fg:w="4972918622"/><text x="96.0766%" y="479.50"></text></g><g><title>_int_malloc (98,294,882 samples, 0.02%)</title><rect x="96.9831%" y="325" width="0.0228%" height="15" fill="rgb(237,100,13)" fg:x="417290861351" fg:w="98294882"/><text x="97.2331%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="469" width="0.0261%" height="15" fill="rgb(213,55,26)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="453" width="0.0261%" height="15" fill="rgb(216,17,4)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="437" width="0.0261%" height="15" fill="rgb(220,153,47)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="421" width="0.0261%" height="15" fill="rgb(215,131,9)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="405" width="0.0261%" height="15" fill="rgb(233,46,42)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="389" width="0.0261%" height="15" fill="rgb(226,86,7)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="373" width="0.0261%" height="15" fill="rgb(239,226,21)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="383.50"></text></g><g><title>alloc::alloc::alloc (112,337,008 samples, 0.03%)</title><rect x="96.9824%" y="357" width="0.0261%" height="15" fill="rgb(244,137,22)" fg:x="417287852324" fg:w="112337008"/><text x="97.2324%" y="367.50"></text></g><g><title>__GI___libc_malloc (109,327,981 samples, 0.03%)</title><rect x="96.9831%" y="341" width="0.0254%" height="15" fill="rgb(211,139,35)" fg:x="417290861351" fg:w="109327981"/><text x="97.2331%" y="351.50"></text></g><g><title>chlang::board::Board::get_valid_moves (54,663,990,500 samples, 12.70%)</title><rect x="84.3233%" y="485" width="12.7045%" height="15" fill="rgb(214,62,50)" fg:x="362819448579" fg:w="54663990500"/><text x="84.5733%" y="495.50">chlang::board::Boar..</text></g><g><title>chlang::board::Board::get_game_state (61,719,155,806 samples, 14.34%)</title><rect x="82.6869%" y="501" width="14.3442%" height="15" fill="rgb(212,113,44)" fg:x="355778325399" fg:w="61719155806"/><text x="82.9369%" y="511.50">chlang::board::Board::..</text></g><g><title>chlang::tree_evaluator::eval (415,733,188,374 samples, 96.62%)</title><rect x="0.4403%" y="517" width="96.6211%" height="15" fill="rgb(226,150,43)" fg:x="1894684001" fg:w="415733188374"/><text x="0.6903%" y="527.50">chlang::tree_evaluator::eval</text></g><g><title>core::num::&lt;impl u64&gt;::pow (71,213,639 samples, 0.02%)</title><rect x="97.0824%" y="485" width="0.0166%" height="15" fill="rgb(250,71,37)" fg:x="417718143185" fg:w="71213639"/><text x="97.3324%" y="495.50"></text></g><g><title>chlang::board::Position::bitboard (72,216,648 samples, 0.02%)</title><rect x="97.0824%" y="501" width="0.0168%" height="15" fill="rgb(219,76,19)" fg:x="417718143185" fg:w="72216648"/><text x="97.3324%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (206,619,854 samples, 0.05%)</title><rect x="97.0992%" y="469" width="0.0480%" height="15" fill="rgb(250,39,11)" fg:x="417790359833" fg:w="206619854"/><text x="97.3492%" y="479.50"></text></g><g><title>chlang::board::Position::bitboard (215,646,935 samples, 0.05%)</title><rect x="97.0992%" y="485" width="0.0501%" height="15" fill="rgb(230,64,31)" fg:x="417790359833" fg:w="215646935"/><text x="97.3492%" y="495.50"></text></g><g><title>chlang::board::Board::piece_type (259,779,331 samples, 0.06%)</title><rect x="97.0992%" y="501" width="0.0604%" height="15" fill="rgb(208,222,23)" fg:x="417790359833" fg:w="259779331"/><text x="97.3492%" y="511.50"></text></g><g><title>_int_free (54,162,486 samples, 0.01%)</title><rect x="97.1733%" y="309" width="0.0126%" height="15" fill="rgb(227,125,18)" fg:x="418109316695" fg:w="54162486"/><text x="97.4233%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (119,358,071 samples, 0.03%)</title><rect x="97.1614%" y="469" width="0.0277%" height="15" fill="rgb(234,210,9)" fg:x="418058163236" fg:w="119358071"/><text x="97.4114%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119,358,071 samples, 0.03%)</title><rect x="97.1614%" y="453" width="0.0277%" height="15" fill="rgb(217,127,24)" fg:x="418058163236" fg:w="119358071"/><text x="97.4114%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (119,358,071 samples, 0.03%)</title><rect x="97.1614%" y="437" width="0.0277%" height="15" fill="rgb(239,141,48)" fg:x="418058163236" fg:w="119358071"/><text x="97.4114%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119,358,071 samples, 0.03%)</title><rect x="97.1614%" y="421" width="0.0277%" height="15" fill="rgb(227,109,8)" fg:x="418058163236" fg:w="119358071"/><text x="97.4114%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (119,358,071 samples, 0.03%)</title><rect x="97.1614%" y="405" width="0.0277%" height="15" fill="rgb(235,184,23)" fg:x="418058163236" fg:w="119358071"/><text x="97.4114%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119,358,071 samples, 0.03%)</title><rect x="97.1614%" y="389" width="0.0277%" height="15" fill="rgb(227,226,48)" fg:x="418058163236" fg:w="119358071"/><text x="97.4114%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (119,358,071 samples, 0.03%)</title><rect x="97.1614%" y="373" width="0.0277%" height="15" fill="rgb(206,150,11)" fg:x="418058163236" fg:w="119358071"/><text x="97.4114%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (114,343,026 samples, 0.03%)</title><rect x="97.1626%" y="357" width="0.0266%" height="15" fill="rgb(254,2,33)" fg:x="418063178281" fg:w="114343026"/><text x="97.4126%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (114,343,026 samples, 0.03%)</title><rect x="97.1626%" y="341" width="0.0266%" height="15" fill="rgb(243,160,20)" fg:x="418063178281" fg:w="114343026"/><text x="97.4126%" y="351.50"></text></g><g><title>__GI___libc_free (68,204,612 samples, 0.02%)</title><rect x="97.1733%" y="325" width="0.0159%" height="15" fill="rgb(218,208,30)" fg:x="418109316695" fg:w="68204612"/><text x="97.4233%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (292,878,628 samples, 0.07%)</title><rect x="97.1989%" y="437" width="0.0681%" height="15" fill="rgb(224,120,49)" fg:x="418219647685" fg:w="292878628"/><text x="97.4489%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (354,062,177 samples, 0.08%)</title><rect x="97.1989%" y="453" width="0.0823%" height="15" fill="rgb(246,12,2)" fg:x="418219647685" fg:w="354062177"/><text x="97.4489%" y="463.50"></text></g><g><title>chlang::board::Board::piece_type (410,230,681 samples, 0.10%)</title><rect x="97.1989%" y="469" width="0.0953%" height="15" fill="rgb(236,117,3)" fg:x="418219647685" fg:w="410230681"/><text x="97.4489%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (69,207,621 samples, 0.02%)</title><rect x="97.2957%" y="437" width="0.0161%" height="15" fill="rgb(216,128,52)" fg:x="418635896420" fg:w="69207621"/><text x="97.5457%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (71,213,639 samples, 0.02%)</title><rect x="97.2957%" y="453" width="0.0166%" height="15" fill="rgb(246,145,19)" fg:x="418635896420" fg:w="71213639"/><text x="97.5457%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (134,403,206 samples, 0.03%)</title><rect x="97.2943%" y="469" width="0.0312%" height="15" fill="rgb(222,11,46)" fg:x="418629878366" fg:w="134403206"/><text x="97.5443%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (139,418,251 samples, 0.03%)</title><rect x="97.3255%" y="469" width="0.0324%" height="15" fill="rgb(245,82,36)" fg:x="418764281572" fg:w="139418251"/><text x="97.5755%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (44,132,396 samples, 0.01%)</title><rect x="97.3666%" y="469" width="0.0103%" height="15" fill="rgb(250,73,51)" fg:x="418940811156" fg:w="44132396"/><text x="97.6166%" y="479.50"></text></g><g><title>chlang::board::Position::bitboard (47,141,423 samples, 0.01%)</title><rect x="97.3775%" y="453" width="0.0110%" height="15" fill="rgb(221,189,23)" fg:x="418987952579" fg:w="47141423"/><text x="97.6275%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (47,141,423 samples, 0.01%)</title><rect x="97.3775%" y="437" width="0.0110%" height="15" fill="rgb(210,33,7)" fg:x="418987952579" fg:w="47141423"/><text x="97.6275%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (98,294,882 samples, 0.02%)</title><rect x="97.3768%" y="469" width="0.0228%" height="15" fill="rgb(210,107,22)" fg:x="418984943552" fg:w="98294882"/><text x="97.6268%" y="479.50"></text></g><g><title>chlang::board::Board::attacked_by_color (1,083,249,720 samples, 0.25%)</title><rect x="97.1614%" y="485" width="0.2518%" height="15" fill="rgb(222,116,37)" fg:x="418058163236" fg:w="1083249720"/><text x="97.4114%" y="495.50"></text></g><g><title>chlang::board::Board::is_valid (1,086,258,747 samples, 0.25%)</title><rect x="97.1614%" y="501" width="0.2525%" height="15" fill="rgb(254,17,48)" fg:x="418058163236" fg:w="1086258747"/><text x="97.4114%" y="511.50"></text></g><g><title>chlang::board::Position::bitboard (89,267,801 samples, 0.02%)</title><rect x="97.4174%" y="469" width="0.0207%" height="15" fill="rgb(224,36,32)" fg:x="419159467118" fg:w="89267801"/><text x="97.6674%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (89,267,801 samples, 0.02%)</title><rect x="97.4174%" y="453" width="0.0207%" height="15" fill="rgb(232,90,46)" fg:x="419159467118" fg:w="89267801"/><text x="97.6674%" y="463.50"></text></g><g><title>chlang::board::Board::piece_type (97,291,873 samples, 0.02%)</title><rect x="97.4174%" y="485" width="0.0226%" height="15" fill="rgb(241,66,40)" fg:x="419159467118" fg:w="97291873"/><text x="97.6674%" y="495.50"></text></g><g><title>chlang::board::Position::bitboard (46,138,414 samples, 0.01%)</title><rect x="97.4409%" y="469" width="0.0107%" height="15" fill="rgb(249,184,29)" fg:x="419260771027" fg:w="46138414"/><text x="97.6909%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (46,138,414 samples, 0.01%)</title><rect x="97.4409%" y="453" width="0.0107%" height="15" fill="rgb(231,181,1)" fg:x="419260771027" fg:w="46138414"/><text x="97.6909%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (99,297,891 samples, 0.02%)</title><rect x="97.4400%" y="485" width="0.0231%" height="15" fill="rgb(224,94,2)" fg:x="419256758991" fg:w="99297891"/><text x="97.6900%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (64,192,576 samples, 0.01%)</title><rect x="97.4631%" y="485" width="0.0149%" height="15" fill="rgb(229,170,15)" fg:x="419356056882" fg:w="64192576"/><text x="97.7131%" y="495.50"></text></g><g><title>chlang::board::Board::attacked_by_color (57,171,513 samples, 0.01%)</title><rect x="97.4829%" y="469" width="0.0133%" height="15" fill="rgb(240,127,35)" fg:x="419441312647" fg:w="57171513"/><text x="97.7329%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (77,231,693 samples, 0.02%)</title><rect x="97.4824%" y="485" width="0.0179%" height="15" fill="rgb(248,196,34)" fg:x="419439306629" fg:w="77231693"/><text x="97.7324%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (45,135,405 samples, 0.01%)</title><rect x="97.5004%" y="453" width="0.0105%" height="15" fill="rgb(236,137,7)" fg:x="419516538322" fg:w="45135405"/><text x="97.7504%" y="463.50"></text></g><g><title>chlang::board::Position::bitboard (47,141,423 samples, 0.01%)</title><rect x="97.5004%" y="469" width="0.0110%" height="15" fill="rgb(235,127,16)" fg:x="419516538322" fg:w="47141423"/><text x="97.7504%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (78,234,702 samples, 0.02%)</title><rect x="97.5004%" y="485" width="0.0182%" height="15" fill="rgb(250,192,54)" fg:x="419516538322" fg:w="78234702"/><text x="97.7504%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (489,468,392 samples, 0.11%)</title><rect x="97.4139%" y="501" width="0.1138%" height="15" fill="rgb(218,98,20)" fg:x="419144421983" fg:w="489468392"/><text x="97.6639%" y="511.50"></text></g><g><title>chlang::board::Board::make_move (2,097,291,819 samples, 0.49%)</title><rect x="97.0670%" y="517" width="0.4874%" height="15" fill="rgb(230,176,47)" fg:x="417651944591" fg:w="2097291819"/><text x="97.3170%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (55,165,495 samples, 0.01%)</title><rect x="97.5652%" y="501" width="0.0128%" height="15" fill="rgb(244,2,33)" fg:x="419795374824" fg:w="55165495"/><text x="97.8152%" y="511.50"></text></g><g><title>chlang::board::Position::bitboard (95,285,855 samples, 0.02%)</title><rect x="97.5801%" y="469" width="0.0221%" height="15" fill="rgb(231,100,17)" fg:x="419859567400" fg:w="95285855"/><text x="97.8301%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (95,285,855 samples, 0.02%)</title><rect x="97.5801%" y="453" width="0.0221%" height="15" fill="rgb(245,23,12)" fg:x="419859567400" fg:w="95285855"/><text x="97.8301%" y="463.50"></text></g><g><title>chlang::board::Board::piece_type (110,330,990 samples, 0.03%)</title><rect x="97.5801%" y="485" width="0.0256%" height="15" fill="rgb(249,55,22)" fg:x="419859567400" fg:w="110330990"/><text x="97.8301%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (44,132,396 samples, 0.01%)</title><rect x="97.6057%" y="485" width="0.0103%" height="15" fill="rgb(207,134,9)" fg:x="419969898390" fg:w="44132396"/><text x="97.8557%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (110,330,990 samples, 0.03%)</title><rect x="97.6160%" y="485" width="0.0256%" height="15" fill="rgb(218,134,0)" fg:x="420014030786" fg:w="110330990"/><text x="97.8660%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (367,101,294 samples, 0.09%)</title><rect x="97.5789%" y="501" width="0.0853%" height="15" fill="rgb(213,212,33)" fg:x="419854552355" fg:w="367101294"/><text x="97.8289%" y="511.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (535,606,806 samples, 0.12%)</title><rect x="97.5579%" y="517" width="0.1245%" height="15" fill="rgb(252,106,18)" fg:x="419764281545" fg:w="535606806"/><text x="97.8079%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (57,171,513 samples, 0.01%)</title><rect x="97.6957%" y="341" width="0.0133%" height="15" fill="rgb(208,126,42)" fg:x="420357059864" fg:w="57171513"/><text x="97.9457%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (57,171,513 samples, 0.01%)</title><rect x="97.6957%" y="325" width="0.0133%" height="15" fill="rgb(246,175,29)" fg:x="420357059864" fg:w="57171513"/><text x="97.9457%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (57,171,513 samples, 0.01%)</title><rect x="97.6957%" y="309" width="0.0133%" height="15" fill="rgb(215,13,50)" fg:x="420357059864" fg:w="57171513"/><text x="97.9457%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (57,171,513 samples, 0.01%)</title><rect x="97.6957%" y="293" width="0.0133%" height="15" fill="rgb(216,172,15)" fg:x="420357059864" fg:w="57171513"/><text x="97.9457%" y="303.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (48,144,432 samples, 0.01%)</title><rect x="97.7090%" y="341" width="0.0112%" height="15" fill="rgb(212,103,13)" fg:x="420414231377" fg:w="48144432"/><text x="97.9590%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (48,144,432 samples, 0.01%)</title><rect x="97.7090%" y="325" width="0.0112%" height="15" fill="rgb(231,171,36)" fg:x="420414231377" fg:w="48144432"/><text x="97.9590%" y="335.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (111,333,999 samples, 0.03%)</title><rect x="97.6957%" y="373" width="0.0259%" height="15" fill="rgb(250,123,20)" fg:x="420357059864" fg:w="111333999"/><text x="97.9457%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (111,333,999 samples, 0.03%)</title><rect x="97.6957%" y="357" width="0.0259%" height="15" fill="rgb(212,53,50)" fg:x="420357059864" fg:w="111333999"/><text x="97.9457%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (189,568,701 samples, 0.04%)</title><rect x="97.6892%" y="421" width="0.0441%" height="15" fill="rgb(243,54,12)" fg:x="420328975612" fg:w="189568701"/><text x="97.9392%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (189,568,701 samples, 0.04%)</title><rect x="97.6892%" y="405" width="0.0441%" height="15" fill="rgb(234,101,34)" fg:x="420328975612" fg:w="189568701"/><text x="97.9392%" y="415.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (189,568,701 samples, 0.04%)</title><rect x="97.6892%" y="389" width="0.0441%" height="15" fill="rgb(254,67,22)" fg:x="420328975612" fg:w="189568701"/><text x="97.9392%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (225,677,025 samples, 0.05%)</title><rect x="97.6892%" y="453" width="0.0524%" height="15" fill="rgb(250,35,47)" fg:x="420328975612" fg:w="225677025"/><text x="97.9392%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (225,677,025 samples, 0.05%)</title><rect x="97.6892%" y="437" width="0.0524%" height="15" fill="rgb(226,126,38)" fg:x="420328975612" fg:w="225677025"/><text x="97.9392%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (43,129,387 samples, 0.01%)</title><rect x="97.7537%" y="165" width="0.0100%" height="15" fill="rgb(216,138,53)" fg:x="420606809105" fg:w="43129387"/><text x="98.0037%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (59,177,531 samples, 0.01%)</title><rect x="97.7535%" y="213" width="0.0138%" height="15" fill="rgb(246,199,43)" fg:x="420605806096" fg:w="59177531"/><text x="98.0035%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (59,177,531 samples, 0.01%)</title><rect x="97.7535%" y="197" width="0.0138%" height="15" fill="rgb(232,125,11)" fg:x="420605806096" fg:w="59177531"/><text x="98.0035%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59,177,531 samples, 0.01%)</title><rect x="97.7535%" y="181" width="0.0138%" height="15" fill="rgb(218,219,45)" fg:x="420605806096" fg:w="59177531"/><text x="98.0035%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (60,180,540 samples, 0.01%)</title><rect x="97.7535%" y="229" width="0.0140%" height="15" fill="rgb(216,102,54)" fg:x="420605806096" fg:w="60180540"/><text x="98.0035%" y="239.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (107,321,963 samples, 0.02%)</title><rect x="97.7535%" y="261" width="0.0249%" height="15" fill="rgb(250,228,7)" fg:x="420605806096" fg:w="107321963"/><text x="98.0035%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (107,321,963 samples, 0.02%)</title><rect x="97.7535%" y="245" width="0.0249%" height="15" fill="rgb(226,125,25)" fg:x="420605806096" fg:w="107321963"/><text x="98.0035%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (158,475,422 samples, 0.04%)</title><rect x="97.7479%" y="309" width="0.0368%" height="15" fill="rgb(224,165,27)" fg:x="420581733880" fg:w="158475422"/><text x="97.9979%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (158,475,422 samples, 0.04%)</title><rect x="97.7479%" y="293" width="0.0368%" height="15" fill="rgb(233,86,3)" fg:x="420581733880" fg:w="158475422"/><text x="97.9979%" y="303.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (158,475,422 samples, 0.04%)</title><rect x="97.7479%" y="277" width="0.0368%" height="15" fill="rgb(228,116,20)" fg:x="420581733880" fg:w="158475422"/><text x="97.9979%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (176,529,584 samples, 0.04%)</title><rect x="97.7479%" y="373" width="0.0410%" height="15" fill="rgb(209,192,17)" fg:x="420581733880" fg:w="176529584"/><text x="97.9979%" y="383.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (176,529,584 samples, 0.04%)</title><rect x="97.7479%" y="357" width="0.0410%" height="15" fill="rgb(224,88,34)" fg:x="420581733880" fg:w="176529584"/><text x="97.9979%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (176,529,584 samples, 0.04%)</title><rect x="97.7479%" y="341" width="0.0410%" height="15" fill="rgb(233,38,6)" fg:x="420581733880" fg:w="176529584"/><text x="97.9979%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (176,529,584 samples, 0.04%)</title><rect x="97.7479%" y="325" width="0.0410%" height="15" fill="rgb(212,59,30)" fg:x="420581733880" fg:w="176529584"/><text x="97.9979%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (207,622,863 samples, 0.05%)</title><rect x="97.7416%" y="405" width="0.0483%" height="15" fill="rgb(213,80,3)" fg:x="420554652637" fg:w="207622863"/><text x="97.9916%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (206,619,854 samples, 0.05%)</title><rect x="97.7419%" y="389" width="0.0480%" height="15" fill="rgb(251,178,7)" fg:x="420555655646" fg:w="206619854"/><text x="97.9919%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (209,628,881 samples, 0.05%)</title><rect x="97.7416%" y="421" width="0.0487%" height="15" fill="rgb(213,154,26)" fg:x="420554652637" fg:w="209628881"/><text x="97.9916%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (210,631,890 samples, 0.05%)</title><rect x="97.7416%" y="453" width="0.0490%" height="15" fill="rgb(238,165,49)" fg:x="420554652637" fg:w="210631890"/><text x="97.9916%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (210,631,890 samples, 0.05%)</title><rect x="97.7416%" y="437" width="0.0490%" height="15" fill="rgb(248,91,46)" fg:x="420554652637" fg:w="210631890"/><text x="97.9916%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (464,393,167 samples, 0.11%)</title><rect x="97.6836%" y="469" width="0.1079%" height="15" fill="rgb(244,21,52)" fg:x="420304903396" fg:w="464393167"/><text x="97.9336%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (465,396,176 samples, 0.11%)</title><rect x="97.6836%" y="485" width="0.1082%" height="15" fill="rgb(247,122,20)" fg:x="420304903396" fg:w="465396176"/><text x="97.9336%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (89,267,801 samples, 0.02%)</title><rect x="97.8015%" y="245" width="0.0207%" height="15" fill="rgb(218,27,9)" fg:x="420812425950" fg:w="89267801"/><text x="98.0515%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (89,267,801 samples, 0.02%)</title><rect x="97.8015%" y="229" width="0.0207%" height="15" fill="rgb(246,7,6)" fg:x="420812425950" fg:w="89267801"/><text x="98.0515%" y="239.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (89,267,801 samples, 0.02%)</title><rect x="97.8015%" y="213" width="0.0207%" height="15" fill="rgb(227,135,54)" fg:x="420812425950" fg:w="89267801"/><text x="98.0515%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (107,321,963 samples, 0.02%)</title><rect x="97.8015%" y="277" width="0.0249%" height="15" fill="rgb(247,14,11)" fg:x="420812425950" fg:w="107321963"/><text x="98.0515%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (107,321,963 samples, 0.02%)</title><rect x="97.8015%" y="261" width="0.0249%" height="15" fill="rgb(206,149,34)" fg:x="420812425950" fg:w="107321963"/><text x="98.0515%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="421" width="0.0275%" height="15" fill="rgb(227,228,4)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="405" width="0.0275%" height="15" fill="rgb(238,218,28)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="389" width="0.0275%" height="15" fill="rgb(252,86,40)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="373" width="0.0275%" height="15" fill="rgb(251,225,11)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="383.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="357" width="0.0275%" height="15" fill="rgb(206,46,49)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="367.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="341" width="0.0275%" height="15" fill="rgb(245,128,24)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="325" width="0.0275%" height="15" fill="rgb(219,177,34)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="309" width="0.0275%" height="15" fill="rgb(218,60,48)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (118,355,062 samples, 0.03%)</title><rect x="97.8013%" y="293" width="0.0275%" height="15" fill="rgb(221,11,5)" fg:x="420811422941" fg:w="118355062"/><text x="98.0513%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (134,403,206 samples, 0.03%)</title><rect x="97.7978%" y="453" width="0.0312%" height="15" fill="rgb(220,148,13)" fg:x="420796377806" fg:w="134403206"/><text x="98.0478%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (134,403,206 samples, 0.03%)</title><rect x="97.7978%" y="437" width="0.0312%" height="15" fill="rgb(210,16,3)" fg:x="420796377806" fg:w="134403206"/><text x="98.0478%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (144,433,296 samples, 0.03%)</title><rect x="97.7969%" y="485" width="0.0336%" height="15" fill="rgb(236,80,2)" fg:x="420792365770" fg:w="144433296"/><text x="98.0469%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (144,433,296 samples, 0.03%)</title><rect x="97.7969%" y="469" width="0.0336%" height="15" fill="rgb(239,129,19)" fg:x="420792365770" fg:w="144433296"/><text x="98.0469%" y="479.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (647,943,814 samples, 0.15%)</title><rect x="97.6833%" y="501" width="0.1506%" height="15" fill="rgb(220,106,35)" fg:x="420303900387" fg:w="647943814"/><text x="97.9333%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (52,156,468 samples, 0.01%)</title><rect x="97.8428%" y="469" width="0.0121%" height="15" fill="rgb(252,139,45)" fg:x="420989958543" fg:w="52156468"/><text x="98.0928%" y="479.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (52,156,468 samples, 0.01%)</title><rect x="97.8428%" y="453" width="0.0121%" height="15" fill="rgb(229,8,36)" fg:x="420989958543" fg:w="52156468"/><text x="98.0928%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (52,156,468 samples, 0.01%)</title><rect x="97.8428%" y="437" width="0.0121%" height="15" fill="rgb(230,126,33)" fg:x="420989958543" fg:w="52156468"/><text x="98.0928%" y="447.50"></text></g><g><title>__GI___libc_free (58,174,522 samples, 0.01%)</title><rect x="97.8598%" y="373" width="0.0135%" height="15" fill="rgb(239,140,21)" fg:x="421063178200" fg:w="58174522"/><text x="98.1098%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (81,243,729 samples, 0.02%)</title><rect x="97.8549%" y="469" width="0.0189%" height="15" fill="rgb(254,104,9)" fg:x="421042115011" fg:w="81243729"/><text x="98.1049%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (81,243,729 samples, 0.02%)</title><rect x="97.8549%" y="453" width="0.0189%" height="15" fill="rgb(239,52,14)" fg:x="421042115011" fg:w="81243729"/><text x="98.1049%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81,243,729 samples, 0.02%)</title><rect x="97.8549%" y="437" width="0.0189%" height="15" fill="rgb(208,227,44)" fg:x="421042115011" fg:w="81243729"/><text x="98.1049%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (81,243,729 samples, 0.02%)</title><rect x="97.8549%" y="421" width="0.0189%" height="15" fill="rgb(246,18,19)" fg:x="421042115011" fg:w="81243729"/><text x="98.1049%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (78,234,702 samples, 0.02%)</title><rect x="97.8556%" y="405" width="0.0182%" height="15" fill="rgb(235,228,25)" fg:x="421045124038" fg:w="78234702"/><text x="98.1056%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (78,234,702 samples, 0.02%)</title><rect x="97.8556%" y="389" width="0.0182%" height="15" fill="rgb(240,156,20)" fg:x="421045124038" fg:w="78234702"/><text x="98.1056%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (174,523,566 samples, 0.04%)</title><rect x="97.8810%" y="453" width="0.0406%" height="15" fill="rgb(224,8,20)" fg:x="421154452019" fg:w="174523566"/><text x="98.1310%" y="463.50"></text></g><g><title>chlang::board::Position::bitboard (177,532,593 samples, 0.04%)</title><rect x="97.8810%" y="469" width="0.0413%" height="15" fill="rgb(214,12,52)" fg:x="421154452019" fg:w="177532593"/><text x="98.1310%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (578,736,193 samples, 0.13%)</title><rect x="97.9225%" y="437" width="0.1345%" height="15" fill="rgb(211,220,47)" fg:x="421332987621" fg:w="578736193"/><text x="98.1725%" y="447.50"></text></g><g><title>chlang::board::Position::bitboard (606,820,445 samples, 0.14%)</title><rect x="97.9225%" y="453" width="0.1410%" height="15" fill="rgb(250,173,5)" fg:x="421332987621" fg:w="606820445"/><text x="98.1725%" y="463.50"></text></g><g><title>chlang::board::Board::piece_type (718,154,444 samples, 0.17%)</title><rect x="97.9225%" y="469" width="0.1669%" height="15" fill="rgb(250,125,52)" fg:x="421332987621" fg:w="718154444"/><text x="98.1725%" y="479.50"></text></g><g><title>__rust_dealloc (67,201,603 samples, 0.02%)</title><rect x="98.0971%" y="293" width="0.0156%" height="15" fill="rgb(209,133,18)" fg:x="422084241362" fg:w="67201603"/><text x="98.3471%" y="303.50"></text></g><g><title>_int_free (145,436,305 samples, 0.03%)</title><rect x="98.1204%" y="277" width="0.0338%" height="15" fill="rgb(216,173,22)" fg:x="422184542262" fg:w="145436305"/><text x="98.3704%" y="287.50"></text></g><g><title>__GI___libc_free (207,622,863 samples, 0.05%)</title><rect x="98.1204%" y="293" width="0.0483%" height="15" fill="rgb(205,3,22)" fg:x="422184542262" fg:w="207622863"/><text x="98.3704%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (317,953,853 samples, 0.07%)</title><rect x="98.0950%" y="437" width="0.0739%" height="15" fill="rgb(248,22,20)" fg:x="422075214281" fg:w="317953853"/><text x="98.3450%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (317,953,853 samples, 0.07%)</title><rect x="98.0950%" y="421" width="0.0739%" height="15" fill="rgb(233,6,29)" fg:x="422075214281" fg:w="317953853"/><text x="98.3450%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (317,953,853 samples, 0.07%)</title><rect x="98.0950%" y="405" width="0.0739%" height="15" fill="rgb(240,22,54)" fg:x="422075214281" fg:w="317953853"/><text x="98.3450%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (317,953,853 samples, 0.07%)</title><rect x="98.0950%" y="389" width="0.0739%" height="15" fill="rgb(231,133,32)" fg:x="422075214281" fg:w="317953853"/><text x="98.3450%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (317,953,853 samples, 0.07%)</title><rect x="98.0950%" y="373" width="0.0739%" height="15" fill="rgb(248,193,4)" fg:x="422075214281" fg:w="317953853"/><text x="98.3450%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (317,953,853 samples, 0.07%)</title><rect x="98.0950%" y="357" width="0.0739%" height="15" fill="rgb(211,178,46)" fg:x="422075214281" fg:w="317953853"/><text x="98.3450%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (317,953,853 samples, 0.07%)</title><rect x="98.0950%" y="341" width="0.0739%" height="15" fill="rgb(224,5,42)" fg:x="422075214281" fg:w="317953853"/><text x="98.3450%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (308,926,772 samples, 0.07%)</title><rect x="98.0971%" y="325" width="0.0718%" height="15" fill="rgb(239,176,25)" fg:x="422084241362" fg:w="308926772"/><text x="98.3471%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (308,926,772 samples, 0.07%)</title><rect x="98.0971%" y="309" width="0.0718%" height="15" fill="rgb(245,187,50)" fg:x="422084241362" fg:w="308926772"/><text x="98.3471%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (63,189,567 samples, 0.01%)</title><rect x="98.1689%" y="437" width="0.0147%" height="15" fill="rgb(248,24,15)" fg:x="422393168134" fg:w="63189567"/><text x="98.4189%" y="447.50"></text></g><g><title>chlang::cmove::Move::to (69,207,621 samples, 0.02%)</title><rect x="98.1836%" y="437" width="0.0161%" height="15" fill="rgb(205,166,13)" fg:x="422456357701" fg:w="69207621"/><text x="98.4336%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (952,858,550 samples, 0.22%)</title><rect x="98.1997%" y="405" width="0.2215%" height="15" fill="rgb(208,114,23)" fg:x="422525565322" fg:w="952858550"/><text x="98.4497%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (1,104,312,909 samples, 0.26%)</title><rect x="98.1997%" y="421" width="0.2567%" height="15" fill="rgb(239,127,18)" fg:x="422525565322" fg:w="1104312909"/><text x="98.4497%" y="431.50"></text></g><g><title>chlang::board::Board::piece_type (1,263,791,340 samples, 0.29%)</title><rect x="98.1997%" y="437" width="0.2937%" height="15" fill="rgb(219,154,28)" fg:x="422525565322" fg:w="1263791340"/><text x="98.4497%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (275,827,475 samples, 0.06%)</title><rect x="98.4976%" y="405" width="0.0641%" height="15" fill="rgb(225,157,23)" fg:x="423807410824" fg:w="275827475"/><text x="98.7476%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (277,833,493 samples, 0.06%)</title><rect x="98.4976%" y="421" width="0.0646%" height="15" fill="rgb(219,8,6)" fg:x="423807410824" fg:w="277833493"/><text x="98.7476%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56,168,504 samples, 0.01%)</title><rect x="98.5622%" y="341" width="0.0131%" height="15" fill="rgb(212,47,6)" fg:x="424085244317" fg:w="56168504"/><text x="98.8122%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56,168,504 samples, 0.01%)</title><rect x="98.5622%" y="325" width="0.0131%" height="15" fill="rgb(224,190,4)" fg:x="424085244317" fg:w="56168504"/><text x="98.8122%" y="335.50"></text></g><g><title>alloc::alloc::alloc (56,168,504 samples, 0.01%)</title><rect x="98.5622%" y="309" width="0.0131%" height="15" fill="rgb(239,183,29)" fg:x="424085244317" fg:w="56168504"/><text x="98.8122%" y="319.50"></text></g><g><title>__GI___libc_malloc (44,132,396 samples, 0.01%)</title><rect x="98.5650%" y="293" width="0.0103%" height="15" fill="rgb(213,57,7)" fg:x="424097280425" fg:w="44132396"/><text x="98.8150%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58,174,522 samples, 0.01%)</title><rect x="98.5622%" y="389" width="0.0135%" height="15" fill="rgb(216,148,1)" fg:x="424085244317" fg:w="58174522"/><text x="98.8122%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (58,174,522 samples, 0.01%)</title><rect x="98.5622%" y="373" width="0.0135%" height="15" fill="rgb(236,182,29)" fg:x="424085244317" fg:w="58174522"/><text x="98.8122%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (58,174,522 samples, 0.01%)</title><rect x="98.5622%" y="357" width="0.0135%" height="15" fill="rgb(244,120,48)" fg:x="424085244317" fg:w="58174522"/><text x="98.8122%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (59,177,531 samples, 0.01%)</title><rect x="98.5622%" y="421" width="0.0138%" height="15" fill="rgb(206,71,34)" fg:x="424085244317" fg:w="59177531"/><text x="98.8122%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (59,177,531 samples, 0.01%)</title><rect x="98.5622%" y="405" width="0.0138%" height="15" fill="rgb(242,32,6)" fg:x="424085244317" fg:w="59177531"/><text x="98.8122%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (490,471,401 samples, 0.11%)</title><rect x="98.4934%" y="437" width="0.1140%" height="15" fill="rgb(241,35,3)" fg:x="423789356662" fg:w="490471401"/><text x="98.7434%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (64,192,576 samples, 0.01%)</title><rect x="98.6074%" y="357" width="0.0149%" height="15" fill="rgb(222,62,19)" fg:x="424279828063" fg:w="64192576"/><text x="98.8574%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63,189,567 samples, 0.01%)</title><rect x="98.6076%" y="341" width="0.0147%" height="15" fill="rgb(223,110,41)" fg:x="424280831072" fg:w="63189567"/><text x="98.8576%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (63,189,567 samples, 0.01%)</title><rect x="98.6076%" y="325" width="0.0147%" height="15" fill="rgb(208,224,4)" fg:x="424280831072" fg:w="63189567"/><text x="98.8576%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (66,198,594 samples, 0.02%)</title><rect x="98.6074%" y="421" width="0.0154%" height="15" fill="rgb(241,137,19)" fg:x="424279828063" fg:w="66198594"/><text x="98.8574%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (66,198,594 samples, 0.02%)</title><rect x="98.6074%" y="405" width="0.0154%" height="15" fill="rgb(244,24,17)" fg:x="424279828063" fg:w="66198594"/><text x="98.8574%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (66,198,594 samples, 0.02%)</title><rect x="98.6074%" y="389" width="0.0154%" height="15" fill="rgb(245,178,49)" fg:x="424279828063" fg:w="66198594"/><text x="98.8574%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66,198,594 samples, 0.02%)</title><rect x="98.6074%" y="373" width="0.0154%" height="15" fill="rgb(219,160,38)" fg:x="424279828063" fg:w="66198594"/><text x="98.8574%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (91,273,819 samples, 0.02%)</title><rect x="98.6253%" y="405" width="0.0212%" height="15" fill="rgb(228,137,14)" fg:x="424357059756" fg:w="91273819"/><text x="98.8753%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (96,288,864 samples, 0.02%)</title><rect x="98.6253%" y="421" width="0.0224%" height="15" fill="rgb(237,134,11)" fg:x="424357059756" fg:w="96288864"/><text x="98.8753%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (70,210,630 samples, 0.02%)</title><rect x="98.6589%" y="421" width="0.0163%" height="15" fill="rgb(211,126,44)" fg:x="424501493052" fg:w="70210630"/><text x="98.9089%" y="431.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (70,210,630 samples, 0.02%)</title><rect x="98.6589%" y="405" width="0.0163%" height="15" fill="rgb(226,171,33)" fg:x="424501493052" fg:w="70210630"/><text x="98.9089%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (343,029,078 samples, 0.08%)</title><rect x="98.6074%" y="437" width="0.0797%" height="15" fill="rgb(253,99,13)" fg:x="424279828063" fg:w="343029078"/><text x="98.8574%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="98.6902%" y="389" width="0.0103%" height="15" fill="rgb(244,48,7)" fg:x="424635896258" fg:w="44132396"/><text x="98.9402%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="98.6902%" y="373" width="0.0103%" height="15" fill="rgb(244,217,54)" fg:x="424635896258" fg:w="44132396"/><text x="98.9402%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (44,132,396 samples, 0.01%)</title><rect x="98.6902%" y="357" width="0.0103%" height="15" fill="rgb(224,15,18)" fg:x="424635896258" fg:w="44132396"/><text x="98.9402%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (45,135,405 samples, 0.01%)</title><rect x="98.6902%" y="421" width="0.0105%" height="15" fill="rgb(244,99,12)" fg:x="424635896258" fg:w="45135405"/><text x="98.9402%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45,135,405 samples, 0.01%)</title><rect x="98.6902%" y="405" width="0.0105%" height="15" fill="rgb(233,226,8)" fg:x="424635896258" fg:w="45135405"/><text x="98.9402%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (108,324,972 samples, 0.03%)</title><rect x="98.6871%" y="437" width="0.0252%" height="15" fill="rgb(229,211,3)" fg:x="424622857141" fg:w="108324972"/><text x="98.9371%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43,129,387 samples, 0.01%)</title><rect x="98.7167%" y="389" width="0.0100%" height="15" fill="rgb(216,140,21)" fg:x="424750239284" fg:w="43129387"/><text x="98.9667%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (43,129,387 samples, 0.01%)</title><rect x="98.7167%" y="373" width="0.0100%" height="15" fill="rgb(234,122,30)" fg:x="424750239284" fg:w="43129387"/><text x="98.9667%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (43,129,387 samples, 0.01%)</title><rect x="98.7167%" y="357" width="0.0100%" height="15" fill="rgb(236,25,46)" fg:x="424750239284" fg:w="43129387"/><text x="98.9667%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (44,132,396 samples, 0.01%)</title><rect x="98.7167%" y="421" width="0.0103%" height="15" fill="rgb(217,52,54)" fg:x="424750239284" fg:w="44132396"/><text x="98.9667%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.01%)</title><rect x="98.7167%" y="405" width="0.0103%" height="15" fill="rgb(222,29,26)" fg:x="424750239284" fg:w="44132396"/><text x="98.9667%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (144,433,296 samples, 0.03%)</title><rect x="98.7123%" y="437" width="0.0336%" height="15" fill="rgb(216,177,29)" fg:x="424731182113" fg:w="144433296"/><text x="98.9623%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (147,442,323 samples, 0.03%)</title><rect x="98.7480%" y="405" width="0.0343%" height="15" fill="rgb(247,136,51)" fg:x="424884642490" fg:w="147442323"/><text x="98.9980%" y="415.50"></text></g><g><title>chlang::board::Position::bitboard (153,460,377 samples, 0.04%)</title><rect x="98.7480%" y="421" width="0.0357%" height="15" fill="rgb(231,47,47)" fg:x="424884642490" fg:w="153460377"/><text x="98.9980%" y="431.50"></text></g><g><title>__GI___libc_malloc (46,138,414 samples, 0.01%)</title><rect x="98.7853%" y="293" width="0.0107%" height="15" fill="rgb(211,192,36)" fg:x="425045123930" fg:w="46138414"/><text x="99.0353%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61,183,549 samples, 0.01%)</title><rect x="98.7836%" y="341" width="0.0142%" height="15" fill="rgb(229,156,32)" fg:x="425038102867" fg:w="61183549"/><text x="99.0336%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61,183,549 samples, 0.01%)</title><rect x="98.7836%" y="325" width="0.0142%" height="15" fill="rgb(248,213,20)" fg:x="425038102867" fg:w="61183549"/><text x="99.0336%" y="335.50"></text></g><g><title>alloc::alloc::alloc (61,183,549 samples, 0.01%)</title><rect x="98.7836%" y="309" width="0.0142%" height="15" fill="rgb(217,64,7)" fg:x="425038102867" fg:w="61183549"/><text x="99.0336%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66,198,594 samples, 0.02%)</title><rect x="98.7836%" y="389" width="0.0154%" height="15" fill="rgb(232,142,8)" fg:x="425038102867" fg:w="66198594"/><text x="99.0336%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (66,198,594 samples, 0.02%)</title><rect x="98.7836%" y="373" width="0.0154%" height="15" fill="rgb(224,92,44)" fg:x="425038102867" fg:w="66198594"/><text x="99.0336%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (66,198,594 samples, 0.02%)</title><rect x="98.7836%" y="357" width="0.0154%" height="15" fill="rgb(214,169,17)" fg:x="425038102867" fg:w="66198594"/><text x="99.0336%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (67,201,603 samples, 0.02%)</title><rect x="98.7836%" y="421" width="0.0156%" height="15" fill="rgb(210,59,37)" fg:x="425038102867" fg:w="67201603"/><text x="99.0336%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67,201,603 samples, 0.02%)</title><rect x="98.7836%" y="405" width="0.0156%" height="15" fill="rgb(214,116,48)" fg:x="425038102867" fg:w="67201603"/><text x="99.0336%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (299,899,691 samples, 0.07%)</title><rect x="98.7459%" y="437" width="0.0697%" height="15" fill="rgb(244,191,6)" fg:x="424875615409" fg:w="299899691"/><text x="98.9959%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (49,147,441 samples, 0.01%)</title><rect x="98.8212%" y="437" width="0.0114%" height="15" fill="rgb(241,50,52)" fg:x="425199587316" fg:w="49147441"/><text x="99.0712%" y="447.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (49,147,441 samples, 0.01%)</title><rect x="98.8212%" y="421" width="0.0114%" height="15" fill="rgb(236,75,39)" fg:x="425199587316" fg:w="49147441"/><text x="99.0712%" y="431.50"></text></g><g><title>chlang::board::Board::attacked_by_color (3,263,791,286 samples, 0.76%)</title><rect x="98.0950%" y="453" width="0.7585%" height="15" fill="rgb(236,99,0)" fg:x="422075214281" fg:w="3263791286"/><text x="98.3450%" y="463.50"></text></g><g><title>chlang::board::Board::is_valid (3,278,836,421 samples, 0.76%)</title><rect x="98.0950%" y="469" width="0.7620%" height="15" fill="rgb(207,202,15)" fg:x="422075214281" fg:w="3278836421"/><text x="98.3450%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (246,740,214 samples, 0.06%)</title><rect x="98.8662%" y="421" width="0.0573%" height="15" fill="rgb(233,207,14)" fg:x="425393168053" fg:w="246740214"/><text x="99.1162%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (247,743,223 samples, 0.06%)</title><rect x="98.8662%" y="437" width="0.0576%" height="15" fill="rgb(226,27,51)" fg:x="425393168053" fg:w="247743223"/><text x="99.1162%" y="447.50"></text></g><g><title>chlang::board::Board::piece_type (282,848,538 samples, 0.07%)</title><rect x="98.8662%" y="453" width="0.0657%" height="15" fill="rgb(206,104,42)" fg:x="425393168053" fg:w="282848538"/><text x="99.1162%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (111,333,999 samples, 0.03%)</title><rect x="98.9331%" y="421" width="0.0259%" height="15" fill="rgb(212,225,4)" fg:x="425681031636" fg:w="111333999"/><text x="99.1831%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (113,340,017 samples, 0.03%)</title><rect x="98.9331%" y="437" width="0.0263%" height="15" fill="rgb(233,96,42)" fg:x="425681031636" fg:w="113340017"/><text x="99.1831%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (217,652,953 samples, 0.05%)</title><rect x="98.9319%" y="453" width="0.0506%" height="15" fill="rgb(229,21,32)" fg:x="425676016591" fg:w="217652953"/><text x="99.1819%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (50,150,450 samples, 0.01%)</title><rect x="98.9918%" y="421" width="0.0117%" height="15" fill="rgb(226,216,24)" fg:x="425933789904" fg:w="50150450"/><text x="99.2418%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (55,165,495 samples, 0.01%)</title><rect x="98.9918%" y="437" width="0.0128%" height="15" fill="rgb(221,163,17)" fg:x="425933789904" fg:w="55165495"/><text x="99.2418%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (176,529,584 samples, 0.04%)</title><rect x="98.9825%" y="453" width="0.0410%" height="15" fill="rgb(216,216,42)" fg:x="425893669544" fg:w="176529584"/><text x="99.2325%" y="463.50"></text></g><g><title>chlang::board::Board::piece_type (46,138,414 samples, 0.01%)</title><rect x="99.0384%" y="421" width="0.0107%" height="15" fill="rgb(240,118,7)" fg:x="426134391704" fg:w="46138414"/><text x="99.2884%" y="431.50"></text></g><g><title>chlang::board::Board::attacked_by_color (116,349,044 samples, 0.03%)</title><rect x="99.0345%" y="437" width="0.0270%" height="15" fill="rgb(221,67,37)" fg:x="426117340551" fg:w="116349044"/><text x="99.2845%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (145,436,305 samples, 0.03%)</title><rect x="99.0333%" y="453" width="0.0338%" height="15" fill="rgb(241,32,44)" fg:x="426112325506" fg:w="145436305"/><text x="99.2833%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (114,343,026 samples, 0.03%)</title><rect x="99.0683%" y="421" width="0.0266%" height="15" fill="rgb(235,204,43)" fg:x="426262776856" fg:w="114343026"/><text x="99.3183%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (117,352,053 samples, 0.03%)</title><rect x="99.0683%" y="437" width="0.0273%" height="15" fill="rgb(213,116,10)" fg:x="426262776856" fg:w="117352053"/><text x="99.3183%" y="447.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (225,677,025 samples, 0.05%)</title><rect x="99.0671%" y="453" width="0.0524%" height="15" fill="rgb(239,15,48)" fg:x="426257761811" fg:w="225677025"/><text x="99.3171%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (1,235,707,088 samples, 0.29%)</title><rect x="98.8571%" y="469" width="0.2872%" height="15" fill="rgb(207,123,36)" fg:x="425354050702" fg:w="1235707088"/><text x="99.1071%" y="479.50"></text></g><g><title>chlang::board::Board::make_move (5,826,479,281 samples, 1.35%)</title><rect x="97.8428%" y="485" width="1.3541%" height="15" fill="rgb(209,103,30)" fg:x="420989958543" fg:w="5826479281"/><text x="98.0928%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (90,270,810 samples, 0.02%)</title><rect x="99.2025%" y="469" width="0.0210%" height="15" fill="rgb(238,100,19)" fg:x="426840510040" fg:w="90270810"/><text x="99.4525%" y="479.50"></text></g><g><title>chlang::board::Position::bitboard (101,303,909 samples, 0.02%)</title><rect x="99.2254%" y="437" width="0.0235%" height="15" fill="rgb(244,30,14)" fg:x="426938804922" fg:w="101303909"/><text x="99.4754%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (101,303,909 samples, 0.02%)</title><rect x="99.2254%" y="421" width="0.0235%" height="15" fill="rgb(249,174,6)" fg:x="426938804922" fg:w="101303909"/><text x="99.4754%" y="431.50"></text></g><g><title>chlang::board::Board::piece_type (118,355,062 samples, 0.03%)</title><rect x="99.2254%" y="453" width="0.0275%" height="15" fill="rgb(235,213,41)" fg:x="426938804922" fg:w="118355062"/><text x="99.4754%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (46,138,414 samples, 0.01%)</title><rect x="99.2529%" y="453" width="0.0107%" height="15" fill="rgb(213,118,6)" fg:x="427057159984" fg:w="46138414"/><text x="99.5029%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (136,409,224 samples, 0.03%)</title><rect x="99.2636%" y="453" width="0.0317%" height="15" fill="rgb(235,44,51)" fg:x="427103298398" fg:w="136409224"/><text x="99.5136%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (391,173,510 samples, 0.09%)</title><rect x="99.2254%" y="469" width="0.0909%" height="15" fill="rgb(217,9,53)" fg:x="426938804922" fg:w="391173510"/><text x="99.4754%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (581,745,220 samples, 0.14%)</title><rect x="99.1969%" y="485" width="0.1352%" height="15" fill="rgb(237,172,34)" fg:x="426816437824" fg:w="581745220"/><text x="99.4469%" y="495.50"></text></g><g><title>chlang::board::Board::get_valid_moves (6,469,408,050 samples, 1.50%)</title><rect x="97.8339%" y="501" width="1.5036%" height="15" fill="rgb(206,206,11)" fg:x="420951844201" fg:w="6469408050"/><text x="98.0839%" y="511.50"></text></g><g><title>chlang::board::Board::get_game_state (7,122,366,909 samples, 1.66%)</title><rect x="97.6824%" y="517" width="1.6553%" height="15" fill="rgb(214,149,29)" fg:x="420299888351" fg:w="7122366909"/><text x="97.9324%" y="527.50"></text></g><g><title>chlang::tree_evaluator::eval (427,149,436,812 samples, 99.27%)</title><rect x="0.0699%" y="533" width="99.2743%" height="15" fill="rgb(208,123,3)" fg:x="300902700" fg:w="427149436812"/><text x="0.3199%" y="543.50">chlang::tree_evaluator::eval</text></g><g><title>chlang::board::Board::is_valid (118,355,062 samples, 0.03%)</title><rect x="99.3543%" y="517" width="0.0275%" height="15" fill="rgb(229,126,4)" fg:x="427493468899" fg:w="118355062"/><text x="99.6043%" y="527.50"></text></g><g><title>chlang::board::Board::attacked_by_color (118,355,062 samples, 0.03%)</title><rect x="99.3543%" y="501" width="0.0275%" height="15" fill="rgb(222,92,36)" fg:x="427493468899" fg:w="118355062"/><text x="99.6043%" y="511.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (75,225,675 samples, 0.02%)</title><rect x="99.3818%" y="517" width="0.0175%" height="15" fill="rgb(216,39,41)" fg:x="427611823961" fg:w="75225675"/><text x="99.6318%" y="527.50"></text></g><g><title>chlang::board::Board::make_move (253,761,277 samples, 0.06%)</title><rect x="99.3450%" y="533" width="0.0590%" height="15" fill="rgb(253,127,28)" fg:x="427453348539" fg:w="253761277"/><text x="99.5950%" y="543.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (46,138,414 samples, 0.01%)</title><rect x="99.4081%" y="517" width="0.0107%" height="15" fill="rgb(249,152,51)" fg:x="427725163978" fg:w="46138414"/><text x="99.6581%" y="527.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (74,222,666 samples, 0.02%)</title><rect x="99.4046%" y="533" width="0.0173%" height="15" fill="rgb(209,123,42)" fg:x="427710118843" fg:w="74222666"/><text x="99.6546%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (47,141,423 samples, 0.01%)</title><rect x="99.4233%" y="437" width="0.0110%" height="15" fill="rgb(241,118,22)" fg:x="427790359563" fg:w="47141423"/><text x="99.6733%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (47,141,423 samples, 0.01%)</title><rect x="99.4233%" y="421" width="0.0110%" height="15" fill="rgb(208,25,7)" fg:x="427790359563" fg:w="47141423"/><text x="99.6733%" y="431.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (47,141,423 samples, 0.01%)</title><rect x="99.4233%" y="405" width="0.0110%" height="15" fill="rgb(243,144,39)" fg:x="427790359563" fg:w="47141423"/><text x="99.6733%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (60,180,540 samples, 0.01%)</title><rect x="99.4233%" y="469" width="0.0140%" height="15" fill="rgb(250,50,5)" fg:x="427790359563" fg:w="60180540"/><text x="99.6733%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (60,180,540 samples, 0.01%)</title><rect x="99.4233%" y="453" width="0.0140%" height="15" fill="rgb(207,67,11)" fg:x="427790359563" fg:w="60180540"/><text x="99.6733%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (45,135,405 samples, 0.01%)</title><rect x="99.4391%" y="309" width="0.0105%" height="15" fill="rgb(245,204,40)" fg:x="427858564175" fg:w="45135405"/><text x="99.6891%" y="319.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (45,135,405 samples, 0.01%)</title><rect x="99.4391%" y="293" width="0.0105%" height="15" fill="rgb(238,228,24)" fg:x="427858564175" fg:w="45135405"/><text x="99.6891%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (47,141,423 samples, 0.01%)</title><rect x="99.4391%" y="325" width="0.0110%" height="15" fill="rgb(217,116,22)" fg:x="427858564175" fg:w="47141423"/><text x="99.6891%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (54,162,486 samples, 0.01%)</title><rect x="99.4391%" y="389" width="0.0126%" height="15" fill="rgb(234,98,12)" fg:x="427858564175" fg:w="54162486"/><text x="99.6891%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (54,162,486 samples, 0.01%)</title><rect x="99.4391%" y="373" width="0.0126%" height="15" fill="rgb(242,170,50)" fg:x="427858564175" fg:w="54162486"/><text x="99.6891%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (54,162,486 samples, 0.01%)</title><rect x="99.4391%" y="357" width="0.0126%" height="15" fill="rgb(235,7,5)" fg:x="427858564175" fg:w="54162486"/><text x="99.6891%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (54,162,486 samples, 0.01%)</title><rect x="99.4391%" y="341" width="0.0126%" height="15" fill="rgb(241,114,28)" fg:x="427858564175" fg:w="54162486"/><text x="99.6891%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (64,192,576 samples, 0.01%)</title><rect x="99.4373%" y="405" width="0.0149%" height="15" fill="rgb(246,112,42)" fg:x="427850540103" fg:w="64192576"/><text x="99.6873%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (65,195,585 samples, 0.02%)</title><rect x="99.4373%" y="421" width="0.0152%" height="15" fill="rgb(248,228,14)" fg:x="427850540103" fg:w="65195585"/><text x="99.6873%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (66,198,594 samples, 0.02%)</title><rect x="99.4373%" y="437" width="0.0154%" height="15" fill="rgb(208,133,18)" fg:x="427850540103" fg:w="66198594"/><text x="99.6873%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (67,201,603 samples, 0.02%)</title><rect x="99.4373%" y="469" width="0.0156%" height="15" fill="rgb(207,35,49)" fg:x="427850540103" fg:w="67201603"/><text x="99.6873%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (67,201,603 samples, 0.02%)</title><rect x="99.4373%" y="453" width="0.0156%" height="15" fill="rgb(205,68,36)" fg:x="427850540103" fg:w="67201603"/><text x="99.6873%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (135,406,215 samples, 0.03%)</title><rect x="99.4219%" y="501" width="0.0315%" height="15" fill="rgb(245,62,40)" fg:x="427784341509" fg:w="135406215"/><text x="99.6719%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (135,406,215 samples, 0.03%)</title><rect x="99.4219%" y="485" width="0.0315%" height="15" fill="rgb(228,27,24)" fg:x="427784341509" fg:w="135406215"/><text x="99.6719%" y="495.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (190,571,710 samples, 0.04%)</title><rect x="99.4219%" y="517" width="0.0443%" height="15" fill="rgb(253,19,12)" fg:x="427784341509" fg:w="190571710"/><text x="99.6719%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (133,400,197 samples, 0.03%)</title><rect x="99.4930%" y="453" width="0.0310%" height="15" fill="rgb(232,28,20)" fg:x="428090259254" fg:w="133400197"/><text x="99.7430%" y="463.50"></text></g><g><title>chlang::board::Position::bitboard (143,430,287 samples, 0.03%)</title><rect x="99.4930%" y="469" width="0.0333%" height="15" fill="rgb(218,35,51)" fg:x="428090259254" fg:w="143430287"/><text x="99.7430%" y="479.50"></text></g><g><title>chlang::board::Board::piece_type (188,565,692 samples, 0.04%)</title><rect x="99.4930%" y="485" width="0.0438%" height="15" fill="rgb(212,90,40)" fg:x="428090259254" fg:w="188565692"/><text x="99.7430%" y="495.50"></text></g><g><title>_int_free (48,144,432 samples, 0.01%)</title><rect x="99.5496%" y="293" width="0.0112%" height="15" fill="rgb(220,172,12)" fg:x="428333990441" fg:w="48144432"/><text x="99.7996%" y="303.50"></text></g><g><title>__GI___libc_free (60,180,540 samples, 0.01%)</title><rect x="99.5496%" y="309" width="0.0140%" height="15" fill="rgb(226,159,20)" fg:x="428333990441" fg:w="60180540"/><text x="99.7996%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (108,324,972 samples, 0.03%)</title><rect x="99.5389%" y="453" width="0.0252%" height="15" fill="rgb(234,205,16)" fg:x="428287852027" fg:w="108324972"/><text x="99.7889%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108,324,972 samples, 0.03%)</title><rect x="99.5389%" y="437" width="0.0252%" height="15" fill="rgb(207,9,39)" fg:x="428287852027" fg:w="108324972"/><text x="99.7889%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (108,324,972 samples, 0.03%)</title><rect x="99.5389%" y="421" width="0.0252%" height="15" fill="rgb(249,143,15)" fg:x="428287852027" fg:w="108324972"/><text x="99.7889%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108,324,972 samples, 0.03%)</title><rect x="99.5389%" y="405" width="0.0252%" height="15" fill="rgb(253,133,29)" fg:x="428287852027" fg:w="108324972"/><text x="99.7889%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (108,324,972 samples, 0.03%)</title><rect x="99.5389%" y="389" width="0.0252%" height="15" fill="rgb(221,187,0)" fg:x="428287852027" fg:w="108324972"/><text x="99.7889%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108,324,972 samples, 0.03%)</title><rect x="99.5389%" y="373" width="0.0252%" height="15" fill="rgb(205,204,26)" fg:x="428287852027" fg:w="108324972"/><text x="99.7889%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (108,324,972 samples, 0.03%)</title><rect x="99.5389%" y="357" width="0.0252%" height="15" fill="rgb(224,68,54)" fg:x="428287852027" fg:w="108324972"/><text x="99.7889%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (104,312,936 samples, 0.02%)</title><rect x="99.5398%" y="341" width="0.0242%" height="15" fill="rgb(209,67,4)" fg:x="428291864063" fg:w="104312936"/><text x="99.7898%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (104,312,936 samples, 0.02%)</title><rect x="99.5398%" y="325" width="0.0242%" height="15" fill="rgb(228,229,18)" fg:x="428291864063" fg:w="104312936"/><text x="99.7898%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (257,773,313 samples, 0.06%)</title><rect x="99.5711%" y="421" width="0.0599%" height="15" fill="rgb(231,89,13)" fg:x="428426267269" fg:w="257773313"/><text x="99.8211%" y="431.50"></text></g><g><title>chlang::board::Position::bitboard (315,947,835 samples, 0.07%)</title><rect x="99.5711%" y="437" width="0.0734%" height="15" fill="rgb(210,182,18)" fg:x="428426267269" fg:w="315947835"/><text x="99.8211%" y="447.50"></text></g><g><title>chlang::board::Board::piece_type (351,053,150 samples, 0.08%)</title><rect x="99.5711%" y="453" width="0.0816%" height="15" fill="rgb(240,105,2)" fg:x="428426267269" fg:w="351053150"/><text x="99.8211%" y="463.50"></text></g><g><title>chlang::board::Position::bitboard (65,195,585 samples, 0.02%)</title><rect x="99.6529%" y="437" width="0.0152%" height="15" fill="rgb(207,170,50)" fg:x="428778323428" fg:w="65195585"/><text x="99.9029%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (65,195,585 samples, 0.02%)</title><rect x="99.6529%" y="421" width="0.0152%" height="15" fill="rgb(232,133,24)" fg:x="428778323428" fg:w="65195585"/><text x="99.9029%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (142,427,278 samples, 0.03%)</title><rect x="99.6527%" y="453" width="0.0331%" height="15" fill="rgb(235,166,27)" fg:x="428777320419" fg:w="142427278"/><text x="99.9027%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (115,346,035 samples, 0.03%)</title><rect x="99.6858%" y="453" width="0.0268%" height="15" fill="rgb(209,19,13)" fg:x="428919747697" fg:w="115346035"/><text x="99.9358%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (51,153,459 samples, 0.01%)</title><rect x="99.7217%" y="453" width="0.0119%" height="15" fill="rgb(226,79,39)" fg:x="429074211083" fg:w="51153459"/><text x="99.9717%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (96,288,864 samples, 0.02%)</title><rect x="99.7336%" y="453" width="0.0224%" height="15" fill="rgb(222,163,10)" fg:x="429125364542" fg:w="96288864"/><text x="99.9836%" y="463.50"></text></g><g><title>chlang::board::Board::attacked_by_color (984,954,838 samples, 0.23%)</title><rect x="99.5389%" y="469" width="0.2289%" height="15" fill="rgb(214,44,19)" fg:x="428287852027" fg:w="984954838"/><text x="99.7889%" y="479.50"></text></g><g><title>chlang::board::Board::is_valid (988,966,874 samples, 0.23%)</title><rect x="99.5389%" y="485" width="0.2298%" height="15" fill="rgb(210,217,13)" fg:x="428287852027" fg:w="988966874"/><text x="99.7889%" y="495.50"></text></g><g><title>chlang::board::Position::bitboard (51,153,459 samples, 0.01%)</title><rect x="99.7699%" y="453" width="0.0119%" height="15" fill="rgb(237,61,54)" fg:x="429281833946" fg:w="51153459"/><text x="100.0199%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (51,153,459 samples, 0.01%)</title><rect x="99.7699%" y="437" width="0.0119%" height="15" fill="rgb(226,184,24)" fg:x="429281833946" fg:w="51153459"/><text x="100.0199%" y="447.50"></text></g><g><title>chlang::board::Board::piece_type (65,195,585 samples, 0.02%)</title><rect x="99.7699%" y="469" width="0.0152%" height="15" fill="rgb(223,226,4)" fg:x="429281833946" fg:w="65195585"/><text x="100.0199%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (59,177,531 samples, 0.01%)</title><rect x="99.7851%" y="469" width="0.0138%" height="15" fill="rgb(210,26,41)" fg:x="429347029531" fg:w="59177531"/><text x="100.0351%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (48,144,432 samples, 0.01%)</title><rect x="99.7988%" y="469" width="0.0112%" height="15" fill="rgb(220,221,6)" fg:x="429406207062" fg:w="48144432"/><text x="100.0488%" y="479.50"></text></g><g><title>chlang::board::Board::attacked_by_color (83,249,747 samples, 0.02%)</title><rect x="99.8137%" y="453" width="0.0193%" height="15" fill="rgb(225,89,49)" fg:x="429470399638" fg:w="83249747"/><text x="100.0637%" y="463.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (92,276,828 samples, 0.02%)</title><rect x="99.8130%" y="469" width="0.0214%" height="15" fill="rgb(218,70,45)" fg:x="429467390611" fg:w="92276828"/><text x="100.0630%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (54,162,486 samples, 0.01%)</title><rect x="99.8345%" y="469" width="0.0126%" height="15" fill="rgb(238,166,21)" fg:x="429559667439" fg:w="54162486"/><text x="100.0845%" y="479.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (371,113,330 samples, 0.09%)</title><rect x="99.7688%" y="485" width="0.0863%" height="15" fill="rgb(224,141,44)" fg:x="429276818901" fg:w="371113330"/><text x="100.0188%" y="495.50"></text></g><g><title>chlang::board::Board::make_move (1,719,157,426 samples, 0.40%)</title><rect x="99.4697%" y="501" width="0.3996%" height="15" fill="rgb(230,12,49)" fg:x="427989958354" fg:w="1719157426"/><text x="99.7197%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (47,141,423 samples, 0.01%)</title><rect x="99.8704%" y="485" width="0.0110%" height="15" fill="rgb(212,174,12)" fg:x="429714130825" fg:w="47141423"/><text x="100.1204%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (133,400,197 samples, 0.03%)</title><rect x="99.8813%" y="485" width="0.0310%" height="15" fill="rgb(246,67,9)" fg:x="429761272248" fg:w="133400197"/><text x="100.1313%" y="495.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (194,583,746 samples, 0.05%)</title><rect x="99.8692%" y="501" width="0.0452%" height="15" fill="rgb(239,35,23)" fg:x="429709115780" fg:w="194583746"/><text x="100.1192%" y="511.50"></text></g><g><title>chlang::board::Board::get_game_state (2,127,382,089 samples, 0.49%)</title><rect x="99.4219%" y="533" width="0.4944%" height="15" fill="rgb(211,167,0)" fg:x="427784341509" fg:w="2127382089"/><text x="99.6719%" y="543.50"></text></g><g><title>chlang::board::Board::get_valid_moves (1,936,810,379 samples, 0.45%)</title><rect x="99.4662%" y="517" width="0.4501%" height="15" fill="rgb(225,119,45)" fg:x="427974913219" fg:w="1936810379"/><text x="99.7162%" y="527.50"></text></g><g><title>chlang::tree_evaluator::eval (429,871,603,238 samples, 99.91%)</title><rect x="0.0135%" y="549" width="99.9070%" height="15" fill="rgb(210,162,6)" fg:x="58174522" fg:w="429871603238"/><text x="0.2635%" y="559.50">chlang::tree_evaluator::eval</text></g><g><title>chlang::board::Board::make_move (74,222,666 samples, 0.02%)</title><rect x="99.9205%" y="549" width="0.0173%" height="15" fill="rgb(208,118,35)" fg:x="429929777760" fg:w="74222666"/><text x="100.1705%" y="559.50"></text></g><g><title>chlang::board::Board::is_valid (98,294,882 samples, 0.02%)</title><rect x="99.9513%" y="501" width="0.0228%" height="15" fill="rgb(239,4,53)" fg:x="430062174948" fg:w="98294882"/><text x="100.2013%" y="511.50"></text></g><g><title>chlang::board::Board::attacked_by_color (98,294,882 samples, 0.02%)</title><rect x="99.9513%" y="485" width="0.0228%" height="15" fill="rgb(213,130,21)" fg:x="430062174948" fg:w="98294882"/><text x="100.2013%" y="495.50"></text></g><g><title>chlang::board::Board::make_move (169,508,521 samples, 0.04%)</title><rect x="99.9455%" y="517" width="0.0394%" height="15" fill="rgb(235,148,0)" fg:x="430037099723" fg:w="169508521"/><text x="100.1955%" y="527.50"></text></g><g><title>chlang::board::Board::get_game_state (205,616,845 samples, 0.05%)</title><rect x="99.9413%" y="549" width="0.0478%" height="15" fill="rgb(244,224,18)" fg:x="430019045561" fg:w="205616845"/><text x="100.1913%" y="559.50"></text></g><g><title>chlang::board::Board::get_valid_moves (189,568,701 samples, 0.04%)</title><rect x="99.9450%" y="533" width="0.0441%" height="15" fill="rgb(211,214,4)" fg:x="430035093705" fg:w="189568701"/><text x="100.1950%" y="543.50"></text></g><g><title>chlang::tree_evaluator::eval (430,213,629,307 samples, 99.99%)</title><rect x="0.0028%" y="565" width="99.9865%" height="15" fill="rgb(206,119,25)" fg:x="12036108" fg:w="430213629307"/><text x="0.2528%" y="575.50">chlang::tree_evaluator::eval</text></g><g><title>chlang::tree_evaluator::Bot::find_best_move (430,268,794,802 samples, 100.00%)</title><rect x="0.0005%" y="597" width="99.9993%" height="15" fill="rgb(243,93,47)" fg:x="2006018" fg:w="430268794802"/><text x="0.2505%" y="607.50">chlang::tree_evaluator::Bot::find_best_move</text></g><g><title>chlang::tree_evaluator::eval (430,268,794,802 samples, 100.00%)</title><rect x="0.0005%" y="581" width="99.9993%" height="15" fill="rgb(224,194,6)" fg:x="2006018" fg:w="430268794802"/><text x="0.2505%" y="591.50">chlang::tree_evaluator::eval</text></g><g><title>all (430,271,803,829 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(243,229,6)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="911.50"></text></g><g><title>chlang (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(207,23,50)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="895.50">chlang</text></g><g><title>_start (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(253,192,32)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="879.50">_start</text></g><g><title>__libc_start_main_impl (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(213,21,6)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="863.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(243,151,13)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="847.50">__libc_start_call_main</text></g><g><title>main (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(233,165,41)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(246,176,45)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(217,170,52)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(214,203,54)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(248,215,49)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(208,46,10)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="751.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(254,5,31)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(222,104,33)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(248,49,16)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(232,198,41)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(214,125,3)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="671.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(229,220,28)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="655.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(222,64,37)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="639.50">core::ops::function::FnOnce::call_once</text></g><g><title>chlang::main (430,271,803,829 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(249,184,13)" fg:x="0" fg:w="430271803829"/><text x="0.2500%" y="623.50">chlang::main</text></g></svg></svg>