<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="10294884376"><g><title>std::io::stdio::_print (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="453" width="0.0292%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="463.50"></text></g><g><title>std::io::stdio::print_to (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="437" width="0.0292%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="447.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="421" width="0.0292%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="431.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="405" width="0.0292%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="389" width="0.0292%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="399.50"></text></g><g><title>core::fmt::write (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="373" width="0.0292%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="357" width="0.0292%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="367.50"></text></g><g><title>&lt;chlang::board::Board as core::fmt::Display&gt;::fmt (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="341" width="0.0292%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (3,009,027 samples, 0.03%)</title><rect x="0.0000%" y="325" width="0.0292%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3009027"/><text x="0.2500%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="421" width="0.0195%" height="15" fill="rgb(220,122,19)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="405" width="0.0195%" height="15" fill="rgb(250,228,42)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="389" width="0.0195%" height="15" fill="rgb(240,193,28)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="373" width="0.0195%" height="15" fill="rgb(216,20,37)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="357" width="0.0195%" height="15" fill="rgb(206,188,39)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="341" width="0.0195%" height="15" fill="rgb(217,207,13)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="325" width="0.0195%" height="15" fill="rgb(231,73,38)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="309" width="0.0195%" height="15" fill="rgb(225,20,46)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="319.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="293" width="0.0195%" height="15" fill="rgb(210,31,41)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="277" width="0.0195%" height="15" fill="rgb(221,200,47)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="287.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="0.0292%" y="261" width="0.0195%" height="15" fill="rgb(226,26,5)" fg:x="3009027" fg:w="2006018"/><text x="0.2792%" y="271.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="405" width="0.0195%" height="15" fill="rgb(249,33,26)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="389" width="0.0195%" height="15" fill="rgb(235,183,28)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="373" width="0.0195%" height="15" fill="rgb(221,5,38)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="357" width="0.0195%" height="15" fill="rgb(247,18,42)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="341" width="0.0195%" height="15" fill="rgb(241,131,45)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="325" width="0.0195%" height="15" fill="rgb(249,31,29)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="309" width="0.0195%" height="15" fill="rgb(225,111,53)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="319.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="293" width="0.0195%" height="15" fill="rgb(238,160,17)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="303.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="277" width="0.0195%" height="15" fill="rgb(214,148,48)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="261" width="0.0195%" height="15" fill="rgb(232,36,49)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="271.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="0.0682%" y="245" width="0.0195%" height="15" fill="rgb(209,103,24)" fg:x="7021063" fg:w="2006018"/><text x="0.3182%" y="255.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (2,006,018 samples, 0.02%)</title><rect x="0.1072%" y="357" width="0.0195%" height="15" fill="rgb(229,88,8)" fg:x="11033099" fg:w="2006018"/><text x="0.3572%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (2,006,018 samples, 0.02%)</title><rect x="0.1072%" y="341" width="0.0195%" height="15" fill="rgb(213,181,19)" fg:x="11033099" fg:w="2006018"/><text x="0.3572%" y="351.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (3,009,027 samples, 0.03%)</title><rect x="0.1072%" y="373" width="0.0292%" height="15" fill="rgb(254,191,54)" fg:x="11033099" fg:w="3009027"/><text x="0.3572%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (2,006,018 samples, 0.02%)</title><rect x="0.1461%" y="341" width="0.0195%" height="15" fill="rgb(241,83,37)" fg:x="15045135" fg:w="2006018"/><text x="0.3961%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (2,006,018 samples, 0.02%)</title><rect x="0.1461%" y="325" width="0.0195%" height="15" fill="rgb(233,36,39)" fg:x="15045135" fg:w="2006018"/><text x="0.3961%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (9,027,081 samples, 0.09%)</title><rect x="0.1072%" y="405" width="0.0877%" height="15" fill="rgb(226,3,54)" fg:x="11033099" fg:w="9027081"/><text x="0.3572%" y="415.50"></text></g><g><title>core::slice::sort::unstable::sort (9,027,081 samples, 0.09%)</title><rect x="0.1072%" y="389" width="0.0877%" height="15" fill="rgb(245,192,40)" fg:x="11033099" fg:w="9027081"/><text x="0.3572%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (5,015,045 samples, 0.05%)</title><rect x="0.1461%" y="373" width="0.0487%" height="15" fill="rgb(238,167,29)" fg:x="15045135" fg:w="5015045"/><text x="0.3961%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (5,015,045 samples, 0.05%)</title><rect x="0.1461%" y="357" width="0.0487%" height="15" fill="rgb(232,182,51)" fg:x="15045135" fg:w="5015045"/><text x="0.3961%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (3,009,027 samples, 0.03%)</title><rect x="0.1656%" y="341" width="0.0292%" height="15" fill="rgb(231,60,39)" fg:x="17051153" fg:w="3009027"/><text x="0.4156%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="0.1656%" y="325" width="0.0292%" height="15" fill="rgb(208,69,12)" fg:x="17051153" fg:w="3009027"/><text x="0.4156%" y="335.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="0.1656%" y="309" width="0.0292%" height="15" fill="rgb(235,93,37)" fg:x="17051153" fg:w="3009027"/><text x="0.4156%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.02%)</title><rect x="0.1754%" y="293" width="0.0195%" height="15" fill="rgb(213,116,39)" fg:x="18054162" fg:w="2006018"/><text x="0.4254%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14,042,126 samples, 0.14%)</title><rect x="0.2046%" y="293" width="0.1364%" height="15" fill="rgb(222,207,29)" fg:x="21063189" fg:w="14042126"/><text x="0.4546%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14,042,126 samples, 0.14%)</title><rect x="0.2046%" y="277" width="0.1364%" height="15" fill="rgb(206,96,30)" fg:x="21063189" fg:w="14042126"/><text x="0.4546%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (29,087,261 samples, 0.28%)</title><rect x="0.2046%" y="341" width="0.2825%" height="15" fill="rgb(218,138,4)" fg:x="21063189" fg:w="29087261"/><text x="0.4546%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29,087,261 samples, 0.28%)</title><rect x="0.2046%" y="325" width="0.2825%" height="15" fill="rgb(250,191,14)" fg:x="21063189" fg:w="29087261"/><text x="0.4546%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (29,087,261 samples, 0.28%)</title><rect x="0.2046%" y="309" width="0.2825%" height="15" fill="rgb(239,60,40)" fg:x="21063189" fg:w="29087261"/><text x="0.4546%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14,042,126 samples, 0.14%)</title><rect x="0.3507%" y="293" width="0.1364%" height="15" fill="rgb(206,27,48)" fg:x="36108324" fg:w="14042126"/><text x="0.6007%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13,039,117 samples, 0.13%)</title><rect x="0.3605%" y="277" width="0.1267%" height="15" fill="rgb(225,35,8)" fg:x="37111333" fg:w="13039117"/><text x="0.6105%" y="287.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (13,039,117 samples, 0.13%)</title><rect x="0.3605%" y="261" width="0.1267%" height="15" fill="rgb(250,213,24)" fg:x="37111333" fg:w="13039117"/><text x="0.6105%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13,039,117 samples, 0.13%)</title><rect x="0.3605%" y="245" width="0.1267%" height="15" fill="rgb(247,123,22)" fg:x="37111333" fg:w="13039117"/><text x="0.6105%" y="255.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (13,039,117 samples, 0.13%)</title><rect x="0.3605%" y="229" width="0.1267%" height="15" fill="rgb(231,138,38)" fg:x="37111333" fg:w="13039117"/><text x="0.6105%" y="239.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31,093,279 samples, 0.30%)</title><rect x="0.2046%" y="389" width="0.3020%" height="15" fill="rgb(231,145,46)" fg:x="21063189" fg:w="31093279"/><text x="0.4546%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31,093,279 samples, 0.30%)</title><rect x="0.2046%" y="373" width="0.3020%" height="15" fill="rgb(251,118,11)" fg:x="21063189" fg:w="31093279"/><text x="0.4546%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31,093,279 samples, 0.30%)</title><rect x="0.2046%" y="357" width="0.3020%" height="15" fill="rgb(217,147,25)" fg:x="21063189" fg:w="31093279"/><text x="0.4546%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="341" width="0.0195%" height="15" fill="rgb(247,81,37)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="325" width="0.0195%" height="15" fill="rgb(209,12,38)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="309" width="0.0195%" height="15" fill="rgb(227,1,9)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="319.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="293" width="0.0195%" height="15" fill="rgb(248,47,43)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="277" width="0.0195%" height="15" fill="rgb(221,10,30)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="287.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="261" width="0.0195%" height="15" fill="rgb(210,229,1)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="271.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="245" width="0.0195%" height="15" fill="rgb(222,148,37)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2,006,018 samples, 0.02%)</title><rect x="0.4871%" y="229" width="0.0195%" height="15" fill="rgb(234,67,33)" fg:x="50150450" fg:w="2006018"/><text x="0.7371%" y="239.50"></text></g><g><title>std::collections::hash::map::map_entry (2,006,018 samples, 0.02%)</title><rect x="0.5066%" y="373" width="0.0195%" height="15" fill="rgb(247,98,35)" fg:x="52156468" fg:w="2006018"/><text x="0.7566%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2,006,018 samples, 0.02%)</title><rect x="0.5261%" y="325" width="0.0195%" height="15" fill="rgb(247,138,52)" fg:x="54162486" fg:w="2006018"/><text x="0.7761%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2,006,018 samples, 0.02%)</title><rect x="0.5261%" y="309" width="0.0195%" height="15" fill="rgb(213,79,30)" fg:x="54162486" fg:w="2006018"/><text x="0.7761%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,006,018 samples, 0.02%)</title><rect x="0.5261%" y="293" width="0.0195%" height="15" fill="rgb(246,177,23)" fg:x="54162486" fg:w="2006018"/><text x="0.7761%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,009,027 samples, 0.03%)</title><rect x="0.5261%" y="357" width="0.0292%" height="15" fill="rgb(230,62,27)" fg:x="54162486" fg:w="3009027"/><text x="0.7761%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,009,027 samples, 0.03%)</title><rect x="0.5261%" y="341" width="0.0292%" height="15" fill="rgb(216,154,8)" fg:x="54162486" fg:w="3009027"/><text x="0.7761%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (2,006,018 samples, 0.02%)</title><rect x="0.5748%" y="245" width="0.0195%" height="15" fill="rgb(244,35,45)" fg:x="59177531" fg:w="2006018"/><text x="0.8248%" y="255.50"></text></g><g><title>core::intrinsics::unlikely (2,006,018 samples, 0.02%)</title><rect x="0.5748%" y="229" width="0.0195%" height="15" fill="rgb(251,115,12)" fg:x="59177531" fg:w="2006018"/><text x="0.8248%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (10,030,090 samples, 0.10%)</title><rect x="0.5553%" y="277" width="0.0974%" height="15" fill="rgb(240,54,50)" fg:x="57171513" fg:w="10030090"/><text x="0.8053%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (9,027,081 samples, 0.09%)</title><rect x="0.5651%" y="261" width="0.0877%" height="15" fill="rgb(233,84,52)" fg:x="58174522" fg:w="9027081"/><text x="0.8151%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (6,018,054 samples, 0.06%)</title><rect x="0.5943%" y="245" width="0.0585%" height="15" fill="rgb(207,117,47)" fg:x="61183549" fg:w="6018054"/><text x="0.8443%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (6,018,054 samples, 0.06%)</title><rect x="0.5943%" y="229" width="0.0585%" height="15" fill="rgb(249,43,39)" fg:x="61183549" fg:w="6018054"/><text x="0.8443%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6,018,054 samples, 0.06%)</title><rect x="0.5943%" y="213" width="0.0585%" height="15" fill="rgb(209,38,44)" fg:x="61183549" fg:w="6018054"/><text x="0.8443%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket_ptr (2,006,018 samples, 0.02%)</title><rect x="0.6528%" y="277" width="0.0195%" height="15" fill="rgb(236,212,23)" fg:x="67201603" fg:w="2006018"/><text x="0.9028%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::data_end (2,006,018 samples, 0.02%)</title><rect x="0.6528%" y="261" width="0.0195%" height="15" fill="rgb(242,79,21)" fg:x="67201603" fg:w="2006018"/><text x="0.9028%" y="271.50"></text></g><g><title>rustc_hash::hash_bytes (4,012,036 samples, 0.04%)</title><rect x="0.6820%" y="117" width="0.0390%" height="15" fill="rgb(211,96,35)" fg:x="70210630" fg:w="4012036"/><text x="0.9320%" y="127.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (5,015,045 samples, 0.05%)</title><rect x="0.6820%" y="149" width="0.0487%" height="15" fill="rgb(253,215,40)" fg:x="70210630" fg:w="5015045"/><text x="0.9320%" y="159.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (5,015,045 samples, 0.05%)</title><rect x="0.6820%" y="133" width="0.0487%" height="15" fill="rgb(211,81,21)" fg:x="70210630" fg:w="5015045"/><text x="0.9320%" y="143.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (6,018,054 samples, 0.06%)</title><rect x="0.6820%" y="181" width="0.0585%" height="15" fill="rgb(208,190,38)" fg:x="70210630" fg:w="6018054"/><text x="0.9320%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6,018,054 samples, 0.06%)</title><rect x="0.6820%" y="165" width="0.0585%" height="15" fill="rgb(235,213,38)" fg:x="70210630" fg:w="6018054"/><text x="0.9320%" y="175.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="0.7405%" y="181" width="0.0195%" height="15" fill="rgb(237,122,38)" fg:x="76228684" fg:w="2006018"/><text x="0.9905%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6,018,054 samples, 0.06%)</title><rect x="0.7599%" y="165" width="0.0585%" height="15" fill="rgb(244,218,35)" fg:x="78234702" fg:w="6018054"/><text x="1.0099%" y="175.50"></text></g><g><title>core::hash::Hasher::write_isize (6,018,054 samples, 0.06%)</title><rect x="0.7599%" y="149" width="0.0585%" height="15" fill="rgb(240,68,47)" fg:x="78234702" fg:w="6018054"/><text x="1.0099%" y="159.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (6,018,054 samples, 0.06%)</title><rect x="0.7599%" y="133" width="0.0585%" height="15" fill="rgb(210,16,53)" fg:x="78234702" fg:w="6018054"/><text x="1.0099%" y="143.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (6,018,054 samples, 0.06%)</title><rect x="0.7599%" y="117" width="0.0585%" height="15" fill="rgb(235,124,12)" fg:x="78234702" fg:w="6018054"/><text x="1.0099%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (6,018,054 samples, 0.06%)</title><rect x="0.7599%" y="101" width="0.0585%" height="15" fill="rgb(224,169,11)" fg:x="78234702" fg:w="6018054"/><text x="1.0099%" y="111.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15,045,135 samples, 0.15%)</title><rect x="0.6820%" y="213" width="0.1461%" height="15" fill="rgb(250,166,2)" fg:x="70210630" fg:w="15045135"/><text x="0.9320%" y="223.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (15,045,135 samples, 0.15%)</title><rect x="0.6820%" y="197" width="0.1461%" height="15" fill="rgb(242,216,29)" fg:x="70210630" fg:w="15045135"/><text x="0.9320%" y="207.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (7,021,063 samples, 0.07%)</title><rect x="0.7599%" y="181" width="0.0682%" height="15" fill="rgb(230,116,27)" fg:x="78234702" fg:w="7021063"/><text x="1.0099%" y="191.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::finish (2,006,018 samples, 0.02%)</title><rect x="0.8281%" y="213" width="0.0195%" height="15" fill="rgb(228,99,48)" fg:x="85255765" fg:w="2006018"/><text x="1.0781%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (2,006,018 samples, 0.02%)</title><rect x="0.8281%" y="197" width="0.0195%" height="15" fill="rgb(253,11,6)" fg:x="85255765" fg:w="2006018"/><text x="1.0781%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (20,060,180 samples, 0.19%)</title><rect x="0.6723%" y="277" width="0.1949%" height="15" fill="rgb(247,143,39)" fg:x="69207621" fg:w="20060180"/><text x="0.9223%" y="287.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (19,057,171 samples, 0.19%)</title><rect x="0.6820%" y="261" width="0.1851%" height="15" fill="rgb(236,97,10)" fg:x="70210630" fg:w="19057171"/><text x="0.9320%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (19,057,171 samples, 0.19%)</title><rect x="0.6820%" y="245" width="0.1851%" height="15" fill="rgb(233,208,19)" fg:x="70210630" fg:w="19057171"/><text x="0.9320%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (19,057,171 samples, 0.19%)</title><rect x="0.6820%" y="229" width="0.1851%" height="15" fill="rgb(216,164,2)" fg:x="70210630" fg:w="19057171"/><text x="0.9320%" y="239.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (41,123,369 samples, 0.40%)</title><rect x="0.5066%" y="389" width="0.3995%" height="15" fill="rgb(220,129,5)" fg:x="52156468" fg:w="41123369"/><text x="0.7566%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (39,117,351 samples, 0.38%)</title><rect x="0.5261%" y="373" width="0.3800%" height="15" fill="rgb(242,17,10)" fg:x="54162486" fg:w="39117351"/><text x="0.7761%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (36,108,324 samples, 0.35%)</title><rect x="0.5553%" y="357" width="0.3507%" height="15" fill="rgb(242,107,0)" fg:x="57171513" fg:w="36108324"/><text x="0.8053%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (36,108,324 samples, 0.35%)</title><rect x="0.5553%" y="341" width="0.3507%" height="15" fill="rgb(251,28,31)" fg:x="57171513" fg:w="36108324"/><text x="0.8053%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (36,108,324 samples, 0.35%)</title><rect x="0.5553%" y="325" width="0.3507%" height="15" fill="rgb(233,223,10)" fg:x="57171513" fg:w="36108324"/><text x="0.8053%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (36,108,324 samples, 0.35%)</title><rect x="0.5553%" y="309" width="0.3507%" height="15" fill="rgb(215,21,27)" fg:x="57171513" fg:w="36108324"/><text x="0.8053%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (36,108,324 samples, 0.35%)</title><rect x="0.5553%" y="293" width="0.3507%" height="15" fill="rgb(232,23,21)" fg:x="57171513" fg:w="36108324"/><text x="0.8053%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,012,036 samples, 0.04%)</title><rect x="0.8671%" y="277" width="0.0390%" height="15" fill="rgb(244,5,23)" fg:x="89267801" fg:w="4012036"/><text x="1.1171%" y="287.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (10,030,090 samples, 0.10%)</title><rect x="0.9061%" y="389" width="0.0974%" height="15" fill="rgb(226,81,46)" fg:x="93279837" fg:w="10030090"/><text x="1.1561%" y="399.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (10,030,090 samples, 0.10%)</title><rect x="0.9061%" y="373" width="0.0974%" height="15" fill="rgb(247,70,30)" fg:x="93279837" fg:w="10030090"/><text x="1.1561%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (10,030,090 samples, 0.10%)</title><rect x="0.9061%" y="357" width="0.0974%" height="15" fill="rgb(212,68,19)" fg:x="93279837" fg:w="10030090"/><text x="1.1561%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (10,030,090 samples, 0.10%)</title><rect x="0.9061%" y="341" width="0.0974%" height="15" fill="rgb(240,187,13)" fg:x="93279837" fg:w="10030090"/><text x="1.1561%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10,030,090 samples, 0.10%)</title><rect x="0.9061%" y="325" width="0.0974%" height="15" fill="rgb(223,113,26)" fg:x="93279837" fg:w="10030090"/><text x="1.1561%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10,030,090 samples, 0.10%)</title><rect x="0.9061%" y="309" width="0.0974%" height="15" fill="rgb(206,192,2)" fg:x="93279837" fg:w="10030090"/><text x="1.1561%" y="319.50"></text></g><g><title>core::ptr::write (10,030,090 samples, 0.10%)</title><rect x="0.9061%" y="293" width="0.0974%" height="15" fill="rgb(241,108,4)" fg:x="93279837" fg:w="10030090"/><text x="1.1561%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="1.0133%" y="261" width="0.0487%" height="15" fill="rgb(247,173,49)" fg:x="104312936" fg:w="5015045"/><text x="1.2633%" y="271.50"></text></g><g><title>chlang::board::Board::piece_type (4,012,036 samples, 0.04%)</title><rect x="1.0230%" y="245" width="0.0390%" height="15" fill="rgb(224,114,35)" fg:x="105315945" fg:w="4012036"/><text x="1.2730%" y="255.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort::{{closure}} (6,018,054 samples, 0.06%)</title><rect x="1.0133%" y="293" width="0.0585%" height="15" fill="rgb(245,159,27)" fg:x="104312936" fg:w="6018054"/><text x="1.2633%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (6,018,054 samples, 0.06%)</title><rect x="1.0133%" y="277" width="0.0585%" height="15" fill="rgb(245,172,44)" fg:x="104312936" fg:w="6018054"/><text x="1.2633%" y="287.50"></text></g><g><title>chlang::cmove::Move::to (6,018,054 samples, 0.06%)</title><rect x="1.0717%" y="261" width="0.0585%" height="15" fill="rgb(236,23,11)" fg:x="110330990" fg:w="6018054"/><text x="1.3217%" y="271.50"></text></g><g><title>chlang::board::Position::bitboard (4,012,036 samples, 0.04%)</title><rect x="1.1302%" y="245" width="0.0390%" height="15" fill="rgb(205,117,38)" fg:x="116349044" fg:w="4012036"/><text x="1.3802%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (21,063,189 samples, 0.20%)</title><rect x="1.0717%" y="293" width="0.2046%" height="15" fill="rgb(237,72,25)" fg:x="110330990" fg:w="21063189"/><text x="1.3217%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (21,063,189 samples, 0.20%)</title><rect x="1.0717%" y="277" width="0.2046%" height="15" fill="rgb(244,70,9)" fg:x="110330990" fg:w="21063189"/><text x="1.3217%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (15,045,135 samples, 0.15%)</title><rect x="1.1302%" y="261" width="0.1461%" height="15" fill="rgb(217,125,39)" fg:x="116349044" fg:w="15045135"/><text x="1.3802%" y="271.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::{{closure}} (32,096,288 samples, 0.31%)</title><rect x="1.0133%" y="309" width="0.3118%" height="15" fill="rgb(235,36,10)" fg:x="104312936" fg:w="32096288"/><text x="1.2633%" y="319.50"></text></g><g><title>core::intrinsics::copy (4,012,036 samples, 0.04%)</title><rect x="1.2860%" y="293" width="0.0390%" height="15" fill="rgb(251,123,47)" fg:x="132397188" fg:w="4012036"/><text x="1.5360%" y="303.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (33,099,297 samples, 0.32%)</title><rect x="1.0133%" y="341" width="0.3215%" height="15" fill="rgb(221,13,13)" fg:x="104312936" fg:w="33099297"/><text x="1.2633%" y="351.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (33,099,297 samples, 0.32%)</title><rect x="1.0133%" y="325" width="0.3215%" height="15" fill="rgb(238,131,9)" fg:x="104312936" fg:w="33099297"/><text x="1.2633%" y="335.50"></text></g><g><title>chlang::cmove::Move::to (5,015,045 samples, 0.05%)</title><rect x="1.3348%" y="261" width="0.0487%" height="15" fill="rgb(211,50,8)" fg:x="137412233" fg:w="5015045"/><text x="1.5848%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (13,039,117 samples, 0.13%)</title><rect x="1.3348%" y="293" width="0.1267%" height="15" fill="rgb(245,182,24)" fg:x="137412233" fg:w="13039117"/><text x="1.5848%" y="303.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (13,039,117 samples, 0.13%)</title><rect x="1.3348%" y="277" width="0.1267%" height="15" fill="rgb(242,14,37)" fg:x="137412233" fg:w="13039117"/><text x="1.5848%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (8,024,072 samples, 0.08%)</title><rect x="1.3835%" y="261" width="0.0779%" height="15" fill="rgb(246,228,12)" fg:x="142427278" fg:w="8024072"/><text x="1.6335%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,009,027 samples, 0.03%)</title><rect x="1.4614%" y="293" width="0.0292%" height="15" fill="rgb(213,55,15)" fg:x="150451350" fg:w="3009027"/><text x="1.7114%" y="303.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (17,051,153 samples, 0.17%)</title><rect x="1.3348%" y="309" width="0.1656%" height="15" fill="rgb(209,9,3)" fg:x="137412233" fg:w="17051153"/><text x="1.5848%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="1.5004%" y="293" width="0.0292%" height="15" fill="rgb(230,59,30)" fg:x="154463386" fg:w="3009027"/><text x="1.7504%" y="303.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="1.5004%" y="277" width="0.0292%" height="15" fill="rgb(209,121,21)" fg:x="154463386" fg:w="3009027"/><text x="1.7504%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.02%)</title><rect x="1.5101%" y="261" width="0.0195%" height="15" fill="rgb(220,109,13)" fg:x="155466395" fg:w="2006018"/><text x="1.7601%" y="271.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (4,012,036 samples, 0.04%)</title><rect x="1.5004%" y="309" width="0.0390%" height="15" fill="rgb(232,18,1)" fg:x="154463386" fg:w="4012036"/><text x="1.7504%" y="319.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="1.5394%" y="261" width="0.0195%" height="15" fill="rgb(215,41,42)" fg:x="158475422" fg:w="2006018"/><text x="1.7894%" y="271.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (4,012,036 samples, 0.04%)</title><rect x="1.5394%" y="293" width="0.0390%" height="15" fill="rgb(224,123,36)" fg:x="158475422" fg:w="4012036"/><text x="1.7894%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="1.5394%" y="277" width="0.0390%" height="15" fill="rgb(240,125,3)" fg:x="158475422" fg:w="4012036"/><text x="1.7894%" y="287.50"></text></g><g><title>chlang::cmove::Move::to (2,006,018 samples, 0.02%)</title><rect x="1.5783%" y="245" width="0.0195%" height="15" fill="rgb(205,98,50)" fg:x="162487458" fg:w="2006018"/><text x="1.8283%" y="255.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (3,009,027 samples, 0.03%)</title><rect x="1.5783%" y="293" width="0.0292%" height="15" fill="rgb(205,185,37)" fg:x="162487458" fg:w="3009027"/><text x="1.8283%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="1.5783%" y="277" width="0.0292%" height="15" fill="rgb(238,207,15)" fg:x="162487458" fg:w="3009027"/><text x="1.8283%" y="287.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="1.5783%" y="261" width="0.0292%" height="15" fill="rgb(213,199,42)" fg:x="162487458" fg:w="3009027"/><text x="1.8283%" y="271.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (8,024,072 samples, 0.08%)</title><rect x="1.5394%" y="309" width="0.0779%" height="15" fill="rgb(235,201,11)" fg:x="158475422" fg:w="8024072"/><text x="1.7894%" y="319.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (31,093,279 samples, 0.30%)</title><rect x="1.3348%" y="341" width="0.3020%" height="15" fill="rgb(207,46,11)" fg:x="137412233" fg:w="31093279"/><text x="1.5848%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (31,093,279 samples, 0.30%)</title><rect x="1.3348%" y="325" width="0.3020%" height="15" fill="rgb(241,35,35)" fg:x="137412233" fg:w="31093279"/><text x="1.5848%" y="335.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (66,198,594 samples, 0.64%)</title><rect x="1.0035%" y="357" width="0.6430%" height="15" fill="rgb(243,32,47)" fg:x="103309927" fg:w="66198594"/><text x="1.2535%" y="367.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (3,009,027 samples, 0.03%)</title><rect x="1.6465%" y="357" width="0.0292%" height="15" fill="rgb(247,202,23)" fg:x="169508521" fg:w="3009027"/><text x="1.8965%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (3,009,027 samples, 0.03%)</title><rect x="1.6758%" y="277" width="0.0292%" height="15" fill="rgb(219,102,11)" fg:x="172517548" fg:w="3009027"/><text x="1.9258%" y="287.50"></text></g><g><title>chlang::cmove::Move::to (4,012,036 samples, 0.04%)</title><rect x="1.7050%" y="261" width="0.0390%" height="15" fill="rgb(243,110,44)" fg:x="175526575" fg:w="4012036"/><text x="1.9550%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (10,030,090 samples, 0.10%)</title><rect x="1.6758%" y="293" width="0.0974%" height="15" fill="rgb(222,74,54)" fg:x="172517548" fg:w="10030090"/><text x="1.9258%" y="303.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (7,021,063 samples, 0.07%)</title><rect x="1.7050%" y="277" width="0.0682%" height="15" fill="rgb(216,99,12)" fg:x="175526575" fg:w="7021063"/><text x="1.9550%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="1.7440%" y="261" width="0.0292%" height="15" fill="rgb(226,22,26)" fg:x="179538611" fg:w="3009027"/><text x="1.9940%" y="271.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (12,036,108 samples, 0.12%)</title><rect x="1.6758%" y="309" width="0.1169%" height="15" fill="rgb(217,163,10)" fg:x="172517548" fg:w="12036108"/><text x="1.9258%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="1.7732%" y="293" width="0.0195%" height="15" fill="rgb(213,25,53)" fg:x="182547638" fg:w="2006018"/><text x="2.0232%" y="303.50"></text></g><g><title>chlang::cmove::Move::to (2,006,018 samples, 0.02%)</title><rect x="1.7927%" y="245" width="0.0195%" height="15" fill="rgb(252,105,26)" fg:x="184553656" fg:w="2006018"/><text x="2.0427%" y="255.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (4,012,036 samples, 0.04%)</title><rect x="1.7927%" y="293" width="0.0390%" height="15" fill="rgb(220,39,43)" fg:x="184553656" fg:w="4012036"/><text x="2.0427%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="1.7927%" y="277" width="0.0390%" height="15" fill="rgb(229,68,48)" fg:x="184553656" fg:w="4012036"/><text x="2.0427%" y="287.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="1.7927%" y="261" width="0.0390%" height="15" fill="rgb(252,8,32)" fg:x="184553656" fg:w="4012036"/><text x="2.0427%" y="271.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.02%)</title><rect x="1.8122%" y="245" width="0.0195%" height="15" fill="rgb(223,20,43)" fg:x="186559674" fg:w="2006018"/><text x="2.0622%" y="255.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (20,060,180 samples, 0.19%)</title><rect x="1.6758%" y="325" width="0.1949%" height="15" fill="rgb(229,81,49)" fg:x="172517548" fg:w="20060180"/><text x="1.9258%" y="335.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (8,024,072 samples, 0.08%)</title><rect x="1.7927%" y="309" width="0.0779%" height="15" fill="rgb(236,28,36)" fg:x="184553656" fg:w="8024072"/><text x="2.0427%" y="319.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (4,012,036 samples, 0.04%)</title><rect x="1.8706%" y="325" width="0.0390%" height="15" fill="rgb(249,185,26)" fg:x="192577728" fg:w="4012036"/><text x="2.1206%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="1.8706%" y="309" width="0.0390%" height="15" fill="rgb(249,174,33)" fg:x="192577728" fg:w="4012036"/><text x="2.1206%" y="319.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="1.8706%" y="293" width="0.0390%" height="15" fill="rgb(233,201,37)" fg:x="192577728" fg:w="4012036"/><text x="2.1206%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="1.8804%" y="277" width="0.0292%" height="15" fill="rgb(221,78,26)" fg:x="193580737" fg:w="3009027"/><text x="2.1304%" y="287.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (4,012,036 samples, 0.04%)</title><rect x="1.9096%" y="309" width="0.0390%" height="15" fill="rgb(250,127,30)" fg:x="196589764" fg:w="4012036"/><text x="2.1596%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="1.9096%" y="293" width="0.0390%" height="15" fill="rgb(230,49,44)" fg:x="196589764" fg:w="4012036"/><text x="2.1596%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="1.9096%" y="277" width="0.0390%" height="15" fill="rgb(229,67,23)" fg:x="196589764" fg:w="4012036"/><text x="2.1596%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="1.9193%" y="261" width="0.0292%" height="15" fill="rgb(249,83,47)" fg:x="197592773" fg:w="3009027"/><text x="2.1693%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="1.9486%" y="293" width="0.0292%" height="15" fill="rgb(215,43,3)" fg:x="200601800" fg:w="3009027"/><text x="2.1986%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="1.9486%" y="277" width="0.0292%" height="15" fill="rgb(238,154,13)" fg:x="200601800" fg:w="3009027"/><text x="2.1986%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="1.9486%" y="261" width="0.0292%" height="15" fill="rgb(219,56,2)" fg:x="200601800" fg:w="3009027"/><text x="2.1986%" y="271.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (4,012,036 samples, 0.04%)</title><rect x="1.9486%" y="309" width="0.0390%" height="15" fill="rgb(233,0,4)" fg:x="200601800" fg:w="4012036"/><text x="2.1986%" y="319.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (10,030,090 samples, 0.10%)</title><rect x="1.9096%" y="325" width="0.0974%" height="15" fill="rgb(235,30,7)" fg:x="196589764" fg:w="10030090"/><text x="2.1596%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="2.0070%" y="325" width="0.0195%" height="15" fill="rgb(250,79,13)" fg:x="206619854" fg:w="2006018"/><text x="2.2570%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (107,321,963 samples, 1.04%)</title><rect x="1.0035%" y="389" width="1.0425%" height="15" fill="rgb(211,146,34)" fg:x="103309927" fg:w="107321963"/><text x="1.2535%" y="399.50"></text></g><g><title>core::slice::sort::unstable::sort (107,321,963 samples, 1.04%)</title><rect x="1.0035%" y="373" width="1.0425%" height="15" fill="rgb(228,22,38)" fg:x="103309927" fg:w="107321963"/><text x="1.2535%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (38,114,342 samples, 0.37%)</title><rect x="1.6758%" y="357" width="0.3702%" height="15" fill="rgb(235,168,5)" fg:x="172517548" fg:w="38114342"/><text x="1.9258%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (38,114,342 samples, 0.37%)</title><rect x="1.6758%" y="341" width="0.3702%" height="15" fill="rgb(221,155,16)" fg:x="172517548" fg:w="38114342"/><text x="1.9258%" y="351.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="2.0460%" y="213" width="0.0292%" height="15" fill="rgb(215,215,53)" fg:x="210631890" fg:w="3009027"/><text x="2.2960%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="389" width="0.0390%" height="15" fill="rgb(223,4,10)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="373" width="0.0390%" height="15" fill="rgb(234,103,6)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="357" width="0.0390%" height="15" fill="rgb(227,97,0)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="341" width="0.0390%" height="15" fill="rgb(234,150,53)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="325" width="0.0390%" height="15" fill="rgb(228,201,54)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="309" width="0.0390%" height="15" fill="rgb(222,22,37)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="293" width="0.0390%" height="15" fill="rgb(237,53,32)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="277" width="0.0390%" height="15" fill="rgb(233,25,53)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="261" width="0.0390%" height="15" fill="rgb(210,40,34)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="245" width="0.0390%" height="15" fill="rgb(241,220,44)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="255.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.04%)</title><rect x="2.0460%" y="229" width="0.0390%" height="15" fill="rgb(235,28,35)" fg:x="210631890" fg:w="4012036"/><text x="2.2960%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (49,147,441 samples, 0.48%)</title><rect x="2.0850%" y="277" width="0.4774%" height="15" fill="rgb(210,56,17)" fg:x="214643926" fg:w="49147441"/><text x="2.3350%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (49,147,441 samples, 0.48%)</title><rect x="2.0850%" y="261" width="0.4774%" height="15" fill="rgb(224,130,29)" fg:x="214643926" fg:w="49147441"/><text x="2.3350%" y="271.50"></text></g><g><title>hashbrown::raw::h2 (2,006,018 samples, 0.02%)</title><rect x="2.5624%" y="277" width="0.0195%" height="15" fill="rgb(235,212,8)" fg:x="263791367" fg:w="2006018"/><text x="2.8124%" y="287.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U: N]&gt; for [T: N]&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="2.5818%" y="197" width="0.0292%" height="15" fill="rgb(223,33,50)" fg:x="265797385" fg:w="3009027"/><text x="2.8318%" y="207.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3,009,027 samples, 0.03%)</title><rect x="2.5818%" y="181" width="0.0292%" height="15" fill="rgb(219,149,13)" fg:x="265797385" fg:w="3009027"/><text x="2.8318%" y="191.50"></text></g><g><title>__memcmp_avx2_movbe (3,009,027 samples, 0.03%)</title><rect x="2.5818%" y="165" width="0.0292%" height="15" fill="rgb(250,156,29)" fg:x="265797385" fg:w="3009027"/><text x="2.8318%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14,042,126 samples, 0.14%)</title><rect x="2.5818%" y="277" width="0.1364%" height="15" fill="rgb(216,193,19)" fg:x="265797385" fg:w="14042126"/><text x="2.8318%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14,042,126 samples, 0.14%)</title><rect x="2.5818%" y="261" width="0.1364%" height="15" fill="rgb(216,135,14)" fg:x="265797385" fg:w="14042126"/><text x="2.8318%" y="271.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (14,042,126 samples, 0.14%)</title><rect x="2.5818%" y="245" width="0.1364%" height="15" fill="rgb(241,47,5)" fg:x="265797385" fg:w="14042126"/><text x="2.8318%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14,042,126 samples, 0.14%)</title><rect x="2.5818%" y="229" width="0.1364%" height="15" fill="rgb(233,42,35)" fg:x="265797385" fg:w="14042126"/><text x="2.8318%" y="239.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (14,042,126 samples, 0.14%)</title><rect x="2.5818%" y="213" width="0.1364%" height="15" fill="rgb(231,13,6)" fg:x="265797385" fg:w="14042126"/><text x="2.8318%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (66,198,594 samples, 0.64%)</title><rect x="2.0850%" y="325" width="0.6430%" height="15" fill="rgb(207,181,40)" fg:x="214643926" fg:w="66198594"/><text x="2.3350%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (66,198,594 samples, 0.64%)</title><rect x="2.0850%" y="309" width="0.6430%" height="15" fill="rgb(254,173,49)" fg:x="214643926" fg:w="66198594"/><text x="2.3350%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (66,198,594 samples, 0.64%)</title><rect x="2.0850%" y="293" width="0.6430%" height="15" fill="rgb(221,1,38)" fg:x="214643926" fg:w="66198594"/><text x="2.3350%" y="303.50"></text></g><g><title>rustc_hash::hash_bytes (2,006,018 samples, 0.02%)</title><rect x="2.7377%" y="197" width="0.0195%" height="15" fill="rgb(206,124,46)" fg:x="281845529" fg:w="2006018"/><text x="2.9877%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (3,009,027 samples, 0.03%)</title><rect x="2.7377%" y="229" width="0.0292%" height="15" fill="rgb(249,21,11)" fg:x="281845529" fg:w="3009027"/><text x="2.9877%" y="239.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (3,009,027 samples, 0.03%)</title><rect x="2.7377%" y="213" width="0.0292%" height="15" fill="rgb(222,201,40)" fg:x="281845529" fg:w="3009027"/><text x="2.9877%" y="223.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="2.7377%" y="261" width="0.0390%" height="15" fill="rgb(235,61,29)" fg:x="281845529" fg:w="4012036"/><text x="2.9877%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="2.7377%" y="245" width="0.0390%" height="15" fill="rgb(219,207,3)" fg:x="281845529" fg:w="4012036"/><text x="2.9877%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6,018,054 samples, 0.06%)</title><rect x="2.7280%" y="293" width="0.0585%" height="15" fill="rgb(222,56,46)" fg:x="280842520" fg:w="6018054"/><text x="2.9780%" y="303.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (6,018,054 samples, 0.06%)</title><rect x="2.7280%" y="277" width="0.0585%" height="15" fill="rgb(239,76,54)" fg:x="280842520" fg:w="6018054"/><text x="2.9780%" y="287.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (74,222,666 samples, 0.72%)</title><rect x="2.0850%" y="373" width="0.7210%" height="15" fill="rgb(231,124,27)" fg:x="214643926" fg:w="74222666"/><text x="2.3350%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (74,222,666 samples, 0.72%)</title><rect x="2.0850%" y="357" width="0.7210%" height="15" fill="rgb(249,195,6)" fg:x="214643926" fg:w="74222666"/><text x="2.3350%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (74,222,666 samples, 0.72%)</title><rect x="2.0850%" y="341" width="0.7210%" height="15" fill="rgb(237,174,47)" fg:x="214643926" fg:w="74222666"/><text x="2.3350%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (8,024,072 samples, 0.08%)</title><rect x="2.7280%" y="325" width="0.0779%" height="15" fill="rgb(206,201,31)" fg:x="280842520" fg:w="8024072"/><text x="2.9780%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,024,072 samples, 0.08%)</title><rect x="2.7280%" y="309" width="0.0779%" height="15" fill="rgb(231,57,52)" fg:x="280842520" fg:w="8024072"/><text x="2.9780%" y="319.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::finish (2,006,018 samples, 0.02%)</title><rect x="2.7864%" y="293" width="0.0195%" height="15" fill="rgb(248,177,22)" fg:x="286860574" fg:w="2006018"/><text x="3.0364%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (2,006,018 samples, 0.02%)</title><rect x="2.7864%" y="277" width="0.0195%" height="15" fill="rgb(215,211,37)" fg:x="286860574" fg:w="2006018"/><text x="3.0364%" y="287.50"></text></g><g><title>std::collections::hash::map::map_entry (5,015,045 samples, 0.05%)</title><rect x="2.8059%" y="357" width="0.0487%" height="15" fill="rgb(241,128,51)" fg:x="288866592" fg:w="5015045"/><text x="3.0559%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,012,036 samples, 0.04%)</title><rect x="2.8546%" y="341" width="0.0390%" height="15" fill="rgb(227,165,31)" fg:x="293881637" fg:w="4012036"/><text x="3.1046%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,012,036 samples, 0.04%)</title><rect x="2.8546%" y="325" width="0.0390%" height="15" fill="rgb(228,167,24)" fg:x="293881637" fg:w="4012036"/><text x="3.1046%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (4,012,036 samples, 0.04%)</title><rect x="2.8936%" y="341" width="0.0390%" height="15" fill="rgb(228,143,12)" fg:x="297893673" fg:w="4012036"/><text x="3.1436%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,012,036 samples, 0.04%)</title><rect x="2.8936%" y="325" width="0.0390%" height="15" fill="rgb(249,149,8)" fg:x="297893673" fg:w="4012036"/><text x="3.1436%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="2.8936%" y="309" width="0.0390%" height="15" fill="rgb(243,35,44)" fg:x="297893673" fg:w="4012036"/><text x="3.1436%" y="319.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="2.8936%" y="293" width="0.0390%" height="15" fill="rgb(246,89,9)" fg:x="297893673" fg:w="4012036"/><text x="3.1436%" y="303.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="2.8936%" y="277" width="0.0390%" height="15" fill="rgb(233,213,13)" fg:x="297893673" fg:w="4012036"/><text x="3.1436%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="2.8936%" y="261" width="0.0390%" height="15" fill="rgb(233,141,41)" fg:x="297893673" fg:w="4012036"/><text x="3.1436%" y="271.50"></text></g><g><title>core::hash::Hash::hash_slice (3,009,027 samples, 0.03%)</title><rect x="2.9034%" y="245" width="0.0292%" height="15" fill="rgb(239,167,4)" fg:x="298896682" fg:w="3009027"/><text x="3.1534%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5,015,045 samples, 0.05%)</title><rect x="2.9521%" y="213" width="0.0487%" height="15" fill="rgb(209,217,16)" fg:x="303911727" fg:w="5015045"/><text x="3.2021%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5,015,045 samples, 0.05%)</title><rect x="2.9521%" y="197" width="0.0487%" height="15" fill="rgb(219,88,35)" fg:x="303911727" fg:w="5015045"/><text x="3.2021%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (10,030,090 samples, 0.10%)</title><rect x="2.9326%" y="261" width="0.0974%" height="15" fill="rgb(220,193,23)" fg:x="301905709" fg:w="10030090"/><text x="3.1826%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (9,027,081 samples, 0.09%)</title><rect x="2.9423%" y="245" width="0.0877%" height="15" fill="rgb(230,90,52)" fg:x="302908718" fg:w="9027081"/><text x="3.1923%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (8,024,072 samples, 0.08%)</title><rect x="2.9521%" y="229" width="0.0779%" height="15" fill="rgb(252,106,19)" fg:x="303911727" fg:w="8024072"/><text x="3.2021%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,006,018 samples, 0.02%)</title><rect x="3.0105%" y="213" width="0.0195%" height="15" fill="rgb(206,74,20)" fg:x="309929781" fg:w="2006018"/><text x="3.2605%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (3,009,027 samples, 0.03%)</title><rect x="3.0398%" y="133" width="0.0292%" height="15" fill="rgb(230,138,44)" fg:x="312938808" fg:w="3009027"/><text x="3.2898%" y="143.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (3,009,027 samples, 0.03%)</title><rect x="3.0398%" y="117" width="0.0292%" height="15" fill="rgb(235,182,43)" fg:x="312938808" fg:w="3009027"/><text x="3.2898%" y="127.50"></text></g><g><title>rustc_hash::hash_bytes (3,009,027 samples, 0.03%)</title><rect x="3.0398%" y="101" width="0.0292%" height="15" fill="rgb(242,16,51)" fg:x="312938808" fg:w="3009027"/><text x="3.2898%" y="111.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="3.0398%" y="165" width="0.0390%" height="15" fill="rgb(248,9,4)" fg:x="312938808" fg:w="4012036"/><text x="3.2898%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="3.0398%" y="149" width="0.0390%" height="15" fill="rgb(210,31,22)" fg:x="312938808" fg:w="4012036"/><text x="3.2898%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="3.0787%" y="149" width="0.0195%" height="15" fill="rgb(239,54,39)" fg:x="316950844" fg:w="2006018"/><text x="3.3287%" y="159.50"></text></g><g><title>core::hash::Hasher::write_isize (2,006,018 samples, 0.02%)</title><rect x="3.0787%" y="133" width="0.0195%" height="15" fill="rgb(230,99,41)" fg:x="316950844" fg:w="2006018"/><text x="3.3287%" y="143.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (2,006,018 samples, 0.02%)</title><rect x="3.0787%" y="117" width="0.0195%" height="15" fill="rgb(253,106,12)" fg:x="316950844" fg:w="2006018"/><text x="3.3287%" y="127.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2,006,018 samples, 0.02%)</title><rect x="3.0787%" y="101" width="0.0195%" height="15" fill="rgb(213,46,41)" fg:x="316950844" fg:w="2006018"/><text x="3.3287%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2,006,018 samples, 0.02%)</title><rect x="3.0787%" y="85" width="0.0195%" height="15" fill="rgb(215,133,35)" fg:x="316950844" fg:w="2006018"/><text x="3.3287%" y="95.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="3.0787%" y="165" width="0.0292%" height="15" fill="rgb(213,28,5)" fg:x="316950844" fg:w="3009027"/><text x="3.3287%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="3.0398%" y="261" width="0.0779%" height="15" fill="rgb(215,77,49)" fg:x="312938808" fg:w="8024072"/><text x="3.2898%" y="271.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="3.0398%" y="245" width="0.0779%" height="15" fill="rgb(248,100,22)" fg:x="312938808" fg:w="8024072"/><text x="3.2898%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (8,024,072 samples, 0.08%)</title><rect x="3.0398%" y="229" width="0.0779%" height="15" fill="rgb(208,67,9)" fg:x="312938808" fg:w="8024072"/><text x="3.2898%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,024,072 samples, 0.08%)</title><rect x="3.0398%" y="213" width="0.0779%" height="15" fill="rgb(219,133,21)" fg:x="312938808" fg:w="8024072"/><text x="3.2898%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,024,072 samples, 0.08%)</title><rect x="3.0398%" y="197" width="0.0779%" height="15" fill="rgb(246,46,29)" fg:x="312938808" fg:w="8024072"/><text x="3.2898%" y="207.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (8,024,072 samples, 0.08%)</title><rect x="3.0398%" y="181" width="0.0779%" height="15" fill="rgb(246,185,52)" fg:x="312938808" fg:w="8024072"/><text x="3.2898%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (25,075,225 samples, 0.24%)</title><rect x="2.9326%" y="309" width="0.2436%" height="15" fill="rgb(252,136,11)" fg:x="301905709" fg:w="25075225"/><text x="3.1826%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (25,075,225 samples, 0.24%)</title><rect x="2.9326%" y="293" width="0.2436%" height="15" fill="rgb(219,138,53)" fg:x="301905709" fg:w="25075225"/><text x="3.1826%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (25,075,225 samples, 0.24%)</title><rect x="2.9326%" y="277" width="0.2436%" height="15" fill="rgb(211,51,23)" fg:x="301905709" fg:w="25075225"/><text x="3.1826%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,018,054 samples, 0.06%)</title><rect x="3.1177%" y="261" width="0.0585%" height="15" fill="rgb(247,221,28)" fg:x="320962880" fg:w="6018054"/><text x="3.3677%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (27,081,243 samples, 0.26%)</title><rect x="2.9326%" y="341" width="0.2631%" height="15" fill="rgb(251,222,45)" fg:x="301905709" fg:w="27081243"/><text x="3.1826%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (27,081,243 samples, 0.26%)</title><rect x="2.9326%" y="325" width="0.2631%" height="15" fill="rgb(217,162,53)" fg:x="301905709" fg:w="27081243"/><text x="3.1826%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (43,129,387 samples, 0.42%)</title><rect x="2.8059%" y="373" width="0.4189%" height="15" fill="rgb(229,93,14)" fg:x="288866592" fg:w="43129387"/><text x="3.0559%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (38,114,342 samples, 0.37%)</title><rect x="2.8546%" y="357" width="0.3702%" height="15" fill="rgb(209,67,49)" fg:x="293881637" fg:w="38114342"/><text x="3.1046%" y="367.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (43,129,387 samples, 0.42%)</title><rect x="3.2249%" y="373" width="0.4189%" height="15" fill="rgb(213,87,29)" fg:x="331995979" fg:w="43129387"/><text x="3.4749%" y="383.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (43,129,387 samples, 0.42%)</title><rect x="3.2249%" y="357" width="0.4189%" height="15" fill="rgb(205,151,52)" fg:x="331995979" fg:w="43129387"/><text x="3.4749%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (43,129,387 samples, 0.42%)</title><rect x="3.2249%" y="341" width="0.4189%" height="15" fill="rgb(253,215,39)" fg:x="331995979" fg:w="43129387"/><text x="3.4749%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (43,129,387 samples, 0.42%)</title><rect x="3.2249%" y="325" width="0.4189%" height="15" fill="rgb(221,220,41)" fg:x="331995979" fg:w="43129387"/><text x="3.4749%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (42,126,378 samples, 0.41%)</title><rect x="3.2346%" y="309" width="0.4092%" height="15" fill="rgb(218,133,21)" fg:x="332998988" fg:w="42126378"/><text x="3.4846%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (42,126,378 samples, 0.41%)</title><rect x="3.2346%" y="293" width="0.4092%" height="15" fill="rgb(221,193,43)" fg:x="332998988" fg:w="42126378"/><text x="3.4846%" y="303.50"></text></g><g><title>core::ptr::write (42,126,378 samples, 0.41%)</title><rect x="3.2346%" y="277" width="0.4092%" height="15" fill="rgb(240,128,52)" fg:x="332998988" fg:w="42126378"/><text x="3.4846%" y="287.50"></text></g><g><title>chlang::board::Board::key (3,009,027 samples, 0.03%)</title><rect x="3.6438%" y="373" width="0.0292%" height="15" fill="rgb(253,114,12)" fg:x="375125366" fg:w="3009027"/><text x="3.8938%" y="383.50"></text></g><g><title>__rust_dealloc (2,006,018 samples, 0.02%)</title><rect x="3.6730%" y="261" width="0.0195%" height="15" fill="rgb(215,223,47)" fg:x="378134393" fg:w="2006018"/><text x="3.9230%" y="271.50"></text></g><g><title>unlink_chunk (2,006,018 samples, 0.02%)</title><rect x="3.6925%" y="229" width="0.0195%" height="15" fill="rgb(248,225,23)" fg:x="380140411" fg:w="2006018"/><text x="3.9425%" y="239.50"></text></g><g><title>_int_free (8,024,072 samples, 0.08%)</title><rect x="3.6925%" y="245" width="0.0779%" height="15" fill="rgb(250,108,0)" fg:x="380140411" fg:w="8024072"/><text x="3.9425%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (11,033,099 samples, 0.11%)</title><rect x="3.6730%" y="309" width="0.1072%" height="15" fill="rgb(228,208,7)" fg:x="378134393" fg:w="11033099"/><text x="3.9230%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11,033,099 samples, 0.11%)</title><rect x="3.6730%" y="293" width="0.1072%" height="15" fill="rgb(244,45,10)" fg:x="378134393" fg:w="11033099"/><text x="3.9230%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (11,033,099 samples, 0.11%)</title><rect x="3.6730%" y="277" width="0.1072%" height="15" fill="rgb(207,125,25)" fg:x="378134393" fg:w="11033099"/><text x="3.9230%" y="287.50"></text></g><g><title>__GI___libc_free (9,027,081 samples, 0.09%)</title><rect x="3.6925%" y="261" width="0.0877%" height="15" fill="rgb(210,195,18)" fg:x="380140411" fg:w="9027081"/><text x="3.9425%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (12,036,108 samples, 0.12%)</title><rect x="3.6730%" y="357" width="0.1169%" height="15" fill="rgb(249,80,12)" fg:x="378134393" fg:w="12036108"/><text x="3.9230%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (12,036,108 samples, 0.12%)</title><rect x="3.6730%" y="341" width="0.1169%" height="15" fill="rgb(221,65,9)" fg:x="378134393" fg:w="12036108"/><text x="3.9230%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.12%)</title><rect x="3.6730%" y="325" width="0.1169%" height="15" fill="rgb(235,49,36)" fg:x="378134393" fg:w="12036108"/><text x="3.9230%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2,006,018 samples, 0.02%)</title><rect x="3.7997%" y="277" width="0.0195%" height="15" fill="rgb(225,32,20)" fg:x="391173510" fg:w="2006018"/><text x="4.0497%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2,006,018 samples, 0.02%)</title><rect x="3.7997%" y="261" width="0.0195%" height="15" fill="rgb(215,141,46)" fg:x="391173510" fg:w="2006018"/><text x="4.0497%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,006,018 samples, 0.02%)</title><rect x="3.7997%" y="245" width="0.0195%" height="15" fill="rgb(250,160,47)" fg:x="391173510" fg:w="2006018"/><text x="4.0497%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (4,012,036 samples, 0.04%)</title><rect x="3.8387%" y="277" width="0.0390%" height="15" fill="rgb(216,222,40)" fg:x="395185546" fg:w="4012036"/><text x="4.0887%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="3.8776%" y="277" width="0.0292%" height="15" fill="rgb(234,217,39)" fg:x="399197582" fg:w="3009027"/><text x="4.1276%" y="287.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="3.8776%" y="261" width="0.0292%" height="15" fill="rgb(207,178,40)" fg:x="399197582" fg:w="3009027"/><text x="4.1276%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="3.8776%" y="245" width="0.0292%" height="15" fill="rgb(221,136,13)" fg:x="399197582" fg:w="3009027"/><text x="4.1276%" y="255.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="3.8776%" y="229" width="0.0292%" height="15" fill="rgb(249,199,10)" fg:x="399197582" fg:w="3009027"/><text x="4.1276%" y="239.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U: N]&gt; for [T: N]&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="3.8776%" y="213" width="0.0292%" height="15" fill="rgb(249,222,13)" fg:x="399197582" fg:w="3009027"/><text x="4.1276%" y="223.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3,009,027 samples, 0.03%)</title><rect x="3.8776%" y="197" width="0.0292%" height="15" fill="rgb(244,185,38)" fg:x="399197582" fg:w="3009027"/><text x="4.1276%" y="207.50"></text></g><g><title>__memcmp_avx2_movbe (3,009,027 samples, 0.03%)</title><rect x="3.8776%" y="181" width="0.0292%" height="15" fill="rgb(236,202,9)" fg:x="399197582" fg:w="3009027"/><text x="4.1276%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13,039,117 samples, 0.13%)</title><rect x="3.7997%" y="309" width="0.1267%" height="15" fill="rgb(250,229,37)" fg:x="391173510" fg:w="13039117"/><text x="4.0497%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (13,039,117 samples, 0.13%)</title><rect x="3.7997%" y="293" width="0.1267%" height="15" fill="rgb(206,174,23)" fg:x="391173510" fg:w="13039117"/><text x="4.0497%" y="303.50"></text></g><g><title>core::intrinsics::likely (2,006,018 samples, 0.02%)</title><rect x="3.9069%" y="277" width="0.0195%" height="15" fill="rgb(211,33,43)" fg:x="402206609" fg:w="2006018"/><text x="4.1569%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="3.9263%" y="229" width="0.0195%" height="15" fill="rgb(245,58,50)" fg:x="404212627" fg:w="2006018"/><text x="4.1763%" y="239.50"></text></g><g><title>rustc_hash::multiply_mix (2,006,018 samples, 0.02%)</title><rect x="3.9458%" y="149" width="0.0195%" height="15" fill="rgb(244,68,36)" fg:x="406218645" fg:w="2006018"/><text x="4.1958%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (3,009,027 samples, 0.03%)</title><rect x="3.9458%" y="197" width="0.0292%" height="15" fill="rgb(232,229,15)" fg:x="406218645" fg:w="3009027"/><text x="4.1958%" y="207.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (3,009,027 samples, 0.03%)</title><rect x="3.9458%" y="181" width="0.0292%" height="15" fill="rgb(254,30,23)" fg:x="406218645" fg:w="3009027"/><text x="4.1958%" y="191.50"></text></g><g><title>rustc_hash::hash_bytes (3,009,027 samples, 0.03%)</title><rect x="3.9458%" y="165" width="0.0292%" height="15" fill="rgb(235,160,14)" fg:x="406218645" fg:w="3009027"/><text x="4.1958%" y="175.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (3,009,027 samples, 0.03%)</title><rect x="3.9751%" y="197" width="0.0292%" height="15" fill="rgb(212,155,44)" fg:x="409227672" fg:w="3009027"/><text x="4.2251%" y="207.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (3,009,027 samples, 0.03%)</title><rect x="3.9751%" y="181" width="0.0292%" height="15" fill="rgb(226,2,50)" fg:x="409227672" fg:w="3009027"/><text x="4.2251%" y="191.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (3,009,027 samples, 0.03%)</title><rect x="3.9751%" y="165" width="0.0292%" height="15" fill="rgb(234,177,6)" fg:x="409227672" fg:w="3009027"/><text x="4.2251%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (3,009,027 samples, 0.03%)</title><rect x="3.9751%" y="149" width="0.0292%" height="15" fill="rgb(217,24,9)" fg:x="409227672" fg:w="3009027"/><text x="4.2251%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="4.0043%" y="181" width="0.0195%" height="15" fill="rgb(220,13,46)" fg:x="412236699" fg:w="2006018"/><text x="4.2543%" y="191.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u8 (2,006,018 samples, 0.02%)</title><rect x="4.0043%" y="165" width="0.0195%" height="15" fill="rgb(239,221,27)" fg:x="412236699" fg:w="2006018"/><text x="4.2543%" y="175.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2,006,018 samples, 0.02%)</title><rect x="4.0043%" y="149" width="0.0195%" height="15" fill="rgb(222,198,25)" fg:x="412236699" fg:w="2006018"/><text x="4.2543%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (2,006,018 samples, 0.02%)</title><rect x="4.0043%" y="133" width="0.0195%" height="15" fill="rgb(211,99,13)" fg:x="412236699" fg:w="2006018"/><text x="4.2543%" y="143.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12,036,108 samples, 0.12%)</title><rect x="3.9458%" y="229" width="0.1169%" height="15" fill="rgb(232,111,31)" fg:x="406218645" fg:w="12036108"/><text x="4.1958%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12,036,108 samples, 0.12%)</title><rect x="3.9458%" y="213" width="0.1169%" height="15" fill="rgb(245,82,37)" fg:x="406218645" fg:w="12036108"/><text x="4.1958%" y="223.50"></text></g><g><title>core::hash::Hash::hash_slice (6,018,054 samples, 0.06%)</title><rect x="4.0043%" y="197" width="0.0585%" height="15" fill="rgb(227,149,46)" fg:x="412236699" fg:w="6018054"/><text x="4.2543%" y="207.50"></text></g><g><title>hashbrown::map::make_hash (16,048,144 samples, 0.16%)</title><rect x="3.9263%" y="309" width="0.1559%" height="15" fill="rgb(218,36,50)" fg:x="404212627" fg:w="16048144"/><text x="4.1763%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,048,144 samples, 0.16%)</title><rect x="3.9263%" y="293" width="0.1559%" height="15" fill="rgb(226,80,48)" fg:x="404212627" fg:w="16048144"/><text x="4.1763%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16,048,144 samples, 0.16%)</title><rect x="3.9263%" y="277" width="0.1559%" height="15" fill="rgb(238,224,15)" fg:x="404212627" fg:w="16048144"/><text x="4.1763%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16,048,144 samples, 0.16%)</title><rect x="3.9263%" y="261" width="0.1559%" height="15" fill="rgb(241,136,10)" fg:x="404212627" fg:w="16048144"/><text x="4.1763%" y="271.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (16,048,144 samples, 0.16%)</title><rect x="3.9263%" y="245" width="0.1559%" height="15" fill="rgb(208,32,45)" fg:x="404212627" fg:w="16048144"/><text x="4.1763%" y="255.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="4.0627%" y="229" width="0.0195%" height="15" fill="rgb(207,135,9)" fg:x="418254753" fg:w="2006018"/><text x="4.3127%" y="239.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,006,018 samples, 0.02%)</title><rect x="4.0920%" y="181" width="0.0195%" height="15" fill="rgb(206,86,44)" fg:x="421263780" fg:w="2006018"/><text x="4.3420%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,009,027 samples, 0.03%)</title><rect x="4.0920%" y="197" width="0.0292%" height="15" fill="rgb(245,177,15)" fg:x="421263780" fg:w="3009027"/><text x="4.3420%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (5,015,045 samples, 0.05%)</title><rect x="4.0822%" y="229" width="0.0487%" height="15" fill="rgb(206,64,50)" fg:x="420260771" fg:w="5015045"/><text x="4.3322%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (5,015,045 samples, 0.05%)</title><rect x="4.0822%" y="213" width="0.0487%" height="15" fill="rgb(234,36,40)" fg:x="420260771" fg:w="5015045"/><text x="4.3322%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (8,024,072 samples, 0.08%)</title><rect x="4.1407%" y="197" width="0.0779%" height="15" fill="rgb(213,64,8)" fg:x="426278825" fg:w="8024072"/><text x="4.3907%" y="207.50"></text></g><g><title>core::intrinsics::unlikely (7,021,063 samples, 0.07%)</title><rect x="4.1504%" y="181" width="0.0682%" height="15" fill="rgb(210,75,36)" fg:x="427281834" fg:w="7021063"/><text x="4.4004%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5,015,045 samples, 0.05%)</title><rect x="4.2186%" y="181" width="0.0487%" height="15" fill="rgb(229,88,21)" fg:x="434302897" fg:w="5015045"/><text x="4.4686%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5,015,045 samples, 0.05%)</title><rect x="4.2186%" y="165" width="0.0487%" height="15" fill="rgb(252,204,47)" fg:x="434302897" fg:w="5015045"/><text x="4.4686%" y="175.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3,009,027 samples, 0.03%)</title><rect x="4.2673%" y="181" width="0.0292%" height="15" fill="rgb(208,77,27)" fg:x="439317942" fg:w="3009027"/><text x="4.5173%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (18,054,162 samples, 0.18%)</title><rect x="4.1309%" y="229" width="0.1754%" height="15" fill="rgb(221,76,26)" fg:x="425275816" fg:w="18054162"/><text x="4.3809%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (17,051,153 samples, 0.17%)</title><rect x="4.1407%" y="213" width="0.1656%" height="15" fill="rgb(225,139,18)" fg:x="426278825" fg:w="17051153"/><text x="4.3907%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (9,027,081 samples, 0.09%)</title><rect x="4.2186%" y="197" width="0.0877%" height="15" fill="rgb(230,137,11)" fg:x="434302897" fg:w="9027081"/><text x="4.4686%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="4.3063%" y="117" width="0.0195%" height="15" fill="rgb(212,28,1)" fg:x="443329978" fg:w="2006018"/><text x="4.5563%" y="127.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (2,006,018 samples, 0.02%)</title><rect x="4.3063%" y="101" width="0.0195%" height="15" fill="rgb(248,164,17)" fg:x="443329978" fg:w="2006018"/><text x="4.5563%" y="111.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2,006,018 samples, 0.02%)</title><rect x="4.3063%" y="85" width="0.0195%" height="15" fill="rgb(222,171,42)" fg:x="443329978" fg:w="2006018"/><text x="4.5563%" y="95.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (3,009,027 samples, 0.03%)</title><rect x="4.3258%" y="85" width="0.0292%" height="15" fill="rgb(243,84,45)" fg:x="445335996" fg:w="3009027"/><text x="4.5758%" y="95.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (3,009,027 samples, 0.03%)</title><rect x="4.3258%" y="69" width="0.0292%" height="15" fill="rgb(252,49,23)" fg:x="445335996" fg:w="3009027"/><text x="4.5758%" y="79.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (2,006,018 samples, 0.02%)</title><rect x="4.3355%" y="53" width="0.0195%" height="15" fill="rgb(215,19,7)" fg:x="446339005" fg:w="2006018"/><text x="4.5855%" y="63.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2,006,018 samples, 0.02%)</title><rect x="4.3355%" y="37" width="0.0195%" height="15" fill="rgb(238,81,41)" fg:x="446339005" fg:w="2006018"/><text x="4.5855%" y="47.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (7,021,063 samples, 0.07%)</title><rect x="4.3258%" y="117" width="0.0682%" height="15" fill="rgb(210,199,37)" fg:x="445335996" fg:w="7021063"/><text x="4.5758%" y="127.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7,021,063 samples, 0.07%)</title><rect x="4.3258%" y="101" width="0.0682%" height="15" fill="rgb(244,192,49)" fg:x="445335996" fg:w="7021063"/><text x="4.5758%" y="111.50"></text></g><g><title>core::hash::Hash::hash_slice (4,012,036 samples, 0.04%)</title><rect x="4.3550%" y="85" width="0.0390%" height="15" fill="rgb(226,211,11)" fg:x="448345023" fg:w="4012036"/><text x="4.6050%" y="95.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="4.3940%" y="101" width="0.0292%" height="15" fill="rgb(236,162,54)" fg:x="452357059" fg:w="3009027"/><text x="4.6440%" y="111.50"></text></g><g><title>core::hash::Hasher::write_isize (3,009,027 samples, 0.03%)</title><rect x="4.3940%" y="85" width="0.0292%" height="15" fill="rgb(220,229,9)" fg:x="452357059" fg:w="3009027"/><text x="4.6440%" y="95.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (3,009,027 samples, 0.03%)</title><rect x="4.3940%" y="69" width="0.0292%" height="15" fill="rgb(250,87,22)" fg:x="452357059" fg:w="3009027"/><text x="4.6440%" y="79.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (3,009,027 samples, 0.03%)</title><rect x="4.3940%" y="53" width="0.0292%" height="15" fill="rgb(239,43,17)" fg:x="452357059" fg:w="3009027"/><text x="4.6440%" y="63.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (3,009,027 samples, 0.03%)</title><rect x="4.3940%" y="37" width="0.0292%" height="15" fill="rgb(231,177,25)" fg:x="452357059" fg:w="3009027"/><text x="4.6440%" y="47.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="4.3940%" y="117" width="0.0390%" height="15" fill="rgb(219,179,1)" fg:x="452357059" fg:w="4012036"/><text x="4.6440%" y="127.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14,042,126 samples, 0.14%)</title><rect x="4.3063%" y="165" width="0.1364%" height="15" fill="rgb(238,219,53)" fg:x="443329978" fg:w="14042126"/><text x="4.5563%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14,042,126 samples, 0.14%)</title><rect x="4.3063%" y="149" width="0.1364%" height="15" fill="rgb(232,167,36)" fg:x="443329978" fg:w="14042126"/><text x="4.5563%" y="159.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (14,042,126 samples, 0.14%)</title><rect x="4.3063%" y="133" width="0.1364%" height="15" fill="rgb(244,19,51)" fg:x="443329978" fg:w="14042126"/><text x="4.5563%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (15,045,135 samples, 0.15%)</title><rect x="4.3063%" y="229" width="0.1461%" height="15" fill="rgb(224,6,22)" fg:x="443329978" fg:w="15045135"/><text x="4.5563%" y="239.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (15,045,135 samples, 0.15%)</title><rect x="4.3063%" y="213" width="0.1461%" height="15" fill="rgb(224,145,5)" fg:x="443329978" fg:w="15045135"/><text x="4.5563%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (15,045,135 samples, 0.15%)</title><rect x="4.3063%" y="197" width="0.1461%" height="15" fill="rgb(234,130,49)" fg:x="443329978" fg:w="15045135"/><text x="4.5563%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15,045,135 samples, 0.15%)</title><rect x="4.3063%" y="181" width="0.1461%" height="15" fill="rgb(254,6,2)" fg:x="443329978" fg:w="15045135"/><text x="4.5563%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (39,117,351 samples, 0.38%)</title><rect x="4.0822%" y="245" width="0.3800%" height="15" fill="rgb(208,96,46)" fg:x="420260771" fg:w="39117351"/><text x="4.3322%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (41,123,369 samples, 0.40%)</title><rect x="4.0822%" y="261" width="0.3995%" height="15" fill="rgb(239,3,39)" fg:x="420260771" fg:w="41123369"/><text x="4.3322%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (42,126,378 samples, 0.41%)</title><rect x="4.0822%" y="309" width="0.4092%" height="15" fill="rgb(233,210,1)" fg:x="420260771" fg:w="42126378"/><text x="4.3322%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (42,126,378 samples, 0.41%)</title><rect x="4.0822%" y="293" width="0.4092%" height="15" fill="rgb(244,137,37)" fg:x="420260771" fg:w="42126378"/><text x="4.3322%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (42,126,378 samples, 0.41%)</title><rect x="4.0822%" y="277" width="0.4092%" height="15" fill="rgb(240,136,2)" fg:x="420260771" fg:w="42126378"/><text x="4.3322%" y="287.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (73,219,657 samples, 0.71%)</title><rect x="3.7997%" y="325" width="0.7112%" height="15" fill="rgb(239,18,37)" fg:x="391173510" fg:w="73219657"/><text x="4.0497%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (75,225,675 samples, 0.73%)</title><rect x="3.7899%" y="341" width="0.7307%" height="15" fill="rgb(218,185,22)" fg:x="390170501" fg:w="75225675"/><text x="4.0399%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (5,015,045 samples, 0.05%)</title><rect x="4.5207%" y="245" width="0.0487%" height="15" fill="rgb(225,218,4)" fg:x="465396176" fg:w="5015045"/><text x="4.7707%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (5,015,045 samples, 0.05%)</title><rect x="4.5207%" y="229" width="0.0487%" height="15" fill="rgb(230,182,32)" fg:x="465396176" fg:w="5015045"/><text x="4.7707%" y="239.50"></text></g><g><title>hashbrown::raw::is_full (5,015,045 samples, 0.05%)</title><rect x="4.5207%" y="213" width="0.0487%" height="15" fill="rgb(242,56,43)" fg:x="465396176" fg:w="5015045"/><text x="4.7707%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4,012,036 samples, 0.04%)</title><rect x="4.5694%" y="229" width="0.0390%" height="15" fill="rgb(233,99,24)" fg:x="470411221" fg:w="4012036"/><text x="4.8194%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,012,036 samples, 0.04%)</title><rect x="4.5694%" y="213" width="0.0390%" height="15" fill="rgb(234,209,42)" fg:x="470411221" fg:w="4012036"/><text x="4.8194%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (11,033,099 samples, 0.11%)</title><rect x="4.5207%" y="277" width="0.1072%" height="15" fill="rgb(227,7,12)" fg:x="465396176" fg:w="11033099"/><text x="4.7707%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (11,033,099 samples, 0.11%)</title><rect x="4.5207%" y="261" width="0.1072%" height="15" fill="rgb(245,203,43)" fg:x="465396176" fg:w="11033099"/><text x="4.7707%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (6,018,054 samples, 0.06%)</title><rect x="4.5694%" y="245" width="0.0585%" height="15" fill="rgb(238,205,33)" fg:x="470411221" fg:w="6018054"/><text x="4.8194%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,006,018 samples, 0.02%)</title><rect x="4.6083%" y="229" width="0.0195%" height="15" fill="rgb(231,56,7)" fg:x="474423257" fg:w="2006018"/><text x="4.8583%" y="239.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (14,042,126 samples, 0.14%)</title><rect x="4.5207%" y="341" width="0.1364%" height="15" fill="rgb(244,186,29)" fg:x="465396176" fg:w="14042126"/><text x="4.7707%" y="351.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (14,042,126 samples, 0.14%)</title><rect x="4.5207%" y="325" width="0.1364%" height="15" fill="rgb(234,111,31)" fg:x="465396176" fg:w="14042126"/><text x="4.7707%" y="335.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (14,042,126 samples, 0.14%)</title><rect x="4.5207%" y="309" width="0.1364%" height="15" fill="rgb(241,149,10)" fg:x="465396176" fg:w="14042126"/><text x="4.7707%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (14,042,126 samples, 0.14%)</title><rect x="4.5207%" y="293" width="0.1364%" height="15" fill="rgb(249,206,44)" fg:x="465396176" fg:w="14042126"/><text x="4.7707%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket (3,009,027 samples, 0.03%)</title><rect x="4.6278%" y="277" width="0.0292%" height="15" fill="rgb(251,153,30)" fg:x="476429275" fg:w="3009027"/><text x="4.8778%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3,009,027 samples, 0.03%)</title><rect x="4.6278%" y="261" width="0.0292%" height="15" fill="rgb(239,152,38)" fg:x="476429275" fg:w="3009027"/><text x="4.8778%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,009,027 samples, 0.03%)</title><rect x="4.6278%" y="245" width="0.0292%" height="15" fill="rgb(249,139,47)" fg:x="476429275" fg:w="3009027"/><text x="4.8778%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32,rustc_hash::FxBuildHasher&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="4.6571%" y="341" width="0.0195%" height="15" fill="rgb(244,64,35)" fg:x="479438302" fg:w="2006018"/><text x="4.9071%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32,rustc_hash::FxBuildHasher&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="4.6571%" y="325" width="0.0195%" height="15" fill="rgb(216,46,15)" fg:x="479438302" fg:w="2006018"/><text x="4.9071%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;chlang::board::KeyStruct,i32)&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="4.6571%" y="309" width="0.0195%" height="15" fill="rgb(250,74,19)" fg:x="479438302" fg:w="2006018"/><text x="4.9071%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="4.6571%" y="293" width="0.0195%" height="15" fill="rgb(249,42,33)" fg:x="479438302" fg:w="2006018"/><text x="4.9071%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,006,018 samples, 0.02%)</title><rect x="4.6571%" y="277" width="0.0195%" height="15" fill="rgb(242,149,17)" fg:x="479438302" fg:w="2006018"/><text x="4.9071%" y="287.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (96,288,864 samples, 0.94%)</title><rect x="3.7899%" y="357" width="0.9353%" height="15" fill="rgb(244,29,21)" fg:x="390170501" fg:w="96288864"/><text x="4.0399%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2,006,018 samples, 0.02%)</title><rect x="4.7253%" y="341" width="0.0195%" height="15" fill="rgb(220,130,37)" fg:x="486459365" fg:w="2006018"/><text x="4.9753%" y="351.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.02%)</title><rect x="4.7447%" y="197" width="0.0195%" height="15" fill="rgb(211,67,2)" fg:x="488465383" fg:w="2006018"/><text x="4.9947%" y="207.50"></text></g><g><title>unlink_chunk (2,006,018 samples, 0.02%)</title><rect x="4.7642%" y="165" width="0.0195%" height="15" fill="rgb(235,68,52)" fg:x="490471401" fg:w="2006018"/><text x="5.0142%" y="175.50"></text></g><g><title>_int_free (16,048,144 samples, 0.16%)</title><rect x="4.7642%" y="181" width="0.1559%" height="15" fill="rgb(246,142,3)" fg:x="490471401" fg:w="16048144"/><text x="5.0142%" y="191.50"></text></g><g><title>__GI___libc_free (17,051,153 samples, 0.17%)</title><rect x="4.7642%" y="197" width="0.1656%" height="15" fill="rgb(241,25,7)" fg:x="490471401" fg:w="17051153"/><text x="5.0142%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="341" width="0.1949%" height="15" fill="rgb(242,119,39)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="325" width="0.1949%" height="15" fill="rgb(241,98,45)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="309" width="0.1949%" height="15" fill="rgb(254,28,30)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="293" width="0.1949%" height="15" fill="rgb(241,142,54)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="277" width="0.1949%" height="15" fill="rgb(222,85,15)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="261" width="0.1949%" height="15" fill="rgb(210,85,47)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="245" width="0.1949%" height="15" fill="rgb(224,206,25)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="229" width="0.1949%" height="15" fill="rgb(243,201,19)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (20,060,180 samples, 0.19%)</title><rect x="4.7447%" y="213" width="0.1949%" height="15" fill="rgb(236,59,4)" fg:x="488465383" fg:w="20060180"/><text x="4.9947%" y="223.50"></text></g><g><title>core::ptr::read (53,159,477 samples, 0.52%)</title><rect x="4.9396%" y="309" width="0.5164%" height="15" fill="rgb(254,179,45)" fg:x="508525563" fg:w="53159477"/><text x="5.1896%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3,009,027 samples, 0.03%)</title><rect x="5.4560%" y="309" width="0.0292%" height="15" fill="rgb(226,14,10)" fg:x="561685040" fg:w="3009027"/><text x="5.7060%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (69,207,621 samples, 0.67%)</title><rect x="4.9396%" y="325" width="0.6723%" height="15" fill="rgb(244,27,41)" fg:x="508525563" fg:w="69207621"/><text x="5.1896%" y="335.50"></text></g><g><title>chlang::board::Board::unmake_last (118,355,062 samples, 1.15%)</title><rect x="4.9396%" y="341" width="1.1496%" height="15" fill="rgb(235,35,32)" fg:x="508525563" fg:w="118355062"/><text x="5.1896%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13,039,117 samples, 0.13%)</title><rect x="6.0892%" y="261" width="0.1267%" height="15" fill="rgb(218,68,31)" fg:x="626880625" fg:w="13039117"/><text x="6.3392%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41,123,369 samples, 0.40%)</title><rect x="6.0892%" y="277" width="0.3995%" height="15" fill="rgb(207,120,37)" fg:x="626880625" fg:w="41123369"/><text x="6.3392%" y="287.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (51,153,459 samples, 0.50%)</title><rect x="6.4887%" y="277" width="0.4969%" height="15" fill="rgb(227,98,0)" fg:x="668003994" fg:w="51153459"/><text x="6.7387%" y="287.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (51,153,459 samples, 0.50%)</title><rect x="6.4887%" y="261" width="0.4969%" height="15" fill="rgb(207,7,3)" fg:x="668003994" fg:w="51153459"/><text x="6.7387%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (102,306,918 samples, 0.99%)</title><rect x="6.0892%" y="325" width="0.9938%" height="15" fill="rgb(206,98,19)" fg:x="626880625" fg:w="102306918"/><text x="6.3392%" y="335.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (102,306,918 samples, 0.99%)</title><rect x="6.0892%" y="309" width="0.9938%" height="15" fill="rgb(217,5,26)" fg:x="626880625" fg:w="102306918"/><text x="6.3392%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (102,306,918 samples, 0.99%)</title><rect x="6.0892%" y="293" width="0.9938%" height="15" fill="rgb(235,190,38)" fg:x="626880625" fg:w="102306918"/><text x="6.3392%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (9,027,081 samples, 0.09%)</title><rect x="7.0830%" y="245" width="0.0877%" height="15" fill="rgb(247,86,24)" fg:x="729187543" fg:w="9027081"/><text x="7.3330%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (11,033,099 samples, 0.11%)</title><rect x="7.0830%" y="261" width="0.1072%" height="15" fill="rgb(205,101,16)" fg:x="729187543" fg:w="11033099"/><text x="7.3330%" y="271.50"></text></g><g><title>__rust_dealloc (28,084,252 samples, 0.27%)</title><rect x="7.1902%" y="229" width="0.2728%" height="15" fill="rgb(246,168,33)" fg:x="740220642" fg:w="28084252"/><text x="7.4402%" y="239.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (34,102,306 samples, 0.33%)</title><rect x="7.4630%" y="213" width="0.3313%" height="15" fill="rgb(231,114,1)" fg:x="768304894" fg:w="34102306"/><text x="7.7130%" y="223.50"></text></g><g><title>__rdl_dealloc (39,117,351 samples, 0.38%)</title><rect x="7.4630%" y="229" width="0.3800%" height="15" fill="rgb(207,184,53)" fg:x="768304894" fg:w="39117351"/><text x="7.7130%" y="239.50"></text></g><g><title>tcache_put (24,072,216 samples, 0.23%)</title><rect x="7.8429%" y="197" width="0.2338%" height="15" fill="rgb(224,95,51)" fg:x="807422245" fg:w="24072216"/><text x="8.0929%" y="207.50"></text></g><g><title>_int_free (120,361,080 samples, 1.17%)</title><rect x="7.8429%" y="213" width="1.1691%" height="15" fill="rgb(212,188,45)" fg:x="807422245" fg:w="120361080"/><text x="8.0929%" y="223.50"></text></g><g><title>__GI___libc_free (184,553,656 samples, 1.79%)</title><rect x="7.8429%" y="229" width="1.7927%" height="15" fill="rgb(223,154,38)" fg:x="807422245" fg:w="184553656"/><text x="8.0929%" y="239.50">_..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (264,794,376 samples, 2.57%)</title><rect x="7.0830%" y="277" width="2.5721%" height="15" fill="rgb(251,22,52)" fg:x="729187543" fg:w="264794376"/><text x="7.3330%" y="287.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (253,761,277 samples, 2.46%)</title><rect x="7.1902%" y="261" width="2.4649%" height="15" fill="rgb(229,209,22)" fg:x="740220642" fg:w="253761277"/><text x="7.4402%" y="271.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (253,761,277 samples, 2.46%)</title><rect x="7.1902%" y="245" width="2.4649%" height="15" fill="rgb(234,138,34)" fg:x="740220642" fg:w="253761277"/><text x="7.4402%" y="255.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (267,803,403 samples, 2.60%)</title><rect x="7.0830%" y="325" width="2.6013%" height="15" fill="rgb(212,95,11)" fg:x="729187543" fg:w="267803403"/><text x="7.3330%" y="335.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (267,803,403 samples, 2.60%)</title><rect x="7.0830%" y="309" width="2.6013%" height="15" fill="rgb(240,179,47)" fg:x="729187543" fg:w="267803403"/><text x="7.3330%" y="319.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (267,803,403 samples, 2.60%)</title><rect x="7.0830%" y="293" width="2.6013%" height="15" fill="rgb(240,163,11)" fg:x="729187543" fg:w="267803403"/><text x="7.3330%" y="303.50">&lt;a..</text></g><g><title>chlang::cmove::Move::to (26,078,234 samples, 0.25%)</title><rect x="9.6941%" y="325" width="0.2533%" height="15" fill="rgb(236,37,12)" fg:x="997993955" fg:w="26078234"/><text x="9.9441%" y="335.50"></text></g><g><title>chlang::cmove::Move::from (6,018,054 samples, 0.06%)</title><rect x="9.9474%" y="325" width="0.0585%" height="15" fill="rgb(232,164,16)" fg:x="1024072189" fg:w="6018054"/><text x="10.1974%" y="335.50"></text></g><g><title>chlang::board::Position::bitboard (14,042,126 samples, 0.14%)</title><rect x="10.0058%" y="325" width="0.1364%" height="15" fill="rgb(244,205,15)" fg:x="1030090243" fg:w="14042126"/><text x="10.2558%" y="335.50"></text></g><g><title>core::ptr::read (4,012,036 samples, 0.04%)</title><rect x="10.1422%" y="293" width="0.0390%" height="15" fill="rgb(223,117,47)" fg:x="1044132369" fg:w="4012036"/><text x="10.3922%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (6,018,054 samples, 0.06%)</title><rect x="10.1422%" y="309" width="0.0585%" height="15" fill="rgb(244,107,35)" fg:x="1044132369" fg:w="6018054"/><text x="10.3922%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2,006,018 samples, 0.02%)</title><rect x="10.1812%" y="293" width="0.0195%" height="15" fill="rgb(205,140,8)" fg:x="1048144405" fg:w="2006018"/><text x="10.4312%" y="303.50"></text></g><g><title>chlang::board::Board::unmake_last (9,027,081 samples, 0.09%)</title><rect x="10.1422%" y="325" width="0.0877%" height="15" fill="rgb(228,84,46)" fg:x="1044132369" fg:w="9027081"/><text x="10.3922%" y="335.50"></text></g><g><title>chlang::board::Position::bitboard (7,021,063 samples, 0.07%)</title><rect x="10.2299%" y="309" width="0.0682%" height="15" fill="rgb(254,188,9)" fg:x="1053159450" fg:w="7021063"/><text x="10.4799%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="309" width="0.0682%" height="15" fill="rgb(206,112,54)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="293" width="0.0682%" height="15" fill="rgb(216,84,49)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="303.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="277" width="0.0682%" height="15" fill="rgb(214,194,35)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="261" width="0.0682%" height="15" fill="rgb(249,28,3)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="245" width="0.0682%" height="15" fill="rgb(222,56,52)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="229" width="0.0682%" height="15" fill="rgb(245,217,50)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="213" width="0.0682%" height="15" fill="rgb(213,201,24)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="223.50"></text></g><g><title>core::ptr::read (7,021,063 samples, 0.07%)</title><rect x="10.2981%" y="197" width="0.0682%" height="15" fill="rgb(248,116,28)" fg:x="1060180513" fg:w="7021063"/><text x="10.5481%" y="207.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::BitAnd&lt;u64&gt;&gt;::bitand (2,006,018 samples, 0.02%)</title><rect x="10.3663%" y="309" width="0.0195%" height="15" fill="rgb(219,72,43)" fg:x="1067201576" fg:w="2006018"/><text x="10.6163%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (161,484,449 samples, 1.57%)</title><rect x="10.2299%" y="325" width="1.5686%" height="15" fill="rgb(209,138,14)" fg:x="1053159450" fg:w="161484449"/><text x="10.4799%" y="335.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8,024,072 samples, 0.08%)</title><rect x="11.7985%" y="309" width="0.0779%" height="15" fill="rgb(222,18,33)" fg:x="1214643899" fg:w="8024072"/><text x="12.0485%" y="319.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (43,129,387 samples, 0.42%)</title><rect x="11.8765%" y="309" width="0.4189%" height="15" fill="rgb(213,199,7)" fg:x="1222667971" fg:w="43129387"/><text x="12.1265%" y="319.50"></text></g><g><title>chlang::board::Board::key (85,255,765 samples, 0.83%)</title><rect x="11.7985%" y="325" width="0.8281%" height="15" fill="rgb(250,110,10)" fg:x="1214643899" fg:w="85255765"/><text x="12.0485%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (21,063,189 samples, 0.20%)</title><rect x="12.6267%" y="181" width="0.2046%" height="15" fill="rgb(248,123,6)" fg:x="1299899664" fg:w="21063189"/><text x="12.8767%" y="191.50"></text></g><g><title>__rust_dealloc (125,376,125 samples, 1.22%)</title><rect x="12.8313%" y="149" width="1.2178%" height="15" fill="rgb(206,91,31)" fg:x="1320962853" fg:w="125376125"/><text x="13.0813%" y="159.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (106,318,954 samples, 1.03%)</title><rect x="14.0491%" y="133" width="1.0327%" height="15" fill="rgb(211,154,13)" fg:x="1446338978" fg:w="106318954"/><text x="14.2991%" y="143.50"></text></g><g><title>__rdl_dealloc (135,406,215 samples, 1.32%)</title><rect x="14.0491%" y="149" width="1.3153%" height="15" fill="rgb(225,148,7)" fg:x="1446338978" fg:w="135406215"/><text x="14.2991%" y="159.50"></text></g><g><title>tcache_put (81,243,729 samples, 0.79%)</title><rect x="15.3644%" y="117" width="0.7892%" height="15" fill="rgb(220,160,43)" fg:x="1581745193" fg:w="81243729"/><text x="15.6144%" y="127.50"></text></g><g><title>_int_free (471,414,230 samples, 4.58%)</title><rect x="15.3644%" y="133" width="4.5791%" height="15" fill="rgb(213,52,39)" fg:x="1581745193" fg:w="471414230"/><text x="15.6144%" y="143.50">_int_..</text></g><g><title>__GI___libc_free (645,937,796 samples, 6.27%)</title><rect x="15.3644%" y="149" width="6.2744%" height="15" fill="rgb(243,137,7)" fg:x="1581745193" fg:w="645937796"/><text x="15.6144%" y="159.50">__GI___l..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (930,792,352 samples, 9.04%)</title><rect x="12.6267%" y="293" width="9.0413%" height="15" fill="rgb(230,79,13)" fg:x="1299899664" fg:w="930792352"/><text x="12.8767%" y="303.50">core::ptr::dr..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (930,792,352 samples, 9.04%)</title><rect x="12.6267%" y="277" width="9.0413%" height="15" fill="rgb(247,105,23)" fg:x="1299899664" fg:w="930792352"/><text x="12.8767%" y="287.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (930,792,352 samples, 9.04%)</title><rect x="12.6267%" y="261" width="9.0413%" height="15" fill="rgb(223,179,41)" fg:x="1299899664" fg:w="930792352"/><text x="12.8767%" y="271.50">core::ptr::dr..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (930,792,352 samples, 9.04%)</title><rect x="12.6267%" y="245" width="9.0413%" height="15" fill="rgb(218,9,34)" fg:x="1299899664" fg:w="930792352"/><text x="12.8767%" y="255.50">&lt;&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (930,792,352 samples, 9.04%)</title><rect x="12.6267%" y="229" width="9.0413%" height="15" fill="rgb(222,106,8)" fg:x="1299899664" fg:w="930792352"/><text x="12.8767%" y="239.50">core::ptr::dr..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (930,792,352 samples, 9.04%)</title><rect x="12.6267%" y="213" width="9.0413%" height="15" fill="rgb(211,220,0)" fg:x="1299899664" fg:w="930792352"/><text x="12.8767%" y="223.50">&lt;alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (930,792,352 samples, 9.04%)</title><rect x="12.6267%" y="197" width="9.0413%" height="15" fill="rgb(229,52,16)" fg:x="1299899664" fg:w="930792352"/><text x="12.8767%" y="207.50">alloc::raw_ve..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (909,729,163 samples, 8.84%)</title><rect x="12.8313%" y="181" width="8.8367%" height="15" fill="rgb(212,155,18)" fg:x="1320962853" fg:w="909729163"/><text x="13.0813%" y="191.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::dealloc (909,729,163 samples, 8.84%)</title><rect x="12.8313%" y="165" width="8.8367%" height="15" fill="rgb(242,21,14)" fg:x="1320962853" fg:w="909729163"/><text x="13.0813%" y="175.50">alloc::alloc..</text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (20,060,180 samples, 0.19%)</title><rect x="21.6680%" y="293" width="0.1949%" height="15" fill="rgb(222,19,48)" fg:x="2230692016" fg:w="20060180"/><text x="21.9180%" y="303.50"></text></g><g><title>chlang::cmove::Move::to (77,231,693 samples, 0.75%)</title><rect x="21.8628%" y="293" width="0.7502%" height="15" fill="rgb(232,45,27)" fg:x="2250752196" fg:w="77231693"/><text x="22.1128%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (9,027,081 samples, 0.09%)</title><rect x="22.6130%" y="277" width="0.0877%" height="15" fill="rgb(249,103,42)" fg:x="2327983889" fg:w="9027081"/><text x="22.8630%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (223,671,007 samples, 2.17%)</title><rect x="22.6130%" y="293" width="2.1726%" height="15" fill="rgb(246,81,33)" fg:x="2327983889" fg:w="223671007"/><text x="22.8630%" y="303.50">c..</text></g><g><title>chlang::board::Position::valid (35,105,315 samples, 0.34%)</title><rect x="24.7857%" y="277" width="0.3410%" height="15" fill="rgb(252,33,42)" fg:x="2551654896" fg:w="35105315"/><text x="25.0357%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (28,084,252 samples, 0.27%)</title><rect x="25.1267%" y="277" width="0.2728%" height="15" fill="rgb(209,212,41)" fg:x="2586760211" fg:w="28084252"/><text x="25.3767%" y="287.50"></text></g><g><title>__rust_alloc (8,024,072 samples, 0.08%)</title><rect x="25.3995%" y="149" width="0.0779%" height="15" fill="rgb(207,154,6)" fg:x="2614844463" fg:w="8024072"/><text x="25.6495%" y="159.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="25.4774%" y="149" width="0.0195%" height="15" fill="rgb(223,64,47)" fg:x="2622868535" fg:w="2006018"/><text x="25.7274%" y="159.50"></text></g><g><title>tcache_get (26,078,234 samples, 0.25%)</title><rect x="25.4969%" y="133" width="0.2533%" height="15" fill="rgb(211,161,38)" fg:x="2624874553" fg:w="26078234"/><text x="25.7469%" y="143.50"></text></g><g><title>checked_request2size (3,009,027 samples, 0.03%)</title><rect x="25.7502%" y="133" width="0.0292%" height="15" fill="rgb(219,138,40)" fg:x="2650952787" fg:w="3009027"/><text x="26.0002%" y="143.50"></text></g><g><title>__GI___libc_malloc (110,330,990 samples, 1.07%)</title><rect x="25.4969%" y="149" width="1.0717%" height="15" fill="rgb(241,228,46)" fg:x="2624874553" fg:w="110330990"/><text x="25.7469%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (122,367,098 samples, 1.19%)</title><rect x="25.3995%" y="197" width="1.1886%" height="15" fill="rgb(223,209,38)" fg:x="2614844463" fg:w="122367098"/><text x="25.6495%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (122,367,098 samples, 1.19%)</title><rect x="25.3995%" y="181" width="1.1886%" height="15" fill="rgb(236,164,45)" fg:x="2614844463" fg:w="122367098"/><text x="25.6495%" y="191.50"></text></g><g><title>alloc::alloc::alloc (122,367,098 samples, 1.19%)</title><rect x="25.3995%" y="165" width="1.1886%" height="15" fill="rgb(231,15,5)" fg:x="2614844463" fg:w="122367098"/><text x="25.6495%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (128,385,152 samples, 1.25%)</title><rect x="25.3995%" y="245" width="1.2471%" height="15" fill="rgb(252,35,15)" fg:x="2614844463" fg:w="128385152"/><text x="25.6495%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (128,385,152 samples, 1.25%)</title><rect x="25.3995%" y="229" width="1.2471%" height="15" fill="rgb(248,181,18)" fg:x="2614844463" fg:w="128385152"/><text x="25.6495%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (128,385,152 samples, 1.25%)</title><rect x="25.3995%" y="213" width="1.2471%" height="15" fill="rgb(233,39,42)" fg:x="2614844463" fg:w="128385152"/><text x="25.6495%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (130,391,170 samples, 1.27%)</title><rect x="25.3995%" y="277" width="1.2666%" height="15" fill="rgb(238,110,33)" fg:x="2614844463" fg:w="130391170"/><text x="25.6495%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (130,391,170 samples, 1.27%)</title><rect x="25.3995%" y="261" width="1.2666%" height="15" fill="rgb(233,195,10)" fg:x="2614844463" fg:w="130391170"/><text x="25.6495%" y="271.50"></text></g><g><title>core::ptr::write (7,021,063 samples, 0.07%)</title><rect x="26.6660%" y="261" width="0.0682%" height="15" fill="rgb(254,105,3)" fg:x="2745235633" fg:w="7021063"/><text x="26.9160%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2,006,018 samples, 0.02%)</title><rect x="26.7342%" y="261" width="0.0195%" height="15" fill="rgb(221,225,9)" fg:x="2752256696" fg:w="2006018"/><text x="26.9842%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="26.7342%" y="245" width="0.0195%" height="15" fill="rgb(224,227,45)" fg:x="2752256696" fg:w="2006018"/><text x="26.9842%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="26.7342%" y="229" width="0.0195%" height="15" fill="rgb(229,198,43)" fg:x="2752256696" fg:w="2006018"/><text x="26.9842%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.02%)</title><rect x="26.7342%" y="213" width="0.0195%" height="15" fill="rgb(206,209,35)" fg:x="2752256696" fg:w="2006018"/><text x="26.9842%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (89,267,801 samples, 0.87%)</title><rect x="26.6660%" y="277" width="0.8671%" height="15" fill="rgb(245,195,53)" fg:x="2745235633" fg:w="89267801"/><text x="26.9160%" y="287.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (3,009,027 samples, 0.03%)</title><rect x="27.5331%" y="277" width="0.0292%" height="15" fill="rgb(240,92,26)" fg:x="2834503434" fg:w="3009027"/><text x="27.7831%" y="287.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (3,009,027 samples, 0.03%)</title><rect x="27.5331%" y="261" width="0.0292%" height="15" fill="rgb(207,40,23)" fg:x="2834503434" fg:w="3009027"/><text x="27.7831%" y="271.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (472,417,239 samples, 4.59%)</title><rect x="24.7857%" y="293" width="4.5889%" height="15" fill="rgb(223,111,35)" fg:x="2551654896" fg:w="472417239"/><text x="25.0357%" y="303.50">chlan..</text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (21,063,189 samples, 0.20%)</title><rect x="29.3745%" y="277" width="0.2046%" height="15" fill="rgb(229,147,28)" fg:x="3024072135" fg:w="21063189"/><text x="29.6245%" y="287.50"></text></g><g><title>chlang::cmove::Move::to (2,006,018 samples, 0.02%)</title><rect x="29.5791%" y="277" width="0.0195%" height="15" fill="rgb(211,29,28)" fg:x="3045135324" fg:w="2006018"/><text x="29.8291%" y="287.50"></text></g><g><title>chlang::cmove::Move::new (10,030,090 samples, 0.10%)</title><rect x="29.5986%" y="277" width="0.0974%" height="15" fill="rgb(228,72,33)" fg:x="3047141342" fg:w="10030090"/><text x="29.8486%" y="287.50"></text></g><g><title>chlang::board::Position::valid (18,054,162 samples, 0.18%)</title><rect x="29.6960%" y="277" width="0.1754%" height="15" fill="rgb(205,214,31)" fg:x="3057171432" fg:w="18054162"/><text x="29.9460%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (11,033,099 samples, 0.11%)</title><rect x="29.8714%" y="277" width="0.1072%" height="15" fill="rgb(224,111,15)" fg:x="3075225594" fg:w="11033099"/><text x="30.1214%" y="287.50"></text></g><g><title>__rust_alloc (13,039,117 samples, 0.13%)</title><rect x="29.9786%" y="149" width="0.1267%" height="15" fill="rgb(253,21,26)" fg:x="3086258693" fg:w="13039117"/><text x="30.2286%" y="159.50"></text></g><g><title>__rdl_alloc (8,024,072 samples, 0.08%)</title><rect x="30.1052%" y="149" width="0.0779%" height="15" fill="rgb(245,139,43)" fg:x="3099297810" fg:w="8024072"/><text x="30.3552%" y="159.50"></text></g><g><title>tcache_get (23,069,207 samples, 0.22%)</title><rect x="30.1832%" y="133" width="0.2241%" height="15" fill="rgb(252,170,7)" fg:x="3107321882" fg:w="23069207"/><text x="30.4332%" y="143.50"></text></g><g><title>checked_request2size (6,018,054 samples, 0.06%)</title><rect x="30.4072%" y="133" width="0.0585%" height="15" fill="rgb(231,118,14)" fg:x="3130391089" fg:w="6018054"/><text x="30.6572%" y="143.50"></text></g><g><title>__GI___libc_malloc (110,330,990 samples, 1.07%)</title><rect x="30.1832%" y="149" width="1.0717%" height="15" fill="rgb(238,83,0)" fg:x="3107321882" fg:w="110330990"/><text x="30.4332%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (134,403,206 samples, 1.31%)</title><rect x="29.9786%" y="197" width="1.3055%" height="15" fill="rgb(221,39,39)" fg:x="3086258693" fg:w="134403206"/><text x="30.2286%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (134,403,206 samples, 1.31%)</title><rect x="29.9786%" y="181" width="1.3055%" height="15" fill="rgb(222,119,46)" fg:x="3086258693" fg:w="134403206"/><text x="30.2286%" y="191.50"></text></g><g><title>alloc::alloc::alloc (134,403,206 samples, 1.31%)</title><rect x="29.9786%" y="165" width="1.3055%" height="15" fill="rgb(222,165,49)" fg:x="3086258693" fg:w="134403206"/><text x="30.2286%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (139,418,251 samples, 1.35%)</title><rect x="29.9786%" y="277" width="1.3542%" height="15" fill="rgb(219,113,52)" fg:x="3086258693" fg:w="139418251"/><text x="30.2286%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (139,418,251 samples, 1.35%)</title><rect x="29.9786%" y="261" width="1.3542%" height="15" fill="rgb(214,7,15)" fg:x="3086258693" fg:w="139418251"/><text x="30.2286%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (139,418,251 samples, 1.35%)</title><rect x="29.9786%" y="245" width="1.3542%" height="15" fill="rgb(235,32,4)" fg:x="3086258693" fg:w="139418251"/><text x="30.2286%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (139,418,251 samples, 1.35%)</title><rect x="29.9786%" y="229" width="1.3542%" height="15" fill="rgb(238,90,54)" fg:x="3086258693" fg:w="139418251"/><text x="30.2286%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (139,418,251 samples, 1.35%)</title><rect x="29.9786%" y="213" width="1.3542%" height="15" fill="rgb(213,208,19)" fg:x="3086258693" fg:w="139418251"/><text x="30.2286%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="31.3328%" y="277" width="0.0195%" height="15" fill="rgb(233,156,4)" fg:x="3225676944" fg:w="2006018"/><text x="31.5828%" y="287.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="31.3328%" y="261" width="0.0195%" height="15" fill="rgb(207,194,5)" fg:x="3225676944" fg:w="2006018"/><text x="31.5828%" y="271.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="31.3523%" y="261" width="0.0292%" height="15" fill="rgb(206,111,30)" fg:x="3227682962" fg:w="3009027"/><text x="31.6023%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,030,090 samples, 0.10%)</title><rect x="31.3523%" y="277" width="0.0974%" height="15" fill="rgb(243,70,54)" fg:x="3227682962" fg:w="10030090"/><text x="31.6023%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (302,908,718 samples, 2.94%)</title><rect x="29.3745%" y="293" width="2.9423%" height="15" fill="rgb(242,28,8)" fg:x="3024072135" fg:w="302908718"/><text x="29.6245%" y="303.50">ch..</text></g><g><title>chlang::cmove::Move::new (14,042,126 samples, 0.14%)</title><rect x="32.3168%" y="277" width="0.1364%" height="15" fill="rgb(219,106,18)" fg:x="3326980853" fg:w="14042126"/><text x="32.5668%" y="287.50"></text></g><g><title>chlang::board::Position::valid (42,126,378 samples, 0.41%)</title><rect x="32.4532%" y="277" width="0.4092%" height="15" fill="rgb(244,222,10)" fg:x="3341022979" fg:w="42126378"/><text x="32.7032%" y="287.50"></text></g><g><title>__rust_alloc (14,042,126 samples, 0.14%)</title><rect x="32.8624%" y="149" width="0.1364%" height="15" fill="rgb(236,179,52)" fg:x="3383149357" fg:w="14042126"/><text x="33.1124%" y="159.50"></text></g><g><title>__rdl_alloc (3,009,027 samples, 0.03%)</title><rect x="32.9988%" y="149" width="0.0292%" height="15" fill="rgb(213,23,39)" fg:x="3397191483" fg:w="3009027"/><text x="33.2488%" y="159.50"></text></g><g><title>tcache_get (22,066,198 samples, 0.21%)</title><rect x="33.0281%" y="133" width="0.2143%" height="15" fill="rgb(238,48,10)" fg:x="3400200510" fg:w="22066198"/><text x="33.2781%" y="143.50"></text></g><g><title>checked_request2size (6,018,054 samples, 0.06%)</title><rect x="33.2424%" y="133" width="0.0585%" height="15" fill="rgb(251,196,23)" fg:x="3422266708" fg:w="6018054"/><text x="33.4924%" y="143.50"></text></g><g><title>__GI___libc_malloc (95,285,855 samples, 0.93%)</title><rect x="33.0281%" y="149" width="0.9256%" height="15" fill="rgb(250,152,24)" fg:x="3400200510" fg:w="95285855"/><text x="33.2781%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113,340,017 samples, 1.10%)</title><rect x="32.8624%" y="197" width="1.1009%" height="15" fill="rgb(209,150,17)" fg:x="3383149357" fg:w="113340017"/><text x="33.1124%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113,340,017 samples, 1.10%)</title><rect x="32.8624%" y="181" width="1.1009%" height="15" fill="rgb(234,202,34)" fg:x="3383149357" fg:w="113340017"/><text x="33.1124%" y="191.50"></text></g><g><title>alloc::alloc::alloc (113,340,017 samples, 1.10%)</title><rect x="32.8624%" y="165" width="1.1009%" height="15" fill="rgb(253,148,53)" fg:x="3383149357" fg:w="113340017"/><text x="33.1124%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (122,367,098 samples, 1.19%)</title><rect x="32.8624%" y="277" width="1.1886%" height="15" fill="rgb(218,129,16)" fg:x="3383149357" fg:w="122367098"/><text x="33.1124%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (122,367,098 samples, 1.19%)</title><rect x="32.8624%" y="261" width="1.1886%" height="15" fill="rgb(216,85,19)" fg:x="3383149357" fg:w="122367098"/><text x="33.1124%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (122,367,098 samples, 1.19%)</title><rect x="32.8624%" y="245" width="1.1886%" height="15" fill="rgb(235,228,7)" fg:x="3383149357" fg:w="122367098"/><text x="33.1124%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (122,367,098 samples, 1.19%)</title><rect x="32.8624%" y="229" width="1.1886%" height="15" fill="rgb(245,175,0)" fg:x="3383149357" fg:w="122367098"/><text x="33.1124%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (122,367,098 samples, 1.19%)</title><rect x="32.8624%" y="213" width="1.1886%" height="15" fill="rgb(208,168,36)" fg:x="3383149357" fg:w="122367098"/><text x="33.1124%" y="223.50"></text></g><g><title>core::ptr::write (16,048,144 samples, 0.16%)</title><rect x="34.0511%" y="261" width="0.1559%" height="15" fill="rgb(246,171,24)" fg:x="3505516455" fg:w="16048144"/><text x="34.3011%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2,006,018 samples, 0.02%)</title><rect x="34.2069%" y="261" width="0.0195%" height="15" fill="rgb(215,142,24)" fg:x="3521564599" fg:w="2006018"/><text x="34.4569%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="34.2069%" y="245" width="0.0195%" height="15" fill="rgb(250,187,7)" fg:x="3521564599" fg:w="2006018"/><text x="34.4569%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="34.2069%" y="229" width="0.0195%" height="15" fill="rgb(228,66,33)" fg:x="3521564599" fg:w="2006018"/><text x="34.4569%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.02%)</title><rect x="34.2069%" y="213" width="0.0195%" height="15" fill="rgb(234,215,21)" fg:x="3521564599" fg:w="2006018"/><text x="34.4569%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (83,249,747 samples, 0.81%)</title><rect x="34.0511%" y="277" width="0.8087%" height="15" fill="rgb(222,191,20)" fg:x="3505516455" fg:w="83249747"/><text x="34.3011%" y="287.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (11,033,099 samples, 0.11%)</title><rect x="34.8597%" y="277" width="0.1072%" height="15" fill="rgb(245,79,54)" fg:x="3588766202" fg:w="11033099"/><text x="35.1097%" y="287.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (11,033,099 samples, 0.11%)</title><rect x="34.8597%" y="261" width="0.1072%" height="15" fill="rgb(240,10,37)" fg:x="3588766202" fg:w="11033099"/><text x="35.1097%" y="271.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (334,001,997 samples, 3.24%)</title><rect x="32.3168%" y="293" width="3.2443%" height="15" fill="rgb(214,192,32)" fg:x="3326980853" fg:w="334001997"/><text x="32.5668%" y="303.50">chl..</text></g><g><title>chlang::cmove::Move::new (21,063,189 samples, 0.20%)</title><rect x="35.5612%" y="277" width="0.2046%" height="15" fill="rgb(209,36,54)" fg:x="3660982850" fg:w="21063189"/><text x="35.8112%" y="287.50"></text></g><g><title>chlang::board::Position::valid (47,141,423 samples, 0.46%)</title><rect x="35.7658%" y="277" width="0.4579%" height="15" fill="rgb(220,10,11)" fg:x="3682046039" fg:w="47141423"/><text x="36.0158%" y="287.50"></text></g><g><title>__rust_alloc (19,057,171 samples, 0.19%)</title><rect x="36.2237%" y="149" width="0.1851%" height="15" fill="rgb(221,106,17)" fg:x="3729187462" fg:w="19057171"/><text x="36.4737%" y="159.50"></text></g><g><title>__rdl_alloc (7,021,063 samples, 0.07%)</title><rect x="36.4088%" y="149" width="0.0682%" height="15" fill="rgb(251,142,44)" fg:x="3748244633" fg:w="7021063"/><text x="36.6588%" y="159.50"></text></g><g><title>tcache_get (23,069,207 samples, 0.22%)</title><rect x="36.4770%" y="133" width="0.2241%" height="15" fill="rgb(238,13,15)" fg:x="3755265696" fg:w="23069207"/><text x="36.7270%" y="143.50"></text></g><g><title>checked_request2size (2,006,018 samples, 0.02%)</title><rect x="36.7011%" y="133" width="0.0195%" height="15" fill="rgb(208,107,27)" fg:x="3778334903" fg:w="2006018"/><text x="36.9511%" y="143.50"></text></g><g><title>__GI___libc_malloc (89,267,801 samples, 0.87%)</title><rect x="36.4770%" y="149" width="0.8671%" height="15" fill="rgb(205,136,37)" fg:x="3755265696" fg:w="89267801"/><text x="36.7270%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (120,361,080 samples, 1.17%)</title><rect x="36.2237%" y="197" width="1.1691%" height="15" fill="rgb(250,205,27)" fg:x="3729187462" fg:w="120361080"/><text x="36.4737%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (120,361,080 samples, 1.17%)</title><rect x="36.2237%" y="181" width="1.1691%" height="15" fill="rgb(210,80,43)" fg:x="3729187462" fg:w="120361080"/><text x="36.4737%" y="191.50"></text></g><g><title>alloc::alloc::alloc (120,361,080 samples, 1.17%)</title><rect x="36.2237%" y="165" width="1.1691%" height="15" fill="rgb(247,160,36)" fg:x="3729187462" fg:w="120361080"/><text x="36.4737%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (130,391,170 samples, 1.27%)</title><rect x="36.2237%" y="245" width="1.2666%" height="15" fill="rgb(234,13,49)" fg:x="3729187462" fg:w="130391170"/><text x="36.4737%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (130,391,170 samples, 1.27%)</title><rect x="36.2237%" y="229" width="1.2666%" height="15" fill="rgb(234,122,0)" fg:x="3729187462" fg:w="130391170"/><text x="36.4737%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (130,391,170 samples, 1.27%)</title><rect x="36.2237%" y="213" width="1.2666%" height="15" fill="rgb(207,146,38)" fg:x="3729187462" fg:w="130391170"/><text x="36.4737%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (135,406,215 samples, 1.32%)</title><rect x="36.2237%" y="277" width="1.3153%" height="15" fill="rgb(207,177,25)" fg:x="3729187462" fg:w="135406215"/><text x="36.4737%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (135,406,215 samples, 1.32%)</title><rect x="36.2237%" y="261" width="1.3153%" height="15" fill="rgb(211,178,42)" fg:x="3729187462" fg:w="135406215"/><text x="36.4737%" y="271.50"></text></g><g><title>core::ptr::write (13,039,117 samples, 0.13%)</title><rect x="37.5390%" y="261" width="0.1267%" height="15" fill="rgb(230,69,54)" fg:x="3864593677" fg:w="13039117"/><text x="37.7890%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (7,021,063 samples, 0.07%)</title><rect x="37.6656%" y="261" width="0.0682%" height="15" fill="rgb(214,135,41)" fg:x="3877632794" fg:w="7021063"/><text x="37.9156%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7,021,063 samples, 0.07%)</title><rect x="37.6656%" y="245" width="0.0682%" height="15" fill="rgb(237,67,25)" fg:x="3877632794" fg:w="7021063"/><text x="37.9156%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (7,021,063 samples, 0.07%)</title><rect x="37.6656%" y="229" width="0.0682%" height="15" fill="rgb(222,189,50)" fg:x="3877632794" fg:w="7021063"/><text x="37.9156%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (7,021,063 samples, 0.07%)</title><rect x="37.6656%" y="213" width="0.0682%" height="15" fill="rgb(245,148,34)" fg:x="3877632794" fg:w="7021063"/><text x="37.9156%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (88,264,792 samples, 0.86%)</title><rect x="37.5390%" y="277" width="0.8574%" height="15" fill="rgb(222,29,6)" fg:x="3864593677" fg:w="88264792"/><text x="37.7890%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (453,360,068 samples, 4.40%)</title><rect x="35.5612%" y="293" width="4.4037%" height="15" fill="rgb(221,189,43)" fg:x="3660982850" fg:w="453360068"/><text x="35.8112%" y="303.50">chlan..</text></g><g><title>chlang::board::Position::valid (106,318,954 samples, 1.03%)</title><rect x="39.9649%" y="277" width="1.0327%" height="15" fill="rgb(207,36,27)" fg:x="4114342918" fg:w="106318954"/><text x="40.2149%" y="287.50"></text></g><g><title>chlang::board::Position::bitboard (9,027,081 samples, 0.09%)</title><rect x="40.9977%" y="277" width="0.0877%" height="15" fill="rgb(217,90,24)" fg:x="4220661872" fg:w="9027081"/><text x="41.2477%" y="287.50"></text></g><g><title>__rust_alloc (20,060,180 samples, 0.19%)</title><rect x="41.0853%" y="149" width="0.1949%" height="15" fill="rgb(224,66,35)" fg:x="4229688953" fg:w="20060180"/><text x="41.3353%" y="159.50"></text></g><g><title>__rdl_alloc (12,036,108 samples, 0.12%)</title><rect x="41.2802%" y="149" width="0.1169%" height="15" fill="rgb(221,13,50)" fg:x="4249749133" fg:w="12036108"/><text x="41.5302%" y="159.50"></text></g><g><title>tcache_get (37,111,333 samples, 0.36%)</title><rect x="41.3971%" y="133" width="0.3605%" height="15" fill="rgb(236,68,49)" fg:x="4261785241" fg:w="37111333"/><text x="41.6471%" y="143.50"></text></g><g><title>checked_request2size (6,018,054 samples, 0.06%)</title><rect x="41.7576%" y="133" width="0.0585%" height="15" fill="rgb(229,146,28)" fg:x="4298896574" fg:w="6018054"/><text x="42.0076%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (154,463,386 samples, 1.50%)</title><rect x="41.0853%" y="197" width="1.5004%" height="15" fill="rgb(225,31,38)" fg:x="4229688953" fg:w="154463386"/><text x="41.3353%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (154,463,386 samples, 1.50%)</title><rect x="41.0853%" y="181" width="1.5004%" height="15" fill="rgb(250,208,3)" fg:x="4229688953" fg:w="154463386"/><text x="41.3353%" y="191.50"></text></g><g><title>alloc::alloc::alloc (154,463,386 samples, 1.50%)</title><rect x="41.0853%" y="165" width="1.5004%" height="15" fill="rgb(246,54,23)" fg:x="4229688953" fg:w="154463386"/><text x="41.3353%" y="175.50"></text></g><g><title>__GI___libc_malloc (122,367,098 samples, 1.19%)</title><rect x="41.3971%" y="149" width="1.1886%" height="15" fill="rgb(243,76,11)" fg:x="4261785241" fg:w="122367098"/><text x="41.6471%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (170,511,530 samples, 1.66%)</title><rect x="41.0853%" y="245" width="1.6563%" height="15" fill="rgb(245,21,50)" fg:x="4229688953" fg:w="170511530"/><text x="41.3353%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (170,511,530 samples, 1.66%)</title><rect x="41.0853%" y="229" width="1.6563%" height="15" fill="rgb(228,9,43)" fg:x="4229688953" fg:w="170511530"/><text x="41.3353%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (170,511,530 samples, 1.66%)</title><rect x="41.0853%" y="213" width="1.6563%" height="15" fill="rgb(208,100,47)" fg:x="4229688953" fg:w="170511530"/><text x="41.3353%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (172,517,548 samples, 1.68%)</title><rect x="41.0853%" y="277" width="1.6758%" height="15" fill="rgb(232,26,8)" fg:x="4229688953" fg:w="172517548"/><text x="41.3353%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (172,517,548 samples, 1.68%)</title><rect x="41.0853%" y="261" width="1.6758%" height="15" fill="rgb(216,166,38)" fg:x="4229688953" fg:w="172517548"/><text x="41.3353%" y="271.50"></text></g><g><title>core::ptr::write (10,030,090 samples, 0.10%)</title><rect x="42.7611%" y="261" width="0.0974%" height="15" fill="rgb(251,202,51)" fg:x="4402206501" fg:w="10030090"/><text x="43.0111%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (68,204,612 samples, 0.66%)</title><rect x="42.7611%" y="277" width="0.6625%" height="15" fill="rgb(254,216,34)" fg:x="4402206501" fg:w="68204612"/><text x="43.0111%" y="287.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (21,063,189 samples, 0.20%)</title><rect x="43.4334%" y="277" width="0.2046%" height="15" fill="rgb(251,32,27)" fg:x="4471414122" fg:w="21063189"/><text x="43.6834%" y="287.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (21,063,189 samples, 0.20%)</title><rect x="43.4334%" y="261" width="0.2046%" height="15" fill="rgb(208,127,28)" fg:x="4471414122" fg:w="21063189"/><text x="43.6834%" y="271.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (525,576,716 samples, 5.11%)</title><rect x="39.9649%" y="293" width="5.1052%" height="15" fill="rgb(224,137,22)" fg:x="4114342918" fg:w="525576716"/><text x="40.2149%" y="303.50">chlang..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (5,015,045 samples, 0.05%)</title><rect x="45.0701%" y="277" width="0.0487%" height="15" fill="rgb(254,70,32)" fg:x="4639919634" fg:w="5015045"/><text x="45.3201%" y="287.50"></text></g><g><title>core::ptr::read (5,015,045 samples, 0.05%)</title><rect x="45.0701%" y="261" width="0.0487%" height="15" fill="rgb(229,75,37)" fg:x="4639919634" fg:w="5015045"/><text x="45.3201%" y="271.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (53,159,477 samples, 0.52%)</title><rect x="45.1189%" y="277" width="0.5164%" height="15" fill="rgb(252,64,23)" fg:x="4644934679" fg:w="53159477"/><text x="45.3689%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (83,249,747 samples, 0.81%)</title><rect x="45.0701%" y="293" width="0.8087%" height="15" fill="rgb(232,162,48)" fg:x="4639919634" fg:w="83249747"/><text x="45.3201%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (141,424,269 samples, 1.37%)</title><rect x="45.8788%" y="293" width="1.3737%" height="15" fill="rgb(246,160,12)" fg:x="4723169381" fg:w="141424269"/><text x="46.1288%" y="303.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (141,424,269 samples, 1.37%)</title><rect x="45.8788%" y="277" width="1.3737%" height="15" fill="rgb(247,166,0)" fg:x="4723169381" fg:w="141424269"/><text x="46.1288%" y="287.50"></text></g><g><title>chlang::board::Board::attacked_by_color (3,708,124,273 samples, 36.02%)</title><rect x="12.6267%" y="309" width="36.0191%" height="15" fill="rgb(249,219,21)" fg:x="1299899664" fg:w="3708124273"/><text x="12.8767%" y="319.50">chlang::board::Board::attacked_by_color</text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::ilog2 (5,015,045 samples, 0.05%)</title><rect x="48.6458%" y="261" width="0.0487%" height="15" fill="rgb(205,209,3)" fg:x="5008023937" fg:w="5015045"/><text x="48.8958%" y="271.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::leading_zeros (5,015,045 samples, 0.05%)</title><rect x="48.6458%" y="245" width="0.0487%" height="15" fill="rgb(243,44,1)" fg:x="5008023937" fg:w="5015045"/><text x="48.8958%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::ilog2 (9,027,081 samples, 0.09%)</title><rect x="48.6458%" y="293" width="0.0877%" height="15" fill="rgb(206,159,16)" fg:x="5008023937" fg:w="9027081"/><text x="48.8958%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_ilog2 (9,027,081 samples, 0.09%)</title><rect x="48.6458%" y="277" width="0.0877%" height="15" fill="rgb(244,77,30)" fg:x="5008023937" fg:w="9027081"/><text x="48.8958%" y="287.50"></text></g><g><title>&lt;chlang::board::Position as core::convert::From&lt;u64&gt;&gt;::from (22,066,198 samples, 0.21%)</title><rect x="48.6458%" y="309" width="0.2143%" height="15" fill="rgb(218,69,12)" fg:x="5008023937" fg:w="22066198"/><text x="48.8958%" y="319.50"></text></g><g><title>chlang::board::Board::is_valid (3,752,256,669 samples, 36.45%)</title><rect x="12.6267%" y="325" width="36.4478%" height="15" fill="rgb(212,87,7)" fg:x="1299899664" fg:w="3752256669"/><text x="12.8767%" y="335.50">chlang::board::Board::is_valid</text></g><g><title>__rust_dealloc (3,009,027 samples, 0.03%)</title><rect x="49.0842%" y="197" width="0.0292%" height="15" fill="rgb(245,114,25)" fg:x="5053159342" fg:w="3009027"/><text x="49.3342%" y="207.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6,018,054 samples, 0.06%)</title><rect x="49.1134%" y="181" width="0.0585%" height="15" fill="rgb(210,61,42)" fg:x="5056168369" fg:w="6018054"/><text x="49.3634%" y="191.50"></text></g><g><title>__rdl_dealloc (7,021,063 samples, 0.07%)</title><rect x="49.1134%" y="197" width="0.0682%" height="15" fill="rgb(211,52,33)" fg:x="5056168369" fg:w="7021063"/><text x="49.3634%" y="207.50"></text></g><g><title>tcache_put (5,015,045 samples, 0.05%)</title><rect x="49.1816%" y="165" width="0.0487%" height="15" fill="rgb(234,58,33)" fg:x="5063189432" fg:w="5015045"/><text x="49.4316%" y="175.50"></text></g><g><title>_int_free (21,063,189 samples, 0.20%)</title><rect x="49.1816%" y="181" width="0.2046%" height="15" fill="rgb(220,115,36)" fg:x="5063189432" fg:w="21063189"/><text x="49.4316%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (46,138,414 samples, 0.45%)</title><rect x="49.0744%" y="245" width="0.4482%" height="15" fill="rgb(243,153,54)" fg:x="5052156333" fg:w="46138414"/><text x="49.3244%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45,135,405 samples, 0.44%)</title><rect x="49.0842%" y="229" width="0.4384%" height="15" fill="rgb(251,47,18)" fg:x="5053159342" fg:w="45135405"/><text x="49.3342%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (45,135,405 samples, 0.44%)</title><rect x="49.0842%" y="213" width="0.4384%" height="15" fill="rgb(242,102,42)" fg:x="5053159342" fg:w="45135405"/><text x="49.3342%" y="223.50"></text></g><g><title>__GI___libc_free (35,105,315 samples, 0.34%)</title><rect x="49.1816%" y="197" width="0.3410%" height="15" fill="rgb(234,31,38)" fg:x="5063189432" fg:w="35105315"/><text x="49.4316%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (48,144,432 samples, 0.47%)</title><rect x="49.0744%" y="309" width="0.4677%" height="15" fill="rgb(221,117,51)" fg:x="5052156333" fg:w="48144432"/><text x="49.3244%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (48,144,432 samples, 0.47%)</title><rect x="49.0744%" y="293" width="0.4677%" height="15" fill="rgb(212,20,18)" fg:x="5052156333" fg:w="48144432"/><text x="49.3244%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (48,144,432 samples, 0.47%)</title><rect x="49.0744%" y="277" width="0.4677%" height="15" fill="rgb(245,133,36)" fg:x="5052156333" fg:w="48144432"/><text x="49.3244%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,144,432 samples, 0.47%)</title><rect x="49.0744%" y="261" width="0.4677%" height="15" fill="rgb(212,6,19)" fg:x="5052156333" fg:w="48144432"/><text x="49.3244%" y="271.50"></text></g><g><title>chlang::board::Position::bitboard (15,045,135 samples, 0.15%)</title><rect x="49.5421%" y="293" width="0.1461%" height="15" fill="rgb(218,1,36)" fg:x="5100300765" fg:w="15045135"/><text x="49.7921%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="293" width="0.0682%" height="15" fill="rgb(246,84,54)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="277" width="0.0682%" height="15" fill="rgb(242,110,6)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="287.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="261" width="0.0682%" height="15" fill="rgb(214,47,5)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="245" width="0.0682%" height="15" fill="rgb(218,159,25)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="255.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="229" width="0.0682%" height="15" fill="rgb(215,211,28)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="213" width="0.0682%" height="15" fill="rgb(238,59,32)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="197" width="0.0682%" height="15" fill="rgb(226,82,3)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="207.50"></text></g><g><title>core::ptr::read (7,021,063 samples, 0.07%)</title><rect x="49.6882%" y="181" width="0.0682%" height="15" fill="rgb(240,164,32)" fg:x="5115345900" fg:w="7021063"/><text x="49.9382%" y="191.50"></text></g><g><title>chlang::board::Board::piece_type (61,183,549 samples, 0.59%)</title><rect x="49.5421%" y="309" width="0.5943%" height="15" fill="rgb(232,46,7)" fg:x="5100300765" fg:w="61183549"/><text x="49.7921%" y="319.50"></text></g><g><title>chlang::board::Position::valid (12,036,108 samples, 0.12%)</title><rect x="50.1364%" y="293" width="0.1169%" height="15" fill="rgb(229,129,53)" fg:x="5161484314" fg:w="12036108"/><text x="50.3864%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (12,036,108 samples, 0.12%)</title><rect x="50.2533%" y="293" width="0.1169%" height="15" fill="rgb(234,188,29)" fg:x="5173520422" fg:w="12036108"/><text x="50.5033%" y="303.50"></text></g><g><title>tcache_get (10,030,090 samples, 0.10%)</title><rect x="50.3800%" y="149" width="0.0974%" height="15" fill="rgb(246,141,4)" fg:x="5186559539" fg:w="10030090"/><text x="50.6300%" y="159.50"></text></g><g><title>__GI___libc_malloc (33,099,297 samples, 0.32%)</title><rect x="50.3800%" y="165" width="0.3215%" height="15" fill="rgb(229,23,39)" fg:x="5186559539" fg:w="33099297"/><text x="50.6300%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37,111,333 samples, 0.36%)</title><rect x="50.3702%" y="213" width="0.3605%" height="15" fill="rgb(206,12,3)" fg:x="5185556530" fg:w="37111333"/><text x="50.6202%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37,111,333 samples, 0.36%)</title><rect x="50.3702%" y="197" width="0.3605%" height="15" fill="rgb(252,226,20)" fg:x="5185556530" fg:w="37111333"/><text x="50.6202%" y="207.50"></text></g><g><title>alloc::alloc::alloc (37,111,333 samples, 0.36%)</title><rect x="50.3702%" y="181" width="0.3605%" height="15" fill="rgb(216,123,35)" fg:x="5185556530" fg:w="37111333"/><text x="50.6202%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46,138,414 samples, 0.45%)</title><rect x="50.3702%" y="261" width="0.4482%" height="15" fill="rgb(212,68,40)" fg:x="5185556530" fg:w="46138414"/><text x="50.6202%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (46,138,414 samples, 0.45%)</title><rect x="50.3702%" y="245" width="0.4482%" height="15" fill="rgb(254,125,32)" fg:x="5185556530" fg:w="46138414"/><text x="50.6202%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (46,138,414 samples, 0.45%)</title><rect x="50.3702%" y="229" width="0.4482%" height="15" fill="rgb(253,97,22)" fg:x="5185556530" fg:w="46138414"/><text x="50.6202%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (47,141,423 samples, 0.46%)</title><rect x="50.3702%" y="293" width="0.4579%" height="15" fill="rgb(241,101,14)" fg:x="5185556530" fg:w="47141423"/><text x="50.6202%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (47,141,423 samples, 0.46%)</title><rect x="50.3702%" y="277" width="0.4579%" height="15" fill="rgb(238,103,29)" fg:x="5185556530" fg:w="47141423"/><text x="50.6202%" y="287.50"></text></g><g><title>core::ptr::write (5,015,045 samples, 0.05%)</title><rect x="50.8281%" y="277" width="0.0487%" height="15" fill="rgb(233,195,47)" fg:x="5232697953" fg:w="5015045"/><text x="51.0781%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (35,105,315 samples, 0.34%)</title><rect x="50.8281%" y="293" width="0.3410%" height="15" fill="rgb(246,218,30)" fg:x="5232697953" fg:w="35105315"/><text x="51.0781%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (144,433,296 samples, 1.40%)</title><rect x="50.1364%" y="309" width="1.4030%" height="15" fill="rgb(219,145,47)" fg:x="5161484314" fg:w="144433296"/><text x="50.3864%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (15,045,135 samples, 0.15%)</title><rect x="51.5394%" y="293" width="0.1461%" height="15" fill="rgb(243,12,26)" fg:x="5305917610" fg:w="15045135"/><text x="51.7894%" y="303.50"></text></g><g><title>chlang::cmove::Move::new (5,015,045 samples, 0.05%)</title><rect x="51.6855%" y="293" width="0.0487%" height="15" fill="rgb(214,87,16)" fg:x="5320962745" fg:w="5015045"/><text x="51.9355%" y="303.50"></text></g><g><title>chlang::board::Position::valid (3,009,027 samples, 0.03%)</title><rect x="51.7342%" y="293" width="0.0292%" height="15" fill="rgb(208,99,42)" fg:x="5325977790" fg:w="3009027"/><text x="51.9842%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.03%)</title><rect x="51.7634%" y="293" width="0.0292%" height="15" fill="rgb(253,99,2)" fg:x="5328986817" fg:w="3009027"/><text x="52.0134%" y="303.50"></text></g><g><title>tcache_get (5,015,045 samples, 0.05%)</title><rect x="51.8024%" y="149" width="0.0487%" height="15" fill="rgb(220,168,23)" fg:x="5332998853" fg:w="5015045"/><text x="52.0524%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16,048,144 samples, 0.16%)</title><rect x="51.7927%" y="213" width="0.1559%" height="15" fill="rgb(242,38,24)" fg:x="5331995844" fg:w="16048144"/><text x="52.0427%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16,048,144 samples, 0.16%)</title><rect x="51.7927%" y="197" width="0.1559%" height="15" fill="rgb(225,182,9)" fg:x="5331995844" fg:w="16048144"/><text x="52.0427%" y="207.50"></text></g><g><title>alloc::alloc::alloc (16,048,144 samples, 0.16%)</title><rect x="51.7927%" y="181" width="0.1559%" height="15" fill="rgb(243,178,37)" fg:x="5331995844" fg:w="16048144"/><text x="52.0427%" y="191.50"></text></g><g><title>__GI___libc_malloc (15,045,135 samples, 0.15%)</title><rect x="51.8024%" y="165" width="0.1461%" height="15" fill="rgb(232,139,19)" fg:x="5332998853" fg:w="15045135"/><text x="52.0524%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18,054,162 samples, 0.18%)</title><rect x="51.7927%" y="293" width="0.1754%" height="15" fill="rgb(225,201,24)" fg:x="5331995844" fg:w="18054162"/><text x="52.0427%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18,054,162 samples, 0.18%)</title><rect x="51.7927%" y="277" width="0.1754%" height="15" fill="rgb(221,47,46)" fg:x="5331995844" fg:w="18054162"/><text x="52.0427%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18,054,162 samples, 0.18%)</title><rect x="51.7927%" y="261" width="0.1754%" height="15" fill="rgb(249,23,13)" fg:x="5331995844" fg:w="18054162"/><text x="52.0427%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (18,054,162 samples, 0.18%)</title><rect x="51.7927%" y="245" width="0.1754%" height="15" fill="rgb(219,9,5)" fg:x="5331995844" fg:w="18054162"/><text x="52.0427%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (18,054,162 samples, 0.18%)</title><rect x="51.7927%" y="229" width="0.1754%" height="15" fill="rgb(254,171,16)" fg:x="5331995844" fg:w="18054162"/><text x="52.0427%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,009,027 samples, 0.03%)</title><rect x="51.9680%" y="293" width="0.0292%" height="15" fill="rgb(230,171,20)" fg:x="5350050006" fg:w="3009027"/><text x="52.2180%" y="303.50"></text></g><g><title>core::ptr::write (3,009,027 samples, 0.03%)</title><rect x="51.9680%" y="277" width="0.0292%" height="15" fill="rgb(210,71,41)" fg:x="5350050006" fg:w="3009027"/><text x="52.2180%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="51.9973%" y="293" width="0.0292%" height="15" fill="rgb(206,173,20)" fg:x="5353059033" fg:w="3009027"/><text x="52.2473%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (78,234,702 samples, 0.76%)</title><rect x="51.5394%" y="309" width="0.7599%" height="15" fill="rgb(233,88,34)" fg:x="5305917610" fg:w="78234702"/><text x="51.7894%" y="319.50"></text></g><g><title>chlang::cmove::Move::new (5,015,045 samples, 0.05%)</title><rect x="52.2993%" y="293" width="0.0487%" height="15" fill="rgb(223,209,46)" fg:x="5384152312" fg:w="5015045"/><text x="52.5493%" y="303.50"></text></g><g><title>chlang::board::Position::valid (24,072,216 samples, 0.23%)</title><rect x="52.3480%" y="293" width="0.2338%" height="15" fill="rgb(250,43,18)" fg:x="5389167357" fg:w="24072216"/><text x="52.5980%" y="303.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="52.5818%" y="165" width="0.0195%" height="15" fill="rgb(208,13,10)" fg:x="5413239573" fg:w="2006018"/><text x="52.8318%" y="175.50"></text></g><g><title>__rdl_alloc (4,012,036 samples, 0.04%)</title><rect x="52.6013%" y="165" width="0.0390%" height="15" fill="rgb(212,200,36)" fg:x="5415245591" fg:w="4012036"/><text x="52.8513%" y="175.50"></text></g><g><title>tcache_get (4,012,036 samples, 0.04%)</title><rect x="52.6403%" y="149" width="0.0390%" height="15" fill="rgb(225,90,30)" fg:x="5419257627" fg:w="4012036"/><text x="52.8903%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46,138,414 samples, 0.45%)</title><rect x="52.5818%" y="213" width="0.4482%" height="15" fill="rgb(236,182,39)" fg:x="5413239573" fg:w="46138414"/><text x="52.8318%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46,138,414 samples, 0.45%)</title><rect x="52.5818%" y="197" width="0.4482%" height="15" fill="rgb(212,144,35)" fg:x="5413239573" fg:w="46138414"/><text x="52.8318%" y="207.50"></text></g><g><title>alloc::alloc::alloc (46,138,414 samples, 0.45%)</title><rect x="52.5818%" y="181" width="0.4482%" height="15" fill="rgb(228,63,44)" fg:x="5413239573" fg:w="46138414"/><text x="52.8318%" y="191.50"></text></g><g><title>__GI___libc_malloc (40,120,360 samples, 0.39%)</title><rect x="52.6403%" y="165" width="0.3897%" height="15" fill="rgb(228,109,6)" fg:x="5419257627" fg:w="40120360"/><text x="52.8903%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (51,153,459 samples, 0.50%)</title><rect x="52.5818%" y="293" width="0.4969%" height="15" fill="rgb(238,117,24)" fg:x="5413239573" fg:w="51153459"/><text x="52.8318%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51,153,459 samples, 0.50%)</title><rect x="52.5818%" y="277" width="0.4969%" height="15" fill="rgb(242,26,26)" fg:x="5413239573" fg:w="51153459"/><text x="52.8318%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51,153,459 samples, 0.50%)</title><rect x="52.5818%" y="261" width="0.4969%" height="15" fill="rgb(221,92,48)" fg:x="5413239573" fg:w="51153459"/><text x="52.8318%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (51,153,459 samples, 0.50%)</title><rect x="52.5818%" y="245" width="0.4969%" height="15" fill="rgb(209,209,32)" fg:x="5413239573" fg:w="51153459"/><text x="52.8318%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (51,153,459 samples, 0.50%)</title><rect x="52.5818%" y="229" width="0.4969%" height="15" fill="rgb(221,70,22)" fg:x="5413239573" fg:w="51153459"/><text x="52.8318%" y="239.50"></text></g><g><title>core::ptr::write (9,027,081 samples, 0.09%)</title><rect x="53.0787%" y="277" width="0.0877%" height="15" fill="rgb(248,145,5)" fg:x="5464393032" fg:w="9027081"/><text x="53.3287%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32,096,288 samples, 0.31%)</title><rect x="53.0787%" y="293" width="0.3118%" height="15" fill="rgb(226,116,26)" fg:x="5464393032" fg:w="32096288"/><text x="53.3287%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (5,015,045 samples, 0.05%)</title><rect x="53.3905%" y="293" width="0.0487%" height="15" fill="rgb(244,5,17)" fg:x="5496489320" fg:w="5015045"/><text x="53.6405%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (5,015,045 samples, 0.05%)</title><rect x="53.3905%" y="277" width="0.0487%" height="15" fill="rgb(252,159,33)" fg:x="5496489320" fg:w="5015045"/><text x="53.6405%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (133,400,197 samples, 1.30%)</title><rect x="52.2993%" y="309" width="1.2958%" height="15" fill="rgb(206,71,0)" fg:x="5384152312" fg:w="133400197"/><text x="52.5493%" y="319.50"></text></g><g><title>chlang::cmove::Move::new (6,018,054 samples, 0.06%)</title><rect x="53.5951%" y="293" width="0.0585%" height="15" fill="rgb(233,118,54)" fg:x="5517552509" fg:w="6018054"/><text x="53.8451%" y="303.50"></text></g><g><title>chlang::board::Position::valid (11,033,099 samples, 0.11%)</title><rect x="53.6535%" y="293" width="0.1072%" height="15" fill="rgb(234,83,48)" fg:x="5523570563" fg:w="11033099"/><text x="53.9035%" y="303.50"></text></g><g><title>__rust_dealloc (4,012,036 samples, 0.04%)</title><rect x="53.7607%" y="133" width="0.0390%" height="15" fill="rgb(228,3,54)" fg:x="5534603662" fg:w="4012036"/><text x="54.0107%" y="143.50"></text></g><g><title>__rdl_dealloc (3,009,027 samples, 0.03%)</title><rect x="53.7997%" y="133" width="0.0292%" height="15" fill="rgb(226,155,13)" fg:x="5538615698" fg:w="3009027"/><text x="54.0497%" y="143.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="53.8289%" y="117" width="0.0292%" height="15" fill="rgb(241,28,37)" fg:x="5541624725" fg:w="3009027"/><text x="54.0789%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="277" width="0.1364%" height="15" fill="rgb(233,93,10)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="261" width="0.1364%" height="15" fill="rgb(225,113,19)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="245" width="0.1364%" height="15" fill="rgb(241,2,18)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="255.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="229" width="0.1364%" height="15" fill="rgb(228,207,21)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="213" width="0.1364%" height="15" fill="rgb(213,211,35)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="197" width="0.1364%" height="15" fill="rgb(209,83,10)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="181" width="0.1364%" height="15" fill="rgb(209,164,1)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="165" width="0.1364%" height="15" fill="rgb(213,184,43)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (14,042,126 samples, 0.14%)</title><rect x="53.7607%" y="149" width="0.1364%" height="15" fill="rgb(231,61,34)" fg:x="5534603662" fg:w="14042126"/><text x="54.0107%" y="159.50"></text></g><g><title>__GI___libc_free (7,021,063 samples, 0.07%)</title><rect x="53.8289%" y="133" width="0.0682%" height="15" fill="rgb(235,75,3)" fg:x="5541624725" fg:w="7021063"/><text x="54.0789%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="261" width="0.0195%" height="15" fill="rgb(220,106,47)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="245" width="0.0195%" height="15" fill="rgb(210,196,33)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="229" width="0.0195%" height="15" fill="rgb(229,154,42)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="213" width="0.0195%" height="15" fill="rgb(228,114,26)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="197" width="0.0195%" height="15" fill="rgb(208,144,1)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="181" width="0.0195%" height="15" fill="rgb(239,112,37)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="165" width="0.0195%" height="15" fill="rgb(210,96,50)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="53.9069%" y="149" width="0.0195%" height="15" fill="rgb(222,178,2)" fg:x="5549648797" fg:w="2006018"/><text x="54.1569%" y="159.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (9,027,081 samples, 0.09%)</title><rect x="53.9069%" y="277" width="0.0877%" height="15" fill="rgb(226,74,18)" fg:x="5549648797" fg:w="9027081"/><text x="54.1569%" y="287.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="54.0043%" y="133" width="0.0292%" height="15" fill="rgb(225,67,54)" fg:x="5559678887" fg:w="3009027"/><text x="54.2543%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="261" width="0.0390%" height="15" fill="rgb(251,92,32)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="245" width="0.0390%" height="15" fill="rgb(228,149,22)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="229" width="0.0390%" height="15" fill="rgb(243,54,13)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="213" width="0.0390%" height="15" fill="rgb(243,180,28)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="197" width="0.0390%" height="15" fill="rgb(208,167,24)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="181" width="0.0390%" height="15" fill="rgb(245,73,45)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="165" width="0.0390%" height="15" fill="rgb(237,203,48)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="175.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="54.0043%" y="149" width="0.0390%" height="15" fill="rgb(211,197,16)" fg:x="5559678887" fg:w="4012036"/><text x="54.2543%" y="159.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="53.9945%" y="277" width="0.0585%" height="15" fill="rgb(243,99,51)" fg:x="5558675878" fg:w="6018054"/><text x="54.2445%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="261" width="0.0292%" height="15" fill="rgb(215,123,29)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="245" width="0.0292%" height="15" fill="rgb(239,186,37)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="229" width="0.0292%" height="15" fill="rgb(252,136,39)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="213" width="0.0292%" height="15" fill="rgb(223,213,32)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="197" width="0.0292%" height="15" fill="rgb(233,115,5)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="181" width="0.0292%" height="15" fill="rgb(207,226,44)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="165" width="0.0292%" height="15" fill="rgb(208,126,0)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="175.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="149" width="0.0292%" height="15" fill="rgb(244,66,21)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="159.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="54.0530%" y="133" width="0.0292%" height="15" fill="rgb(222,97,12)" fg:x="5564693932" fg:w="3009027"/><text x="54.3030%" y="143.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="54.0530%" y="277" width="0.0585%" height="15" fill="rgb(219,213,19)" fg:x="5564693932" fg:w="6018054"/><text x="54.3030%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,009,027 samples, 0.03%)</title><rect x="54.1212%" y="261" width="0.0292%" height="15" fill="rgb(252,169,30)" fg:x="5571714995" fg:w="3009027"/><text x="54.3712%" y="271.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="54.1115%" y="277" width="0.0585%" height="15" fill="rgb(206,32,51)" fg:x="5570711986" fg:w="6018054"/><text x="54.3615%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="54.1797%" y="181" width="0.0195%" height="15" fill="rgb(250,172,42)" fg:x="5577733049" fg:w="2006018"/><text x="54.4297%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="54.1797%" y="165" width="0.0195%" height="15" fill="rgb(209,34,43)" fg:x="5577733049" fg:w="2006018"/><text x="54.4297%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="54.1797%" y="149" width="0.0195%" height="15" fill="rgb(223,11,35)" fg:x="5577733049" fg:w="2006018"/><text x="54.4297%" y="159.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="54.1797%" y="133" width="0.0195%" height="15" fill="rgb(251,219,26)" fg:x="5577733049" fg:w="2006018"/><text x="54.4297%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="54.1797%" y="261" width="0.0292%" height="15" fill="rgb(231,119,3)" fg:x="5577733049" fg:w="3009027"/><text x="54.4297%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="54.1797%" y="245" width="0.0292%" height="15" fill="rgb(216,97,11)" fg:x="5577733049" fg:w="3009027"/><text x="54.4297%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="54.1797%" y="229" width="0.0292%" height="15" fill="rgb(223,59,9)" fg:x="5577733049" fg:w="3009027"/><text x="54.4297%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="54.1797%" y="213" width="0.0292%" height="15" fill="rgb(233,93,31)" fg:x="5577733049" fg:w="3009027"/><text x="54.4297%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="54.1797%" y="197" width="0.0292%" height="15" fill="rgb(239,81,33)" fg:x="5577733049" fg:w="3009027"/><text x="54.4297%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (7,021,063 samples, 0.07%)</title><rect x="54.1699%" y="277" width="0.0682%" height="15" fill="rgb(213,120,34)" fg:x="5576730040" fg:w="7021063"/><text x="54.4199%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,009,027 samples, 0.03%)</title><rect x="54.2381%" y="277" width="0.0292%" height="15" fill="rgb(243,49,53)" fg:x="5583751103" fg:w="3009027"/><text x="54.4881%" y="287.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3,009,027 samples, 0.03%)</title><rect x="54.2381%" y="261" width="0.0292%" height="15" fill="rgb(247,216,33)" fg:x="5583751103" fg:w="3009027"/><text x="54.4881%" y="271.50"></text></g><g><title>chlang::board::Board::attacked_by_color (54,162,486 samples, 0.53%)</title><rect x="53.7607%" y="293" width="0.5261%" height="15" fill="rgb(226,26,14)" fg:x="5534603662" fg:w="54162486"/><text x="54.0107%" y="303.50"></text></g><g><title>__rust_alloc (3,009,027 samples, 0.03%)</title><rect x="54.2868%" y="165" width="0.0292%" height="15" fill="rgb(215,49,53)" fg:x="5588766148" fg:w="3009027"/><text x="54.5368%" y="175.50"></text></g><g><title>tcache_get (8,024,072 samples, 0.08%)</title><rect x="54.3161%" y="149" width="0.0779%" height="15" fill="rgb(245,162,40)" fg:x="5591775175" fg:w="8024072"/><text x="54.5661%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23,069,207 samples, 0.22%)</title><rect x="54.2868%" y="213" width="0.2241%" height="15" fill="rgb(229,68,17)" fg:x="5588766148" fg:w="23069207"/><text x="54.5368%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23,069,207 samples, 0.22%)</title><rect x="54.2868%" y="197" width="0.2241%" height="15" fill="rgb(213,182,10)" fg:x="5588766148" fg:w="23069207"/><text x="54.5368%" y="207.50"></text></g><g><title>alloc::alloc::alloc (23,069,207 samples, 0.22%)</title><rect x="54.2868%" y="181" width="0.2241%" height="15" fill="rgb(245,125,30)" fg:x="5588766148" fg:w="23069207"/><text x="54.5368%" y="191.50"></text></g><g><title>__GI___libc_malloc (20,060,180 samples, 0.19%)</title><rect x="54.3161%" y="165" width="0.1949%" height="15" fill="rgb(232,202,2)" fg:x="5591775175" fg:w="20060180"/><text x="54.5661%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (27,081,243 samples, 0.26%)</title><rect x="54.2868%" y="293" width="0.2631%" height="15" fill="rgb(237,140,51)" fg:x="5588766148" fg:w="27081243"/><text x="54.5368%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27,081,243 samples, 0.26%)</title><rect x="54.2868%" y="277" width="0.2631%" height="15" fill="rgb(236,157,25)" fg:x="5588766148" fg:w="27081243"/><text x="54.5368%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27,081,243 samples, 0.26%)</title><rect x="54.2868%" y="261" width="0.2631%" height="15" fill="rgb(219,209,0)" fg:x="5588766148" fg:w="27081243"/><text x="54.5368%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (27,081,243 samples, 0.26%)</title><rect x="54.2868%" y="245" width="0.2631%" height="15" fill="rgb(240,116,54)" fg:x="5588766148" fg:w="27081243"/><text x="54.5368%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (27,081,243 samples, 0.26%)</title><rect x="54.2868%" y="229" width="0.2631%" height="15" fill="rgb(216,10,36)" fg:x="5588766148" fg:w="27081243"/><text x="54.5368%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2,006,018 samples, 0.02%)</title><rect x="54.5499%" y="277" width="0.0195%" height="15" fill="rgb(222,72,44)" fg:x="5615847391" fg:w="2006018"/><text x="54.7999%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="54.5499%" y="261" width="0.0195%" height="15" fill="rgb(232,159,9)" fg:x="5615847391" fg:w="2006018"/><text x="54.7999%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="54.5499%" y="245" width="0.0195%" height="15" fill="rgb(210,39,32)" fg:x="5615847391" fg:w="2006018"/><text x="54.7999%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.02%)</title><rect x="54.5499%" y="229" width="0.0195%" height="15" fill="rgb(216,194,45)" fg:x="5615847391" fg:w="2006018"/><text x="54.7999%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12,036,108 samples, 0.12%)</title><rect x="54.5499%" y="293" width="0.1169%" height="15" fill="rgb(218,18,35)" fg:x="5615847391" fg:w="12036108"/><text x="54.7999%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (2,006,018 samples, 0.02%)</title><rect x="54.6668%" y="293" width="0.0195%" height="15" fill="rgb(207,83,51)" fg:x="5627883499" fg:w="2006018"/><text x="54.9168%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (2,006,018 samples, 0.02%)</title><rect x="54.6668%" y="277" width="0.0195%" height="15" fill="rgb(225,63,43)" fg:x="5627883499" fg:w="2006018"/><text x="54.9168%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (144,433,296 samples, 1.40%)</title><rect x="53.5951%" y="309" width="1.4030%" height="15" fill="rgb(207,57,36)" fg:x="5517552509" fg:w="144433296"/><text x="53.8451%" y="319.50"></text></g><g><title>chlang::cmove::Move::new (2,006,018 samples, 0.02%)</title><rect x="54.9981%" y="293" width="0.0195%" height="15" fill="rgb(216,99,33)" fg:x="5661985805" fg:w="2006018"/><text x="55.2481%" y="303.50"></text></g><g><title>chlang::board::Position::valid (33,099,297 samples, 0.32%)</title><rect x="55.0175%" y="293" width="0.3215%" height="15" fill="rgb(225,42,16)" fg:x="5663991823" fg:w="33099297"/><text x="55.2675%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.03%)</title><rect x="55.3390%" y="293" width="0.0292%" height="15" fill="rgb(220,201,45)" fg:x="5697091120" fg:w="3009027"/><text x="55.5890%" y="303.50"></text></g><g><title>__rust_alloc (7,021,063 samples, 0.07%)</title><rect x="55.3683%" y="165" width="0.0682%" height="15" fill="rgb(225,33,4)" fg:x="5700100147" fg:w="7021063"/><text x="55.6183%" y="175.50"></text></g><g><title>tcache_get (9,027,081 samples, 0.09%)</title><rect x="55.4462%" y="149" width="0.0877%" height="15" fill="rgb(224,33,50)" fg:x="5708124219" fg:w="9027081"/><text x="55.6962%" y="159.50"></text></g><g><title>__GI___libc_malloc (44,132,396 samples, 0.43%)</title><rect x="55.4462%" y="165" width="0.4287%" height="15" fill="rgb(246,198,51)" fg:x="5708124219" fg:w="44132396"/><text x="55.6962%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53,159,477 samples, 0.52%)</title><rect x="55.3683%" y="213" width="0.5164%" height="15" fill="rgb(205,22,4)" fg:x="5700100147" fg:w="53159477"/><text x="55.6183%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53,159,477 samples, 0.52%)</title><rect x="55.3683%" y="197" width="0.5164%" height="15" fill="rgb(206,3,8)" fg:x="5700100147" fg:w="53159477"/><text x="55.6183%" y="207.50"></text></g><g><title>alloc::alloc::alloc (53,159,477 samples, 0.52%)</title><rect x="55.3683%" y="181" width="0.5164%" height="15" fill="rgb(251,23,15)" fg:x="5700100147" fg:w="53159477"/><text x="55.6183%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60,180,540 samples, 0.58%)</title><rect x="55.3683%" y="261" width="0.5846%" height="15" fill="rgb(252,88,28)" fg:x="5700100147" fg:w="60180540"/><text x="55.6183%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (60,180,540 samples, 0.58%)</title><rect x="55.3683%" y="245" width="0.5846%" height="15" fill="rgb(212,127,14)" fg:x="5700100147" fg:w="60180540"/><text x="55.6183%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (60,180,540 samples, 0.58%)</title><rect x="55.3683%" y="229" width="0.5846%" height="15" fill="rgb(247,145,37)" fg:x="5700100147" fg:w="60180540"/><text x="55.6183%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (61,183,549 samples, 0.59%)</title><rect x="55.3683%" y="293" width="0.5943%" height="15" fill="rgb(209,117,53)" fg:x="5700100147" fg:w="61183549"/><text x="55.6183%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (61,183,549 samples, 0.59%)</title><rect x="55.3683%" y="277" width="0.5943%" height="15" fill="rgb(212,90,42)" fg:x="5700100147" fg:w="61183549"/><text x="55.6183%" y="287.50"></text></g><g><title>core::ptr::write (6,018,054 samples, 0.06%)</title><rect x="55.9626%" y="277" width="0.0585%" height="15" fill="rgb(218,164,37)" fg:x="5761283696" fg:w="6018054"/><text x="56.2126%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (56,168,504 samples, 0.55%)</title><rect x="55.9626%" y="293" width="0.5456%" height="15" fill="rgb(246,65,34)" fg:x="5761283696" fg:w="56168504"/><text x="56.2126%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (7,021,063 samples, 0.07%)</title><rect x="56.5179%" y="293" width="0.0682%" height="15" fill="rgb(231,100,33)" fg:x="5818455209" fg:w="7021063"/><text x="56.7679%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (7,021,063 samples, 0.07%)</title><rect x="56.5179%" y="277" width="0.0682%" height="15" fill="rgb(228,126,14)" fg:x="5818455209" fg:w="7021063"/><text x="56.7679%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (223,671,007 samples, 2.17%)</title><rect x="54.9981%" y="309" width="2.1726%" height="15" fill="rgb(215,173,21)" fg:x="5661985805" fg:w="223671007"/><text x="55.2481%" y="319.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,018,054 samples, 0.06%)</title><rect x="57.1707%" y="277" width="0.0585%" height="15" fill="rgb(210,6,40)" fg:x="5885656812" fg:w="6018054"/><text x="57.4207%" y="287.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,018,054 samples, 0.06%)</title><rect x="57.1707%" y="261" width="0.0585%" height="15" fill="rgb(212,48,18)" fg:x="5885656812" fg:w="6018054"/><text x="57.4207%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,018,054 samples, 0.06%)</title><rect x="57.1707%" y="245" width="0.0585%" height="15" fill="rgb(230,214,11)" fg:x="5885656812" fg:w="6018054"/><text x="57.4207%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,018,054 samples, 0.06%)</title><rect x="57.1707%" y="229" width="0.0585%" height="15" fill="rgb(254,105,39)" fg:x="5885656812" fg:w="6018054"/><text x="57.4207%" y="239.50"></text></g><g><title>alloc::raw_vec::layout_array (3,009,027 samples, 0.03%)</title><rect x="57.2292%" y="197" width="0.0292%" height="15" fill="rgb(245,158,5)" fg:x="5891674866" fg:w="3009027"/><text x="57.4792%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,009,027 samples, 0.03%)</title><rect x="57.2292%" y="181" width="0.0292%" height="15" fill="rgb(249,208,11)" fg:x="5891674866" fg:w="3009027"/><text x="57.4792%" y="191.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="57.2681%" y="133" width="0.0195%" height="15" fill="rgb(210,39,28)" fg:x="5895686902" fg:w="2006018"/><text x="57.5181%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,039,117 samples, 0.13%)</title><rect x="57.2584%" y="197" width="0.1267%" height="15" fill="rgb(211,56,53)" fg:x="5894683893" fg:w="13039117"/><text x="57.5084%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,039,117 samples, 0.13%)</title><rect x="57.2584%" y="181" width="0.1267%" height="15" fill="rgb(226,201,30)" fg:x="5894683893" fg:w="13039117"/><text x="57.5084%" y="191.50"></text></g><g><title>alloc::alloc::alloc (13,039,117 samples, 0.13%)</title><rect x="57.2584%" y="165" width="0.1267%" height="15" fill="rgb(239,101,34)" fg:x="5894683893" fg:w="13039117"/><text x="57.5084%" y="175.50"></text></g><g><title>__GI___libc_malloc (12,036,108 samples, 0.12%)</title><rect x="57.2681%" y="149" width="0.1169%" height="15" fill="rgb(226,209,5)" fg:x="5895686902" fg:w="12036108"/><text x="57.5181%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (22,066,198 samples, 0.21%)</title><rect x="57.2292%" y="277" width="0.2143%" height="15" fill="rgb(250,105,47)" fg:x="5891674866" fg:w="22066198"/><text x="57.4792%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22,066,198 samples, 0.21%)</title><rect x="57.2292%" y="261" width="0.2143%" height="15" fill="rgb(230,72,3)" fg:x="5891674866" fg:w="22066198"/><text x="57.4792%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22,066,198 samples, 0.21%)</title><rect x="57.2292%" y="245" width="0.2143%" height="15" fill="rgb(232,218,39)" fg:x="5891674866" fg:w="22066198"/><text x="57.4792%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (22,066,198 samples, 0.21%)</title><rect x="57.2292%" y="229" width="0.2143%" height="15" fill="rgb(248,166,6)" fg:x="5891674866" fg:w="22066198"/><text x="57.4792%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (22,066,198 samples, 0.21%)</title><rect x="57.2292%" y="213" width="0.2143%" height="15" fill="rgb(247,89,20)" fg:x="5891674866" fg:w="22066198"/><text x="57.4792%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9,027,081 samples, 0.09%)</title><rect x="57.4435%" y="149" width="0.0877%" height="15" fill="rgb(248,130,54)" fg:x="5913741064" fg:w="9027081"/><text x="57.6935%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9,027,081 samples, 0.09%)</title><rect x="57.4435%" y="133" width="0.0877%" height="15" fill="rgb(234,196,4)" fg:x="5913741064" fg:w="9027081"/><text x="57.6935%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (9,027,081 samples, 0.09%)</title><rect x="57.4435%" y="117" width="0.0877%" height="15" fill="rgb(250,143,31)" fg:x="5913741064" fg:w="9027081"/><text x="57.6935%" y="127.50"></text></g><g><title>core::ptr::write (9,027,081 samples, 0.09%)</title><rect x="57.4435%" y="101" width="0.0877%" height="15" fill="rgb(211,110,34)" fg:x="5913741064" fg:w="9027081"/><text x="57.6935%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="277" width="0.1461%" height="15" fill="rgb(215,124,48)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="261" width="0.1461%" height="15" fill="rgb(216,46,13)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="245" width="0.1461%" height="15" fill="rgb(205,184,25)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="229" width="0.1461%" height="15" fill="rgb(228,1,10)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="213" width="0.1461%" height="15" fill="rgb(213,116,27)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="197" width="0.1461%" height="15" fill="rgb(241,95,50)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="181" width="0.1461%" height="15" fill="rgb(238,48,32)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,045,135 samples, 0.15%)</title><rect x="57.4435%" y="165" width="0.1461%" height="15" fill="rgb(235,113,49)" fg:x="5913741064" fg:w="15045135"/><text x="57.6935%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="57.5896%" y="277" width="0.0292%" height="15" fill="rgb(205,127,43)" fg:x="5928786199" fg:w="3009027"/><text x="57.8396%" y="287.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="57.5896%" y="261" width="0.0292%" height="15" fill="rgb(250,162,2)" fg:x="5928786199" fg:w="3009027"/><text x="57.8396%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (54,162,486 samples, 0.53%)</title><rect x="57.1707%" y="309" width="0.5261%" height="15" fill="rgb(220,13,41)" fg:x="5885656812" fg:w="54162486"/><text x="57.4207%" y="319.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (54,162,486 samples, 0.53%)</title><rect x="57.1707%" y="293" width="0.5261%" height="15" fill="rgb(249,221,25)" fg:x="5885656812" fg:w="54162486"/><text x="57.4207%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (1,053,159,450 samples, 10.23%)</title><rect x="49.0744%" y="325" width="10.2299%" height="15" fill="rgb(215,208,19)" fg:x="5052156333" fg:w="1053159450"/><text x="49.3244%" y="335.50">chlang::board::..</text></g><g><title>core::ptr::write (74,222,666 samples, 0.72%)</title><rect x="59.3044%" y="309" width="0.7210%" height="15" fill="rgb(236,175,2)" fg:x="6105315783" fg:w="74222666"/><text x="59.5544%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (76,228,684 samples, 0.74%)</title><rect x="59.3044%" y="325" width="0.7405%" height="15" fill="rgb(241,52,2)" fg:x="6105315783" fg:w="76228684"/><text x="59.5544%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (31,093,279 samples, 0.30%)</title><rect x="60.0448%" y="325" width="0.3020%" height="15" fill="rgb(248,140,14)" fg:x="6181544467" fg:w="31093279"/><text x="60.2948%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (31,093,279 samples, 0.30%)</title><rect x="60.0448%" y="309" width="0.3020%" height="15" fill="rgb(253,22,42)" fg:x="6181544467" fg:w="31093279"/><text x="60.2948%" y="319.50"></text></g><g><title>chlang::board::Board::make_move (5,808,425,119 samples, 56.42%)</title><rect x="6.0892%" y="341" width="56.4205%" height="15" fill="rgb(234,61,47)" fg:x="626880625" fg:w="5808425119"/><text x="6.3392%" y="351.50">chlang::board::Board::make_move</text></g><g><title>__rust_dealloc (4,012,036 samples, 0.04%)</title><rect x="62.5097%" y="181" width="0.0390%" height="15" fill="rgb(208,226,15)" fg:x="6435305744" fg:w="4012036"/><text x="62.7597%" y="191.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,012,036 samples, 0.04%)</title><rect x="62.5487%" y="165" width="0.0390%" height="15" fill="rgb(217,221,4)" fg:x="6439317780" fg:w="4012036"/><text x="62.7987%" y="175.50"></text></g><g><title>__rdl_dealloc (8,024,072 samples, 0.08%)</title><rect x="62.5487%" y="181" width="0.0779%" height="15" fill="rgb(212,174,34)" fg:x="6439317780" fg:w="8024072"/><text x="62.7987%" y="191.50"></text></g><g><title>tcache_put (8,024,072 samples, 0.08%)</title><rect x="62.6267%" y="149" width="0.0779%" height="15" fill="rgb(253,83,4)" fg:x="6447341852" fg:w="8024072"/><text x="62.8767%" y="159.50"></text></g><g><title>_int_free (45,135,405 samples, 0.44%)</title><rect x="62.6267%" y="165" width="0.4384%" height="15" fill="rgb(250,195,49)" fg:x="6447341852" fg:w="45135405"/><text x="62.8767%" y="175.50"></text></g><g><title>__GI___libc_free (59,177,531 samples, 0.57%)</title><rect x="62.6267%" y="181" width="0.5748%" height="15" fill="rgb(241,192,25)" fg:x="6447341852" fg:w="59177531"/><text x="62.8767%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="325" width="0.7015%" height="15" fill="rgb(208,124,10)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="309" width="0.7015%" height="15" fill="rgb(222,33,0)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="293" width="0.7015%" height="15" fill="rgb(234,209,28)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="277" width="0.7015%" height="15" fill="rgb(224,11,23)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="261" width="0.7015%" height="15" fill="rgb(232,99,1)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="245" width="0.7015%" height="15" fill="rgb(237,95,45)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="229" width="0.7015%" height="15" fill="rgb(208,109,11)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="213" width="0.7015%" height="15" fill="rgb(216,190,48)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (72,216,648 samples, 0.70%)</title><rect x="62.5097%" y="197" width="0.7015%" height="15" fill="rgb(251,171,36)" fg:x="6435305744" fg:w="72216648"/><text x="62.7597%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (207,622,863 samples, 2.02%)</title><rect x="63.2210%" y="325" width="2.0168%" height="15" fill="rgb(230,62,22)" fg:x="6508525401" fg:w="207622863"/><text x="63.4710%" y="335.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7,021,063 samples, 0.07%)</title><rect x="65.2377%" y="325" width="0.0682%" height="15" fill="rgb(225,114,35)" fg:x="6716148264" fg:w="7021063"/><text x="65.4877%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7,021,063 samples, 0.07%)</title><rect x="65.2377%" y="309" width="0.0682%" height="15" fill="rgb(215,118,42)" fg:x="6716148264" fg:w="7021063"/><text x="65.4877%" y="319.50"></text></g><g><title>tcache_put (2,006,018 samples, 0.02%)</title><rect x="65.3157%" y="165" width="0.0195%" height="15" fill="rgb(243,119,21)" fg:x="6724172336" fg:w="2006018"/><text x="65.5657%" y="175.50"></text></g><g><title>__GI___libc_free (7,021,063 samples, 0.07%)</title><rect x="65.3157%" y="197" width="0.0682%" height="15" fill="rgb(252,177,53)" fg:x="6724172336" fg:w="7021063"/><text x="65.5657%" y="207.50"></text></g><g><title>_int_free (7,021,063 samples, 0.07%)</title><rect x="65.3157%" y="181" width="0.0682%" height="15" fill="rgb(237,209,29)" fg:x="6724172336" fg:w="7021063"/><text x="65.5657%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (10,030,090 samples, 0.10%)</title><rect x="65.3059%" y="309" width="0.0974%" height="15" fill="rgb(212,65,23)" fg:x="6723169327" fg:w="10030090"/><text x="65.5559%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="65.3059%" y="293" width="0.0974%" height="15" fill="rgb(230,222,46)" fg:x="6723169327" fg:w="10030090"/><text x="65.5559%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="65.3059%" y="277" width="0.0974%" height="15" fill="rgb(215,135,32)" fg:x="6723169327" fg:w="10030090"/><text x="65.5559%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="65.3059%" y="261" width="0.0974%" height="15" fill="rgb(246,101,22)" fg:x="6723169327" fg:w="10030090"/><text x="65.5559%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,030,090 samples, 0.10%)</title><rect x="65.3059%" y="245" width="0.0974%" height="15" fill="rgb(206,107,13)" fg:x="6723169327" fg:w="10030090"/><text x="65.5559%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,030,090 samples, 0.10%)</title><rect x="65.3059%" y="229" width="0.0974%" height="15" fill="rgb(250,100,44)" fg:x="6723169327" fg:w="10030090"/><text x="65.5559%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (10,030,090 samples, 0.10%)</title><rect x="65.3059%" y="213" width="0.0974%" height="15" fill="rgb(231,147,38)" fg:x="6723169327" fg:w="10030090"/><text x="65.5559%" y="223.50"></text></g><g><title>chlang::board::Position::bitboard (4,012,036 samples, 0.04%)</title><rect x="65.4034%" y="293" width="0.0390%" height="15" fill="rgb(229,8,40)" fg:x="6733199417" fg:w="4012036"/><text x="65.6534%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="293" width="0.0292%" height="15" fill="rgb(221,135,30)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="277" width="0.0292%" height="15" fill="rgb(249,193,18)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="287.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="261" width="0.0292%" height="15" fill="rgb(209,133,39)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="245" width="0.0292%" height="15" fill="rgb(232,100,14)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="255.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="229" width="0.0292%" height="15" fill="rgb(224,185,1)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="213" width="0.0292%" height="15" fill="rgb(223,139,8)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="197" width="0.0292%" height="15" fill="rgb(232,213,38)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="207.50"></text></g><g><title>core::ptr::read (3,009,027 samples, 0.03%)</title><rect x="65.4423%" y="181" width="0.0292%" height="15" fill="rgb(207,94,22)" fg:x="6737211453" fg:w="3009027"/><text x="65.6923%" y="191.50"></text></g><g><title>chlang::board::Board::piece_type (15,045,135 samples, 0.15%)</title><rect x="65.4034%" y="309" width="0.1461%" height="15" fill="rgb(219,183,54)" fg:x="6733199417" fg:w="15045135"/><text x="65.6534%" y="319.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.02%)</title><rect x="65.5495%" y="293" width="0.0195%" height="15" fill="rgb(216,185,54)" fg:x="6748244552" fg:w="2006018"/><text x="65.7995%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (2,006,018 samples, 0.02%)</title><rect x="65.5690%" y="293" width="0.0195%" height="15" fill="rgb(254,217,39)" fg:x="6750250570" fg:w="2006018"/><text x="65.8190%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,021,063 samples, 0.07%)</title><rect x="65.5885%" y="213" width="0.0682%" height="15" fill="rgb(240,178,23)" fg:x="6752256588" fg:w="7021063"/><text x="65.8385%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,021,063 samples, 0.07%)</title><rect x="65.5885%" y="197" width="0.0682%" height="15" fill="rgb(218,11,47)" fg:x="6752256588" fg:w="7021063"/><text x="65.8385%" y="207.50"></text></g><g><title>alloc::alloc::alloc (7,021,063 samples, 0.07%)</title><rect x="65.5885%" y="181" width="0.0682%" height="15" fill="rgb(218,51,51)" fg:x="6752256588" fg:w="7021063"/><text x="65.8385%" y="191.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.06%)</title><rect x="65.5982%" y="165" width="0.0585%" height="15" fill="rgb(238,126,27)" fg:x="6753259597" fg:w="6018054"/><text x="65.8482%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9,027,081 samples, 0.09%)</title><rect x="65.5885%" y="293" width="0.0877%" height="15" fill="rgb(249,202,22)" fg:x="6752256588" fg:w="9027081"/><text x="65.8385%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="65.5885%" y="277" width="0.0877%" height="15" fill="rgb(254,195,49)" fg:x="6752256588" fg:w="9027081"/><text x="65.8385%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="65.5885%" y="261" width="0.0877%" height="15" fill="rgb(208,123,14)" fg:x="6752256588" fg:w="9027081"/><text x="65.8385%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="65.5885%" y="245" width="0.0877%" height="15" fill="rgb(224,200,8)" fg:x="6752256588" fg:w="9027081"/><text x="65.8385%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,027,081 samples, 0.09%)</title><rect x="65.5885%" y="229" width="0.0877%" height="15" fill="rgb(217,61,36)" fg:x="6752256588" fg:w="9027081"/><text x="65.8385%" y="239.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="65.6761%" y="277" width="0.0195%" height="15" fill="rgb(206,35,45)" fg:x="6761283669" fg:w="2006018"/><text x="65.9261%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11,033,099 samples, 0.11%)</title><rect x="65.6761%" y="293" width="0.1072%" height="15" fill="rgb(217,65,33)" fg:x="6761283669" fg:w="11033099"/><text x="65.9261%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (41,123,369 samples, 0.40%)</title><rect x="65.5495%" y="309" width="0.3995%" height="15" fill="rgb(222,158,48)" fg:x="6748244552" fg:w="41123369"/><text x="65.7995%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (4,012,036 samples, 0.04%)</title><rect x="65.9489%" y="293" width="0.0390%" height="15" fill="rgb(254,2,54)" fg:x="6789367921" fg:w="4012036"/><text x="66.1989%" y="303.50"></text></g><g><title>chlang::board::Position::valid (3,009,027 samples, 0.03%)</title><rect x="65.9879%" y="293" width="0.0292%" height="15" fill="rgb(250,143,38)" fg:x="6793379957" fg:w="3009027"/><text x="66.2379%" y="303.50"></text></g><g><title>__rust_alloc (6,018,054 samples, 0.06%)</title><rect x="66.0171%" y="165" width="0.0585%" height="15" fill="rgb(248,25,0)" fg:x="6796388984" fg:w="6018054"/><text x="66.2671%" y="175.50"></text></g><g><title>__rdl_alloc (5,015,045 samples, 0.05%)</title><rect x="66.0756%" y="165" width="0.0487%" height="15" fill="rgb(206,152,27)" fg:x="6802407038" fg:w="5015045"/><text x="66.3256%" y="175.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="66.1243%" y="149" width="0.0195%" height="15" fill="rgb(240,77,30)" fg:x="6807422083" fg:w="2006018"/><text x="66.3743%" y="159.50"></text></g><g><title>__GI___libc_malloc (11,033,099 samples, 0.11%)</title><rect x="66.1243%" y="165" width="0.1072%" height="15" fill="rgb(231,5,3)" fg:x="6807422083" fg:w="11033099"/><text x="66.3743%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24,072,216 samples, 0.23%)</title><rect x="66.0171%" y="213" width="0.2338%" height="15" fill="rgb(207,226,32)" fg:x="6796388984" fg:w="24072216"/><text x="66.2671%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24,072,216 samples, 0.23%)</title><rect x="66.0171%" y="197" width="0.2338%" height="15" fill="rgb(222,207,47)" fg:x="6796388984" fg:w="24072216"/><text x="66.2671%" y="207.50"></text></g><g><title>alloc::alloc::alloc (24,072,216 samples, 0.23%)</title><rect x="66.0171%" y="181" width="0.2338%" height="15" fill="rgb(229,115,45)" fg:x="6796388984" fg:w="24072216"/><text x="66.2671%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25,075,225 samples, 0.24%)</title><rect x="66.0171%" y="293" width="0.2436%" height="15" fill="rgb(224,191,6)" fg:x="6796388984" fg:w="25075225"/><text x="66.2671%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25,075,225 samples, 0.24%)</title><rect x="66.0171%" y="277" width="0.2436%" height="15" fill="rgb(230,227,24)" fg:x="6796388984" fg:w="25075225"/><text x="66.2671%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25,075,225 samples, 0.24%)</title><rect x="66.0171%" y="261" width="0.2436%" height="15" fill="rgb(228,80,19)" fg:x="6796388984" fg:w="25075225"/><text x="66.2671%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (25,075,225 samples, 0.24%)</title><rect x="66.0171%" y="245" width="0.2436%" height="15" fill="rgb(247,229,0)" fg:x="6796388984" fg:w="25075225"/><text x="66.2671%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (25,075,225 samples, 0.24%)</title><rect x="66.0171%" y="229" width="0.2436%" height="15" fill="rgb(237,194,15)" fg:x="6796388984" fg:w="25075225"/><text x="66.2671%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,021,063 samples, 0.07%)</title><rect x="66.2705%" y="293" width="0.0682%" height="15" fill="rgb(219,203,20)" fg:x="6822467218" fg:w="7021063"/><text x="66.5205%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (57,171,513 samples, 0.56%)</title><rect x="65.9489%" y="309" width="0.5553%" height="15" fill="rgb(234,128,8)" fg:x="6789367921" fg:w="57171513"/><text x="66.1989%" y="319.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.02%)</title><rect x="66.5140%" y="293" width="0.0195%" height="15" fill="rgb(248,202,8)" fg:x="6847542443" fg:w="2006018"/><text x="66.7640%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="293" width="0.0682%" height="15" fill="rgb(206,104,37)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="277" width="0.0682%" height="15" fill="rgb(223,8,27)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="261" width="0.0682%" height="15" fill="rgb(216,217,28)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="245" width="0.0682%" height="15" fill="rgb(249,199,1)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="229" width="0.0682%" height="15" fill="rgb(240,85,17)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="213" width="0.0682%" height="15" fill="rgb(206,108,45)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="197" width="0.0682%" height="15" fill="rgb(245,210,41)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="207.50"></text></g><g><title>alloc::alloc::alloc (7,021,063 samples, 0.07%)</title><rect x="66.5335%" y="181" width="0.0682%" height="15" fill="rgb(206,13,37)" fg:x="6849548461" fg:w="7021063"/><text x="66.7835%" y="191.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.06%)</title><rect x="66.5433%" y="165" width="0.0585%" height="15" fill="rgb(250,61,18)" fg:x="6850551470" fg:w="6018054"/><text x="66.7933%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,009,027 samples, 0.03%)</title><rect x="66.6017%" y="293" width="0.0292%" height="15" fill="rgb(235,172,48)" fg:x="6856569524" fg:w="3009027"/><text x="66.8517%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (3,009,027 samples, 0.03%)</title><rect x="66.6309%" y="293" width="0.0292%" height="15" fill="rgb(249,201,17)" fg:x="6859578551" fg:w="3009027"/><text x="66.8809%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (3,009,027 samples, 0.03%)</title><rect x="66.6309%" y="277" width="0.0292%" height="15" fill="rgb(219,208,6)" fg:x="6859578551" fg:w="3009027"/><text x="66.8809%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (18,054,162 samples, 0.18%)</title><rect x="66.5043%" y="309" width="0.1754%" height="15" fill="rgb(248,31,23)" fg:x="6846539434" fg:w="18054162"/><text x="66.7543%" y="319.50"></text></g><g><title>chlang::cmove::Move::new (3,009,027 samples, 0.03%)</title><rect x="66.6797%" y="293" width="0.0292%" height="15" fill="rgb(245,15,42)" fg:x="6864593596" fg:w="3009027"/><text x="66.9297%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (2,006,018 samples, 0.02%)</title><rect x="66.7284%" y="277" width="0.0195%" height="15" fill="rgb(222,217,39)" fg:x="6869608641" fg:w="2006018"/><text x="66.9784%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="66.7284%" y="261" width="0.0195%" height="15" fill="rgb(210,219,27)" fg:x="6869608641" fg:w="2006018"/><text x="66.9784%" y="271.50"></text></g><g><title>chlang::board::Board::attacked_by_color (4,012,036 samples, 0.04%)</title><rect x="66.7186%" y="293" width="0.0390%" height="15" fill="rgb(252,166,36)" fg:x="6868605632" fg:w="4012036"/><text x="66.9686%" y="303.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="66.7673%" y="149" width="0.0195%" height="15" fill="rgb(245,132,34)" fg:x="6873620677" fg:w="2006018"/><text x="67.0173%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,021,063 samples, 0.07%)</title><rect x="66.7576%" y="213" width="0.0682%" height="15" fill="rgb(236,54,3)" fg:x="6872617668" fg:w="7021063"/><text x="67.0076%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,021,063 samples, 0.07%)</title><rect x="66.7576%" y="197" width="0.0682%" height="15" fill="rgb(241,173,43)" fg:x="6872617668" fg:w="7021063"/><text x="67.0076%" y="207.50"></text></g><g><title>alloc::alloc::alloc (7,021,063 samples, 0.07%)</title><rect x="66.7576%" y="181" width="0.0682%" height="15" fill="rgb(215,190,9)" fg:x="6872617668" fg:w="7021063"/><text x="67.0076%" y="191.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.06%)</title><rect x="66.7673%" y="165" width="0.0585%" height="15" fill="rgb(242,101,16)" fg:x="6873620677" fg:w="6018054"/><text x="67.0173%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8,024,072 samples, 0.08%)</title><rect x="66.7576%" y="293" width="0.0779%" height="15" fill="rgb(223,190,21)" fg:x="6872617668" fg:w="8024072"/><text x="67.0076%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.08%)</title><rect x="66.7576%" y="277" width="0.0779%" height="15" fill="rgb(215,228,25)" fg:x="6872617668" fg:w="8024072"/><text x="67.0076%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.08%)</title><rect x="66.7576%" y="261" width="0.0779%" height="15" fill="rgb(225,36,22)" fg:x="6872617668" fg:w="8024072"/><text x="67.0076%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,024,072 samples, 0.08%)</title><rect x="66.7576%" y="245" width="0.0779%" height="15" fill="rgb(251,106,46)" fg:x="6872617668" fg:w="8024072"/><text x="67.0076%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,024,072 samples, 0.08%)</title><rect x="66.7576%" y="229" width="0.0779%" height="15" fill="rgb(208,90,1)" fg:x="6872617668" fg:w="8024072"/><text x="67.0076%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="66.8355%" y="293" width="0.0195%" height="15" fill="rgb(243,10,4)" fg:x="6880641740" fg:w="2006018"/><text x="67.0855%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (23,069,207 samples, 0.22%)</title><rect x="66.6797%" y="309" width="0.2241%" height="15" fill="rgb(212,137,27)" fg:x="6864593596" fg:w="23069207"/><text x="66.9297%" y="319.50"></text></g><g><title>chlang::board::Position::valid (19,057,171 samples, 0.19%)</title><rect x="66.9037%" y="293" width="0.1851%" height="15" fill="rgb(231,220,49)" fg:x="6887662803" fg:w="19057171"/><text x="67.1537%" y="303.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="67.0986%" y="165" width="0.0195%" height="15" fill="rgb(237,96,20)" fg:x="6907722983" fg:w="2006018"/><text x="67.3486%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,030,090 samples, 0.10%)</title><rect x="67.0986%" y="213" width="0.0974%" height="15" fill="rgb(239,229,30)" fg:x="6907722983" fg:w="10030090"/><text x="67.3486%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,030,090 samples, 0.10%)</title><rect x="67.0986%" y="197" width="0.0974%" height="15" fill="rgb(219,65,33)" fg:x="6907722983" fg:w="10030090"/><text x="67.3486%" y="207.50"></text></g><g><title>alloc::alloc::alloc (10,030,090 samples, 0.10%)</title><rect x="67.0986%" y="181" width="0.0974%" height="15" fill="rgb(243,134,7)" fg:x="6907722983" fg:w="10030090"/><text x="67.3486%" y="191.50"></text></g><g><title>__GI___libc_malloc (7,021,063 samples, 0.07%)</title><rect x="67.1278%" y="165" width="0.0682%" height="15" fill="rgb(216,177,54)" fg:x="6910732010" fg:w="7021063"/><text x="67.3778%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15,045,135 samples, 0.15%)</title><rect x="67.0986%" y="293" width="0.1461%" height="15" fill="rgb(211,160,20)" fg:x="6907722983" fg:w="15045135"/><text x="67.3486%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="67.0986%" y="277" width="0.1461%" height="15" fill="rgb(239,85,39)" fg:x="6907722983" fg:w="15045135"/><text x="67.3486%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="67.0986%" y="261" width="0.1461%" height="15" fill="rgb(232,125,22)" fg:x="6907722983" fg:w="15045135"/><text x="67.3486%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="67.0986%" y="245" width="0.1461%" height="15" fill="rgb(244,57,34)" fg:x="6907722983" fg:w="15045135"/><text x="67.3486%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (15,045,135 samples, 0.15%)</title><rect x="67.0986%" y="229" width="0.1461%" height="15" fill="rgb(214,203,32)" fg:x="6907722983" fg:w="15045135"/><text x="67.3486%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14,042,126 samples, 0.14%)</title><rect x="67.2447%" y="293" width="0.1364%" height="15" fill="rgb(207,58,43)" fg:x="6922768118" fg:w="14042126"/><text x="67.4947%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (3,009,027 samples, 0.03%)</title><rect x="67.3811%" y="293" width="0.0292%" height="15" fill="rgb(215,193,15)" fg:x="6936810244" fg:w="3009027"/><text x="67.6311%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (3,009,027 samples, 0.03%)</title><rect x="67.3811%" y="277" width="0.0292%" height="15" fill="rgb(232,15,44)" fg:x="6936810244" fg:w="3009027"/><text x="67.6311%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (74,222,666 samples, 0.72%)</title><rect x="66.9037%" y="309" width="0.7210%" height="15" fill="rgb(212,3,48)" fg:x="6887662803" fg:w="74222666"/><text x="67.1537%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="67.6247%" y="197" width="0.0195%" height="15" fill="rgb(218,128,7)" fg:x="6961885469" fg:w="2006018"/><text x="67.8747%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="67.6247%" y="181" width="0.0195%" height="15" fill="rgb(226,216,39)" fg:x="6961885469" fg:w="2006018"/><text x="67.8747%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="67.6247%" y="165" width="0.0195%" height="15" fill="rgb(243,47,51)" fg:x="6961885469" fg:w="2006018"/><text x="67.8747%" y="175.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="67.6247%" y="149" width="0.0195%" height="15" fill="rgb(241,183,40)" fg:x="6961885469" fg:w="2006018"/><text x="67.8747%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="67.6247%" y="277" width="0.0292%" height="15" fill="rgb(231,217,32)" fg:x="6961885469" fg:w="3009027"/><text x="67.8747%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="67.6247%" y="261" width="0.0292%" height="15" fill="rgb(229,61,38)" fg:x="6961885469" fg:w="3009027"/><text x="67.8747%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="67.6247%" y="245" width="0.0292%" height="15" fill="rgb(225,210,5)" fg:x="6961885469" fg:w="3009027"/><text x="67.8747%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="67.6247%" y="229" width="0.0292%" height="15" fill="rgb(231,79,45)" fg:x="6961885469" fg:w="3009027"/><text x="67.8747%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="67.6247%" y="213" width="0.0292%" height="15" fill="rgb(224,100,7)" fg:x="6961885469" fg:w="3009027"/><text x="67.8747%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (5,015,045 samples, 0.05%)</title><rect x="67.6247%" y="309" width="0.0487%" height="15" fill="rgb(241,198,18)" fg:x="6961885469" fg:w="5015045"/><text x="67.8747%" y="319.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (5,015,045 samples, 0.05%)</title><rect x="67.6247%" y="293" width="0.0487%" height="15" fill="rgb(252,97,53)" fg:x="6961885469" fg:w="5015045"/><text x="67.8747%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (281,845,529 samples, 2.74%)</title><rect x="65.3059%" y="325" width="2.7377%" height="15" fill="rgb(220,88,7)" fg:x="6723169327" fg:w="281845529"/><text x="65.5559%" y="335.50">ch..</text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="68.0436%" y="197" width="0.0195%" height="15" fill="rgb(213,176,14)" fg:x="7005014856" fg:w="2006018"/><text x="68.2936%" y="207.50"></text></g><g><title>unlink_chunk (3,009,027 samples, 0.03%)</title><rect x="68.0631%" y="165" width="0.0292%" height="15" fill="rgb(246,73,7)" fg:x="7007020874" fg:w="3009027"/><text x="68.3131%" y="175.50"></text></g><g><title>_int_malloc (25,075,225 samples, 0.24%)</title><rect x="68.0631%" y="181" width="0.2436%" height="15" fill="rgb(245,64,36)" fg:x="7007020874" fg:w="25075225"/><text x="68.3131%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30,090,270 samples, 0.29%)</title><rect x="68.0436%" y="293" width="0.2923%" height="15" fill="rgb(245,80,10)" fg:x="7005014856" fg:w="30090270"/><text x="68.2936%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (30,090,270 samples, 0.29%)</title><rect x="68.0436%" y="277" width="0.2923%" height="15" fill="rgb(232,107,50)" fg:x="7005014856" fg:w="30090270"/><text x="68.2936%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (30,090,270 samples, 0.29%)</title><rect x="68.0436%" y="261" width="0.2923%" height="15" fill="rgb(253,3,0)" fg:x="7005014856" fg:w="30090270"/><text x="68.2936%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30,090,270 samples, 0.29%)</title><rect x="68.0436%" y="245" width="0.2923%" height="15" fill="rgb(212,99,53)" fg:x="7005014856" fg:w="30090270"/><text x="68.2936%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30,090,270 samples, 0.29%)</title><rect x="68.0436%" y="229" width="0.2923%" height="15" fill="rgb(249,111,54)" fg:x="7005014856" fg:w="30090270"/><text x="68.2936%" y="239.50"></text></g><g><title>alloc::alloc::alloc (30,090,270 samples, 0.29%)</title><rect x="68.0436%" y="213" width="0.2923%" height="15" fill="rgb(249,55,30)" fg:x="7005014856" fg:w="30090270"/><text x="68.2936%" y="223.50"></text></g><g><title>__GI___libc_malloc (28,084,252 samples, 0.27%)</title><rect x="68.0631%" y="197" width="0.2728%" height="15" fill="rgb(237,47,42)" fg:x="7007020874" fg:w="28084252"/><text x="68.3131%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31,093,279 samples, 0.30%)</title><rect x="68.0436%" y="325" width="0.3020%" height="15" fill="rgb(211,20,18)" fg:x="7005014856" fg:w="31093279"/><text x="68.2936%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31,093,279 samples, 0.30%)</title><rect x="68.0436%" y="309" width="0.3020%" height="15" fill="rgb(231,203,46)" fg:x="7005014856" fg:w="31093279"/><text x="68.2936%" y="319.50"></text></g><g><title>core::ptr::write (14,042,126 samples, 0.14%)</title><rect x="68.3457%" y="309" width="0.1364%" height="15" fill="rgb(237,142,3)" fg:x="7036108135" fg:w="14042126"/><text x="68.5957%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,012,036 samples, 0.04%)</title><rect x="68.4821%" y="309" width="0.0390%" height="15" fill="rgb(241,107,1)" fg:x="7050150261" fg:w="4012036"/><text x="68.7321%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43,129,387 samples, 0.42%)</title><rect x="68.3457%" y="325" width="0.4189%" height="15" fill="rgb(229,83,13)" fg:x="7036108135" fg:w="43129387"/><text x="68.5957%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="68.7646%" y="325" width="0.0195%" height="15" fill="rgb(241,91,40)" fg:x="7079237522" fg:w="2006018"/><text x="69.0146%" y="335.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="68.7646%" y="309" width="0.0195%" height="15" fill="rgb(225,3,45)" fg:x="7079237522" fg:w="2006018"/><text x="69.0146%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="68.7841%" y="325" width="0.0195%" height="15" fill="rgb(244,223,14)" fg:x="7081243540" fg:w="2006018"/><text x="69.0341%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (2,006,018 samples, 0.02%)</title><rect x="68.7841%" y="309" width="0.0195%" height="15" fill="rgb(224,124,37)" fg:x="7081243540" fg:w="2006018"/><text x="69.0341%" y="319.50"></text></g><g><title>core::ptr::read (2,006,018 samples, 0.02%)</title><rect x="68.7841%" y="293" width="0.0195%" height="15" fill="rgb(251,171,30)" fg:x="7081243540" fg:w="2006018"/><text x="69.0341%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15,045,135 samples, 0.15%)</title><rect x="68.8036%" y="325" width="0.1461%" height="15" fill="rgb(236,46,54)" fg:x="7083249558" fg:w="15045135"/><text x="69.0536%" y="335.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (15,045,135 samples, 0.15%)</title><rect x="68.8036%" y="309" width="0.1461%" height="15" fill="rgb(245,213,5)" fg:x="7083249558" fg:w="15045135"/><text x="69.0536%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (695,085,237 samples, 6.75%)</title><rect x="62.5097%" y="341" width="6.7518%" height="15" fill="rgb(230,144,27)" fg:x="6435305744" fg:w="695085237"/><text x="62.7597%" y="351.50">chlang::b..</text></g><g><title>unlink_chunk (3,009,027 samples, 0.03%)</title><rect x="69.2615%" y="181" width="0.0292%" height="15" fill="rgb(220,86,6)" fg:x="7130390981" fg:w="3009027"/><text x="69.5115%" y="191.50"></text></g><g><title>_int_malloc (33,099,297 samples, 0.32%)</title><rect x="69.2615%" y="197" width="0.3215%" height="15" fill="rgb(240,20,13)" fg:x="7130390981" fg:w="33099297"/><text x="69.5115%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (34,102,306 samples, 0.33%)</title><rect x="69.2615%" y="309" width="0.3313%" height="15" fill="rgb(217,89,34)" fg:x="7130390981" fg:w="34102306"/><text x="69.5115%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (34,102,306 samples, 0.33%)</title><rect x="69.2615%" y="293" width="0.3313%" height="15" fill="rgb(229,13,5)" fg:x="7130390981" fg:w="34102306"/><text x="69.5115%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (34,102,306 samples, 0.33%)</title><rect x="69.2615%" y="277" width="0.3313%" height="15" fill="rgb(244,67,35)" fg:x="7130390981" fg:w="34102306"/><text x="69.5115%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34,102,306 samples, 0.33%)</title><rect x="69.2615%" y="261" width="0.3313%" height="15" fill="rgb(221,40,2)" fg:x="7130390981" fg:w="34102306"/><text x="69.5115%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34,102,306 samples, 0.33%)</title><rect x="69.2615%" y="245" width="0.3313%" height="15" fill="rgb(237,157,21)" fg:x="7130390981" fg:w="34102306"/><text x="69.5115%" y="255.50"></text></g><g><title>alloc::alloc::alloc (34,102,306 samples, 0.33%)</title><rect x="69.2615%" y="229" width="0.3313%" height="15" fill="rgb(222,94,11)" fg:x="7130390981" fg:w="34102306"/><text x="69.5115%" y="239.50"></text></g><g><title>__GI___libc_malloc (34,102,306 samples, 0.33%)</title><rect x="69.2615%" y="213" width="0.3313%" height="15" fill="rgb(249,113,6)" fg:x="7130390981" fg:w="34102306"/><text x="69.5115%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (35,105,315 samples, 0.34%)</title><rect x="69.2615%" y="341" width="0.3410%" height="15" fill="rgb(238,137,36)" fg:x="7130390981" fg:w="35105315"/><text x="69.5115%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35,105,315 samples, 0.34%)</title><rect x="69.2615%" y="325" width="0.3410%" height="15" fill="rgb(210,102,26)" fg:x="7130390981" fg:w="35105315"/><text x="69.5115%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="69.6025%" y="341" width="0.0195%" height="15" fill="rgb(218,30,30)" fg:x="7165496296" fg:w="2006018"/><text x="69.8525%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (5,015,045 samples, 0.05%)</title><rect x="69.6220%" y="325" width="0.0487%" height="15" fill="rgb(214,67,26)" fg:x="7167502314" fg:w="5015045"/><text x="69.8720%" y="335.50"></text></g><g><title>core::ptr::read (5,015,045 samples, 0.05%)</title><rect x="69.6220%" y="309" width="0.0487%" height="15" fill="rgb(251,9,53)" fg:x="7167502314" fg:w="5015045"/><text x="69.8720%" y="319.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6,018,054 samples, 0.06%)</title><rect x="69.6707%" y="325" width="0.0585%" height="15" fill="rgb(228,204,25)" fg:x="7172517359" fg:w="6018054"/><text x="69.9207%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,036,108 samples, 0.12%)</title><rect x="69.6220%" y="341" width="0.1169%" height="15" fill="rgb(207,153,8)" fg:x="7167502314" fg:w="12036108"/><text x="69.8720%" y="351.50"></text></g><g><title>chlang::board::Board::get_valid_moves (6,702,106,138 samples, 65.10%)</title><rect x="4.7253%" y="357" width="65.1013%" height="15" fill="rgb(242,9,16)" fg:x="486459365" fg:w="6702106138"/><text x="4.9753%" y="367.50">chlang::board::Board::get_valid_moves</text></g><g><title>chlang::board::Board::get_game_state (6,811,434,119 samples, 66.16%)</title><rect x="3.6730%" y="373" width="66.1633%" height="15" fill="rgb(217,211,10)" fg:x="378134393" fg:w="6811434119"/><text x="3.9230%" y="383.50">chlang::board::Board::get_game_state</text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (16,048,144 samples, 0.16%)</title><rect x="69.8363%" y="357" width="0.1559%" height="15" fill="rgb(219,228,52)" fg:x="7189568512" fg:w="16048144"/><text x="70.0863%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11,033,099 samples, 0.11%)</title><rect x="69.9922%" y="325" width="0.1072%" height="15" fill="rgb(231,92,29)" fg:x="7205616656" fg:w="11033099"/><text x="70.2422%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (52,156,468 samples, 0.51%)</title><rect x="69.9922%" y="357" width="0.5066%" height="15" fill="rgb(232,8,23)" fg:x="7205616656" fg:w="52156468"/><text x="70.2422%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (52,156,468 samples, 0.51%)</title><rect x="69.9922%" y="341" width="0.5066%" height="15" fill="rgb(216,211,34)" fg:x="7205616656" fg:w="52156468"/><text x="70.2422%" y="351.50"></text></g><g><title>&lt;chlang::evaluators::positional_evaluator::PositionalEvaluator as chlang::tree_evaluator::Eval&gt;::evaluate (186,559,674 samples, 1.81%)</title><rect x="69.8363%" y="373" width="1.8122%" height="15" fill="rgb(236,151,0)" fg:x="7189568512" fg:w="186559674"/><text x="70.0863%" y="383.50">&lt;..</text></g><g><title>chlang::tree_evaluator::eval (7,169,508,332 samples, 69.64%)</title><rect x="2.0850%" y="389" width="69.6415%" height="15" fill="rgb(209,168,3)" fg:x="214643926" fg:w="7169508332"/><text x="2.3350%" y="399.50">chlang::tree_evaluator::eval</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2,006,018 samples, 0.02%)</title><rect x="71.7264%" y="373" width="0.0195%" height="15" fill="rgb(208,129,28)" fg:x="7384152258" fg:w="2006018"/><text x="71.9764%" y="383.50"></text></g><g><title>chlang::board::Board::unmake_last (5,015,045 samples, 0.05%)</title><rect x="71.7264%" y="389" width="0.0487%" height="15" fill="rgb(229,78,22)" fg:x="7384152258" fg:w="5015045"/><text x="71.9764%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4,012,036 samples, 0.04%)</title><rect x="71.7751%" y="373" width="0.0390%" height="15" fill="rgb(228,187,13)" fg:x="7389167303" fg:w="4012036"/><text x="72.0251%" y="383.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4,012,036 samples, 0.04%)</title><rect x="71.7751%" y="357" width="0.0390%" height="15" fill="rgb(240,119,24)" fg:x="7389167303" fg:w="4012036"/><text x="72.0251%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4,012,036 samples, 0.04%)</title><rect x="71.7751%" y="341" width="0.0390%" height="15" fill="rgb(209,194,42)" fg:x="7389167303" fg:w="4012036"/><text x="72.0251%" y="351.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="71.7751%" y="325" width="0.0390%" height="15" fill="rgb(247,200,46)" fg:x="7389167303" fg:w="4012036"/><text x="72.0251%" y="335.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="71.7751%" y="309" width="0.0390%" height="15" fill="rgb(218,76,16)" fg:x="7389167303" fg:w="4012036"/><text x="72.0251%" y="319.50"></text></g><g><title>__rust_dealloc (2,006,018 samples, 0.02%)</title><rect x="71.8141%" y="277" width="0.0195%" height="15" fill="rgb(225,21,48)" fg:x="7393179339" fg:w="2006018"/><text x="72.0641%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="71.8141%" y="373" width="0.0682%" height="15" fill="rgb(239,223,50)" fg:x="7393179339" fg:w="7021063"/><text x="72.0641%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="71.8141%" y="357" width="0.0682%" height="15" fill="rgb(244,45,21)" fg:x="7393179339" fg:w="7021063"/><text x="72.0641%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="71.8141%" y="341" width="0.0682%" height="15" fill="rgb(232,33,43)" fg:x="7393179339" fg:w="7021063"/><text x="72.0641%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,021,063 samples, 0.07%)</title><rect x="71.8141%" y="325" width="0.0682%" height="15" fill="rgb(209,8,3)" fg:x="7393179339" fg:w="7021063"/><text x="72.0641%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,021,063 samples, 0.07%)</title><rect x="71.8141%" y="309" width="0.0682%" height="15" fill="rgb(214,25,53)" fg:x="7393179339" fg:w="7021063"/><text x="72.0641%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (7,021,063 samples, 0.07%)</title><rect x="71.8141%" y="293" width="0.0682%" height="15" fill="rgb(254,186,54)" fg:x="7393179339" fg:w="7021063"/><text x="72.0641%" y="303.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.04%)</title><rect x="71.8433%" y="277" width="0.0390%" height="15" fill="rgb(208,174,49)" fg:x="7396188366" fg:w="4012036"/><text x="72.0933%" y="287.50"></text></g><g><title>_int_free (4,012,036 samples, 0.04%)</title><rect x="71.8433%" y="261" width="0.0390%" height="15" fill="rgb(233,191,51)" fg:x="7396188366" fg:w="4012036"/><text x="72.0933%" y="271.50"></text></g><g><title>chlang::board::Board::unmake_last (2,006,018 samples, 0.02%)</title><rect x="71.8920%" y="373" width="0.0195%" height="15" fill="rgb(222,134,10)" fg:x="7401203411" fg:w="2006018"/><text x="72.1420%" y="383.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="71.9115%" y="373" width="0.0292%" height="15" fill="rgb(230,226,20)" fg:x="7403209429" fg:w="3009027"/><text x="72.1615%" y="383.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="71.9408%" y="357" width="0.0292%" height="15" fill="rgb(251,111,25)" fg:x="7406218456" fg:w="3009027"/><text x="72.1908%" y="367.50"></text></g><g><title>chlang::board::Board::key (6,018,054 samples, 0.06%)</title><rect x="71.9408%" y="373" width="0.0585%" height="15" fill="rgb(224,40,46)" fg:x="7406218456" fg:w="6018054"/><text x="72.1908%" y="383.50"></text></g><g><title>__rust_dealloc (3,009,027 samples, 0.03%)</title><rect x="71.9992%" y="197" width="0.0292%" height="15" fill="rgb(236,108,47)" fg:x="7412236510" fg:w="3009027"/><text x="72.2492%" y="207.50"></text></g><g><title>__rdl_dealloc (3,009,027 samples, 0.03%)</title><rect x="72.0284%" y="197" width="0.0292%" height="15" fill="rgb(234,93,0)" fg:x="7415245537" fg:w="3009027"/><text x="72.2784%" y="207.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,009,027 samples, 0.03%)</title><rect x="72.0284%" y="181" width="0.0292%" height="15" fill="rgb(224,213,32)" fg:x="7415245537" fg:w="3009027"/><text x="72.2784%" y="191.50"></text></g><g><title>tcache_put (2,006,018 samples, 0.02%)</title><rect x="72.0577%" y="165" width="0.0195%" height="15" fill="rgb(251,11,48)" fg:x="7418254564" fg:w="2006018"/><text x="72.3077%" y="175.50"></text></g><g><title>_int_free (14,042,126 samples, 0.14%)</title><rect x="72.0577%" y="181" width="0.1364%" height="15" fill="rgb(236,173,5)" fg:x="7418254564" fg:w="14042126"/><text x="72.3077%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="341" width="0.2046%" height="15" fill="rgb(230,95,12)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="325" width="0.2046%" height="15" fill="rgb(232,209,1)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="309" width="0.2046%" height="15" fill="rgb(232,6,1)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="293" width="0.2046%" height="15" fill="rgb(210,224,50)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="277" width="0.2046%" height="15" fill="rgb(228,127,35)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="261" width="0.2046%" height="15" fill="rgb(245,102,45)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="245" width="0.2046%" height="15" fill="rgb(214,1,49)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="229" width="0.2046%" height="15" fill="rgb(226,163,40)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (21,063,189 samples, 0.20%)</title><rect x="71.9992%" y="213" width="0.2046%" height="15" fill="rgb(239,212,28)" fg:x="7412236510" fg:w="21063189"/><text x="72.2492%" y="223.50"></text></g><g><title>__GI___libc_free (15,045,135 samples, 0.15%)</title><rect x="72.0577%" y="197" width="0.1461%" height="15" fill="rgb(220,20,13)" fg:x="7418254564" fg:w="15045135"/><text x="72.3077%" y="207.50"></text></g><g><title>chlang::board::Board::piece_type (6,018,054 samples, 0.06%)</title><rect x="72.2136%" y="341" width="0.0585%" height="15" fill="rgb(210,164,35)" fg:x="7434302708" fg:w="6018054"/><text x="72.4636%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="325" width="0.0390%" height="15" fill="rgb(248,109,41)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="309" width="0.0390%" height="15" fill="rgb(238,23,50)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="293" width="0.0390%" height="15" fill="rgb(211,48,49)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="277" width="0.0390%" height="15" fill="rgb(223,36,21)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="261" width="0.0390%" height="15" fill="rgb(207,123,46)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="245" width="0.0390%" height="15" fill="rgb(240,218,32)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="229" width="0.0390%" height="15" fill="rgb(252,5,43)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="239.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="213" width="0.0390%" height="15" fill="rgb(252,84,19)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="223.50"></text></g><g><title>__GI___libc_malloc (4,012,036 samples, 0.04%)</title><rect x="72.2818%" y="197" width="0.0390%" height="15" fill="rgb(243,152,39)" fg:x="7441323771" fg:w="4012036"/><text x="72.5318%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (15,045,135 samples, 0.15%)</title><rect x="72.2720%" y="341" width="0.1461%" height="15" fill="rgb(234,160,15)" fg:x="7440320762" fg:w="15045135"/><text x="72.5220%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="325" width="0.0195%" height="15" fill="rgb(237,34,20)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="309" width="0.0195%" height="15" fill="rgb(229,97,13)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="293" width="0.0195%" height="15" fill="rgb(234,71,50)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="277" width="0.0195%" height="15" fill="rgb(253,155,4)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="261" width="0.0195%" height="15" fill="rgb(222,185,37)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="245" width="0.0195%" height="15" fill="rgb(251,177,13)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="229" width="0.0195%" height="15" fill="rgb(250,179,40)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="213" width="0.0195%" height="15" fill="rgb(242,44,2)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="223.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="72.4279%" y="197" width="0.0195%" height="15" fill="rgb(216,177,13)" fg:x="7456368906" fg:w="2006018"/><text x="72.6779%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (9,027,081 samples, 0.09%)</title><rect x="72.4182%" y="341" width="0.0877%" height="15" fill="rgb(216,106,43)" fg:x="7455365897" fg:w="9027081"/><text x="72.6682%" y="351.50"></text></g><g><title>chlang::board::Position::valid (3,009,027 samples, 0.03%)</title><rect x="72.5058%" y="325" width="0.0292%" height="15" fill="rgb(216,183,2)" fg:x="7464392978" fg:w="3009027"/><text x="72.7558%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="72.5351%" y="245" width="0.0292%" height="15" fill="rgb(249,75,3)" fg:x="7467402005" fg:w="3009027"/><text x="72.7851%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="72.5351%" y="229" width="0.0292%" height="15" fill="rgb(219,67,39)" fg:x="7467402005" fg:w="3009027"/><text x="72.7851%" y="239.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="72.5351%" y="213" width="0.0292%" height="15" fill="rgb(253,228,2)" fg:x="7467402005" fg:w="3009027"/><text x="72.7851%" y="223.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="72.5351%" y="197" width="0.0292%" height="15" fill="rgb(235,138,27)" fg:x="7467402005" fg:w="3009027"/><text x="72.7851%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.04%)</title><rect x="72.5351%" y="325" width="0.0390%" height="15" fill="rgb(236,97,51)" fg:x="7467402005" fg:w="4012036"/><text x="72.7851%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.5351%" y="309" width="0.0390%" height="15" fill="rgb(240,80,30)" fg:x="7467402005" fg:w="4012036"/><text x="72.7851%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.5351%" y="293" width="0.0390%" height="15" fill="rgb(230,178,19)" fg:x="7467402005" fg:w="4012036"/><text x="72.7851%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.5351%" y="277" width="0.0390%" height="15" fill="rgb(210,190,27)" fg:x="7467402005" fg:w="4012036"/><text x="72.7851%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="72.5351%" y="261" width="0.0390%" height="15" fill="rgb(222,107,31)" fg:x="7467402005" fg:w="4012036"/><text x="72.7851%" y="271.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (3,009,027 samples, 0.03%)</title><rect x="72.5838%" y="325" width="0.0292%" height="15" fill="rgb(216,127,34)" fg:x="7472417050" fg:w="3009027"/><text x="72.8338%" y="335.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (3,009,027 samples, 0.03%)</title><rect x="72.5838%" y="309" width="0.0292%" height="15" fill="rgb(234,116,52)" fg:x="7472417050" fg:w="3009027"/><text x="72.8338%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (12,036,108 samples, 0.12%)</title><rect x="72.5058%" y="341" width="0.1169%" height="15" fill="rgb(222,124,15)" fg:x="7464392978" fg:w="12036108"/><text x="72.7558%" y="351.50"></text></g><g><title>chlang::cmove::Move::new (2,006,018 samples, 0.02%)</title><rect x="72.6228%" y="325" width="0.0195%" height="15" fill="rgb(231,179,28)" fg:x="7476429086" fg:w="2006018"/><text x="72.8728%" y="335.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="72.6617%" y="181" width="0.0195%" height="15" fill="rgb(226,93,45)" fg:x="7480441122" fg:w="2006018"/><text x="72.9117%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.6520%" y="293" width="0.0390%" height="15" fill="rgb(215,8,51)" fg:x="7479438113" fg:w="4012036"/><text x="72.9020%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.6520%" y="277" width="0.0390%" height="15" fill="rgb(223,106,5)" fg:x="7479438113" fg:w="4012036"/><text x="72.9020%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="72.6520%" y="261" width="0.0390%" height="15" fill="rgb(250,191,5)" fg:x="7479438113" fg:w="4012036"/><text x="72.9020%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="72.6520%" y="245" width="0.0390%" height="15" fill="rgb(242,132,44)" fg:x="7479438113" fg:w="4012036"/><text x="72.9020%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="72.6520%" y="229" width="0.0390%" height="15" fill="rgb(251,152,29)" fg:x="7479438113" fg:w="4012036"/><text x="72.9020%" y="239.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="72.6520%" y="213" width="0.0390%" height="15" fill="rgb(218,179,5)" fg:x="7479438113" fg:w="4012036"/><text x="72.9020%" y="223.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="72.6617%" y="197" width="0.0292%" height="15" fill="rgb(227,67,19)" fg:x="7480441122" fg:w="3009027"/><text x="72.9117%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5,015,045 samples, 0.05%)</title><rect x="72.6520%" y="325" width="0.0487%" height="15" fill="rgb(233,119,31)" fg:x="7479438113" fg:w="5015045"/><text x="72.9020%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.05%)</title><rect x="72.6520%" y="309" width="0.0487%" height="15" fill="rgb(241,120,22)" fg:x="7479438113" fg:w="5015045"/><text x="72.9020%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (11,033,099 samples, 0.11%)</title><rect x="72.6228%" y="341" width="0.1072%" height="15" fill="rgb(224,102,30)" fg:x="7476429086" fg:w="11033099"/><text x="72.8728%" y="351.50"></text></g><g><title>chlang::board::Position::valid (4,012,036 samples, 0.04%)</title><rect x="72.7299%" y="325" width="0.0390%" height="15" fill="rgb(210,164,37)" fg:x="7487462185" fg:w="4012036"/><text x="72.9799%" y="335.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="72.7786%" y="197" width="0.0195%" height="15" fill="rgb(226,191,16)" fg:x="7492477230" fg:w="2006018"/><text x="73.0286%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="325" width="0.0390%" height="15" fill="rgb(214,40,45)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="309" width="0.0390%" height="15" fill="rgb(244,29,26)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="293" width="0.0390%" height="15" fill="rgb(216,16,5)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="277" width="0.0390%" height="15" fill="rgb(249,76,35)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="261" width="0.0390%" height="15" fill="rgb(207,11,44)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="245" width="0.0390%" height="15" fill="rgb(228,190,49)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="229" width="0.0390%" height="15" fill="rgb(214,173,12)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="239.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="72.7689%" y="213" width="0.0390%" height="15" fill="rgb(218,26,35)" fg:x="7491474221" fg:w="4012036"/><text x="73.0189%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="72.8079%" y="325" width="0.0195%" height="15" fill="rgb(220,200,19)" fg:x="7495486257" fg:w="2006018"/><text x="73.0579%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (15,045,135 samples, 0.15%)</title><rect x="72.7299%" y="341" width="0.1461%" height="15" fill="rgb(239,95,49)" fg:x="7487462185" fg:w="15045135"/><text x="72.9799%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5,015,045 samples, 0.05%)</title><rect x="72.8761%" y="341" width="0.0487%" height="15" fill="rgb(235,85,53)" fg:x="7502507320" fg:w="5015045"/><text x="73.1261%" y="351.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (5,015,045 samples, 0.05%)</title><rect x="72.8761%" y="325" width="0.0487%" height="15" fill="rgb(233,133,31)" fg:x="7502507320" fg:w="5015045"/><text x="73.1261%" y="335.50"></text></g><g><title>chlang::board::Board::attacked_by_color (100,300,900 samples, 0.97%)</title><rect x="71.9992%" y="357" width="0.9743%" height="15" fill="rgb(218,25,20)" fg:x="7412236510" fg:w="100300900"/><text x="72.2492%" y="367.50"></text></g><g><title>chlang::board::Board::is_valid (102,306,918 samples, 0.99%)</title><rect x="71.9992%" y="373" width="0.9938%" height="15" fill="rgb(252,210,38)" fg:x="7412236510" fg:w="102306918"/><text x="72.2492%" y="383.50"></text></g><g><title>chlang::board::Board::piece_type (33,099,297 samples, 0.32%)</title><rect x="73.0027%" y="357" width="0.3215%" height="15" fill="rgb(242,134,21)" fg:x="7515546437" fg:w="33099297"/><text x="73.2527%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="341" width="0.0292%" height="15" fill="rgb(213,28,48)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="325" width="0.0292%" height="15" fill="rgb(250,196,2)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="309" width="0.0292%" height="15" fill="rgb(227,5,17)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="293" width="0.0292%" height="15" fill="rgb(221,226,24)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="277" width="0.0292%" height="15" fill="rgb(211,5,48)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="261" width="0.0292%" height="15" fill="rgb(219,150,6)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="245" width="0.0292%" height="15" fill="rgb(251,46,16)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="229" width="0.0292%" height="15" fill="rgb(220,204,40)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="239.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="73.3340%" y="213" width="0.0292%" height="15" fill="rgb(211,85,2)" fg:x="7549648743" fg:w="3009027"/><text x="73.5840%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (8,024,072 samples, 0.08%)</title><rect x="73.3242%" y="357" width="0.0779%" height="15" fill="rgb(229,17,7)" fg:x="7548645734" fg:w="8024072"/><text x="73.5742%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="341" width="0.0195%" height="15" fill="rgb(239,72,28)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="325" width="0.0195%" height="15" fill="rgb(230,47,54)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="309" width="0.0195%" height="15" fill="rgb(214,50,8)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="293" width="0.0195%" height="15" fill="rgb(216,198,43)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="277" width="0.0195%" height="15" fill="rgb(234,20,35)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="261" width="0.0195%" height="15" fill="rgb(254,45,19)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="245" width="0.0195%" height="15" fill="rgb(219,14,44)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="229" width="0.0195%" height="15" fill="rgb(217,220,26)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="239.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="73.4022%" y="213" width="0.0195%" height="15" fill="rgb(213,158,28)" fg:x="7556669806" fg:w="2006018"/><text x="73.6522%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="73.4022%" y="357" width="0.0292%" height="15" fill="rgb(252,51,52)" fg:x="7556669806" fg:w="3009027"/><text x="73.6522%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="341" width="0.0195%" height="15" fill="rgb(246,89,16)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="325" width="0.0195%" height="15" fill="rgb(216,158,49)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="309" width="0.0195%" height="15" fill="rgb(236,107,19)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="293" width="0.0195%" height="15" fill="rgb(228,185,30)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="277" width="0.0195%" height="15" fill="rgb(246,134,8)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="261" width="0.0195%" height="15" fill="rgb(214,143,50)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="245" width="0.0195%" height="15" fill="rgb(228,75,8)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="229" width="0.0195%" height="15" fill="rgb(207,175,4)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="239.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="73.4314%" y="213" width="0.0195%" height="15" fill="rgb(205,108,24)" fg:x="7559678833" fg:w="2006018"/><text x="73.6814%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="73.4509%" y="341" width="0.0195%" height="15" fill="rgb(244,120,49)" fg:x="7561684851" fg:w="2006018"/><text x="73.7009%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="73.4314%" y="357" width="0.0585%" height="15" fill="rgb(223,47,38)" fg:x="7559678833" fg:w="6018054"/><text x="73.6814%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (2,006,018 samples, 0.02%)</title><rect x="73.5094%" y="325" width="0.0195%" height="15" fill="rgb(229,179,11)" fg:x="7567702905" fg:w="2006018"/><text x="73.7594%" y="335.50"></text></g><g><title>chlang::board::Board::attacked_by_color (8,024,072 samples, 0.08%)</title><rect x="73.4899%" y="341" width="0.0779%" height="15" fill="rgb(231,122,1)" fg:x="7565696887" fg:w="8024072"/><text x="73.7399%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="341" width="0.0292%" height="15" fill="rgb(245,119,9)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="325" width="0.0292%" height="15" fill="rgb(241,163,25)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="309" width="0.0292%" height="15" fill="rgb(217,214,3)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="293" width="0.0292%" height="15" fill="rgb(240,86,28)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="277" width="0.0292%" height="15" fill="rgb(215,47,9)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="261" width="0.0292%" height="15" fill="rgb(252,25,45)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="245" width="0.0292%" height="15" fill="rgb(251,164,9)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="73.5678%" y="229" width="0.0292%" height="15" fill="rgb(233,194,0)" fg:x="7573720959" fg:w="3009027"/><text x="73.8178%" y="239.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="73.5776%" y="213" width="0.0195%" height="15" fill="rgb(249,111,24)" fg:x="7574723968" fg:w="2006018"/><text x="73.8276%" y="223.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="73.5776%" y="197" width="0.0195%" height="15" fill="rgb(250,223,3)" fg:x="7574723968" fg:w="2006018"/><text x="73.8276%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (14,042,126 samples, 0.14%)</title><rect x="73.4899%" y="357" width="0.1364%" height="15" fill="rgb(236,178,37)" fg:x="7565696887" fg:w="14042126"/><text x="73.7399%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,009,027 samples, 0.03%)</title><rect x="73.6458%" y="341" width="0.0292%" height="15" fill="rgb(241,158,50)" fg:x="7581745031" fg:w="3009027"/><text x="73.8958%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="73.6263%" y="357" width="0.0585%" height="15" fill="rgb(213,121,41)" fg:x="7579739013" fg:w="6018054"/><text x="73.8763%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (81,243,729 samples, 0.79%)</title><rect x="72.9930%" y="373" width="0.7892%" height="15" fill="rgb(240,92,3)" fg:x="7514543428" fg:w="81243729"/><text x="73.2430%" y="383.50"></text></g><g><title>chlang::board::Board::make_move (220,661,980 samples, 2.14%)</title><rect x="71.7751%" y="389" width="2.1434%" height="15" fill="rgb(205,123,3)" fg:x="7389167303" fg:w="220661980"/><text x="72.0251%" y="399.50">c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11,033,099 samples, 0.11%)</title><rect x="73.9186%" y="373" width="0.1072%" height="15" fill="rgb(205,97,47)" fg:x="7609829283" fg:w="11033099"/><text x="74.1686%" y="383.50"></text></g><g><title>chlang::board::Board::key (12,036,108 samples, 0.12%)</title><rect x="73.9186%" y="389" width="0.1169%" height="15" fill="rgb(247,152,14)" fg:x="7609829283" fg:w="12036108"/><text x="74.1686%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="373" width="0.0974%" height="15" fill="rgb(248,195,53)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="357" width="0.0974%" height="15" fill="rgb(226,201,16)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="341" width="0.0974%" height="15" fill="rgb(205,98,0)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="325" width="0.0974%" height="15" fill="rgb(214,191,48)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="309" width="0.0974%" height="15" fill="rgb(237,112,39)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="293" width="0.0974%" height="15" fill="rgb(247,203,27)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="277" width="0.0974%" height="15" fill="rgb(235,124,28)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="261" width="0.0974%" height="15" fill="rgb(208,207,46)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (10,030,090 samples, 0.10%)</title><rect x="74.0355%" y="245" width="0.0974%" height="15" fill="rgb(234,176,4)" fg:x="7621865391" fg:w="10030090"/><text x="74.2855%" y="255.50"></text></g><g><title>__GI___libc_free (9,027,081 samples, 0.09%)</title><rect x="74.0452%" y="229" width="0.0877%" height="15" fill="rgb(230,133,28)" fg:x="7622868400" fg:w="9027081"/><text x="74.2952%" y="239.50"></text></g><g><title>_int_free (9,027,081 samples, 0.09%)</title><rect x="74.0452%" y="213" width="0.0877%" height="15" fill="rgb(211,137,40)" fg:x="7622868400" fg:w="9027081"/><text x="74.2952%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (40,120,360 samples, 0.39%)</title><rect x="74.1329%" y="373" width="0.3897%" height="15" fill="rgb(254,35,13)" fg:x="7631895481" fg:w="40120360"/><text x="74.3829%" y="383.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="74.5323%" y="357" width="0.0292%" height="15" fill="rgb(225,49,51)" fg:x="7673018850" fg:w="3009027"/><text x="74.7823%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="341" width="0.0292%" height="15" fill="rgb(251,10,15)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="325" width="0.0292%" height="15" fill="rgb(228,207,15)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="309" width="0.0292%" height="15" fill="rgb(241,99,19)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="293" width="0.0292%" height="15" fill="rgb(207,104,49)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="277" width="0.0292%" height="15" fill="rgb(234,99,18)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="261" width="0.0292%" height="15" fill="rgb(213,191,49)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="245" width="0.0292%" height="15" fill="rgb(210,226,19)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="229" width="0.0292%" height="15" fill="rgb(229,97,18)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="239.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="74.5713%" y="213" width="0.0292%" height="15" fill="rgb(211,167,15)" fg:x="7677030886" fg:w="3009027"/><text x="74.8213%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="74.6005%" y="341" width="0.0195%" height="15" fill="rgb(210,169,34)" fg:x="7680039913" fg:w="2006018"/><text x="74.8505%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (7,021,063 samples, 0.07%)</title><rect x="74.5616%" y="357" width="0.0682%" height="15" fill="rgb(241,121,31)" fg:x="7676027877" fg:w="7021063"/><text x="74.8116%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="357" width="0.0390%" height="15" fill="rgb(232,40,11)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="341" width="0.0390%" height="15" fill="rgb(205,86,26)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="325" width="0.0390%" height="15" fill="rgb(231,126,28)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="309" width="0.0390%" height="15" fill="rgb(219,221,18)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="293" width="0.0390%" height="15" fill="rgb(211,40,0)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="277" width="0.0390%" height="15" fill="rgb(239,85,43)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="261" width="0.0390%" height="15" fill="rgb(231,55,21)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="245" width="0.0390%" height="15" fill="rgb(225,184,43)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="255.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="74.6298%" y="229" width="0.0390%" height="15" fill="rgb(251,158,41)" fg:x="7683048940" fg:w="4012036"/><text x="74.8798%" y="239.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="74.6395%" y="213" width="0.0292%" height="15" fill="rgb(234,159,37)" fg:x="7684051949" fg:w="3009027"/><text x="74.8895%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="74.6687%" y="357" width="0.0487%" height="15" fill="rgb(216,204,22)" fg:x="7687060976" fg:w="5015045"/><text x="74.9187%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="325" width="0.0195%" height="15" fill="rgb(214,17,3)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="309" width="0.0195%" height="15" fill="rgb(212,111,17)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="293" width="0.0195%" height="15" fill="rgb(221,157,24)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="277" width="0.0195%" height="15" fill="rgb(252,16,13)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="261" width="0.0195%" height="15" fill="rgb(221,62,2)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="245" width="0.0195%" height="15" fill="rgb(247,87,22)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="229" width="0.0195%" height="15" fill="rgb(215,73,9)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="213" width="0.0195%" height="15" fill="rgb(207,175,33)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.02%)</title><rect x="74.7175%" y="197" width="0.0195%" height="15" fill="rgb(243,129,54)" fg:x="7692076021" fg:w="2006018"/><text x="74.9675%" y="207.50"></text></g><g><title>chlang::board::Board::attacked_by_color (5,015,045 samples, 0.05%)</title><rect x="74.7175%" y="341" width="0.0487%" height="15" fill="rgb(227,119,45)" fg:x="7692076021" fg:w="5015045"/><text x="74.9675%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="74.7175%" y="357" width="0.0585%" height="15" fill="rgb(205,109,36)" fg:x="7692076021" fg:w="6018054"/><text x="74.9675%" y="367.50"></text></g><g><title>chlang::board::Position::valid (3,009,027 samples, 0.03%)</title><rect x="74.7759%" y="341" width="0.0292%" height="15" fill="rgb(205,6,39)" fg:x="7698094075" fg:w="3009027"/><text x="75.0259%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="74.8051%" y="341" width="0.0195%" height="15" fill="rgb(221,32,16)" fg:x="7701103102" fg:w="2006018"/><text x="75.0551%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="74.8051%" y="325" width="0.0195%" height="15" fill="rgb(228,144,50)" fg:x="7701103102" fg:w="2006018"/><text x="75.0551%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="74.8051%" y="309" width="0.0195%" height="15" fill="rgb(229,201,53)" fg:x="7701103102" fg:w="2006018"/><text x="75.0551%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="74.8051%" y="293" width="0.0195%" height="15" fill="rgb(249,153,27)" fg:x="7701103102" fg:w="2006018"/><text x="75.0551%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="74.8051%" y="277" width="0.0195%" height="15" fill="rgb(227,106,25)" fg:x="7701103102" fg:w="2006018"/><text x="75.0551%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="74.8246%" y="341" width="0.0195%" height="15" fill="rgb(230,65,29)" fg:x="7703109120" fg:w="2006018"/><text x="75.0746%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (10,030,090 samples, 0.10%)</title><rect x="74.7759%" y="357" width="0.0974%" height="15" fill="rgb(221,57,46)" fg:x="7698094075" fg:w="10030090"/><text x="75.0259%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (54,162,486 samples, 0.53%)</title><rect x="74.5226%" y="373" width="0.5261%" height="15" fill="rgb(229,161,17)" fg:x="7672015841" fg:w="54162486"/><text x="74.7726%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="373" width="0.1461%" height="15" fill="rgb(222,213,11)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="357" width="0.1461%" height="15" fill="rgb(235,35,13)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="341" width="0.1461%" height="15" fill="rgb(233,158,34)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="325" width="0.1461%" height="15" fill="rgb(215,151,48)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="309" width="0.1461%" height="15" fill="rgb(229,84,14)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="293" width="0.1461%" height="15" fill="rgb(229,68,14)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="277" width="0.1461%" height="15" fill="rgb(243,106,26)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="287.50"></text></g><g><title>alloc::alloc::alloc (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="261" width="0.1461%" height="15" fill="rgb(206,45,38)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="271.50"></text></g><g><title>__GI___libc_malloc (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="245" width="0.1461%" height="15" fill="rgb(226,6,15)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="255.50"></text></g><g><title>_int_malloc (15,045,135 samples, 0.15%)</title><rect x="75.0487%" y="229" width="0.1461%" height="15" fill="rgb(232,22,54)" fg:x="7726178327" fg:w="15045135"/><text x="75.2987%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6,018,054 samples, 0.06%)</title><rect x="75.1949%" y="373" width="0.0585%" height="15" fill="rgb(229,222,32)" fg:x="7741223462" fg:w="6018054"/><text x="75.4449%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,009,027 samples, 0.03%)</title><rect x="75.2533%" y="373" width="0.0292%" height="15" fill="rgb(228,62,29)" fg:x="7747241516" fg:w="3009027"/><text x="75.5033%" y="383.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3,009,027 samples, 0.03%)</title><rect x="75.2533%" y="357" width="0.0292%" height="15" fill="rgb(251,103,34)" fg:x="7747241516" fg:w="3009027"/><text x="75.5033%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (133,400,197 samples, 1.30%)</title><rect x="74.0355%" y="389" width="1.2958%" height="15" fill="rgb(233,12,30)" fg:x="7621865391" fg:w="133400197"/><text x="74.2855%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="373" width="0.0487%" height="15" fill="rgb(238,52,0)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="357" width="0.0487%" height="15" fill="rgb(223,98,5)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="341" width="0.0487%" height="15" fill="rgb(228,75,37)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="325" width="0.0487%" height="15" fill="rgb(205,115,49)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="309" width="0.0487%" height="15" fill="rgb(250,154,43)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="293" width="0.0487%" height="15" fill="rgb(226,43,29)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="303.50"></text></g><g><title>__GI___libc_free (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="277" width="0.0487%" height="15" fill="rgb(249,228,39)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="287.50"></text></g><g><title>_int_free (5,015,045 samples, 0.05%)</title><rect x="75.3313%" y="261" width="0.0487%" height="15" fill="rgb(216,79,43)" fg:x="7755265588" fg:w="5015045"/><text x="75.5813%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2,006,018 samples, 0.02%)</title><rect x="75.3897%" y="293" width="0.0195%" height="15" fill="rgb(228,95,12)" fg:x="7761283642" fg:w="2006018"/><text x="75.6397%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2,006,018 samples, 0.02%)</title><rect x="75.3897%" y="277" width="0.0195%" height="15" fill="rgb(249,221,15)" fg:x="7761283642" fg:w="2006018"/><text x="75.6397%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,006,018 samples, 0.02%)</title><rect x="75.3897%" y="261" width="0.0195%" height="15" fill="rgb(233,34,13)" fg:x="7761283642" fg:w="2006018"/><text x="75.6397%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,015,045 samples, 0.05%)</title><rect x="75.3897%" y="325" width="0.0487%" height="15" fill="rgb(214,103,39)" fg:x="7761283642" fg:w="5015045"/><text x="75.6397%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,015,045 samples, 0.05%)</title><rect x="75.3897%" y="309" width="0.0487%" height="15" fill="rgb(251,126,39)" fg:x="7761283642" fg:w="5015045"/><text x="75.6397%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="75.4482%" y="197" width="0.0195%" height="15" fill="rgb(214,216,36)" fg:x="7767301696" fg:w="2006018"/><text x="75.6982%" y="207.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u8 (2,006,018 samples, 0.02%)</title><rect x="75.4482%" y="181" width="0.0195%" height="15" fill="rgb(220,221,8)" fg:x="7767301696" fg:w="2006018"/><text x="75.6982%" y="191.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2,006,018 samples, 0.02%)</title><rect x="75.4482%" y="165" width="0.0195%" height="15" fill="rgb(240,216,3)" fg:x="7767301696" fg:w="2006018"/><text x="75.6982%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (2,006,018 samples, 0.02%)</title><rect x="75.4482%" y="149" width="0.0195%" height="15" fill="rgb(232,218,17)" fg:x="7767301696" fg:w="2006018"/><text x="75.6982%" y="159.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="75.4384%" y="245" width="0.0390%" height="15" fill="rgb(229,163,45)" fg:x="7766298687" fg:w="4012036"/><text x="75.6884%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="75.4384%" y="229" width="0.0390%" height="15" fill="rgb(231,110,42)" fg:x="7766298687" fg:w="4012036"/><text x="75.6884%" y="239.50"></text></g><g><title>core::hash::Hash::hash_slice (3,009,027 samples, 0.03%)</title><rect x="75.4482%" y="213" width="0.0292%" height="15" fill="rgb(208,170,48)" fg:x="7767301696" fg:w="3009027"/><text x="75.6982%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (5,015,045 samples, 0.05%)</title><rect x="75.4384%" y="325" width="0.0487%" height="15" fill="rgb(239,116,25)" fg:x="7766298687" fg:w="5015045"/><text x="75.6884%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,015,045 samples, 0.05%)</title><rect x="75.4384%" y="309" width="0.0487%" height="15" fill="rgb(219,200,50)" fg:x="7766298687" fg:w="5015045"/><text x="75.6884%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5,015,045 samples, 0.05%)</title><rect x="75.4384%" y="293" width="0.0487%" height="15" fill="rgb(245,200,0)" fg:x="7766298687" fg:w="5015045"/><text x="75.6884%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5,015,045 samples, 0.05%)</title><rect x="75.4384%" y="277" width="0.0487%" height="15" fill="rgb(245,119,33)" fg:x="7766298687" fg:w="5015045"/><text x="75.6884%" y="287.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (5,015,045 samples, 0.05%)</title><rect x="75.4384%" y="261" width="0.0487%" height="15" fill="rgb(231,125,12)" fg:x="7766298687" fg:w="5015045"/><text x="75.6884%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,006,018 samples, 0.02%)</title><rect x="75.4969%" y="213" width="0.0195%" height="15" fill="rgb(216,96,41)" fg:x="7772316741" fg:w="2006018"/><text x="75.7469%" y="223.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,006,018 samples, 0.02%)</title><rect x="75.4969%" y="197" width="0.0195%" height="15" fill="rgb(248,43,45)" fg:x="7772316741" fg:w="2006018"/><text x="75.7469%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="75.4969%" y="181" width="0.0195%" height="15" fill="rgb(217,222,7)" fg:x="7772316741" fg:w="2006018"/><text x="75.7469%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="75.4969%" y="165" width="0.0195%" height="15" fill="rgb(233,28,6)" fg:x="7772316741" fg:w="2006018"/><text x="75.7469%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="75.4969%" y="149" width="0.0195%" height="15" fill="rgb(231,218,15)" fg:x="7772316741" fg:w="2006018"/><text x="75.7469%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (4,012,036 samples, 0.04%)</title><rect x="75.4871%" y="245" width="0.0390%" height="15" fill="rgb(226,171,48)" fg:x="7771313732" fg:w="4012036"/><text x="75.7371%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (4,012,036 samples, 0.04%)</title><rect x="75.4871%" y="229" width="0.0390%" height="15" fill="rgb(235,201,9)" fg:x="7771313732" fg:w="4012036"/><text x="75.7371%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (4,012,036 samples, 0.04%)</title><rect x="75.5261%" y="245" width="0.0390%" height="15" fill="rgb(217,80,15)" fg:x="7775325768" fg:w="4012036"/><text x="75.7761%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (4,012,036 samples, 0.04%)</title><rect x="75.5261%" y="229" width="0.0390%" height="15" fill="rgb(219,152,8)" fg:x="7775325768" fg:w="4012036"/><text x="75.7761%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3,009,027 samples, 0.03%)</title><rect x="75.5359%" y="213" width="0.0292%" height="15" fill="rgb(243,107,38)" fg:x="7776328777" fg:w="3009027"/><text x="75.7859%" y="223.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2,006,018 samples, 0.02%)</title><rect x="75.5456%" y="197" width="0.0195%" height="15" fill="rgb(231,17,5)" fg:x="7777331786" fg:w="2006018"/><text x="75.7956%" y="207.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="75.5651%" y="133" width="0.0292%" height="15" fill="rgb(209,25,54)" fg:x="7779337804" fg:w="3009027"/><text x="75.8151%" y="143.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="75.5651%" y="117" width="0.0292%" height="15" fill="rgb(219,0,2)" fg:x="7779337804" fg:w="3009027"/><text x="75.8151%" y="127.50"></text></g><g><title>core::hash::Hash::hash_slice (2,006,018 samples, 0.02%)</title><rect x="75.5748%" y="101" width="0.0195%" height="15" fill="rgb(246,9,5)" fg:x="7780340813" fg:w="2006018"/><text x="75.8248%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="75.5651%" y="245" width="0.0487%" height="15" fill="rgb(226,159,4)" fg:x="7779337804" fg:w="5015045"/><text x="75.8151%" y="255.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="75.5651%" y="229" width="0.0487%" height="15" fill="rgb(219,175,34)" fg:x="7779337804" fg:w="5015045"/><text x="75.8151%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (5,015,045 samples, 0.05%)</title><rect x="75.5651%" y="213" width="0.0487%" height="15" fill="rgb(236,10,46)" fg:x="7779337804" fg:w="5015045"/><text x="75.8151%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,015,045 samples, 0.05%)</title><rect x="75.5651%" y="197" width="0.0487%" height="15" fill="rgb(240,211,16)" fg:x="7779337804" fg:w="5015045"/><text x="75.8151%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5,015,045 samples, 0.05%)</title><rect x="75.5651%" y="181" width="0.0487%" height="15" fill="rgb(205,3,43)" fg:x="7779337804" fg:w="5015045"/><text x="75.8151%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5,015,045 samples, 0.05%)</title><rect x="75.5651%" y="165" width="0.0487%" height="15" fill="rgb(245,7,22)" fg:x="7779337804" fg:w="5015045"/><text x="75.8151%" y="175.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (5,015,045 samples, 0.05%)</title><rect x="75.5651%" y="149" width="0.0487%" height="15" fill="rgb(239,132,32)" fg:x="7779337804" fg:w="5015045"/><text x="75.8151%" y="159.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="75.5943%" y="133" width="0.0195%" height="15" fill="rgb(228,202,34)" fg:x="7782346831" fg:w="2006018"/><text x="75.8443%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (15,045,135 samples, 0.15%)</title><rect x="75.4871%" y="325" width="0.1461%" height="15" fill="rgb(254,200,22)" fg:x="7771313732" fg:w="15045135"/><text x="75.7371%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (15,045,135 samples, 0.15%)</title><rect x="75.4871%" y="309" width="0.1461%" height="15" fill="rgb(219,10,39)" fg:x="7771313732" fg:w="15045135"/><text x="75.7371%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15,045,135 samples, 0.15%)</title><rect x="75.4871%" y="293" width="0.1461%" height="15" fill="rgb(226,210,39)" fg:x="7771313732" fg:w="15045135"/><text x="75.7371%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (15,045,135 samples, 0.15%)</title><rect x="75.4871%" y="277" width="0.1461%" height="15" fill="rgb(208,219,16)" fg:x="7771313732" fg:w="15045135"/><text x="75.7371%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (15,045,135 samples, 0.15%)</title><rect x="75.4871%" y="261" width="0.1461%" height="15" fill="rgb(216,158,51)" fg:x="7771313732" fg:w="15045135"/><text x="75.7371%" y="271.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (27,081,243 samples, 0.26%)</title><rect x="75.3800%" y="357" width="0.2631%" height="15" fill="rgb(233,14,44)" fg:x="7760280633" fg:w="27081243"/><text x="75.6300%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (26,078,234 samples, 0.25%)</title><rect x="75.3897%" y="341" width="0.2533%" height="15" fill="rgb(237,97,39)" fg:x="7761283642" fg:w="26078234"/><text x="75.6397%" y="351.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (2,006,018 samples, 0.02%)</title><rect x="75.6430%" y="357" width="0.0195%" height="15" fill="rgb(218,198,43)" fg:x="7787361876" fg:w="2006018"/><text x="75.8930%" y="367.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (2,006,018 samples, 0.02%)</title><rect x="75.6430%" y="341" width="0.0195%" height="15" fill="rgb(231,104,20)" fg:x="7787361876" fg:w="2006018"/><text x="75.8930%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (2,006,018 samples, 0.02%)</title><rect x="75.6430%" y="325" width="0.0195%" height="15" fill="rgb(254,36,13)" fg:x="7787361876" fg:w="2006018"/><text x="75.8930%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (2,006,018 samples, 0.02%)</title><rect x="75.6430%" y="309" width="0.0195%" height="15" fill="rgb(248,14,50)" fg:x="7787361876" fg:w="2006018"/><text x="75.8930%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (2,006,018 samples, 0.02%)</title><rect x="75.6625%" y="357" width="0.0195%" height="15" fill="rgb(217,107,29)" fg:x="7789367894" fg:w="2006018"/><text x="75.9125%" y="367.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (33,099,297 samples, 0.32%)</title><rect x="75.3800%" y="373" width="0.3215%" height="15" fill="rgb(251,169,33)" fg:x="7760280633" fg:w="33099297"/><text x="75.6300%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (4,012,036 samples, 0.04%)</title><rect x="75.7015%" y="357" width="0.0390%" height="15" fill="rgb(217,108,32)" fg:x="7793379930" fg:w="4012036"/><text x="75.9515%" y="367.50"></text></g><g><title>unlink_chunk (2,006,018 samples, 0.02%)</title><rect x="75.7405%" y="181" width="0.0195%" height="15" fill="rgb(219,66,42)" fg:x="7797391966" fg:w="2006018"/><text x="75.9905%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="357" width="0.0487%" height="15" fill="rgb(206,180,7)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="341" width="0.0487%" height="15" fill="rgb(208,226,31)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="325" width="0.0487%" height="15" fill="rgb(218,26,49)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="309" width="0.0487%" height="15" fill="rgb(233,197,48)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="293" width="0.0487%" height="15" fill="rgb(252,181,51)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="277" width="0.0487%" height="15" fill="rgb(253,90,19)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="261" width="0.0487%" height="15" fill="rgb(215,171,30)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="245" width="0.0487%" height="15" fill="rgb(214,222,9)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="229" width="0.0487%" height="15" fill="rgb(223,3,22)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="239.50"></text></g><g><title>__GI___libc_free (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="213" width="0.0487%" height="15" fill="rgb(225,196,46)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="223.50"></text></g><g><title>_int_free (5,015,045 samples, 0.05%)</title><rect x="75.7405%" y="197" width="0.0487%" height="15" fill="rgb(209,110,37)" fg:x="7797391966" fg:w="5015045"/><text x="75.9905%" y="207.50"></text></g><g><title>core::ptr::read (17,051,153 samples, 0.17%)</title><rect x="75.7892%" y="325" width="0.1656%" height="15" fill="rgb(249,89,12)" fg:x="7802407011" fg:w="17051153"/><text x="76.0392%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3,009,027 samples, 0.03%)</title><rect x="75.9548%" y="325" width="0.0292%" height="15" fill="rgb(226,27,33)" fg:x="7819458164" fg:w="3009027"/><text x="76.2048%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3,009,027 samples, 0.03%)</title><rect x="75.9548%" y="309" width="0.0292%" height="15" fill="rgb(213,82,22)" fg:x="7819458164" fg:w="3009027"/><text x="76.2048%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (3,009,027 samples, 0.03%)</title><rect x="75.9548%" y="293" width="0.0292%" height="15" fill="rgb(248,140,0)" fg:x="7819458164" fg:w="3009027"/><text x="76.2048%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (3,009,027 samples, 0.03%)</title><rect x="75.9548%" y="277" width="0.0292%" height="15" fill="rgb(228,106,3)" fg:x="7819458164" fg:w="3009027"/><text x="76.2048%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (23,069,207 samples, 0.22%)</title><rect x="75.7892%" y="341" width="0.2241%" height="15" fill="rgb(209,23,37)" fg:x="7802407011" fg:w="23069207"/><text x="76.0392%" y="351.50"></text></g><g><title>chlang::board::Board::unmake_last (43,129,387 samples, 0.42%)</title><rect x="75.7892%" y="357" width="0.4189%" height="15" fill="rgb(241,93,50)" fg:x="7802407011" fg:w="43129387"/><text x="76.0392%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,024,072 samples, 0.08%)</title><rect x="76.2081%" y="293" width="0.0779%" height="15" fill="rgb(253,46,43)" fg:x="7845536398" fg:w="8024072"/><text x="76.4581%" y="303.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (10,030,090 samples, 0.10%)</title><rect x="76.2860%" y="293" width="0.0974%" height="15" fill="rgb(226,206,43)" fg:x="7853560470" fg:w="10030090"/><text x="76.5360%" y="303.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (10,030,090 samples, 0.10%)</title><rect x="76.2860%" y="277" width="0.0974%" height="15" fill="rgb(217,54,7)" fg:x="7853560470" fg:w="10030090"/><text x="76.5360%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (19,057,171 samples, 0.19%)</title><rect x="76.2081%" y="341" width="0.1851%" height="15" fill="rgb(223,5,52)" fg:x="7845536398" fg:w="19057171"/><text x="76.4581%" y="351.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (19,057,171 samples, 0.19%)</title><rect x="76.2081%" y="325" width="0.1851%" height="15" fill="rgb(206,52,46)" fg:x="7845536398" fg:w="19057171"/><text x="76.4581%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (19,057,171 samples, 0.19%)</title><rect x="76.2081%" y="309" width="0.1851%" height="15" fill="rgb(253,136,11)" fg:x="7845536398" fg:w="19057171"/><text x="76.4581%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2,006,018 samples, 0.02%)</title><rect x="76.3932%" y="277" width="0.0195%" height="15" fill="rgb(208,106,33)" fg:x="7864593569" fg:w="2006018"/><text x="76.6432%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2,006,018 samples, 0.02%)</title><rect x="76.3932%" y="261" width="0.0195%" height="15" fill="rgb(206,54,4)" fg:x="7864593569" fg:w="2006018"/><text x="76.6432%" y="271.50"></text></g><g><title>__rust_dealloc (7,021,063 samples, 0.07%)</title><rect x="76.4127%" y="245" width="0.0682%" height="15" fill="rgb(213,3,15)" fg:x="7866599587" fg:w="7021063"/><text x="76.6627%" y="255.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9,027,081 samples, 0.09%)</title><rect x="76.4809%" y="229" width="0.0877%" height="15" fill="rgb(252,211,39)" fg:x="7873620650" fg:w="9027081"/><text x="76.7309%" y="239.50"></text></g><g><title>__rdl_dealloc (12,036,108 samples, 0.12%)</title><rect x="76.4809%" y="245" width="0.1169%" height="15" fill="rgb(223,6,36)" fg:x="7873620650" fg:w="12036108"/><text x="76.7309%" y="255.50"></text></g><g><title>tcache_put (12,036,108 samples, 0.12%)</title><rect x="76.5978%" y="213" width="0.1169%" height="15" fill="rgb(252,169,45)" fg:x="7885656758" fg:w="12036108"/><text x="76.8478%" y="223.50"></text></g><g><title>_int_free (50,150,450 samples, 0.49%)</title><rect x="76.5978%" y="229" width="0.4871%" height="15" fill="rgb(212,48,26)" fg:x="7885656758" fg:w="50150450"/><text x="76.8478%" y="239.50"></text></g><g><title>__GI___libc_free (69,207,621 samples, 0.67%)</title><rect x="76.5978%" y="245" width="0.6723%" height="15" fill="rgb(251,102,48)" fg:x="7885656758" fg:w="69207621"/><text x="76.8478%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (91,273,819 samples, 0.89%)</title><rect x="76.3932%" y="341" width="0.8866%" height="15" fill="rgb(243,208,16)" fg:x="7864593569" fg:w="91273819"/><text x="76.6432%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (91,273,819 samples, 0.89%)</title><rect x="76.3932%" y="325" width="0.8866%" height="15" fill="rgb(219,96,24)" fg:x="7864593569" fg:w="91273819"/><text x="76.6432%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91,273,819 samples, 0.89%)</title><rect x="76.3932%" y="309" width="0.8866%" height="15" fill="rgb(219,33,29)" fg:x="7864593569" fg:w="91273819"/><text x="76.6432%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (91,273,819 samples, 0.89%)</title><rect x="76.3932%" y="293" width="0.8866%" height="15" fill="rgb(223,176,5)" fg:x="7864593569" fg:w="91273819"/><text x="76.6432%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89,267,801 samples, 0.87%)</title><rect x="76.4127%" y="277" width="0.8671%" height="15" fill="rgb(228,140,14)" fg:x="7866599587" fg:w="89267801"/><text x="76.6627%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (89,267,801 samples, 0.87%)</title><rect x="76.4127%" y="261" width="0.8671%" height="15" fill="rgb(217,179,31)" fg:x="7866599587" fg:w="89267801"/><text x="76.6627%" y="271.50"></text></g><g><title>chlang::cmove::Move::to (3,009,027 samples, 0.03%)</title><rect x="77.2798%" y="341" width="0.0292%" height="15" fill="rgb(230,9,30)" fg:x="7955867388" fg:w="3009027"/><text x="77.5298%" y="351.50"></text></g><g><title>chlang::board::Position::bitboard (5,015,045 samples, 0.05%)</title><rect x="77.3188%" y="341" width="0.0487%" height="15" fill="rgb(230,136,20)" fg:x="7959879424" fg:w="5015045"/><text x="77.5688%" y="351.50"></text></g><g><title>chlang::board::Position::bitboard (7,021,063 samples, 0.07%)</title><rect x="77.3772%" y="325" width="0.0682%" height="15" fill="rgb(215,210,22)" fg:x="7965897478" fg:w="7021063"/><text x="77.6272%" y="335.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::BitAnd&lt;u64&gt;&gt;::bitand (2,006,018 samples, 0.02%)</title><rect x="77.4454%" y="325" width="0.0195%" height="15" fill="rgb(218,43,5)" fg:x="7972918541" fg:w="2006018"/><text x="77.6954%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (47,141,423 samples, 0.46%)</title><rect x="77.3772%" y="341" width="0.4579%" height="15" fill="rgb(216,11,5)" fg:x="7965897478" fg:w="47141423"/><text x="77.6272%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="77.8352%" y="325" width="0.0585%" height="15" fill="rgb(209,82,29)" fg:x="8013038901" fg:w="6018054"/><text x="78.0852%" y="335.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (16,048,144 samples, 0.16%)</title><rect x="77.8936%" y="325" width="0.1559%" height="15" fill="rgb(244,115,12)" fg:x="8019056955" fg:w="16048144"/><text x="78.1436%" y="335.50"></text></g><g><title>chlang::board::Board::key (34,102,306 samples, 0.33%)</title><rect x="77.8352%" y="341" width="0.3313%" height="15" fill="rgb(222,82,18)" fg:x="8013038901" fg:w="34102306"/><text x="78.0852%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (5,015,045 samples, 0.05%)</title><rect x="78.1664%" y="197" width="0.0487%" height="15" fill="rgb(249,227,8)" fg:x="8047141207" fg:w="5015045"/><text x="78.4164%" y="207.50"></text></g><g><title>__rust_dealloc (37,111,333 samples, 0.36%)</title><rect x="78.2151%" y="165" width="0.3605%" height="15" fill="rgb(253,141,45)" fg:x="8052156252" fg:w="37111333"/><text x="78.4651%" y="175.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (30,090,270 samples, 0.29%)</title><rect x="78.5756%" y="149" width="0.2923%" height="15" fill="rgb(234,184,4)" fg:x="8089267585" fg:w="30090270"/><text x="78.8256%" y="159.50"></text></g><g><title>__rdl_dealloc (36,108,324 samples, 0.35%)</title><rect x="78.5756%" y="165" width="0.3507%" height="15" fill="rgb(218,194,23)" fg:x="8089267585" fg:w="36108324"/><text x="78.8256%" y="175.50"></text></g><g><title>tcache_put (29,087,261 samples, 0.28%)</title><rect x="78.9361%" y="133" width="0.2825%" height="15" fill="rgb(235,66,41)" fg:x="8126378918" fg:w="29087261"/><text x="79.1861%" y="143.50"></text></g><g><title>_int_free (154,463,386 samples, 1.50%)</title><rect x="78.9361%" y="149" width="1.5004%" height="15" fill="rgb(245,217,1)" fg:x="8126378918" fg:w="154463386"/><text x="79.1861%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (286,860,574 samples, 2.79%)</title><rect x="78.1664%" y="309" width="2.7864%" height="15" fill="rgb(229,91,1)" fg:x="8047141207" fg:w="286860574"/><text x="78.4164%" y="319.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (286,860,574 samples, 2.79%)</title><rect x="78.1664%" y="293" width="2.7864%" height="15" fill="rgb(207,101,30)" fg:x="8047141207" fg:w="286860574"/><text x="78.4164%" y="303.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (286,860,574 samples, 2.79%)</title><rect x="78.1664%" y="277" width="2.7864%" height="15" fill="rgb(223,82,49)" fg:x="8047141207" fg:w="286860574"/><text x="78.4164%" y="287.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (286,860,574 samples, 2.79%)</title><rect x="78.1664%" y="261" width="2.7864%" height="15" fill="rgb(218,167,17)" fg:x="8047141207" fg:w="286860574"/><text x="78.4164%" y="271.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (286,860,574 samples, 2.79%)</title><rect x="78.1664%" y="245" width="2.7864%" height="15" fill="rgb(208,103,14)" fg:x="8047141207" fg:w="286860574"/><text x="78.4164%" y="255.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (286,860,574 samples, 2.79%)</title><rect x="78.1664%" y="229" width="2.7864%" height="15" fill="rgb(238,20,8)" fg:x="8047141207" fg:w="286860574"/><text x="78.4164%" y="239.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (286,860,574 samples, 2.79%)</title><rect x="78.1664%" y="213" width="2.7864%" height="15" fill="rgb(218,80,54)" fg:x="8047141207" fg:w="286860574"/><text x="78.4164%" y="223.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (281,845,529 samples, 2.74%)</title><rect x="78.2151%" y="197" width="2.7377%" height="15" fill="rgb(240,144,17)" fg:x="8052156252" fg:w="281845529"/><text x="78.4651%" y="207.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (281,845,529 samples, 2.74%)</title><rect x="78.2151%" y="181" width="2.7377%" height="15" fill="rgb(245,27,50)" fg:x="8052156252" fg:w="281845529"/><text x="78.4651%" y="191.50">al..</text></g><g><title>__GI___libc_free (208,625,872 samples, 2.03%)</title><rect x="78.9263%" y="165" width="2.0265%" height="15" fill="rgb(251,51,7)" fg:x="8125375909" fg:w="208625872"/><text x="79.1763%" y="175.50">_..</text></g><g><title>chlang::board::Board::attacked_by_color::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="80.9528%" y="293" width="0.0195%" height="15" fill="rgb(245,217,29)" fg:x="8334001781" fg:w="2006018"/><text x="81.2028%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (6,018,054 samples, 0.06%)</title><rect x="80.9528%" y="309" width="0.0585%" height="15" fill="rgb(221,176,29)" fg:x="8334001781" fg:w="6018054"/><text x="81.2028%" y="319.50"></text></g><g><title>chlang::cmove::Move::to (19,057,171 samples, 0.19%)</title><rect x="81.0113%" y="309" width="0.1851%" height="15" fill="rgb(212,180,24)" fg:x="8340019835" fg:w="19057171"/><text x="81.2613%" y="319.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.03%)</title><rect x="81.1964%" y="293" width="0.0292%" height="15" fill="rgb(254,24,2)" fg:x="8359077006" fg:w="3009027"/><text x="81.4464%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (80,240,720 samples, 0.78%)</title><rect x="81.1964%" y="309" width="0.7794%" height="15" fill="rgb(230,100,2)" fg:x="8359077006" fg:w="80240720"/><text x="81.4464%" y="319.50"></text></g><g><title>chlang::board::Position::valid (15,045,135 samples, 0.15%)</title><rect x="81.9758%" y="293" width="0.1461%" height="15" fill="rgb(219,142,25)" fg:x="8439317726" fg:w="15045135"/><text x="82.2258%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (5,015,045 samples, 0.05%)</title><rect x="82.1220%" y="293" width="0.0487%" height="15" fill="rgb(240,73,43)" fg:x="8454362861" fg:w="5015045"/><text x="82.3720%" y="303.50"></text></g><g><title>__rust_alloc (6,018,054 samples, 0.06%)</title><rect x="82.1707%" y="165" width="0.0585%" height="15" fill="rgb(214,114,15)" fg:x="8459377906" fg:w="6018054"/><text x="82.4207%" y="175.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="82.2292%" y="165" width="0.0195%" height="15" fill="rgb(207,130,4)" fg:x="8465395960" fg:w="2006018"/><text x="82.4792%" y="175.50"></text></g><g><title>tcache_get (9,027,081 samples, 0.09%)</title><rect x="82.2486%" y="149" width="0.0877%" height="15" fill="rgb(221,25,40)" fg:x="8467401978" fg:w="9027081"/><text x="82.4986%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40,120,360 samples, 0.39%)</title><rect x="82.1707%" y="213" width="0.3897%" height="15" fill="rgb(241,184,7)" fg:x="8459377906" fg:w="40120360"/><text x="82.4207%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40,120,360 samples, 0.39%)</title><rect x="82.1707%" y="197" width="0.3897%" height="15" fill="rgb(235,159,4)" fg:x="8459377906" fg:w="40120360"/><text x="82.4207%" y="207.50"></text></g><g><title>alloc::alloc::alloc (40,120,360 samples, 0.39%)</title><rect x="82.1707%" y="181" width="0.3897%" height="15" fill="rgb(214,87,48)" fg:x="8459377906" fg:w="40120360"/><text x="82.4207%" y="191.50"></text></g><g><title>__GI___libc_malloc (32,096,288 samples, 0.31%)</title><rect x="82.2486%" y="165" width="0.3118%" height="15" fill="rgb(246,198,24)" fg:x="8467401978" fg:w="32096288"/><text x="82.4986%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (41,123,369 samples, 0.40%)</title><rect x="82.1707%" y="261" width="0.3995%" height="15" fill="rgb(209,66,40)" fg:x="8459377906" fg:w="41123369"/><text x="82.4207%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (41,123,369 samples, 0.40%)</title><rect x="82.1707%" y="245" width="0.3995%" height="15" fill="rgb(233,147,39)" fg:x="8459377906" fg:w="41123369"/><text x="82.4207%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (41,123,369 samples, 0.40%)</title><rect x="82.1707%" y="229" width="0.3995%" height="15" fill="rgb(231,145,52)" fg:x="8459377906" fg:w="41123369"/><text x="82.4207%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (43,129,387 samples, 0.42%)</title><rect x="82.1707%" y="293" width="0.4189%" height="15" fill="rgb(206,20,26)" fg:x="8459377906" fg:w="43129387"/><text x="82.4207%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43,129,387 samples, 0.42%)</title><rect x="82.1707%" y="277" width="0.4189%" height="15" fill="rgb(238,220,4)" fg:x="8459377906" fg:w="43129387"/><text x="82.4207%" y="287.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="82.5896%" y="277" width="0.0195%" height="15" fill="rgb(252,195,42)" fg:x="8502507293" fg:w="2006018"/><text x="82.8396%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15,045,135 samples, 0.15%)</title><rect x="82.5896%" y="293" width="0.1461%" height="15" fill="rgb(209,10,6)" fg:x="8502507293" fg:w="15045135"/><text x="82.8396%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (138,415,242 samples, 1.34%)</title><rect x="81.9758%" y="309" width="1.3445%" height="15" fill="rgb(229,3,52)" fg:x="8439317726" fg:w="138415242"/><text x="82.2258%" y="319.50"></text></g><g><title>chlang::board::Position::valid (3,009,027 samples, 0.03%)</title><rect x="83.3398%" y="293" width="0.0292%" height="15" fill="rgb(253,49,37)" fg:x="8579738986" fg:w="3009027"/><text x="83.5898%" y="303.50"></text></g><g><title>tcache_get (7,021,063 samples, 0.07%)</title><rect x="83.3788%" y="149" width="0.0682%" height="15" fill="rgb(240,103,49)" fg:x="8583751022" fg:w="7021063"/><text x="83.6288%" y="159.50"></text></g><g><title>checked_request2size (3,009,027 samples, 0.03%)</title><rect x="83.4470%" y="149" width="0.0292%" height="15" fill="rgb(250,182,30)" fg:x="8590772085" fg:w="3009027"/><text x="83.6970%" y="159.50"></text></g><g><title>__GI___libc_malloc (31,093,279 samples, 0.30%)</title><rect x="83.3788%" y="165" width="0.3020%" height="15" fill="rgb(248,8,30)" fg:x="8583751022" fg:w="31093279"/><text x="83.6288%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33,099,297 samples, 0.32%)</title><rect x="83.3691%" y="213" width="0.3215%" height="15" fill="rgb(237,120,30)" fg:x="8582748013" fg:w="33099297"/><text x="83.6191%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33,099,297 samples, 0.32%)</title><rect x="83.3691%" y="197" width="0.3215%" height="15" fill="rgb(221,146,34)" fg:x="8582748013" fg:w="33099297"/><text x="83.6191%" y="207.50"></text></g><g><title>alloc::alloc::alloc (33,099,297 samples, 0.32%)</title><rect x="83.3691%" y="181" width="0.3215%" height="15" fill="rgb(242,55,13)" fg:x="8582748013" fg:w="33099297"/><text x="83.6191%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (36,108,324 samples, 0.35%)</title><rect x="83.3691%" y="293" width="0.3507%" height="15" fill="rgb(242,112,31)" fg:x="8582748013" fg:w="36108324"/><text x="83.6191%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36,108,324 samples, 0.35%)</title><rect x="83.3691%" y="277" width="0.3507%" height="15" fill="rgb(249,192,27)" fg:x="8582748013" fg:w="36108324"/><text x="83.6191%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36,108,324 samples, 0.35%)</title><rect x="83.3691%" y="261" width="0.3507%" height="15" fill="rgb(208,204,44)" fg:x="8582748013" fg:w="36108324"/><text x="83.6191%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (36,108,324 samples, 0.35%)</title><rect x="83.3691%" y="245" width="0.3507%" height="15" fill="rgb(208,93,54)" fg:x="8582748013" fg:w="36108324"/><text x="83.6191%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (36,108,324 samples, 0.35%)</title><rect x="83.3691%" y="229" width="0.3507%" height="15" fill="rgb(242,1,31)" fg:x="8582748013" fg:w="36108324"/><text x="83.6191%" y="239.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (69,207,621 samples, 0.67%)</title><rect x="83.3203%" y="309" width="0.6723%" height="15" fill="rgb(241,83,25)" fg:x="8577732968" fg:w="69207621"/><text x="83.5703%" y="319.50"></text></g><g><title>chlang::board::Position::valid (13,039,117 samples, 0.13%)</title><rect x="83.9926%" y="293" width="0.1267%" height="15" fill="rgb(205,169,50)" fg:x="8646940589" fg:w="13039117"/><text x="84.2426%" y="303.50"></text></g><g><title>__rust_alloc (5,015,045 samples, 0.05%)</title><rect x="84.1193%" y="165" width="0.0487%" height="15" fill="rgb(239,186,37)" fg:x="8659979706" fg:w="5015045"/><text x="84.3693%" y="175.50"></text></g><g><title>__rdl_alloc (3,009,027 samples, 0.03%)</title><rect x="84.1680%" y="165" width="0.0292%" height="15" fill="rgb(205,221,10)" fg:x="8664994751" fg:w="3009027"/><text x="84.4180%" y="175.50"></text></g><g><title>tcache_get (13,039,117 samples, 0.13%)</title><rect x="84.1972%" y="149" width="0.1267%" height="15" fill="rgb(218,196,15)" fg:x="8668003778" fg:w="13039117"/><text x="84.4472%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48,144,432 samples, 0.47%)</title><rect x="84.1193%" y="213" width="0.4677%" height="15" fill="rgb(218,196,35)" fg:x="8659979706" fg:w="48144432"/><text x="84.3693%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48,144,432 samples, 0.47%)</title><rect x="84.1193%" y="197" width="0.4677%" height="15" fill="rgb(233,63,24)" fg:x="8659979706" fg:w="48144432"/><text x="84.3693%" y="207.50"></text></g><g><title>alloc::alloc::alloc (48,144,432 samples, 0.47%)</title><rect x="84.1193%" y="181" width="0.4677%" height="15" fill="rgb(225,8,4)" fg:x="8659979706" fg:w="48144432"/><text x="84.3693%" y="191.50"></text></g><g><title>__GI___libc_malloc (40,120,360 samples, 0.39%)</title><rect x="84.1972%" y="165" width="0.3897%" height="15" fill="rgb(234,105,35)" fg:x="8668003778" fg:w="40120360"/><text x="84.4472%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (53,159,477 samples, 0.52%)</title><rect x="84.1193%" y="293" width="0.5164%" height="15" fill="rgb(236,21,32)" fg:x="8659979706" fg:w="53159477"/><text x="84.3693%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53,159,477 samples, 0.52%)</title><rect x="84.1193%" y="277" width="0.5164%" height="15" fill="rgb(228,109,6)" fg:x="8659979706" fg:w="53159477"/><text x="84.3693%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53,159,477 samples, 0.52%)</title><rect x="84.1193%" y="261" width="0.5164%" height="15" fill="rgb(229,215,31)" fg:x="8659979706" fg:w="53159477"/><text x="84.3693%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (53,159,477 samples, 0.52%)</title><rect x="84.1193%" y="245" width="0.5164%" height="15" fill="rgb(221,52,54)" fg:x="8659979706" fg:w="53159477"/><text x="84.3693%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (53,159,477 samples, 0.52%)</title><rect x="84.1193%" y="229" width="0.5164%" height="15" fill="rgb(252,129,43)" fg:x="8659979706" fg:w="53159477"/><text x="84.3693%" y="239.50"></text></g><g><title>core::ptr::write (8,024,072 samples, 0.08%)</title><rect x="84.6356%" y="277" width="0.0779%" height="15" fill="rgb(248,183,27)" fg:x="8713139183" fg:w="8024072"/><text x="84.8856%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39,117,351 samples, 0.38%)</title><rect x="84.6356%" y="293" width="0.3800%" height="15" fill="rgb(250,0,22)" fg:x="8713139183" fg:w="39117351"/><text x="84.8856%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (2,006,018 samples, 0.02%)</title><rect x="85.0156%" y="293" width="0.0195%" height="15" fill="rgb(213,166,10)" fg:x="8752256534" fg:w="2006018"/><text x="85.2656%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (2,006,018 samples, 0.02%)</title><rect x="85.0156%" y="277" width="0.0195%" height="15" fill="rgb(207,163,36)" fg:x="8752256534" fg:w="2006018"/><text x="85.2656%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (132,397,188 samples, 1.29%)</title><rect x="83.9926%" y="309" width="1.2860%" height="15" fill="rgb(208,122,22)" fg:x="8646940589" fg:w="132397188"/><text x="84.2426%" y="319.50"></text></g><g><title>chlang::cmove::Move::new (4,012,036 samples, 0.04%)</title><rect x="85.2786%" y="293" width="0.0390%" height="15" fill="rgb(207,104,49)" fg:x="8779337777" fg:w="4012036"/><text x="85.5286%" y="303.50"></text></g><g><title>chlang::board::Position::valid (13,039,117 samples, 0.13%)</title><rect x="85.3176%" y="293" width="0.1267%" height="15" fill="rgb(248,211,50)" fg:x="8783349813" fg:w="13039117"/><text x="85.5676%" y="303.50"></text></g><g><title>__rust_alloc (5,015,045 samples, 0.05%)</title><rect x="85.4443%" y="165" width="0.0487%" height="15" fill="rgb(217,13,45)" fg:x="8796388930" fg:w="5015045"/><text x="85.6943%" y="175.50"></text></g><g><title>tcache_get (9,027,081 samples, 0.09%)</title><rect x="85.4930%" y="149" width="0.0877%" height="15" fill="rgb(211,216,49)" fg:x="8801403975" fg:w="9027081"/><text x="85.7430%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41,123,369 samples, 0.40%)</title><rect x="85.4443%" y="213" width="0.3995%" height="15" fill="rgb(221,58,53)" fg:x="8796388930" fg:w="41123369"/><text x="85.6943%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (41,123,369 samples, 0.40%)</title><rect x="85.4443%" y="197" width="0.3995%" height="15" fill="rgb(220,112,41)" fg:x="8796388930" fg:w="41123369"/><text x="85.6943%" y="207.50"></text></g><g><title>alloc::alloc::alloc (41,123,369 samples, 0.40%)</title><rect x="85.4443%" y="181" width="0.3995%" height="15" fill="rgb(236,38,28)" fg:x="8796388930" fg:w="41123369"/><text x="85.6943%" y="191.50"></text></g><g><title>__GI___libc_malloc (36,108,324 samples, 0.35%)</title><rect x="85.4930%" y="165" width="0.3507%" height="15" fill="rgb(227,195,22)" fg:x="8801403975" fg:w="36108324"/><text x="85.7430%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (44,132,396 samples, 0.43%)</title><rect x="85.4443%" y="293" width="0.4287%" height="15" fill="rgb(214,55,33)" fg:x="8796388930" fg:w="44132396"/><text x="85.6943%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.43%)</title><rect x="85.4443%" y="277" width="0.4287%" height="15" fill="rgb(248,80,13)" fg:x="8796388930" fg:w="44132396"/><text x="85.6943%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.43%)</title><rect x="85.4443%" y="261" width="0.4287%" height="15" fill="rgb(238,52,6)" fg:x="8796388930" fg:w="44132396"/><text x="85.6943%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (44,132,396 samples, 0.43%)</title><rect x="85.4443%" y="245" width="0.4287%" height="15" fill="rgb(224,198,47)" fg:x="8796388930" fg:w="44132396"/><text x="85.6943%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (44,132,396 samples, 0.43%)</title><rect x="85.4443%" y="229" width="0.4287%" height="15" fill="rgb(233,171,20)" fg:x="8796388930" fg:w="44132396"/><text x="85.6943%" y="239.50"></text></g><g><title>core::ptr::write (3,009,027 samples, 0.03%)</title><rect x="85.8730%" y="277" width="0.0292%" height="15" fill="rgb(241,30,25)" fg:x="8840521326" fg:w="3009027"/><text x="86.1230%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23,069,207 samples, 0.22%)</title><rect x="85.8730%" y="293" width="0.2241%" height="15" fill="rgb(207,171,38)" fg:x="8840521326" fg:w="23069207"/><text x="86.1230%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (132,397,188 samples, 1.29%)</title><rect x="85.2786%" y="309" width="1.2860%" height="15" fill="rgb(234,70,1)" fg:x="8779337777" fg:w="132397188"/><text x="85.5286%" y="319.50"></text></g><g><title>chlang::board::Position::valid (26,078,234 samples, 0.25%)</title><rect x="86.5744%" y="293" width="0.2533%" height="15" fill="rgb(232,178,18)" fg:x="8912737974" fg:w="26078234"/><text x="86.8244%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (6,018,054 samples, 0.06%)</title><rect x="86.8277%" y="293" width="0.0585%" height="15" fill="rgb(241,78,40)" fg:x="8938816208" fg:w="6018054"/><text x="87.0777%" y="303.50"></text></g><g><title>__rust_alloc (3,009,027 samples, 0.03%)</title><rect x="86.8862%" y="165" width="0.0292%" height="15" fill="rgb(222,35,25)" fg:x="8944834262" fg:w="3009027"/><text x="87.1362%" y="175.50"></text></g><g><title>tcache_get (7,021,063 samples, 0.07%)</title><rect x="86.9252%" y="149" width="0.0682%" height="15" fill="rgb(207,92,16)" fg:x="8948846298" fg:w="7021063"/><text x="87.1752%" y="159.50"></text></g><g><title>checked_request2size (2,006,018 samples, 0.02%)</title><rect x="86.9934%" y="149" width="0.0195%" height="15" fill="rgb(216,59,51)" fg:x="8955867361" fg:w="2006018"/><text x="87.2434%" y="159.50"></text></g><g><title>__GI___libc_malloc (37,111,333 samples, 0.36%)</title><rect x="86.9252%" y="165" width="0.3605%" height="15" fill="rgb(213,80,28)" fg:x="8948846298" fg:w="37111333"/><text x="87.1752%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42,126,378 samples, 0.41%)</title><rect x="86.8862%" y="213" width="0.4092%" height="15" fill="rgb(220,93,7)" fg:x="8944834262" fg:w="42126378"/><text x="87.1362%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42,126,378 samples, 0.41%)</title><rect x="86.8862%" y="197" width="0.4092%" height="15" fill="rgb(225,24,44)" fg:x="8944834262" fg:w="42126378"/><text x="87.1362%" y="207.50"></text></g><g><title>alloc::alloc::alloc (42,126,378 samples, 0.41%)</title><rect x="86.8862%" y="181" width="0.4092%" height="15" fill="rgb(243,74,40)" fg:x="8944834262" fg:w="42126378"/><text x="87.1362%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (51,153,459 samples, 0.50%)</title><rect x="86.8862%" y="293" width="0.4969%" height="15" fill="rgb(228,39,7)" fg:x="8944834262" fg:w="51153459"/><text x="87.1362%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51,153,459 samples, 0.50%)</title><rect x="86.8862%" y="277" width="0.4969%" height="15" fill="rgb(227,79,8)" fg:x="8944834262" fg:w="51153459"/><text x="87.1362%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51,153,459 samples, 0.50%)</title><rect x="86.8862%" y="261" width="0.4969%" height="15" fill="rgb(236,58,11)" fg:x="8944834262" fg:w="51153459"/><text x="87.1362%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (51,153,459 samples, 0.50%)</title><rect x="86.8862%" y="245" width="0.4969%" height="15" fill="rgb(249,63,35)" fg:x="8944834262" fg:w="51153459"/><text x="87.1362%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (51,153,459 samples, 0.50%)</title><rect x="86.8862%" y="229" width="0.4969%" height="15" fill="rgb(252,114,16)" fg:x="8944834262" fg:w="51153459"/><text x="87.1362%" y="239.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="87.3831%" y="277" width="0.0195%" height="15" fill="rgb(254,151,24)" fg:x="8995987721" fg:w="2006018"/><text x="87.6331%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17,051,153 samples, 0.17%)</title><rect x="87.3831%" y="293" width="0.1656%" height="15" fill="rgb(253,54,39)" fg:x="8995987721" fg:w="17051153"/><text x="87.6331%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (7,021,063 samples, 0.07%)</title><rect x="87.5487%" y="293" width="0.0682%" height="15" fill="rgb(243,25,45)" fg:x="9013038874" fg:w="7021063"/><text x="87.7987%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (7,021,063 samples, 0.07%)</title><rect x="87.5487%" y="277" width="0.0682%" height="15" fill="rgb(234,134,9)" fg:x="9013038874" fg:w="7021063"/><text x="87.7987%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (149,448,341 samples, 1.45%)</title><rect x="86.5647%" y="309" width="1.4517%" height="15" fill="rgb(227,166,31)" fg:x="8911734965" fg:w="149448341"/><text x="86.8147%" y="319.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13,039,117 samples, 0.13%)</title><rect x="88.0164%" y="293" width="0.1267%" height="15" fill="rgb(245,143,41)" fg:x="9061183306" fg:w="13039117"/><text x="88.2664%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,060,180 samples, 0.19%)</title><rect x="88.0164%" y="309" width="0.1949%" height="15" fill="rgb(238,181,32)" fg:x="9061183306" fg:w="20060180"/><text x="88.2664%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (47,141,423 samples, 0.46%)</title><rect x="88.2112%" y="309" width="0.4579%" height="15" fill="rgb(224,113,18)" fg:x="9081243486" fg:w="47141423"/><text x="88.4612%" y="319.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (47,141,423 samples, 0.46%)</title><rect x="88.2112%" y="293" width="0.4579%" height="15" fill="rgb(240,229,28)" fg:x="9081243486" fg:w="47141423"/><text x="88.4612%" y="303.50"></text></g><g><title>chlang::board::Board::attacked_by_color (1,122,367,071 samples, 10.90%)</title><rect x="78.1664%" y="325" width="10.9022%" height="15" fill="rgb(250,185,3)" fg:x="8047141207" fg:w="1122367071"/><text x="78.4164%" y="335.50">chlang::board::B..</text></g><g><title>core::num::&lt;impl u64&gt;::ilog2 (2,006,018 samples, 0.02%)</title><rect x="89.0686%" y="309" width="0.0195%" height="15" fill="rgb(212,59,25)" fg:x="9169508278" fg:w="2006018"/><text x="89.3186%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_ilog2 (2,006,018 samples, 0.02%)</title><rect x="89.0686%" y="293" width="0.0195%" height="15" fill="rgb(221,87,20)" fg:x="9169508278" fg:w="2006018"/><text x="89.3186%" y="303.50"></text></g><g><title>&lt;chlang::board::Position as core::convert::From&lt;u64&gt;&gt;::from (7,021,063 samples, 0.07%)</title><rect x="89.0686%" y="325" width="0.0682%" height="15" fill="rgb(213,74,28)" fg:x="9169508278" fg:w="7021063"/><text x="89.3186%" y="335.50"></text></g><g><title>chlang::board::Board::is_valid (1,131,394,152 samples, 10.99%)</title><rect x="78.1664%" y="341" width="10.9899%" height="15" fill="rgb(224,132,34)" fg:x="8047141207" fg:w="1131394152"/><text x="78.4164%" y="351.50">chlang::board::B..</text></g><g><title>_int_free (9,027,081 samples, 0.09%)</title><rect x="89.1660%" y="197" width="0.0877%" height="15" fill="rgb(222,101,24)" fg:x="9179538368" fg:w="9027081"/><text x="89.4160%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (12,036,108 samples, 0.12%)</title><rect x="89.1563%" y="325" width="0.1169%" height="15" fill="rgb(254,142,4)" fg:x="9178535359" fg:w="12036108"/><text x="89.4063%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (12,036,108 samples, 0.12%)</title><rect x="89.1563%" y="309" width="0.1169%" height="15" fill="rgb(230,229,49)" fg:x="9178535359" fg:w="12036108"/><text x="89.4063%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (12,036,108 samples, 0.12%)</title><rect x="89.1563%" y="293" width="0.1169%" height="15" fill="rgb(238,70,47)" fg:x="9178535359" fg:w="12036108"/><text x="89.4063%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.12%)</title><rect x="89.1563%" y="277" width="0.1169%" height="15" fill="rgb(231,160,17)" fg:x="9178535359" fg:w="12036108"/><text x="89.4063%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (12,036,108 samples, 0.12%)</title><rect x="89.1563%" y="261" width="0.1169%" height="15" fill="rgb(218,68,53)" fg:x="9178535359" fg:w="12036108"/><text x="89.4063%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,036,108 samples, 0.12%)</title><rect x="89.1563%" y="245" width="0.1169%" height="15" fill="rgb(236,111,10)" fg:x="9178535359" fg:w="12036108"/><text x="89.4063%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (12,036,108 samples, 0.12%)</title><rect x="89.1563%" y="229" width="0.1169%" height="15" fill="rgb(224,34,41)" fg:x="9178535359" fg:w="12036108"/><text x="89.4063%" y="239.50"></text></g><g><title>__GI___libc_free (11,033,099 samples, 0.11%)</title><rect x="89.1660%" y="213" width="0.1072%" height="15" fill="rgb(241,118,19)" fg:x="9179538368" fg:w="11033099"/><text x="89.4160%" y="223.50"></text></g><g><title>chlang::board::Position::bitboard (7,021,063 samples, 0.07%)</title><rect x="89.2732%" y="309" width="0.0682%" height="15" fill="rgb(238,129,25)" fg:x="9190571467" fg:w="7021063"/><text x="89.5232%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="309" width="0.0877%" height="15" fill="rgb(238,22,31)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="293" width="0.0877%" height="15" fill="rgb(222,174,48)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="303.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="277" width="0.0877%" height="15" fill="rgb(206,152,40)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="261" width="0.0877%" height="15" fill="rgb(218,99,54)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="245" width="0.0877%" height="15" fill="rgb(220,174,26)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="229" width="0.0877%" height="15" fill="rgb(245,116,9)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="213" width="0.0877%" height="15" fill="rgb(209,72,35)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="223.50"></text></g><g><title>core::ptr::read (9,027,081 samples, 0.09%)</title><rect x="89.3414%" y="197" width="0.0877%" height="15" fill="rgb(226,126,21)" fg:x="9197592530" fg:w="9027081"/><text x="89.5914%" y="207.50"></text></g><g><title>chlang::board::Board::piece_type (27,081,243 samples, 0.26%)</title><rect x="89.2732%" y="325" width="0.2631%" height="15" fill="rgb(227,192,1)" fg:x="9190571467" fg:w="27081243"/><text x="89.5232%" y="335.50"></text></g><g><title>chlang::board::Position::valid (8,024,072 samples, 0.08%)</title><rect x="89.5362%" y="309" width="0.0779%" height="15" fill="rgb(237,180,29)" fg:x="9217652710" fg:w="8024072"/><text x="89.7862%" y="319.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.03%)</title><rect x="89.6142%" y="309" width="0.0292%" height="15" fill="rgb(230,197,35)" fg:x="9225676782" fg:w="3009027"/><text x="89.8642%" y="319.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="89.6434%" y="181" width="0.0195%" height="15" fill="rgb(246,193,31)" fg:x="9228685809" fg:w="2006018"/><text x="89.8934%" y="191.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="89.6726%" y="165" width="0.0195%" height="15" fill="rgb(241,36,4)" fg:x="9231694836" fg:w="2006018"/><text x="89.9226%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="309" width="0.1267%" height="15" fill="rgb(241,130,17)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="293" width="0.1267%" height="15" fill="rgb(206,137,32)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="277" width="0.1267%" height="15" fill="rgb(237,228,51)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="261" width="0.1267%" height="15" fill="rgb(243,6,42)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="245" width="0.1267%" height="15" fill="rgb(251,74,28)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="229" width="0.1267%" height="15" fill="rgb(218,20,49)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="213" width="0.1267%" height="15" fill="rgb(238,28,14)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="223.50"></text></g><g><title>alloc::alloc::alloc (13,039,117 samples, 0.13%)</title><rect x="89.6434%" y="197" width="0.1267%" height="15" fill="rgb(229,40,46)" fg:x="9228685809" fg:w="13039117"/><text x="89.8934%" y="207.50"></text></g><g><title>__GI___libc_malloc (10,030,090 samples, 0.10%)</title><rect x="89.6726%" y="181" width="0.0974%" height="15" fill="rgb(244,195,20)" fg:x="9231694836" fg:w="10030090"/><text x="89.9226%" y="191.50"></text></g><g><title>core::ptr::write (6,018,054 samples, 0.06%)</title><rect x="89.7701%" y="293" width="0.0585%" height="15" fill="rgb(253,56,35)" fg:x="9241724926" fg:w="6018054"/><text x="90.0201%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15,045,135 samples, 0.15%)</title><rect x="89.7701%" y="309" width="0.1461%" height="15" fill="rgb(210,149,44)" fg:x="9241724926" fg:w="15045135"/><text x="90.0201%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (55,165,495 samples, 0.54%)</title><rect x="89.5362%" y="325" width="0.5359%" height="15" fill="rgb(240,135,12)" fg:x="9217652710" fg:w="55165495"/><text x="89.7862%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (5,015,045 samples, 0.05%)</title><rect x="90.0818%" y="309" width="0.0487%" height="15" fill="rgb(251,24,50)" fg:x="9273821214" fg:w="5015045"/><text x="90.3318%" y="319.50"></text></g><g><title>tcache_get (3,009,027 samples, 0.03%)</title><rect x="90.1500%" y="165" width="0.0292%" height="15" fill="rgb(243,200,47)" fg:x="9280842277" fg:w="3009027"/><text x="90.4000%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,027,081 samples, 0.09%)</title><rect x="90.1500%" y="229" width="0.0877%" height="15" fill="rgb(224,166,26)" fg:x="9280842277" fg:w="9027081"/><text x="90.4000%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,027,081 samples, 0.09%)</title><rect x="90.1500%" y="213" width="0.0877%" height="15" fill="rgb(233,0,47)" fg:x="9280842277" fg:w="9027081"/><text x="90.4000%" y="223.50"></text></g><g><title>alloc::alloc::alloc (9,027,081 samples, 0.09%)</title><rect x="90.1500%" y="197" width="0.0877%" height="15" fill="rgb(253,80,5)" fg:x="9280842277" fg:w="9027081"/><text x="90.4000%" y="207.50"></text></g><g><title>__GI___libc_malloc (9,027,081 samples, 0.09%)</title><rect x="90.1500%" y="181" width="0.0877%" height="15" fill="rgb(214,133,25)" fg:x="9280842277" fg:w="9027081"/><text x="90.4000%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12,036,108 samples, 0.12%)</title><rect x="90.1500%" y="309" width="0.1169%" height="15" fill="rgb(209,27,14)" fg:x="9280842277" fg:w="12036108"/><text x="90.4000%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,036,108 samples, 0.12%)</title><rect x="90.1500%" y="293" width="0.1169%" height="15" fill="rgb(219,102,51)" fg:x="9280842277" fg:w="12036108"/><text x="90.4000%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,036,108 samples, 0.12%)</title><rect x="90.1500%" y="277" width="0.1169%" height="15" fill="rgb(237,18,16)" fg:x="9280842277" fg:w="12036108"/><text x="90.4000%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,036,108 samples, 0.12%)</title><rect x="90.1500%" y="261" width="0.1169%" height="15" fill="rgb(241,85,17)" fg:x="9280842277" fg:w="12036108"/><text x="90.4000%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,036,108 samples, 0.12%)</title><rect x="90.1500%" y="245" width="0.1169%" height="15" fill="rgb(236,90,42)" fg:x="9280842277" fg:w="12036108"/><text x="90.4000%" y="255.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (32,096,288 samples, 0.31%)</title><rect x="90.0721%" y="325" width="0.3118%" height="15" fill="rgb(249,57,21)" fg:x="9272818205" fg:w="32096288"/><text x="90.3221%" y="335.50"></text></g><g><title>chlang::board::Position::valid (4,012,036 samples, 0.04%)</title><rect x="90.3839%" y="309" width="0.0390%" height="15" fill="rgb(243,12,36)" fg:x="9304914493" fg:w="4012036"/><text x="90.6339%" y="319.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="90.4228%" y="181" width="0.0195%" height="15" fill="rgb(253,128,47)" fg:x="9308926529" fg:w="2006018"/><text x="90.6728%" y="191.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="90.4423%" y="181" width="0.0195%" height="15" fill="rgb(207,33,20)" fg:x="9310932547" fg:w="2006018"/><text x="90.6923%" y="191.50"></text></g><g><title>__GI___libc_malloc (10,030,090 samples, 0.10%)</title><rect x="90.4618%" y="181" width="0.0974%" height="15" fill="rgb(233,215,35)" fg:x="9312938565" fg:w="10030090"/><text x="90.7118%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15,045,135 samples, 0.15%)</title><rect x="90.4228%" y="229" width="0.1461%" height="15" fill="rgb(249,188,52)" fg:x="9308926529" fg:w="15045135"/><text x="90.6728%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15,045,135 samples, 0.15%)</title><rect x="90.4228%" y="213" width="0.1461%" height="15" fill="rgb(225,12,32)" fg:x="9308926529" fg:w="15045135"/><text x="90.6728%" y="223.50"></text></g><g><title>alloc::alloc::alloc (15,045,135 samples, 0.15%)</title><rect x="90.4228%" y="197" width="0.1461%" height="15" fill="rgb(247,98,14)" fg:x="9308926529" fg:w="15045135"/><text x="90.6728%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17,051,153 samples, 0.17%)</title><rect x="90.4228%" y="309" width="0.1656%" height="15" fill="rgb(247,219,48)" fg:x="9308926529" fg:w="17051153"/><text x="90.6728%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17,051,153 samples, 0.17%)</title><rect x="90.4228%" y="293" width="0.1656%" height="15" fill="rgb(253,60,48)" fg:x="9308926529" fg:w="17051153"/><text x="90.6728%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17,051,153 samples, 0.17%)</title><rect x="90.4228%" y="277" width="0.1656%" height="15" fill="rgb(245,15,52)" fg:x="9308926529" fg:w="17051153"/><text x="90.6728%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (17,051,153 samples, 0.17%)</title><rect x="90.4228%" y="261" width="0.1656%" height="15" fill="rgb(220,133,28)" fg:x="9308926529" fg:w="17051153"/><text x="90.6728%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (17,051,153 samples, 0.17%)</title><rect x="90.4228%" y="245" width="0.1656%" height="15" fill="rgb(217,180,4)" fg:x="9308926529" fg:w="17051153"/><text x="90.6728%" y="255.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="90.5885%" y="293" width="0.0195%" height="15" fill="rgb(251,24,1)" fg:x="9325977682" fg:w="2006018"/><text x="90.8385%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7,021,063 samples, 0.07%)</title><rect x="90.5885%" y="309" width="0.0682%" height="15" fill="rgb(212,185,49)" fg:x="9325977682" fg:w="7021063"/><text x="90.8385%" y="319.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (2,006,018 samples, 0.02%)</title><rect x="90.6567%" y="309" width="0.0195%" height="15" fill="rgb(215,175,22)" fg:x="9332998745" fg:w="2006018"/><text x="90.9067%" y="319.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (2,006,018 samples, 0.02%)</title><rect x="90.6567%" y="293" width="0.0195%" height="15" fill="rgb(250,205,14)" fg:x="9332998745" fg:w="2006018"/><text x="90.9067%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (39,117,351 samples, 0.38%)</title><rect x="90.3839%" y="325" width="0.3800%" height="15" fill="rgb(225,211,22)" fg:x="9304914493" fg:w="39117351"/><text x="90.6339%" y="335.50"></text></g><g><title>chlang::cmove::Move::new (2,006,018 samples, 0.02%)</title><rect x="90.7638%" y="309" width="0.0195%" height="15" fill="rgb(251,179,42)" fg:x="9344031844" fg:w="2006018"/><text x="91.0138%" y="319.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="90.8028%" y="133" width="0.0292%" height="15" fill="rgb(208,216,51)" fg:x="9348043880" fg:w="3009027"/><text x="91.0528%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="293" width="0.0585%" height="15" fill="rgb(235,36,11)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="277" width="0.0585%" height="15" fill="rgb(213,189,28)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="261" width="0.0585%" height="15" fill="rgb(227,203,42)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="271.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="245" width="0.0585%" height="15" fill="rgb(244,72,36)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="229" width="0.0585%" height="15" fill="rgb(213,53,17)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="213" width="0.0585%" height="15" fill="rgb(207,167,3)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="197" width="0.0585%" height="15" fill="rgb(216,98,30)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="181" width="0.0585%" height="15" fill="rgb(236,123,15)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (6,018,054 samples, 0.06%)</title><rect x="90.7833%" y="165" width="0.0585%" height="15" fill="rgb(248,81,50)" fg:x="9346037862" fg:w="6018054"/><text x="91.0333%" y="175.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.04%)</title><rect x="90.8028%" y="149" width="0.0390%" height="15" fill="rgb(214,120,4)" fg:x="9348043880" fg:w="4012036"/><text x="91.0528%" y="159.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.02%)</title><rect x="90.8515%" y="293" width="0.0195%" height="15" fill="rgb(208,179,34)" fg:x="9353058925" fg:w="2006018"/><text x="91.1015%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (4,012,036 samples, 0.04%)</title><rect x="90.8710%" y="293" width="0.0390%" height="15" fill="rgb(227,140,7)" fg:x="9355064943" fg:w="4012036"/><text x="91.1210%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="293" width="0.0292%" height="15" fill="rgb(214,22,6)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="277" width="0.0292%" height="15" fill="rgb(207,137,27)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="261" width="0.0292%" height="15" fill="rgb(210,8,46)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="245" width="0.0292%" height="15" fill="rgb(240,16,54)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="229" width="0.0292%" height="15" fill="rgb(211,209,29)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="213" width="0.0292%" height="15" fill="rgb(226,228,24)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="197" width="0.0292%" height="15" fill="rgb(222,84,9)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="181" width="0.0292%" height="15" fill="rgb(234,203,30)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="191.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="165" width="0.0292%" height="15" fill="rgb(238,109,14)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="175.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="90.9100%" y="149" width="0.0292%" height="15" fill="rgb(233,206,34)" fg:x="9359076979" fg:w="3009027"/><text x="91.1600%" y="159.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="90.9392%" y="149" width="0.0195%" height="15" fill="rgb(220,167,47)" fg:x="9362086006" fg:w="2006018"/><text x="91.1892%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="277" width="0.0292%" height="15" fill="rgb(238,105,10)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="261" width="0.0292%" height="15" fill="rgb(213,227,17)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="245" width="0.0292%" height="15" fill="rgb(217,132,38)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="229" width="0.0292%" height="15" fill="rgb(242,146,4)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="213" width="0.0292%" height="15" fill="rgb(212,61,9)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="197" width="0.0292%" height="15" fill="rgb(247,126,22)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="181" width="0.0292%" height="15" fill="rgb(220,196,2)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="191.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="90.9392%" y="165" width="0.0292%" height="15" fill="rgb(208,46,4)" fg:x="9362086006" fg:w="3009027"/><text x="91.1892%" y="175.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="90.9392%" y="293" width="0.0487%" height="15" fill="rgb(252,104,46)" fg:x="9362086006" fg:w="5015045"/><text x="91.1892%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="90.9879%" y="293" width="0.0292%" height="15" fill="rgb(237,152,48)" fg:x="9367101051" fg:w="3009027"/><text x="91.2379%" y="303.50"></text></g><g><title>chlang::board::Board::attacked_by_color (28,084,252 samples, 0.27%)</title><rect x="90.7833%" y="309" width="0.2728%" height="15" fill="rgb(221,59,37)" fg:x="9346037862" fg:w="28084252"/><text x="91.0333%" y="319.50"></text></g><g><title>tcache_get (3,009,027 samples, 0.03%)</title><rect x="91.0756%" y="165" width="0.0292%" height="15" fill="rgb(209,202,51)" fg:x="9376128132" fg:w="3009027"/><text x="91.3256%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="309" width="0.0682%" height="15" fill="rgb(228,81,30)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="293" width="0.0682%" height="15" fill="rgb(227,42,39)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="277" width="0.0682%" height="15" fill="rgb(221,26,2)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="261" width="0.0682%" height="15" fill="rgb(254,61,31)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="245" width="0.0682%" height="15" fill="rgb(222,173,38)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="229" width="0.0682%" height="15" fill="rgb(218,50,12)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="213" width="0.0682%" height="15" fill="rgb(223,88,40)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="223.50"></text></g><g><title>alloc::alloc::alloc (7,021,063 samples, 0.07%)</title><rect x="91.0561%" y="197" width="0.0682%" height="15" fill="rgb(237,54,19)" fg:x="9374122114" fg:w="7021063"/><text x="91.3061%" y="207.50"></text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.05%)</title><rect x="91.0756%" y="181" width="0.0487%" height="15" fill="rgb(251,129,25)" fg:x="9376128132" fg:w="5015045"/><text x="91.3256%" y="191.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (47,141,423 samples, 0.46%)</title><rect x="90.7638%" y="325" width="0.4579%" height="15" fill="rgb(238,97,19)" fg:x="9344031844" fg:w="47141423"/><text x="91.0138%" y="335.50"></text></g><g><title>chlang::board::Position::valid (12,036,108 samples, 0.12%)</title><rect x="91.2217%" y="309" width="0.1169%" height="15" fill="rgb(240,169,18)" fg:x="9391173267" fg:w="12036108"/><text x="91.4717%" y="319.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.03%)</title><rect x="91.3387%" y="309" width="0.0292%" height="15" fill="rgb(230,187,49)" fg:x="9403209375" fg:w="3009027"/><text x="91.5887%" y="319.50"></text></g><g><title>__rust_alloc (3,009,027 samples, 0.03%)</title><rect x="91.3679%" y="181" width="0.0292%" height="15" fill="rgb(209,44,26)" fg:x="9406218402" fg:w="3009027"/><text x="91.6179%" y="191.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.08%)</title><rect x="91.3971%" y="181" width="0.0779%" height="15" fill="rgb(244,0,6)" fg:x="9409227429" fg:w="8024072"/><text x="91.6471%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,036,108 samples, 0.12%)</title><rect x="91.3679%" y="229" width="0.1169%" height="15" fill="rgb(248,18,21)" fg:x="9406218402" fg:w="12036108"/><text x="91.6179%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,036,108 samples, 0.12%)</title><rect x="91.3679%" y="213" width="0.1169%" height="15" fill="rgb(245,180,19)" fg:x="9406218402" fg:w="12036108"/><text x="91.6179%" y="223.50"></text></g><g><title>alloc::alloc::alloc (12,036,108 samples, 0.12%)</title><rect x="91.3679%" y="197" width="0.1169%" height="15" fill="rgb(252,118,36)" fg:x="9406218402" fg:w="12036108"/><text x="91.6179%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13,039,117 samples, 0.13%)</title><rect x="91.3679%" y="309" width="0.1267%" height="15" fill="rgb(210,224,19)" fg:x="9406218402" fg:w="13039117"/><text x="91.6179%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13,039,117 samples, 0.13%)</title><rect x="91.3679%" y="293" width="0.1267%" height="15" fill="rgb(218,30,24)" fg:x="9406218402" fg:w="13039117"/><text x="91.6179%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13,039,117 samples, 0.13%)</title><rect x="91.3679%" y="277" width="0.1267%" height="15" fill="rgb(219,75,50)" fg:x="9406218402" fg:w="13039117"/><text x="91.6179%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13,039,117 samples, 0.13%)</title><rect x="91.3679%" y="261" width="0.1267%" height="15" fill="rgb(234,72,50)" fg:x="9406218402" fg:w="13039117"/><text x="91.6179%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13,039,117 samples, 0.13%)</title><rect x="91.3679%" y="245" width="0.1267%" height="15" fill="rgb(219,100,48)" fg:x="9406218402" fg:w="13039117"/><text x="91.6179%" y="255.50"></text></g><g><title>core::ptr::write (5,015,045 samples, 0.05%)</title><rect x="91.4945%" y="293" width="0.0487%" height="15" fill="rgb(253,5,41)" fg:x="9419257519" fg:w="5015045"/><text x="91.7445%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28,084,252 samples, 0.27%)</title><rect x="91.4945%" y="309" width="0.2728%" height="15" fill="rgb(247,181,11)" fg:x="9419257519" fg:w="28084252"/><text x="91.7445%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (76,228,684 samples, 0.74%)</title><rect x="91.2217%" y="325" width="0.7405%" height="15" fill="rgb(222,223,25)" fg:x="9391173267" fg:w="76228684"/><text x="91.4717%" y="335.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="91.9817%" y="165" width="0.0195%" height="15" fill="rgb(214,198,28)" fg:x="9469407969" fg:w="2006018"/><text x="92.2317%" y="175.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="92.0109%" y="149" width="0.0195%" height="15" fill="rgb(230,46,43)" fg:x="9472416996" fg:w="2006018"/><text x="92.2609%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9,027,081 samples, 0.09%)</title><rect x="91.9719%" y="293" width="0.0877%" height="15" fill="rgb(233,65,53)" fg:x="9468404960" fg:w="9027081"/><text x="92.2219%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="91.9719%" y="277" width="0.0877%" height="15" fill="rgb(221,121,27)" fg:x="9468404960" fg:w="9027081"/><text x="92.2219%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="91.9719%" y="261" width="0.0877%" height="15" fill="rgb(247,70,47)" fg:x="9468404960" fg:w="9027081"/><text x="92.2219%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="91.9719%" y="245" width="0.0877%" height="15" fill="rgb(228,85,35)" fg:x="9468404960" fg:w="9027081"/><text x="92.2219%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,027,081 samples, 0.09%)</title><rect x="91.9719%" y="229" width="0.0877%" height="15" fill="rgb(209,50,18)" fg:x="9468404960" fg:w="9027081"/><text x="92.2219%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,024,072 samples, 0.08%)</title><rect x="91.9817%" y="213" width="0.0779%" height="15" fill="rgb(250,19,35)" fg:x="9469407969" fg:w="8024072"/><text x="92.2317%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,024,072 samples, 0.08%)</title><rect x="91.9817%" y="197" width="0.0779%" height="15" fill="rgb(253,107,29)" fg:x="9469407969" fg:w="8024072"/><text x="92.2317%" y="207.50"></text></g><g><title>alloc::alloc::alloc (8,024,072 samples, 0.08%)</title><rect x="91.9817%" y="181" width="0.0779%" height="15" fill="rgb(252,179,29)" fg:x="9469407969" fg:w="8024072"/><text x="92.2317%" y="191.50"></text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.05%)</title><rect x="92.0109%" y="165" width="0.0487%" height="15" fill="rgb(238,194,6)" fg:x="9472416996" fg:w="5015045"/><text x="92.2609%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="92.0596%" y="165" width="0.0390%" height="15" fill="rgb(238,164,29)" fg:x="9477432041" fg:w="4012036"/><text x="92.3096%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="92.0596%" y="149" width="0.0390%" height="15" fill="rgb(224,25,9)" fg:x="9477432041" fg:w="4012036"/><text x="92.3096%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="92.0596%" y="133" width="0.0390%" height="15" fill="rgb(244,153,23)" fg:x="9477432041" fg:w="4012036"/><text x="92.3096%" y="143.50"></text></g><g><title>core::ptr::write (4,012,036 samples, 0.04%)</title><rect x="92.0596%" y="117" width="0.0390%" height="15" fill="rgb(212,203,14)" fg:x="9477432041" fg:w="4012036"/><text x="92.3096%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6,018,054 samples, 0.06%)</title><rect x="92.0596%" y="229" width="0.0585%" height="15" fill="rgb(220,164,20)" fg:x="9477432041" fg:w="6018054"/><text x="92.3096%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,018,054 samples, 0.06%)</title><rect x="92.0596%" y="213" width="0.0585%" height="15" fill="rgb(222,203,48)" fg:x="9477432041" fg:w="6018054"/><text x="92.3096%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,018,054 samples, 0.06%)</title><rect x="92.0596%" y="197" width="0.0585%" height="15" fill="rgb(215,159,22)" fg:x="9477432041" fg:w="6018054"/><text x="92.3096%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,018,054 samples, 0.06%)</title><rect x="92.0596%" y="181" width="0.0585%" height="15" fill="rgb(216,183,47)" fg:x="9477432041" fg:w="6018054"/><text x="92.3096%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8,024,072 samples, 0.08%)</title><rect x="92.0596%" y="293" width="0.0779%" height="15" fill="rgb(229,195,25)" fg:x="9477432041" fg:w="8024072"/><text x="92.3096%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (8,024,072 samples, 0.08%)</title><rect x="92.0596%" y="277" width="0.0779%" height="15" fill="rgb(224,132,51)" fg:x="9477432041" fg:w="8024072"/><text x="92.3096%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8,024,072 samples, 0.08%)</title><rect x="92.0596%" y="261" width="0.0779%" height="15" fill="rgb(240,63,7)" fg:x="9477432041" fg:w="8024072"/><text x="92.3096%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (8,024,072 samples, 0.08%)</title><rect x="92.0596%" y="245" width="0.0779%" height="15" fill="rgb(249,182,41)" fg:x="9477432041" fg:w="8024072"/><text x="92.3096%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,006,018 samples, 0.02%)</title><rect x="92.1181%" y="229" width="0.0195%" height="15" fill="rgb(243,47,26)" fg:x="9483450095" fg:w="2006018"/><text x="92.3681%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,006,018 samples, 0.02%)</title><rect x="92.1181%" y="213" width="0.0195%" height="15" fill="rgb(233,48,2)" fg:x="9483450095" fg:w="2006018"/><text x="92.3681%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,006,018 samples, 0.02%)</title><rect x="92.1181%" y="197" width="0.0195%" height="15" fill="rgb(244,165,34)" fg:x="9483450095" fg:w="2006018"/><text x="92.3681%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (2,006,018 samples, 0.02%)</title><rect x="92.1181%" y="181" width="0.0195%" height="15" fill="rgb(207,89,7)" fg:x="9483450095" fg:w="2006018"/><text x="92.3681%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2,006,018 samples, 0.02%)</title><rect x="92.1181%" y="165" width="0.0195%" height="15" fill="rgb(244,117,36)" fg:x="9483450095" fg:w="2006018"/><text x="92.3681%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (21,063,189 samples, 0.20%)</title><rect x="91.9622%" y="325" width="0.2046%" height="15" fill="rgb(226,144,34)" fg:x="9467401951" fg:w="21063189"/><text x="92.2122%" y="335.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (21,063,189 samples, 0.20%)</title><rect x="91.9622%" y="309" width="0.2046%" height="15" fill="rgb(213,23,19)" fg:x="9467401951" fg:w="21063189"/><text x="92.2122%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (363,089,258 samples, 3.53%)</title><rect x="89.1563%" y="341" width="3.5269%" height="15" fill="rgb(217,75,12)" fg:x="9178535359" fg:w="363089258"/><text x="89.4063%" y="351.50">chl..</text></g><g><title>core::ptr::write (23,069,207 samples, 0.22%)</title><rect x="92.6832%" y="325" width="0.2241%" height="15" fill="rgb(224,159,17)" fg:x="9541624617" fg:w="23069207"/><text x="92.9332%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24,072,216 samples, 0.23%)</title><rect x="92.6832%" y="341" width="0.2338%" height="15" fill="rgb(217,118,1)" fg:x="9541624617" fg:w="24072216"/><text x="92.9332%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13,039,117 samples, 0.13%)</title><rect x="92.9170%" y="341" width="0.1267%" height="15" fill="rgb(232,180,48)" fg:x="9565696833" fg:w="13039117"/><text x="93.1670%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (13,039,117 samples, 0.13%)</title><rect x="92.9170%" y="325" width="0.1267%" height="15" fill="rgb(230,27,33)" fg:x="9565696833" fg:w="13039117"/><text x="93.1670%" y="335.50"></text></g><g><title>chlang::board::Board::make_move (1,807,422,218 samples, 17.56%)</title><rect x="76.2081%" y="357" width="17.5565%" height="15" fill="rgb(205,31,21)" fg:x="7845536398" fg:w="1807422218"/><text x="76.4581%" y="367.50">chlang::board::Board::make_..</text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,006,018 samples, 0.02%)</title><rect x="93.7646%" y="181" width="0.0195%" height="15" fill="rgb(253,59,4)" fg:x="9652958616" fg:w="2006018"/><text x="94.0146%" y="191.50"></text></g><g><title>__rdl_dealloc (3,009,027 samples, 0.03%)</title><rect x="93.7646%" y="197" width="0.0292%" height="15" fill="rgb(224,201,9)" fg:x="9652958616" fg:w="3009027"/><text x="94.0146%" y="207.50"></text></g><g><title>tcache_put (5,015,045 samples, 0.05%)</title><rect x="93.7938%" y="165" width="0.0487%" height="15" fill="rgb(229,206,30)" fg:x="9655967643" fg:w="5015045"/><text x="94.0438%" y="175.50"></text></g><g><title>_int_free (17,051,153 samples, 0.17%)</title><rect x="93.7938%" y="181" width="0.1656%" height="15" fill="rgb(212,67,47)" fg:x="9655967643" fg:w="17051153"/><text x="94.0438%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="341" width="0.2631%" height="15" fill="rgb(211,96,50)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="325" width="0.2631%" height="15" fill="rgb(252,114,18)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="309" width="0.2631%" height="15" fill="rgb(223,58,37)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="293" width="0.2631%" height="15" fill="rgb(237,70,4)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="277" width="0.2631%" height="15" fill="rgb(244,85,46)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="261" width="0.2631%" height="15" fill="rgb(223,39,52)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="245" width="0.2631%" height="15" fill="rgb(218,200,14)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="229" width="0.2631%" height="15" fill="rgb(208,171,16)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (27,081,243 samples, 0.26%)</title><rect x="93.7646%" y="213" width="0.2631%" height="15" fill="rgb(234,200,18)" fg:x="9652958616" fg:w="27081243"/><text x="94.0146%" y="223.50"></text></g><g><title>__GI___libc_free (24,072,216 samples, 0.23%)</title><rect x="93.7938%" y="197" width="0.2338%" height="15" fill="rgb(228,45,11)" fg:x="9655967643" fg:w="24072216"/><text x="94.0438%" y="207.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.02%)</title><rect x="94.0374%" y="245" width="0.0195%" height="15" fill="rgb(237,182,11)" fg:x="9681042868" fg:w="2006018"/><text x="94.2874%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Position&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="94.0277%" y="341" width="0.0390%" height="15" fill="rgb(241,175,49)" fg:x="9680039859" fg:w="4012036"/><text x="94.2777%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Position&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="94.0277%" y="325" width="0.0390%" height="15" fill="rgb(247,38,35)" fg:x="9680039859" fg:w="4012036"/><text x="94.2777%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="94.0277%" y="309" width="0.0390%" height="15" fill="rgb(228,39,49)" fg:x="9680039859" fg:w="4012036"/><text x="94.2777%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,012,036 samples, 0.04%)</title><rect x="94.0277%" y="293" width="0.0390%" height="15" fill="rgb(226,101,26)" fg:x="9680039859" fg:w="4012036"/><text x="94.2777%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,012,036 samples, 0.04%)</title><rect x="94.0277%" y="277" width="0.0390%" height="15" fill="rgb(206,141,19)" fg:x="9680039859" fg:w="4012036"/><text x="94.2777%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (4,012,036 samples, 0.04%)</title><rect x="94.0277%" y="261" width="0.0390%" height="15" fill="rgb(211,200,13)" fg:x="9680039859" fg:w="4012036"/><text x="94.2777%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (62,186,558 samples, 0.60%)</title><rect x="94.0666%" y="341" width="0.6041%" height="15" fill="rgb(241,121,6)" fg:x="9684051895" fg:w="62186558"/><text x="94.3166%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,012,036 samples, 0.04%)</title><rect x="94.6707%" y="341" width="0.0390%" height="15" fill="rgb(234,221,29)" fg:x="9746238453" fg:w="4012036"/><text x="94.9207%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,012,036 samples, 0.04%)</title><rect x="94.6707%" y="325" width="0.0390%" height="15" fill="rgb(229,136,5)" fg:x="9746238453" fg:w="4012036"/><text x="94.9207%" y="335.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.02%)</title><rect x="94.7194%" y="213" width="0.0195%" height="15" fill="rgb(238,36,11)" fg:x="9751253498" fg:w="2006018"/><text x="94.9694%" y="223.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,006,018 samples, 0.02%)</title><rect x="94.7194%" y="197" width="0.0195%" height="15" fill="rgb(251,55,41)" fg:x="9751253498" fg:w="2006018"/><text x="94.9694%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (5,015,045 samples, 0.05%)</title><rect x="94.7097%" y="325" width="0.0487%" height="15" fill="rgb(242,34,40)" fg:x="9750250489" fg:w="5015045"/><text x="94.9597%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="94.7097%" y="309" width="0.0487%" height="15" fill="rgb(215,42,17)" fg:x="9750250489" fg:w="5015045"/><text x="94.9597%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="94.7097%" y="293" width="0.0487%" height="15" fill="rgb(207,44,46)" fg:x="9750250489" fg:w="5015045"/><text x="94.9597%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="94.7097%" y="277" width="0.0487%" height="15" fill="rgb(211,206,28)" fg:x="9750250489" fg:w="5015045"/><text x="94.9597%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="94.7097%" y="261" width="0.0487%" height="15" fill="rgb(237,167,16)" fg:x="9750250489" fg:w="5015045"/><text x="94.9597%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="94.7097%" y="245" width="0.0487%" height="15" fill="rgb(233,66,6)" fg:x="9750250489" fg:w="5015045"/><text x="94.9597%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.05%)</title><rect x="94.7097%" y="229" width="0.0487%" height="15" fill="rgb(246,123,29)" fg:x="9750250489" fg:w="5015045"/><text x="94.9597%" y="239.50"></text></g><g><title>__GI___libc_free (2,006,018 samples, 0.02%)</title><rect x="94.7389%" y="213" width="0.0195%" height="15" fill="rgb(209,62,40)" fg:x="9753259516" fg:w="2006018"/><text x="94.9889%" y="223.50"></text></g><g><title>chlang::board::Board::piece_type (7,021,063 samples, 0.07%)</title><rect x="94.7584%" y="325" width="0.0682%" height="15" fill="rgb(218,4,25)" fg:x="9755265534" fg:w="7021063"/><text x="95.0084%" y="335.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.02%)</title><rect x="94.8266%" y="309" width="0.0195%" height="15" fill="rgb(253,91,49)" fg:x="9762286597" fg:w="2006018"/><text x="95.0766%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="309" width="0.0292%" height="15" fill="rgb(228,155,29)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="293" width="0.0292%" height="15" fill="rgb(243,57,37)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="277" width="0.0292%" height="15" fill="rgb(244,167,17)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="261" width="0.0292%" height="15" fill="rgb(207,181,38)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="245" width="0.0292%" height="15" fill="rgb(211,8,23)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="229" width="0.0292%" height="15" fill="rgb(235,11,44)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="213" width="0.0292%" height="15" fill="rgb(248,18,52)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="197" width="0.0292%" height="15" fill="rgb(208,4,7)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="207.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="94.8461%" y="181" width="0.0292%" height="15" fill="rgb(240,17,39)" fg:x="9764292615" fg:w="3009027"/><text x="95.0961%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,009,027 samples, 0.03%)</title><rect x="94.8753%" y="309" width="0.0292%" height="15" fill="rgb(207,170,3)" fg:x="9767301642" fg:w="3009027"/><text x="95.1253%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (11,033,099 samples, 0.11%)</title><rect x="94.8266%" y="325" width="0.1072%" height="15" fill="rgb(236,100,52)" fg:x="9762286597" fg:w="11033099"/><text x="95.0766%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (4,012,036 samples, 0.04%)</title><rect x="94.9435%" y="309" width="0.0390%" height="15" fill="rgb(246,78,51)" fg:x="9774322705" fg:w="4012036"/><text x="95.1935%" y="319.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.02%)</title><rect x="94.9825%" y="309" width="0.0195%" height="15" fill="rgb(211,17,15)" fg:x="9778334741" fg:w="2006018"/><text x="95.2325%" y="319.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="95.0019%" y="181" width="0.0195%" height="15" fill="rgb(209,59,46)" fg:x="9780340759" fg:w="2006018"/><text x="95.2519%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="309" width="0.0487%" height="15" fill="rgb(210,92,25)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="293" width="0.0487%" height="15" fill="rgb(238,174,52)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="277" width="0.0487%" height="15" fill="rgb(230,73,7)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="261" width="0.0487%" height="15" fill="rgb(243,124,40)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="245" width="0.0487%" height="15" fill="rgb(244,170,11)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="229" width="0.0487%" height="15" fill="rgb(207,114,54)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="213" width="0.0487%" height="15" fill="rgb(205,42,20)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="223.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.05%)</title><rect x="95.0019%" y="197" width="0.0487%" height="15" fill="rgb(230,30,28)" fg:x="9780340759" fg:w="5015045"/><text x="95.2519%" y="207.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="95.0214%" y="181" width="0.0292%" height="15" fill="rgb(205,73,54)" fg:x="9782346777" fg:w="3009027"/><text x="95.2714%" y="191.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="95.0507%" y="309" width="0.0292%" height="15" fill="rgb(254,227,23)" fg:x="9785355804" fg:w="3009027"/><text x="95.3007%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (20,060,180 samples, 0.19%)</title><rect x="94.9337%" y="325" width="0.1949%" height="15" fill="rgb(228,202,34)" fg:x="9773319696" fg:w="20060180"/><text x="95.1837%" y="335.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.02%)</title><rect x="95.1286%" y="309" width="0.0195%" height="15" fill="rgb(222,225,37)" fg:x="9793379876" fg:w="2006018"/><text x="95.3786%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (7,021,063 samples, 0.07%)</title><rect x="95.1286%" y="325" width="0.0682%" height="15" fill="rgb(221,14,54)" fg:x="9793379876" fg:w="7021063"/><text x="95.3786%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="293" width="0.0292%" height="15" fill="rgb(254,102,2)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="277" width="0.0292%" height="15" fill="rgb(232,104,17)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="261" width="0.0292%" height="15" fill="rgb(250,220,14)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="271.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="245" width="0.0292%" height="15" fill="rgb(241,158,9)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="229" width="0.0292%" height="15" fill="rgb(246,9,43)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="213" width="0.0292%" height="15" fill="rgb(206,73,33)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="197" width="0.0292%" height="15" fill="rgb(222,79,8)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="181" width="0.0292%" height="15" fill="rgb(234,8,54)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="165" width="0.0292%" height="15" fill="rgb(209,134,38)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="175.50"></text></g><g><title>__GI___libc_free (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="149" width="0.0292%" height="15" fill="rgb(230,127,29)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="159.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="95.1968%" y="133" width="0.0292%" height="15" fill="rgb(242,44,41)" fg:x="9800400939" fg:w="3009027"/><text x="95.4468%" y="143.50"></text></g><g><title>chlang::board::Board::attacked_by_color (8,024,072 samples, 0.08%)</title><rect x="95.1968%" y="309" width="0.0779%" height="15" fill="rgb(222,56,43)" fg:x="9800400939" fg:w="8024072"/><text x="95.4468%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.05%)</title><rect x="95.2747%" y="229" width="0.0487%" height="15" fill="rgb(238,39,47)" fg:x="9808425011" fg:w="5015045"/><text x="95.5247%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.05%)</title><rect x="95.2747%" y="213" width="0.0487%" height="15" fill="rgb(226,79,43)" fg:x="9808425011" fg:w="5015045"/><text x="95.5247%" y="223.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.05%)</title><rect x="95.2747%" y="197" width="0.0487%" height="15" fill="rgb(242,105,53)" fg:x="9808425011" fg:w="5015045"/><text x="95.5247%" y="207.50"></text></g><g><title>__GI___libc_malloc (4,012,036 samples, 0.04%)</title><rect x="95.2845%" y="181" width="0.0390%" height="15" fill="rgb(251,132,46)" fg:x="9809428020" fg:w="4012036"/><text x="95.5345%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6,018,054 samples, 0.06%)</title><rect x="95.2747%" y="309" width="0.0585%" height="15" fill="rgb(231,77,14)" fg:x="9808425011" fg:w="6018054"/><text x="95.5247%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="95.2747%" y="293" width="0.0585%" height="15" fill="rgb(240,135,9)" fg:x="9808425011" fg:w="6018054"/><text x="95.5247%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="95.2747%" y="277" width="0.0585%" height="15" fill="rgb(248,109,14)" fg:x="9808425011" fg:w="6018054"/><text x="95.5247%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="95.2747%" y="261" width="0.0585%" height="15" fill="rgb(227,146,52)" fg:x="9808425011" fg:w="6018054"/><text x="95.5247%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,018,054 samples, 0.06%)</title><rect x="95.2747%" y="245" width="0.0585%" height="15" fill="rgb(232,54,3)" fg:x="9808425011" fg:w="6018054"/><text x="95.5247%" y="255.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (18,054,162 samples, 0.18%)</title><rect x="95.1968%" y="325" width="0.1754%" height="15" fill="rgb(229,201,43)" fg:x="9800400939" fg:w="18054162"/><text x="95.4468%" y="335.50"></text></g><g><title>chlang::board::Position::valid (5,015,045 samples, 0.05%)</title><rect x="95.3722%" y="309" width="0.0487%" height="15" fill="rgb(252,161,33)" fg:x="9818455101" fg:w="5015045"/><text x="95.6222%" y="319.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="95.4209%" y="165" width="0.0195%" height="15" fill="rgb(226,146,40)" fg:x="9823470146" fg:w="2006018"/><text x="95.6709%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.05%)</title><rect x="95.4209%" y="229" width="0.0487%" height="15" fill="rgb(219,47,25)" fg:x="9823470146" fg:w="5015045"/><text x="95.6709%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.05%)</title><rect x="95.4209%" y="213" width="0.0487%" height="15" fill="rgb(250,135,13)" fg:x="9823470146" fg:w="5015045"/><text x="95.6709%" y="223.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.05%)</title><rect x="95.4209%" y="197" width="0.0487%" height="15" fill="rgb(219,229,18)" fg:x="9823470146" fg:w="5015045"/><text x="95.6709%" y="207.50"></text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.05%)</title><rect x="95.4209%" y="181" width="0.0487%" height="15" fill="rgb(217,152,27)" fg:x="9823470146" fg:w="5015045"/><text x="95.6709%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6,018,054 samples, 0.06%)</title><rect x="95.4209%" y="309" width="0.0585%" height="15" fill="rgb(225,71,47)" fg:x="9823470146" fg:w="6018054"/><text x="95.6709%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="95.4209%" y="293" width="0.0585%" height="15" fill="rgb(220,139,14)" fg:x="9823470146" fg:w="6018054"/><text x="95.6709%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="95.4209%" y="277" width="0.0585%" height="15" fill="rgb(247,54,32)" fg:x="9823470146" fg:w="6018054"/><text x="95.6709%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="95.4209%" y="261" width="0.0585%" height="15" fill="rgb(252,131,39)" fg:x="9823470146" fg:w="6018054"/><text x="95.6709%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,018,054 samples, 0.06%)</title><rect x="95.4209%" y="245" width="0.0585%" height="15" fill="rgb(210,108,39)" fg:x="9823470146" fg:w="6018054"/><text x="95.6709%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="95.4793%" y="309" width="0.0195%" height="15" fill="rgb(205,23,29)" fg:x="9829488200" fg:w="2006018"/><text x="95.7293%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (19,057,171 samples, 0.19%)</title><rect x="95.3722%" y="325" width="0.1851%" height="15" fill="rgb(246,139,46)" fg:x="9818455101" fg:w="19057171"/><text x="95.6222%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (2,006,018 samples, 0.02%)</title><rect x="95.5573%" y="325" width="0.0195%" height="15" fill="rgb(250,81,26)" fg:x="9837512272" fg:w="2006018"/><text x="95.8073%" y="335.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (2,006,018 samples, 0.02%)</title><rect x="95.5573%" y="309" width="0.0195%" height="15" fill="rgb(214,104,7)" fg:x="9837512272" fg:w="2006018"/><text x="95.8073%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (105,315,945 samples, 1.02%)</title><rect x="94.7097%" y="341" width="1.0230%" height="15" fill="rgb(233,189,8)" fg:x="9750250489" fg:w="105315945"/><text x="94.9597%" y="351.50"></text></g><g><title>unlink_chunk (2,006,018 samples, 0.02%)</title><rect x="95.7327%" y="181" width="0.0195%" height="15" fill="rgb(228,141,17)" fg:x="9855566434" fg:w="2006018"/><text x="95.9827%" y="191.50"></text></g><g><title>_int_malloc (7,021,063 samples, 0.07%)</title><rect x="95.7327%" y="197" width="0.0682%" height="15" fill="rgb(247,157,1)" fg:x="9855566434" fg:w="7021063"/><text x="95.9827%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,027,081 samples, 0.09%)</title><rect x="95.7327%" y="261" width="0.0877%" height="15" fill="rgb(249,225,5)" fg:x="9855566434" fg:w="9027081"/><text x="95.9827%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,027,081 samples, 0.09%)</title><rect x="95.7327%" y="245" width="0.0877%" height="15" fill="rgb(242,55,13)" fg:x="9855566434" fg:w="9027081"/><text x="95.9827%" y="255.50"></text></g><g><title>alloc::alloc::alloc (9,027,081 samples, 0.09%)</title><rect x="95.7327%" y="229" width="0.0877%" height="15" fill="rgb(230,49,50)" fg:x="9855566434" fg:w="9027081"/><text x="95.9827%" y="239.50"></text></g><g><title>__GI___libc_malloc (9,027,081 samples, 0.09%)</title><rect x="95.7327%" y="213" width="0.0877%" height="15" fill="rgb(241,111,38)" fg:x="9855566434" fg:w="9027081"/><text x="95.9827%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11,033,099 samples, 0.11%)</title><rect x="95.7327%" y="341" width="0.1072%" height="15" fill="rgb(252,155,4)" fg:x="9855566434" fg:w="11033099"/><text x="95.9827%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11,033,099 samples, 0.11%)</title><rect x="95.7327%" y="325" width="0.1072%" height="15" fill="rgb(212,69,32)" fg:x="9855566434" fg:w="11033099"/><text x="95.9827%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11,033,099 samples, 0.11%)</title><rect x="95.7327%" y="309" width="0.1072%" height="15" fill="rgb(243,107,47)" fg:x="9855566434" fg:w="11033099"/><text x="95.9827%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (11,033,099 samples, 0.11%)</title><rect x="95.7327%" y="293" width="0.1072%" height="15" fill="rgb(247,130,12)" fg:x="9855566434" fg:w="11033099"/><text x="95.9827%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (11,033,099 samples, 0.11%)</title><rect x="95.7327%" y="277" width="0.1072%" height="15" fill="rgb(233,74,16)" fg:x="9855566434" fg:w="11033099"/><text x="95.9827%" y="287.50"></text></g><g><title>core::ptr::write (3,009,027 samples, 0.03%)</title><rect x="95.8398%" y="325" width="0.0292%" height="15" fill="rgb(208,58,18)" fg:x="9866599533" fg:w="3009027"/><text x="96.0898%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3,009,027 samples, 0.03%)</title><rect x="95.8691%" y="325" width="0.0292%" height="15" fill="rgb(242,225,1)" fg:x="9869608560" fg:w="3009027"/><text x="96.1191%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18,054,162 samples, 0.18%)</title><rect x="95.8398%" y="341" width="0.1754%" height="15" fill="rgb(249,39,40)" fg:x="9866599533" fg:w="18054162"/><text x="96.0898%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4,012,036 samples, 0.04%)</title><rect x="96.0152%" y="341" width="0.0390%" height="15" fill="rgb(207,72,44)" fg:x="9884653695" fg:w="4012036"/><text x="96.2652%" y="351.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (4,012,036 samples, 0.04%)</title><rect x="96.0152%" y="325" width="0.0390%" height="15" fill="rgb(215,193,12)" fg:x="9884653695" fg:w="4012036"/><text x="96.2652%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (249,749,241 samples, 2.43%)</title><rect x="93.7646%" y="357" width="2.4260%" height="15" fill="rgb(248,41,39)" fg:x="9652958616" fg:w="249749241"/><text x="94.0146%" y="367.50">ch..</text></g><g><title>_int_malloc (13,039,117 samples, 0.13%)</title><rect x="96.1906%" y="213" width="0.1267%" height="15" fill="rgb(253,85,4)" fg:x="9902707857" fg:w="13039117"/><text x="96.4406%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="357" width="0.1461%" height="15" fill="rgb(243,70,31)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="341" width="0.1461%" height="15" fill="rgb(253,195,26)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="325" width="0.1461%" height="15" fill="rgb(243,42,11)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="309" width="0.1461%" height="15" fill="rgb(239,66,17)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="293" width="0.1461%" height="15" fill="rgb(217,132,21)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="277" width="0.1461%" height="15" fill="rgb(252,202,21)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="261" width="0.1461%" height="15" fill="rgb(233,98,36)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="271.50"></text></g><g><title>alloc::alloc::alloc (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="245" width="0.1461%" height="15" fill="rgb(216,153,54)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="255.50"></text></g><g><title>__GI___libc_malloc (15,045,135 samples, 0.15%)</title><rect x="96.1906%" y="229" width="0.1461%" height="15" fill="rgb(250,99,7)" fg:x="9902707857" fg:w="15045135"/><text x="96.4406%" y="239.50"></text></g><g><title>chlang::board::Board::get_game_state (2,167,502,449 samples, 21.05%)</title><rect x="75.3313%" y="389" width="21.0542%" height="15" fill="rgb(207,56,50)" fg:x="7755265588" fg:w="2167502449"/><text x="75.5813%" y="399.50">chlang::board::Board::get_game_st..</text></g><g><title>chlang::board::Board::get_valid_moves (2,129,388,107 samples, 20.68%)</title><rect x="75.7015%" y="373" width="20.6839%" height="15" fill="rgb(244,61,34)" fg:x="7793379930" fg:w="2129388107"/><text x="75.9515%" y="383.50">chlang::board::Board::get_valid_m..</text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (2,006,018 samples, 0.02%)</title><rect x="96.3854%" y="373" width="0.0195%" height="15" fill="rgb(241,50,38)" fg:x="9922768037" fg:w="2006018"/><text x="96.6354%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,006,018 samples, 0.02%)</title><rect x="96.4049%" y="341" width="0.0195%" height="15" fill="rgb(212,166,30)" fg:x="9924774055" fg:w="2006018"/><text x="96.6549%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5,015,045 samples, 0.05%)</title><rect x="96.4049%" y="373" width="0.0487%" height="15" fill="rgb(249,127,32)" fg:x="9924774055" fg:w="5015045"/><text x="96.6549%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5,015,045 samples, 0.05%)</title><rect x="96.4049%" y="357" width="0.0487%" height="15" fill="rgb(209,103,0)" fg:x="9924774055" fg:w="5015045"/><text x="96.6549%" y="367.50"></text></g><g><title>&lt;chlang::evaluators::positional_evaluator::PositionalEvaluator as chlang::tree_evaluator::Eval&gt;::evaluate (20,060,180 samples, 0.19%)</title><rect x="96.3854%" y="389" width="0.1949%" height="15" fill="rgb(238,209,51)" fg:x="9922768037" fg:w="20060180"/><text x="96.6354%" y="399.50"></text></g><g><title>chlang::tree_evaluator::eval (9,926,780,073 samples, 96.42%)</title><rect x="0.2046%" y="405" width="96.4244%" height="15" fill="rgb(237,56,23)" fg:x="21063189" fg:w="9926780073"/><text x="0.4546%" y="415.50">chlang::tree_evaluator::eval</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4,012,036 samples, 0.04%)</title><rect x="96.6387%" y="389" width="0.0390%" height="15" fill="rgb(215,153,46)" fg:x="9948846271" fg:w="4012036"/><text x="96.8887%" y="399.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4,012,036 samples, 0.04%)</title><rect x="96.6387%" y="373" width="0.0390%" height="15" fill="rgb(224,49,31)" fg:x="9948846271" fg:w="4012036"/><text x="96.8887%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4,012,036 samples, 0.04%)</title><rect x="96.6387%" y="357" width="0.0390%" height="15" fill="rgb(250,18,42)" fg:x="9948846271" fg:w="4012036"/><text x="96.8887%" y="367.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="96.6387%" y="341" width="0.0390%" height="15" fill="rgb(215,176,39)" fg:x="9948846271" fg:w="4012036"/><text x="96.8887%" y="351.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="96.6387%" y="325" width="0.0390%" height="15" fill="rgb(223,77,29)" fg:x="9948846271" fg:w="4012036"/><text x="96.8887%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="96.6777%" y="341" width="0.0195%" height="15" fill="rgb(234,94,52)" fg:x="9952858307" fg:w="2006018"/><text x="96.9277%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="96.6777%" y="325" width="0.0195%" height="15" fill="rgb(220,154,50)" fg:x="9952858307" fg:w="2006018"/><text x="96.9277%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.02%)</title><rect x="96.6777%" y="309" width="0.0195%" height="15" fill="rgb(212,11,10)" fg:x="9952858307" fg:w="2006018"/><text x="96.9277%" y="319.50"></text></g><g><title>__GI___libc_free (2,006,018 samples, 0.02%)</title><rect x="96.6777%" y="293" width="0.0195%" height="15" fill="rgb(205,166,19)" fg:x="9952858307" fg:w="2006018"/><text x="96.9277%" y="303.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="96.6777%" y="277" width="0.0195%" height="15" fill="rgb(244,198,16)" fg:x="9952858307" fg:w="2006018"/><text x="96.9277%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="96.6777%" y="389" width="0.0292%" height="15" fill="rgb(219,69,12)" fg:x="9952858307" fg:w="3009027"/><text x="96.9277%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="96.6777%" y="373" width="0.0292%" height="15" fill="rgb(245,30,7)" fg:x="9952858307" fg:w="3009027"/><text x="96.9277%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="96.6777%" y="357" width="0.0292%" height="15" fill="rgb(218,221,48)" fg:x="9952858307" fg:w="3009027"/><text x="96.9277%" y="367.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="96.7069%" y="389" width="0.0292%" height="15" fill="rgb(216,66,15)" fg:x="9955867334" fg:w="3009027"/><text x="96.9569%" y="399.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.02%)</title><rect x="96.7459%" y="213" width="0.0195%" height="15" fill="rgb(226,122,50)" fg:x="9959879370" fg:w="2006018"/><text x="96.9959%" y="223.50"></text></g><g><title>_int_free (6,018,054 samples, 0.06%)</title><rect x="96.7654%" y="197" width="0.0585%" height="15" fill="rgb(239,156,16)" fg:x="9961885388" fg:w="6018054"/><text x="97.0154%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="357" width="0.0877%" height="15" fill="rgb(224,27,38)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="341" width="0.0877%" height="15" fill="rgb(224,39,27)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="325" width="0.0877%" height="15" fill="rgb(215,92,29)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="309" width="0.0877%" height="15" fill="rgb(207,159,16)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="293" width="0.0877%" height="15" fill="rgb(238,163,47)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="277" width="0.0877%" height="15" fill="rgb(219,91,49)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="261" width="0.0877%" height="15" fill="rgb(227,167,31)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="245" width="0.0877%" height="15" fill="rgb(234,80,54)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (9,027,081 samples, 0.09%)</title><rect x="96.7459%" y="229" width="0.0877%" height="15" fill="rgb(212,114,2)" fg:x="9959879370" fg:w="9027081"/><text x="96.9959%" y="239.50"></text></g><g><title>__GI___libc_free (7,021,063 samples, 0.07%)</title><rect x="96.7654%" y="213" width="0.0682%" height="15" fill="rgb(234,50,24)" fg:x="9961885388" fg:w="7021063"/><text x="97.0154%" y="223.50"></text></g><g><title>chlang::board::Board::piece_type (5,015,045 samples, 0.05%)</title><rect x="96.8433%" y="357" width="0.0487%" height="15" fill="rgb(221,68,8)" fg:x="9969909460" fg:w="5015045"/><text x="97.0933%" y="367.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.02%)</title><rect x="96.8920%" y="341" width="0.0195%" height="15" fill="rgb(254,180,31)" fg:x="9974924505" fg:w="2006018"/><text x="97.1420%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (8,024,072 samples, 0.08%)</title><rect x="96.8920%" y="357" width="0.0779%" height="15" fill="rgb(247,130,50)" fg:x="9974924505" fg:w="8024072"/><text x="97.1420%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="96.9700%" y="261" width="0.0195%" height="15" fill="rgb(211,109,4)" fg:x="9982948577" fg:w="2006018"/><text x="97.2200%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="96.9700%" y="245" width="0.0195%" height="15" fill="rgb(238,50,21)" fg:x="9982948577" fg:w="2006018"/><text x="97.2200%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="96.9700%" y="229" width="0.0195%" height="15" fill="rgb(225,57,45)" fg:x="9982948577" fg:w="2006018"/><text x="97.2200%" y="239.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="96.9700%" y="213" width="0.0195%" height="15" fill="rgb(209,196,50)" fg:x="9982948577" fg:w="2006018"/><text x="97.2200%" y="223.50"></text></g><g><title>checked_request2size (2,006,018 samples, 0.02%)</title><rect x="96.9700%" y="197" width="0.0195%" height="15" fill="rgb(242,140,13)" fg:x="9982948577" fg:w="2006018"/><text x="97.2200%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="96.9700%" y="357" width="0.0292%" height="15" fill="rgb(217,111,7)" fg:x="9982948577" fg:w="3009027"/><text x="97.2200%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="96.9700%" y="341" width="0.0292%" height="15" fill="rgb(253,193,51)" fg:x="9982948577" fg:w="3009027"/><text x="97.2200%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="96.9700%" y="325" width="0.0292%" height="15" fill="rgb(252,70,29)" fg:x="9982948577" fg:w="3009027"/><text x="97.2200%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="96.9700%" y="309" width="0.0292%" height="15" fill="rgb(232,127,12)" fg:x="9982948577" fg:w="3009027"/><text x="97.2200%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="96.9700%" y="293" width="0.0292%" height="15" fill="rgb(211,180,21)" fg:x="9982948577" fg:w="3009027"/><text x="97.2200%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="96.9700%" y="277" width="0.0292%" height="15" fill="rgb(229,72,13)" fg:x="9982948577" fg:w="3009027"/><text x="97.2200%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="341" width="0.0292%" height="15" fill="rgb(240,211,49)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="325" width="0.0292%" height="15" fill="rgb(219,149,40)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="309" width="0.0292%" height="15" fill="rgb(210,127,46)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="293" width="0.0292%" height="15" fill="rgb(220,106,7)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="277" width="0.0292%" height="15" fill="rgb(249,31,22)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="261" width="0.0292%" height="15" fill="rgb(253,1,49)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="245" width="0.0292%" height="15" fill="rgb(227,144,33)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="96.9992%" y="229" width="0.0292%" height="15" fill="rgb(249,163,44)" fg:x="9985957604" fg:w="3009027"/><text x="97.2492%" y="239.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="97.0090%" y="213" width="0.0195%" height="15" fill="rgb(234,15,39)" fg:x="9986960613" fg:w="2006018"/><text x="97.2590%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="96.9992%" y="357" width="0.0487%" height="15" fill="rgb(207,66,16)" fg:x="9985957604" fg:w="5015045"/><text x="97.2492%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="97.0772%" y="341" width="0.0195%" height="15" fill="rgb(233,112,24)" fg:x="9993981676" fg:w="2006018"/><text x="97.3272%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (7,021,063 samples, 0.07%)</title><rect x="97.0479%" y="357" width="0.0682%" height="15" fill="rgb(230,90,22)" fg:x="9990972649" fg:w="7021063"/><text x="97.2979%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="97.1259%" y="341" width="0.0195%" height="15" fill="rgb(229,61,13)" fg:x="9998996721" fg:w="2006018"/><text x="97.3759%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="97.1259%" y="325" width="0.0195%" height="15" fill="rgb(225,57,24)" fg:x="9998996721" fg:w="2006018"/><text x="97.3759%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="97.1259%" y="309" width="0.0195%" height="15" fill="rgb(208,169,48)" fg:x="9998996721" fg:w="2006018"/><text x="97.3759%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="97.1259%" y="293" width="0.0195%" height="15" fill="rgb(244,218,51)" fg:x="9998996721" fg:w="2006018"/><text x="97.3759%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="97.1259%" y="277" width="0.0195%" height="15" fill="rgb(214,148,10)" fg:x="9998996721" fg:w="2006018"/><text x="97.3759%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="97.1454%" y="341" width="0.0195%" height="15" fill="rgb(225,174,27)" fg:x="10001002739" fg:w="2006018"/><text x="97.3954%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (9,027,081 samples, 0.09%)</title><rect x="97.1161%" y="357" width="0.0877%" height="15" fill="rgb(230,96,26)" fg:x="9997993712" fg:w="9027081"/><text x="97.3661%" y="367.50"></text></g><g><title>chlang::board::Board::is_valid (50,150,450 samples, 0.49%)</title><rect x="96.7459%" y="389" width="0.4871%" height="15" fill="rgb(232,10,30)" fg:x="9959879370" fg:w="50150450"/><text x="96.9959%" y="399.50"></text></g><g><title>chlang::board::Board::attacked_by_color (50,150,450 samples, 0.49%)</title><rect x="96.7459%" y="373" width="0.4871%" height="15" fill="rgb(222,8,50)" fg:x="9959879370" fg:w="50150450"/><text x="96.9959%" y="383.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.03%)</title><rect x="97.2330%" y="373" width="0.0292%" height="15" fill="rgb(213,81,27)" fg:x="10010029820" fg:w="3009027"/><text x="97.4830%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (2,006,018 samples, 0.02%)</title><rect x="97.2720%" y="373" width="0.0195%" height="15" fill="rgb(245,50,10)" fg:x="10014041856" fg:w="2006018"/><text x="97.5220%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (4,012,036 samples, 0.04%)</title><rect x="97.2915%" y="373" width="0.0390%" height="15" fill="rgb(216,100,18)" fg:x="10016047874" fg:w="4012036"/><text x="97.5415%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (11,033,099 samples, 0.11%)</title><rect x="97.2330%" y="389" width="0.1072%" height="15" fill="rgb(236,147,54)" fg:x="10010029820" fg:w="11033099"/><text x="97.4830%" y="399.50"></text></g><g><title>chlang::board::Board::make_move (81,243,729 samples, 0.79%)</title><rect x="96.6387%" y="405" width="0.7892%" height="15" fill="rgb(205,143,26)" fg:x="9948846271" fg:w="81243729"/><text x="96.8887%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="389" width="0.0195%" height="15" fill="rgb(236,26,9)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="373" width="0.0195%" height="15" fill="rgb(221,165,53)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="357" width="0.0195%" height="15" fill="rgb(214,110,17)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="341" width="0.0195%" height="15" fill="rgb(237,197,12)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="325" width="0.0195%" height="15" fill="rgb(205,84,17)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="309" width="0.0195%" height="15" fill="rgb(237,18,45)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="293" width="0.0195%" height="15" fill="rgb(221,87,14)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="277" width="0.0195%" height="15" fill="rgb(238,186,15)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="261" width="0.0195%" height="15" fill="rgb(208,115,11)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="271.50"></text></g><g><title>__GI___libc_free (2,006,018 samples, 0.02%)</title><rect x="97.4376%" y="245" width="0.0195%" height="15" fill="rgb(254,175,0)" fg:x="10031093009" fg:w="2006018"/><text x="97.6876%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (7,021,063 samples, 0.07%)</title><rect x="97.4571%" y="389" width="0.0682%" height="15" fill="rgb(227,24,42)" fg:x="10033099027" fg:w="7021063"/><text x="97.7071%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="97.5253%" y="373" width="0.0292%" height="15" fill="rgb(223,211,37)" fg:x="10040120090" fg:w="3009027"/><text x="97.7753%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="97.5253%" y="389" width="0.0487%" height="15" fill="rgb(235,49,27)" fg:x="10040120090" fg:w="5015045"/><text x="97.7753%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (16,048,144 samples, 0.16%)</title><rect x="97.4376%" y="405" width="0.1559%" height="15" fill="rgb(254,97,51)" fg:x="10031093009" fg:w="16048144"/><text x="97.6876%" y="415.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (2,006,018 samples, 0.02%)</title><rect x="97.5935%" y="389" width="0.0195%" height="15" fill="rgb(249,51,40)" fg:x="10047141153" fg:w="2006018"/><text x="97.8435%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="373" width="0.0195%" height="15" fill="rgb(210,128,45)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="357" width="0.0195%" height="15" fill="rgb(224,137,50)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="341" width="0.0195%" height="15" fill="rgb(242,15,9)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="325" width="0.0195%" height="15" fill="rgb(233,187,41)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="309" width="0.0195%" height="15" fill="rgb(227,2,29)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="293" width="0.0195%" height="15" fill="rgb(222,70,3)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="277" width="0.0195%" height="15" fill="rgb(213,11,42)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="261" width="0.0195%" height="15" fill="rgb(225,150,9)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="245" width="0.0195%" height="15" fill="rgb(230,162,45)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="255.50"></text></g><g><title>__GI___libc_free (2,006,018 samples, 0.02%)</title><rect x="97.6130%" y="229" width="0.0195%" height="15" fill="rgb(222,14,52)" fg:x="10049147171" fg:w="2006018"/><text x="97.8630%" y="239.50"></text></g><g><title>chlang::board::Board::unmake_last (2,006,018 samples, 0.02%)</title><rect x="97.6325%" y="373" width="0.0195%" height="15" fill="rgb(254,198,14)" fg:x="10051153189" fg:w="2006018"/><text x="97.8825%" y="383.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="97.6715%" y="245" width="0.0292%" height="15" fill="rgb(220,217,30)" fg:x="10055165225" fg:w="3009027"/><text x="97.9215%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="97.6617%" y="357" width="0.0487%" height="15" fill="rgb(215,146,41)" fg:x="10054162216" fg:w="5015045"/><text x="97.9117%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="97.6617%" y="341" width="0.0487%" height="15" fill="rgb(217,27,36)" fg:x="10054162216" fg:w="5015045"/><text x="97.9117%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="97.6617%" y="325" width="0.0487%" height="15" fill="rgb(219,218,39)" fg:x="10054162216" fg:w="5015045"/><text x="97.9117%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="97.6617%" y="309" width="0.0487%" height="15" fill="rgb(219,4,42)" fg:x="10054162216" fg:w="5015045"/><text x="97.9117%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="97.6617%" y="293" width="0.0487%" height="15" fill="rgb(249,119,36)" fg:x="10054162216" fg:w="5015045"/><text x="97.9117%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.05%)</title><rect x="97.6617%" y="277" width="0.0487%" height="15" fill="rgb(209,23,33)" fg:x="10054162216" fg:w="5015045"/><text x="97.9117%" y="287.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.04%)</title><rect x="97.6715%" y="261" width="0.0390%" height="15" fill="rgb(211,10,0)" fg:x="10055165225" fg:w="4012036"/><text x="97.9215%" y="271.50"></text></g><g><title>chlang::board::Board::piece_type (4,012,036 samples, 0.04%)</title><rect x="97.7202%" y="357" width="0.0390%" height="15" fill="rgb(208,99,37)" fg:x="10060180270" fg:w="4012036"/><text x="97.9702%" y="367.50"></text></g><g><title>chlang::board::Board::key (2,006,018 samples, 0.02%)</title><rect x="97.7592%" y="357" width="0.0195%" height="15" fill="rgb(213,132,31)" fg:x="10064192306" fg:w="2006018"/><text x="98.0092%" y="367.50"></text></g><g><title>__rust_dealloc (6,018,054 samples, 0.06%)</title><rect x="97.7884%" y="181" width="0.0585%" height="15" fill="rgb(243,129,40)" fg:x="10067201333" fg:w="6018054"/><text x="98.0384%" y="191.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6,018,054 samples, 0.06%)</title><rect x="97.8468%" y="165" width="0.0585%" height="15" fill="rgb(210,66,33)" fg:x="10073219387" fg:w="6018054"/><text x="98.0968%" y="175.50"></text></g><g><title>__rdl_dealloc (7,021,063 samples, 0.07%)</title><rect x="97.8468%" y="181" width="0.0682%" height="15" fill="rgb(209,189,4)" fg:x="10073219387" fg:w="7021063"/><text x="98.0968%" y="191.50"></text></g><g><title>_int_free (12,036,108 samples, 0.12%)</title><rect x="97.9150%" y="165" width="0.1169%" height="15" fill="rgb(214,107,37)" fg:x="10080240450" fg:w="12036108"/><text x="98.1650%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (30,090,270 samples, 0.29%)</title><rect x="97.7786%" y="325" width="0.2923%" height="15" fill="rgb(245,88,54)" fg:x="10066198324" fg:w="30090270"/><text x="98.0286%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.29%)</title><rect x="97.7786%" y="309" width="0.2923%" height="15" fill="rgb(205,146,20)" fg:x="10066198324" fg:w="30090270"/><text x="98.0286%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (30,090,270 samples, 0.29%)</title><rect x="97.7786%" y="293" width="0.2923%" height="15" fill="rgb(220,161,25)" fg:x="10066198324" fg:w="30090270"/><text x="98.0286%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.29%)</title><rect x="97.7786%" y="277" width="0.2923%" height="15" fill="rgb(215,152,15)" fg:x="10066198324" fg:w="30090270"/><text x="98.0286%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (30,090,270 samples, 0.29%)</title><rect x="97.7786%" y="261" width="0.2923%" height="15" fill="rgb(233,192,44)" fg:x="10066198324" fg:w="30090270"/><text x="98.0286%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.29%)</title><rect x="97.7786%" y="245" width="0.2923%" height="15" fill="rgb(240,170,46)" fg:x="10066198324" fg:w="30090270"/><text x="98.0286%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (30,090,270 samples, 0.29%)</title><rect x="97.7786%" y="229" width="0.2923%" height="15" fill="rgb(207,104,33)" fg:x="10066198324" fg:w="30090270"/><text x="98.0286%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29,087,261 samples, 0.28%)</title><rect x="97.7884%" y="213" width="0.2825%" height="15" fill="rgb(219,21,39)" fg:x="10067201333" fg:w="29087261"/><text x="98.0384%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (29,087,261 samples, 0.28%)</title><rect x="97.7884%" y="197" width="0.2825%" height="15" fill="rgb(214,133,29)" fg:x="10067201333" fg:w="29087261"/><text x="98.0384%" y="207.50"></text></g><g><title>__GI___libc_free (16,048,144 samples, 0.16%)</title><rect x="97.9150%" y="181" width="0.1559%" height="15" fill="rgb(226,93,6)" fg:x="10080240450" fg:w="16048144"/><text x="98.1650%" y="191.50"></text></g><g><title>chlang::cmove::Move::to (3,009,027 samples, 0.03%)</title><rect x="98.0709%" y="325" width="0.0292%" height="15" fill="rgb(252,222,34)" fg:x="10096288594" fg:w="3009027"/><text x="98.3209%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (4,012,036 samples, 0.04%)</title><rect x="98.1002%" y="325" width="0.0390%" height="15" fill="rgb(252,92,48)" fg:x="10099297621" fg:w="4012036"/><text x="98.3502%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="309" width="0.0195%" height="15" fill="rgb(245,223,24)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="293" width="0.0195%" height="15" fill="rgb(205,176,3)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="277" width="0.0195%" height="15" fill="rgb(235,151,15)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="261" width="0.0195%" height="15" fill="rgb(237,209,11)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="245" width="0.0195%" height="15" fill="rgb(243,227,24)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="229" width="0.0195%" height="15" fill="rgb(239,193,16)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="213" width="0.0195%" height="15" fill="rgb(231,27,9)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="98.1489%" y="197" width="0.0195%" height="15" fill="rgb(219,169,10)" fg:x="10104312666" fg:w="2006018"/><text x="98.3989%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="98.1684%" y="309" width="0.0195%" height="15" fill="rgb(244,229,43)" fg:x="10106318684" fg:w="2006018"/><text x="98.4184%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (8,024,072 samples, 0.08%)</title><rect x="98.1391%" y="325" width="0.0779%" height="15" fill="rgb(254,38,20)" fg:x="10103309657" fg:w="8024072"/><text x="98.3891%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="309" width="0.0195%" height="15" fill="rgb(250,47,30)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="293" width="0.0195%" height="15" fill="rgb(224,124,36)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="277" width="0.0195%" height="15" fill="rgb(246,68,51)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="261" width="0.0195%" height="15" fill="rgb(253,43,49)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="245" width="0.0195%" height="15" fill="rgb(219,54,36)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="229" width="0.0195%" height="15" fill="rgb(227,133,34)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="213" width="0.0195%" height="15" fill="rgb(247,227,15)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="98.2171%" y="197" width="0.0195%" height="15" fill="rgb(229,96,14)" fg:x="10111333729" fg:w="2006018"/><text x="98.4671%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="98.2171%" y="325" width="0.0292%" height="15" fill="rgb(220,79,17)" fg:x="10111333729" fg:w="3009027"/><text x="98.4671%" y="335.50"></text></g><g><title>tcache_get (4,012,036 samples, 0.04%)</title><rect x="98.2658%" y="165" width="0.0390%" height="15" fill="rgb(205,131,53)" fg:x="10116348774" fg:w="4012036"/><text x="98.5158%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="309" width="0.0682%" height="15" fill="rgb(209,50,29)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="293" width="0.0682%" height="15" fill="rgb(245,86,46)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="277" width="0.0682%" height="15" fill="rgb(235,66,46)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="261" width="0.0682%" height="15" fill="rgb(232,148,31)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="245" width="0.0682%" height="15" fill="rgb(217,149,8)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="229" width="0.0682%" height="15" fill="rgb(209,183,11)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="213" width="0.0682%" height="15" fill="rgb(208,55,20)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="223.50"></text></g><g><title>alloc::alloc::alloc (7,021,063 samples, 0.07%)</title><rect x="98.2560%" y="197" width="0.0682%" height="15" fill="rgb(218,39,14)" fg:x="10115345765" fg:w="7021063"/><text x="98.5060%" y="207.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.06%)</title><rect x="98.2658%" y="181" width="0.0585%" height="15" fill="rgb(216,169,33)" fg:x="10116348774" fg:w="6018054"/><text x="98.5158%" y="191.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="98.3242%" y="293" width="0.0195%" height="15" fill="rgb(233,80,24)" fg:x="10122366828" fg:w="2006018"/><text x="98.5742%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7,021,063 samples, 0.07%)</title><rect x="98.3242%" y="309" width="0.0682%" height="15" fill="rgb(213,179,31)" fg:x="10122366828" fg:w="7021063"/><text x="98.5742%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (16,048,144 samples, 0.16%)</title><rect x="98.2463%" y="325" width="0.1559%" height="15" fill="rgb(209,19,5)" fg:x="10114342756" fg:w="16048144"/><text x="98.4963%" y="335.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="98.4314%" y="181" width="0.0195%" height="15" fill="rgb(219,18,35)" fg:x="10133399927" fg:w="2006018"/><text x="98.6814%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="98.4217%" y="277" width="0.0390%" height="15" fill="rgb(209,169,16)" fg:x="10132396918" fg:w="4012036"/><text x="98.6717%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="98.4217%" y="261" width="0.0390%" height="15" fill="rgb(245,90,51)" fg:x="10132396918" fg:w="4012036"/><text x="98.6717%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="98.4217%" y="245" width="0.0390%" height="15" fill="rgb(220,99,45)" fg:x="10132396918" fg:w="4012036"/><text x="98.6717%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="98.4217%" y="229" width="0.0390%" height="15" fill="rgb(249,89,25)" fg:x="10132396918" fg:w="4012036"/><text x="98.6717%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="98.4217%" y="213" width="0.0390%" height="15" fill="rgb(239,193,0)" fg:x="10132396918" fg:w="4012036"/><text x="98.6717%" y="223.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="98.4217%" y="197" width="0.0390%" height="15" fill="rgb(231,126,1)" fg:x="10132396918" fg:w="4012036"/><text x="98.6717%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5,015,045 samples, 0.05%)</title><rect x="98.4217%" y="309" width="0.0487%" height="15" fill="rgb(243,166,3)" fg:x="10132396918" fg:w="5015045"/><text x="98.6717%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.05%)</title><rect x="98.4217%" y="293" width="0.0487%" height="15" fill="rgb(223,22,34)" fg:x="10132396918" fg:w="5015045"/><text x="98.6717%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (13,039,117 samples, 0.13%)</title><rect x="98.4022%" y="325" width="0.1267%" height="15" fill="rgb(251,52,51)" fg:x="10130390900" fg:w="13039117"/><text x="98.6522%" y="335.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.02%)</title><rect x="98.5386%" y="165" width="0.0195%" height="15" fill="rgb(221,165,28)" fg:x="10144433026" fg:w="2006018"/><text x="98.7886%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="98.5386%" y="229" width="0.0390%" height="15" fill="rgb(218,121,47)" fg:x="10144433026" fg:w="4012036"/><text x="98.7886%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="98.5386%" y="213" width="0.0390%" height="15" fill="rgb(209,120,9)" fg:x="10144433026" fg:w="4012036"/><text x="98.7886%" y="223.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="98.5386%" y="197" width="0.0390%" height="15" fill="rgb(236,68,12)" fg:x="10144433026" fg:w="4012036"/><text x="98.7886%" y="207.50"></text></g><g><title>__GI___libc_malloc (4,012,036 samples, 0.04%)</title><rect x="98.5386%" y="181" width="0.0390%" height="15" fill="rgb(225,194,26)" fg:x="10144433026" fg:w="4012036"/><text x="98.7886%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6,018,054 samples, 0.06%)</title><rect x="98.5386%" y="309" width="0.0585%" height="15" fill="rgb(231,84,39)" fg:x="10144433026" fg:w="6018054"/><text x="98.7886%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="98.5386%" y="293" width="0.0585%" height="15" fill="rgb(210,11,45)" fg:x="10144433026" fg:w="6018054"/><text x="98.7886%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="98.5386%" y="277" width="0.0585%" height="15" fill="rgb(224,54,52)" fg:x="10144433026" fg:w="6018054"/><text x="98.7886%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="98.5386%" y="261" width="0.0585%" height="15" fill="rgb(238,102,14)" fg:x="10144433026" fg:w="6018054"/><text x="98.7886%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,018,054 samples, 0.06%)</title><rect x="98.5386%" y="245" width="0.0585%" height="15" fill="rgb(243,160,52)" fg:x="10144433026" fg:w="6018054"/><text x="98.7886%" y="255.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (13,039,117 samples, 0.13%)</title><rect x="98.5288%" y="325" width="0.1267%" height="15" fill="rgb(216,114,19)" fg:x="10143430017" fg:w="13039117"/><text x="98.7788%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="98.6555%" y="325" width="0.0195%" height="15" fill="rgb(244,166,37)" fg:x="10156469134" fg:w="2006018"/><text x="98.9055%" y="335.50"></text></g><g><title>chlang::board::Board::attacked_by_color (96,288,864 samples, 0.94%)</title><rect x="97.7786%" y="341" width="0.9353%" height="15" fill="rgb(246,29,44)" fg:x="10066198324" fg:w="96288864"/><text x="98.0286%" y="351.50"></text></g><g><title>chlang::board::Board::is_valid (100,300,900 samples, 0.97%)</title><rect x="97.7786%" y="357" width="0.9743%" height="15" fill="rgb(215,56,53)" fg:x="10066198324" fg:w="100300900"/><text x="98.0286%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="98.7529%" y="277" width="0.0195%" height="15" fill="rgb(217,60,2)" fg:x="10166499224" fg:w="2006018"/><text x="99.0029%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="98.7529%" y="261" width="0.0195%" height="15" fill="rgb(207,26,24)" fg:x="10166499224" fg:w="2006018"/><text x="99.0029%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.02%)</title><rect x="98.7529%" y="245" width="0.0195%" height="15" fill="rgb(252,210,15)" fg:x="10166499224" fg:w="2006018"/><text x="99.0029%" y="255.50"></text></g><g><title>__GI___libc_free (2,006,018 samples, 0.02%)</title><rect x="98.7529%" y="229" width="0.0195%" height="15" fill="rgb(253,209,26)" fg:x="10166499224" fg:w="2006018"/><text x="99.0029%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (3,009,027 samples, 0.03%)</title><rect x="98.7529%" y="341" width="0.0292%" height="15" fill="rgb(238,170,14)" fg:x="10166499224" fg:w="3009027"/><text x="99.0029%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="98.7529%" y="325" width="0.0292%" height="15" fill="rgb(216,178,15)" fg:x="10166499224" fg:w="3009027"/><text x="99.0029%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="98.7529%" y="309" width="0.0292%" height="15" fill="rgb(250,197,2)" fg:x="10166499224" fg:w="3009027"/><text x="99.0029%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="98.7529%" y="293" width="0.0292%" height="15" fill="rgb(212,70,42)" fg:x="10166499224" fg:w="3009027"/><text x="99.0029%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.02%)</title><rect x="98.7822%" y="341" width="0.0195%" height="15" fill="rgb(227,213,9)" fg:x="10169508251" fg:w="2006018"/><text x="99.0322%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="98.8016%" y="341" width="0.0487%" height="15" fill="rgb(245,99,25)" fg:x="10171514269" fg:w="5015045"/><text x="99.0516%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="325" width="0.0195%" height="15" fill="rgb(250,82,29)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="309" width="0.0195%" height="15" fill="rgb(241,226,54)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="293" width="0.0195%" height="15" fill="rgb(221,99,41)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="277" width="0.0195%" height="15" fill="rgb(213,90,21)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="261" width="0.0195%" height="15" fill="rgb(205,208,24)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="245" width="0.0195%" height="15" fill="rgb(246,31,12)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="229" width="0.0195%" height="15" fill="rgb(213,154,6)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="98.8601%" y="213" width="0.0195%" height="15" fill="rgb(222,163,29)" fg:x="10177532323" fg:w="2006018"/><text x="99.1101%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="98.8504%" y="341" width="0.0487%" height="15" fill="rgb(227,201,8)" fg:x="10176529314" fg:w="5015045"/><text x="99.1004%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="98.8991%" y="341" width="0.0292%" height="15" fill="rgb(233,9,32)" fg:x="10181544359" fg:w="3009027"/><text x="99.1491%" y="351.50"></text></g><g><title>chlang::board::Board::attacked_by_color (2,006,018 samples, 0.02%)</title><rect x="98.9380%" y="325" width="0.0195%" height="15" fill="rgb(217,54,24)" fg:x="10185556395" fg:w="2006018"/><text x="99.1880%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (4,012,036 samples, 0.04%)</title><rect x="98.9283%" y="341" width="0.0390%" height="15" fill="rgb(235,192,0)" fg:x="10184553386" fg:w="4012036"/><text x="99.1783%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="325" width="0.0195%" height="15" fill="rgb(235,45,9)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="309" width="0.0195%" height="15" fill="rgb(246,42,40)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="293" width="0.0195%" height="15" fill="rgb(248,111,24)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="277" width="0.0195%" height="15" fill="rgb(249,65,22)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="261" width="0.0195%" height="15" fill="rgb(238,111,51)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="245" width="0.0195%" height="15" fill="rgb(250,118,22)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="229" width="0.0195%" height="15" fill="rgb(234,84,26)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="213" width="0.0195%" height="15" fill="rgb(243,172,12)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="223.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="98.9770%" y="197" width="0.0195%" height="15" fill="rgb(236,150,49)" fg:x="10189568431" fg:w="2006018"/><text x="99.2270%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="98.9965%" y="325" width="0.0195%" height="15" fill="rgb(225,197,26)" fg:x="10191574449" fg:w="2006018"/><text x="99.2465%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="98.9673%" y="341" width="0.0585%" height="15" fill="rgb(214,17,42)" fg:x="10188565422" fg:w="6018054"/><text x="99.2173%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="309" width="0.0195%" height="15" fill="rgb(224,165,40)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="293" width="0.0195%" height="15" fill="rgb(246,100,4)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="277" width="0.0195%" height="15" fill="rgb(222,103,0)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="261" width="0.0195%" height="15" fill="rgb(227,189,26)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="245" width="0.0195%" height="15" fill="rgb(214,202,17)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="229" width="0.0195%" height="15" fill="rgb(229,111,3)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="213" width="0.0195%" height="15" fill="rgb(229,172,15)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="197" width="0.0195%" height="15" fill="rgb(230,224,35)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="207.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="99.0257%" y="181" width="0.0195%" height="15" fill="rgb(251,141,6)" fg:x="10194583476" fg:w="2006018"/><text x="99.2757%" y="191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (3,009,027 samples, 0.03%)</title><rect x="99.0257%" y="341" width="0.0292%" height="15" fill="rgb(225,208,6)" fg:x="10194583476" fg:w="3009027"/><text x="99.2757%" y="351.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (3,009,027 samples, 0.03%)</title><rect x="99.0257%" y="325" width="0.0292%" height="15" fill="rgb(246,181,16)" fg:x="10194583476" fg:w="3009027"/><text x="99.2757%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (35,105,315 samples, 0.34%)</title><rect x="98.7529%" y="357" width="0.3410%" height="15" fill="rgb(227,129,36)" fg:x="10166499224" fg:w="35105315"/><text x="99.0029%" y="367.50"></text></g><g><title>chlang::board::Board::make_move (157,472,413 samples, 1.53%)</title><rect x="97.6520%" y="373" width="1.5296%" height="15" fill="rgb(248,117,24)" fg:x="10053159207" fg:w="157472413"/><text x="97.9020%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="357" width="0.0195%" height="15" fill="rgb(214,185,35)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="341" width="0.0195%" height="15" fill="rgb(236,150,34)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="325" width="0.0195%" height="15" fill="rgb(243,228,27)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="309" width="0.0195%" height="15" fill="rgb(245,77,44)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="293" width="0.0195%" height="15" fill="rgb(235,214,42)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="277" width="0.0195%" height="15" fill="rgb(221,74,3)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="261" width="0.0195%" height="15" fill="rgb(206,121,29)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="245" width="0.0195%" height="15" fill="rgb(249,131,53)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.02%)</title><rect x="99.1816%" y="229" width="0.0195%" height="15" fill="rgb(236,170,29)" fg:x="10210631620" fg:w="2006018"/><text x="99.4316%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (10,030,090 samples, 0.10%)</title><rect x="99.2011%" y="357" width="0.0974%" height="15" fill="rgb(247,96,15)" fg:x="10212637638" fg:w="10030090"/><text x="99.4511%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (2,006,018 samples, 0.02%)</title><rect x="99.3083%" y="341" width="0.0195%" height="15" fill="rgb(211,210,7)" fg:x="10223670737" fg:w="2006018"/><text x="99.5583%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (3,009,027 samples, 0.03%)</title><rect x="99.3375%" y="341" width="0.0292%" height="15" fill="rgb(240,88,50)" fg:x="10226679764" fg:w="3009027"/><text x="99.5875%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (7,021,063 samples, 0.07%)</title><rect x="99.3083%" y="357" width="0.0682%" height="15" fill="rgb(209,229,26)" fg:x="10223670737" fg:w="7021063"/><text x="99.5583%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (24,072,216 samples, 0.23%)</title><rect x="99.1816%" y="373" width="0.2338%" height="15" fill="rgb(210,68,23)" fg:x="10210631620" fg:w="24072216"/><text x="99.4316%" y="383.50"></text></g><g><title>chlang::board::Board::get_game_state (188,565,692 samples, 1.83%)</title><rect x="97.5935%" y="405" width="1.8316%" height="15" fill="rgb(229,180,13)" fg:x="10047141153" fg:w="188565692"/><text x="97.8435%" y="415.50">c..</text></g><g><title>chlang::board::Board::get_valid_moves (186,559,674 samples, 1.81%)</title><rect x="97.6130%" y="389" width="1.8122%" height="15" fill="rgb(236,53,44)" fg:x="10049147171" fg:w="186559674"/><text x="97.8630%" y="399.50">c..</text></g><g><title>chlang::tree_evaluator::eval (10,230,691,800 samples, 99.38%)</title><rect x="0.0682%" y="421" width="99.3765%" height="15" fill="rgb(244,214,29)" fg:x="7021063" fg:w="10230691800"/><text x="0.3182%" y="431.50">chlang::tree_evaluator::eval</text></g><g><title>chlang::board::Board::is_valid (4,012,036 samples, 0.04%)</title><rect x="99.4544%" y="405" width="0.0390%" height="15" fill="rgb(220,75,29)" fg:x="10238715872" fg:w="4012036"/><text x="99.7044%" y="415.50"></text></g><g><title>chlang::board::Board::attacked_by_color (4,012,036 samples, 0.04%)</title><rect x="99.4544%" y="389" width="0.0390%" height="15" fill="rgb(214,183,37)" fg:x="10238715872" fg:w="4012036"/><text x="99.7044%" y="399.50"></text></g><g><title>chlang::board::Board::make_move (7,021,063 samples, 0.07%)</title><rect x="99.4447%" y="421" width="0.0682%" height="15" fill="rgb(239,117,29)" fg:x="10237712863" fg:w="7021063"/><text x="99.6947%" y="431.50"></text></g><g><title>__rdl_dealloc (3,009,027 samples, 0.03%)</title><rect x="99.5908%" y="197" width="0.0292%" height="15" fill="rgb(237,171,35)" fg:x="10252757998" fg:w="3009027"/><text x="99.8408%" y="207.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,009,027 samples, 0.03%)</title><rect x="99.5908%" y="181" width="0.0292%" height="15" fill="rgb(229,178,53)" fg:x="10252757998" fg:w="3009027"/><text x="99.8408%" y="191.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="99.6200%" y="181" width="0.0195%" height="15" fill="rgb(210,102,19)" fg:x="10255767025" fg:w="2006018"/><text x="99.8700%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="341" width="0.0682%" height="15" fill="rgb(235,127,22)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="325" width="0.0682%" height="15" fill="rgb(244,31,31)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="309" width="0.0682%" height="15" fill="rgb(231,43,21)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="293" width="0.0682%" height="15" fill="rgb(217,131,35)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="277" width="0.0682%" height="15" fill="rgb(221,149,4)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="261" width="0.0682%" height="15" fill="rgb(232,170,28)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="245" width="0.0682%" height="15" fill="rgb(238,56,10)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="229" width="0.0682%" height="15" fill="rgb(235,196,14)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (7,021,063 samples, 0.07%)</title><rect x="99.5908%" y="213" width="0.0682%" height="15" fill="rgb(216,45,48)" fg:x="10252757998" fg:w="7021063"/><text x="99.8408%" y="223.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.04%)</title><rect x="99.6200%" y="197" width="0.0390%" height="15" fill="rgb(238,213,17)" fg:x="10255767025" fg:w="4012036"/><text x="99.8700%" y="207.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.02%)</title><rect x="99.6590%" y="341" width="0.0195%" height="15" fill="rgb(212,13,2)" fg:x="10259779061" fg:w="2006018"/><text x="99.9090%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (2,006,018 samples, 0.02%)</title><rect x="99.6882%" y="325" width="0.0195%" height="15" fill="rgb(240,114,20)" fg:x="10262788088" fg:w="2006018"/><text x="99.9382%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="99.6882%" y="341" width="0.0487%" height="15" fill="rgb(228,41,40)" fg:x="10262788088" fg:w="5015045"/><text x="99.9382%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="325" width="0.0195%" height="15" fill="rgb(244,132,35)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="309" width="0.0195%" height="15" fill="rgb(253,189,4)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="293" width="0.0195%" height="15" fill="rgb(224,37,19)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="277" width="0.0195%" height="15" fill="rgb(235,223,18)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="261" width="0.0195%" height="15" fill="rgb(235,163,25)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="245" width="0.0195%" height="15" fill="rgb(217,145,28)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="229" width="0.0195%" height="15" fill="rgb(223,223,32)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="213" width="0.0195%" height="15" fill="rgb(227,189,39)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="223.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="99.7175%" y="197" width="0.0195%" height="15" fill="rgb(248,10,22)" fg:x="10265797115" fg:w="2006018"/><text x="99.9675%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="99.7564%" y="245" width="0.0195%" height="15" fill="rgb(248,46,39)" fg:x="10269809151" fg:w="2006018"/><text x="100.0064%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="99.7564%" y="229" width="0.0195%" height="15" fill="rgb(248,113,48)" fg:x="10269809151" fg:w="2006018"/><text x="100.0064%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="99.7564%" y="213" width="0.0195%" height="15" fill="rgb(245,16,25)" fg:x="10269809151" fg:w="2006018"/><text x="100.0064%" y="223.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="99.7564%" y="197" width="0.0195%" height="15" fill="rgb(249,152,16)" fg:x="10269809151" fg:w="2006018"/><text x="100.0064%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.03%)</title><rect x="99.7564%" y="325" width="0.0292%" height="15" fill="rgb(250,16,1)" fg:x="10269809151" fg:w="3009027"/><text x="100.0064%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="99.7564%" y="309" width="0.0292%" height="15" fill="rgb(249,138,3)" fg:x="10269809151" fg:w="3009027"/><text x="100.0064%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="99.7564%" y="293" width="0.0292%" height="15" fill="rgb(227,71,41)" fg:x="10269809151" fg:w="3009027"/><text x="100.0064%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.03%)</title><rect x="99.7564%" y="277" width="0.0292%" height="15" fill="rgb(209,184,23)" fg:x="10269809151" fg:w="3009027"/><text x="100.0064%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.03%)</title><rect x="99.7564%" y="261" width="0.0292%" height="15" fill="rgb(223,215,31)" fg:x="10269809151" fg:w="3009027"/><text x="100.0064%" y="271.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (5,015,045 samples, 0.05%)</title><rect x="99.7564%" y="341" width="0.0487%" height="15" fill="rgb(210,146,28)" fg:x="10269809151" fg:w="5015045"/><text x="100.0064%" y="351.50"></text></g><g><title>chlang::board::Board::is_valid (23,069,207 samples, 0.22%)</title><rect x="99.5908%" y="373" width="0.2241%" height="15" fill="rgb(209,183,41)" fg:x="10252757998" fg:w="23069207"/><text x="99.8408%" y="383.50"></text></g><g><title>chlang::board::Board::attacked_by_color (23,069,207 samples, 0.22%)</title><rect x="99.5908%" y="357" width="0.2241%" height="15" fill="rgb(209,224,45)" fg:x="10252757998" fg:w="23069207"/><text x="99.8408%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (2,006,018 samples, 0.02%)</title><rect x="99.8246%" y="357" width="0.0195%" height="15" fill="rgb(224,209,51)" fg:x="10276830214" fg:w="2006018"/><text x="100.0746%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (2,006,018 samples, 0.02%)</title><rect x="99.8539%" y="357" width="0.0195%" height="15" fill="rgb(223,17,39)" fg:x="10279839241" fg:w="2006018"/><text x="100.1039%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (8,024,072 samples, 0.08%)</title><rect x="99.8149%" y="373" width="0.0779%" height="15" fill="rgb(234,204,37)" fg:x="10275827205" fg:w="8024072"/><text x="100.0649%" y="383.50"></text></g><g><title>chlang::board::Board::make_move (36,108,324 samples, 0.35%)</title><rect x="99.5518%" y="389" width="0.3507%" height="15" fill="rgb(236,120,5)" fg:x="10248745962" fg:w="36108324"/><text x="99.8018%" y="399.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move (10,288,866,322 samples, 99.94%)</title><rect x="0.0292%" y="453" width="99.9415%" height="15" fill="rgb(248,97,27)" fg:x="3009027" fg:w="10288866322"/><text x="0.2792%" y="463.50">chlang::tree_evaluator::Bot::find_best_move</text></g><g><title>chlang::tree_evaluator::eval (10,288,866,322 samples, 99.94%)</title><rect x="0.0292%" y="437" width="99.9415%" height="15" fill="rgb(240,66,17)" fg:x="3009027" fg:w="10288866322"/><text x="0.2792%" y="447.50">chlang::tree_evaluator::eval</text></g><g><title>chlang::board::Board::get_game_state (46,138,414 samples, 0.45%)</title><rect x="99.5226%" y="421" width="0.4482%" height="15" fill="rgb(210,79,3)" fg:x="10245736935" fg:w="46138414"/><text x="99.7726%" y="431.50"></text></g><g><title>chlang::board::Board::get_valid_moves (44,132,396 samples, 0.43%)</title><rect x="99.5421%" y="405" width="0.4287%" height="15" fill="rgb(214,176,27)" fg:x="10247742953" fg:w="44132396"/><text x="99.7921%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (7,021,063 samples, 0.07%)</title><rect x="99.9026%" y="389" width="0.0682%" height="15" fill="rgb(235,185,3)" fg:x="10284854286" fg:w="7021063"/><text x="100.1526%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (6,018,054 samples, 0.06%)</title><rect x="99.9123%" y="373" width="0.0585%" height="15" fill="rgb(227,24,12)" fg:x="10285857295" fg:w="6018054"/><text x="100.1623%" y="383.50"></text></g><g><title>chlang::board::Board::make_move (2,006,018 samples, 0.02%)</title><rect x="99.9708%" y="421" width="0.0195%" height="15" fill="rgb(252,169,48)" fg:x="10291875349" fg:w="2006018"/><text x="100.2208%" y="431.50"></text></g><g><title>all (10,294,884,376 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(212,65,1)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="767.50"></text></g><g><title>chlang (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(242,39,24)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="751.50">chlang</text></g><g><title>_start (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(249,32,23)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="735.50">_start</text></g><g><title>__libc_start_main_impl (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(251,195,23)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="719.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(236,174,8)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="703.50">__libc_start_call_main</text></g><g><title>main (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(220,197,8)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(240,108,37)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="671.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(232,176,24)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(243,35,29)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(210,37,18)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="623.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(224,184,40)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="607.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(236,39,29)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="591.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(232,48,39)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="575.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(236,34,42)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="559.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(243,106,37)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="543.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(218,96,6)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="527.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(235,130,12)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="511.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(231,95,0)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="495.50">core::ops::function::FnOnce::call_once</text></g><g><title>chlang::main (10,294,884,376 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(228,12,23)" fg:x="0" fg:w="10294884376"/><text x="0.2500%" y="479.50">chlang::main</text></g><g><title>chlang::board::Board::get_game_state (3,009,027 samples, 0.03%)</title><rect x="99.9708%" y="453" width="0.0292%" height="15" fill="rgb(216,12,1)" fg:x="10291875349" fg:w="3009027"/><text x="100.2208%" y="463.50"></text></g><g><title>chlang::board::Board::get_valid_moves (3,009,027 samples, 0.03%)</title><rect x="99.9708%" y="437" width="0.0292%" height="15" fill="rgb(219,59,3)" fg:x="10291875349" fg:w="3009027"/><text x="100.2208%" y="447.50"></text></g></svg></svg>