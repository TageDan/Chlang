<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="1491474383"><g><title>std::rt::init (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="581" width="0.0672%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="591.50"></text></g><g><title>std::sys::pal::unix::init (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="565" width="0.0672%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="575.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="549" width="0.0672%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="559.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="533" width="0.0672%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="543.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="517" width="0.0672%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="527.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="501" width="0.0672%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="511.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="485" width="0.0672%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="495.50"></text></g><g><title>__pthread_getattr_np (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="469" width="0.0672%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="479.50"></text></g><g><title>__GI___isoc99_sscanf (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="453" width="0.0672%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="463.50"></text></g><g><title>__vfscanf_internal (1,003,009 samples, 0.07%)</title><rect x="0.0000%" y="437" width="0.0672%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,009,027 samples, 0.20%)</title><rect x="0.0672%" y="357" width="0.2017%" height="15" fill="rgb(250,228,42)" fg:x="1003009" fg:w="3009027"/><text x="0.3172%" y="367.50"></text></g><g><title>&lt;chlang::board::Board as core::fmt::Display&gt;::fmt (3,009,027 samples, 0.20%)</title><rect x="0.0672%" y="341" width="0.2017%" height="15" fill="rgb(240,193,28)" fg:x="1003009" fg:w="3009027"/><text x="0.3172%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (3,009,027 samples, 0.20%)</title><rect x="0.0672%" y="325" width="0.2017%" height="15" fill="rgb(216,20,37)" fg:x="1003009" fg:w="3009027"/><text x="0.3172%" y="335.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="357" width="0.0672%" height="15" fill="rgb(206,188,39)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="367.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="341" width="0.0672%" height="15" fill="rgb(217,207,13)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="351.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="325" width="0.0672%" height="15" fill="rgb(231,73,38)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="335.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="309" width="0.0672%" height="15" fill="rgb(225,20,46)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="319.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="293" width="0.0672%" height="15" fill="rgb(210,31,41)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="303.50"></text></g><g><title>std::io::Write::write_all (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="277" width="0.0672%" height="15" fill="rgb(221,200,47)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="287.50"></text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="261" width="0.0672%" height="15" fill="rgb(226,26,5)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="271.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="245" width="0.0672%" height="15" fill="rgb(249,33,26)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="255.50"></text></g><g><title>__GI___libc_write (1,003,009 samples, 0.07%)</title><rect x="0.2690%" y="229" width="0.0672%" height="15" fill="rgb(235,183,28)" fg:x="4012036" fg:w="1003009"/><text x="0.5190%" y="239.50"></text></g><g><title>std::io::stdio::_print (5,015,045 samples, 0.34%)</title><rect x="0.0672%" y="453" width="0.3362%" height="15" fill="rgb(221,5,38)" fg:x="1003009" fg:w="5015045"/><text x="0.3172%" y="463.50"></text></g><g><title>std::io::stdio::print_to (5,015,045 samples, 0.34%)</title><rect x="0.0672%" y="437" width="0.3362%" height="15" fill="rgb(247,18,42)" fg:x="1003009" fg:w="5015045"/><text x="0.3172%" y="447.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (5,015,045 samples, 0.34%)</title><rect x="0.0672%" y="421" width="0.3362%" height="15" fill="rgb(241,131,45)" fg:x="1003009" fg:w="5015045"/><text x="0.3172%" y="431.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (5,015,045 samples, 0.34%)</title><rect x="0.0672%" y="405" width="0.3362%" height="15" fill="rgb(249,31,29)" fg:x="1003009" fg:w="5015045"/><text x="0.3172%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (5,015,045 samples, 0.34%)</title><rect x="0.0672%" y="389" width="0.3362%" height="15" fill="rgb(225,111,53)" fg:x="1003009" fg:w="5015045"/><text x="0.3172%" y="399.50"></text></g><g><title>core::fmt::write (5,015,045 samples, 0.34%)</title><rect x="0.0672%" y="373" width="0.3362%" height="15" fill="rgb(238,160,17)" fg:x="1003009" fg:w="5015045"/><text x="0.3172%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1,003,009 samples, 0.07%)</title><rect x="0.4035%" y="421" width="0.0672%" height="15" fill="rgb(214,148,48)" fg:x="6018054" fg:w="1003009"/><text x="0.6535%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1,003,009 samples, 0.07%)</title><rect x="0.4035%" y="405" width="0.0672%" height="15" fill="rgb(232,36,49)" fg:x="6018054" fg:w="1003009"/><text x="0.6535%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,003,009 samples, 0.07%)</title><rect x="0.4035%" y="389" width="0.0672%" height="15" fill="rgb(209,103,24)" fg:x="6018054" fg:w="1003009"/><text x="0.6535%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,003,009 samples, 0.07%)</title><rect x="0.4035%" y="373" width="0.0672%" height="15" fill="rgb(229,88,8)" fg:x="6018054" fg:w="1003009"/><text x="0.6535%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,003,009 samples, 0.07%)</title><rect x="0.4035%" y="357" width="0.0672%" height="15" fill="rgb(213,181,19)" fg:x="6018054" fg:w="1003009"/><text x="0.6535%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,003,009 samples, 0.07%)</title><rect x="0.4035%" y="341" width="0.0672%" height="15" fill="rgb(254,191,54)" fg:x="6018054" fg:w="1003009"/><text x="0.6535%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,003,009 samples, 0.07%)</title><rect x="0.4035%" y="325" width="0.0672%" height="15" fill="rgb(241,83,37)" fg:x="6018054" fg:w="1003009"/><text x="0.6535%" y="335.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,003,009 samples, 0.07%)</title><rect x="0.4707%" y="389" width="0.0672%" height="15" fill="rgb(233,36,39)" fg:x="7021063" fg:w="1003009"/><text x="0.7207%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (1,003,009 samples, 0.07%)</title><rect x="0.4707%" y="373" width="0.0672%" height="15" fill="rgb(226,3,54)" fg:x="7021063" fg:w="1003009"/><text x="0.7207%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1,003,009 samples, 0.07%)</title><rect x="0.4707%" y="357" width="0.0672%" height="15" fill="rgb(245,192,40)" fg:x="7021063" fg:w="1003009"/><text x="0.7207%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (1,003,009 samples, 0.07%)</title><rect x="0.4707%" y="341" width="0.0672%" height="15" fill="rgb(238,167,29)" fg:x="7021063" fg:w="1003009"/><text x="0.7207%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="0.4707%" y="325" width="0.0672%" height="15" fill="rgb(232,182,51)" fg:x="7021063" fg:w="1003009"/><text x="0.7207%" y="335.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="0.4707%" y="309" width="0.0672%" height="15" fill="rgb(231,60,39)" fg:x="7021063" fg:w="1003009"/><text x="0.7207%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="0.4707%" y="293" width="0.0672%" height="15" fill="rgb(208,69,12)" fg:x="7021063" fg:w="1003009"/><text x="0.7207%" y="303.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (1,003,009 samples, 0.07%)</title><rect x="0.5380%" y="357" width="0.0672%" height="15" fill="rgb(235,93,37)" fg:x="8024072" fg:w="1003009"/><text x="0.7880%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="0.5380%" y="341" width="0.0672%" height="15" fill="rgb(213,116,39)" fg:x="8024072" fg:w="1003009"/><text x="0.7880%" y="351.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="0.5380%" y="325" width="0.0672%" height="15" fill="rgb(222,207,29)" fg:x="8024072" fg:w="1003009"/><text x="0.7880%" y="335.50"></text></g><g><title>chlang::cmove::Move::to (1,003,009 samples, 0.07%)</title><rect x="0.5380%" y="309" width="0.0672%" height="15" fill="rgb(206,96,30)" fg:x="8024072" fg:w="1003009"/><text x="0.7880%" y="319.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (2,006,018 samples, 0.13%)</title><rect x="0.5380%" y="389" width="0.1345%" height="15" fill="rgb(218,138,4)" fg:x="8024072" fg:w="2006018"/><text x="0.7880%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (2,006,018 samples, 0.13%)</title><rect x="0.5380%" y="373" width="0.1345%" height="15" fill="rgb(250,191,14)" fg:x="8024072" fg:w="2006018"/><text x="0.7880%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (1,003,009 samples, 0.07%)</title><rect x="0.6052%" y="357" width="0.0672%" height="15" fill="rgb(239,60,40)" fg:x="9027081" fg:w="1003009"/><text x="0.8552%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (1,003,009 samples, 0.07%)</title><rect x="0.6052%" y="341" width="0.0672%" height="15" fill="rgb(206,27,48)" fg:x="9027081" fg:w="1003009"/><text x="0.8552%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="0.6052%" y="325" width="0.0672%" height="15" fill="rgb(225,35,8)" fg:x="9027081" fg:w="1003009"/><text x="0.8552%" y="335.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="0.6052%" y="309" width="0.0672%" height="15" fill="rgb(250,213,24)" fg:x="9027081" fg:w="1003009"/><text x="0.8552%" y="319.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="0.6052%" y="293" width="0.0672%" height="15" fill="rgb(247,123,22)" fg:x="9027081" fg:w="1003009"/><text x="0.8552%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (4,012,036 samples, 0.27%)</title><rect x="0.4707%" y="421" width="0.2690%" height="15" fill="rgb(231,138,38)" fg:x="7021063" fg:w="4012036"/><text x="0.7207%" y="431.50"></text></g><g><title>core::slice::sort::unstable::sort (4,012,036 samples, 0.27%)</title><rect x="0.4707%" y="405" width="0.2690%" height="15" fill="rgb(231,145,46)" fg:x="7021063" fg:w="4012036"/><text x="0.7207%" y="415.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (1,003,009 samples, 0.07%)</title><rect x="0.6725%" y="389" width="0.0672%" height="15" fill="rgb(251,118,11)" fg:x="10030090" fg:w="1003009"/><text x="0.9225%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1,003,009 samples, 0.07%)</title><rect x="0.6725%" y="373" width="0.0672%" height="15" fill="rgb(217,147,25)" fg:x="10030090" fg:w="1003009"/><text x="0.9225%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="405" width="0.0672%" height="15" fill="rgb(247,81,37)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="389" width="0.0672%" height="15" fill="rgb(209,12,38)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="373" width="0.0672%" height="15" fill="rgb(227,1,9)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="357" width="0.0672%" height="15" fill="rgb(248,47,43)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="341" width="0.0672%" height="15" fill="rgb(221,10,30)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="325" width="0.0672%" height="15" fill="rgb(210,229,1)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="309" width="0.0672%" height="15" fill="rgb(222,148,37)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="319.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="293" width="0.0672%" height="15" fill="rgb(234,67,33)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="303.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="277" width="0.0672%" height="15" fill="rgb(247,98,35)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="261" width="0.0672%" height="15" fill="rgb(247,138,52)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="245" width="0.0672%" height="15" fill="rgb(213,79,30)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="229" width="0.0672%" height="15" fill="rgb(246,177,23)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="213" width="0.0672%" height="15" fill="rgb(230,62,27)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="197" width="0.0672%" height="15" fill="rgb(216,154,8)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="0.7397%" y="181" width="0.0672%" height="15" fill="rgb(244,35,45)" fg:x="11033099" fg:w="1003009"/><text x="0.9897%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,003,009 samples, 0.07%)</title><rect x="0.8070%" y="373" width="0.0672%" height="15" fill="rgb(251,115,12)" fg:x="12036108" fg:w="1003009"/><text x="1.0570%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,003,009 samples, 0.07%)</title><rect x="0.8070%" y="357" width="0.0672%" height="15" fill="rgb(240,54,50)" fg:x="12036108" fg:w="1003009"/><text x="1.0570%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,003,009 samples, 0.07%)</title><rect x="0.8070%" y="341" width="0.0672%" height="15" fill="rgb(233,84,52)" fg:x="12036108" fg:w="1003009"/><text x="1.0570%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,003,009 samples, 0.07%)</title><rect x="0.8070%" y="325" width="0.0672%" height="15" fill="rgb(207,117,47)" fg:x="12036108" fg:w="1003009"/><text x="1.0570%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,003,009 samples, 0.07%)</title><rect x="0.8070%" y="309" width="0.0672%" height="15" fill="rgb(249,43,39)" fg:x="12036108" fg:w="1003009"/><text x="1.0570%" y="319.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="293" width="0.0672%" height="15" fill="rgb(209,38,44)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="277" width="0.0672%" height="15" fill="rgb(236,212,23)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="261" width="0.0672%" height="15" fill="rgb(242,79,21)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="245" width="0.0672%" height="15" fill="rgb(211,96,35)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="229" width="0.0672%" height="15" fill="rgb(253,215,40)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="213" width="0.0672%" height="15" fill="rgb(211,81,21)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="197" width="0.0672%" height="15" fill="rgb(208,190,38)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,003,009 samples, 0.07%)</title><rect x="0.8742%" y="181" width="0.0672%" height="15" fill="rgb(235,213,38)" fg:x="13039117" fg:w="1003009"/><text x="1.1242%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (2,006,018 samples, 0.13%)</title><rect x="0.8742%" y="373" width="0.1345%" height="15" fill="rgb(237,122,38)" fg:x="13039117" fg:w="2006018"/><text x="1.1242%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,006,018 samples, 0.13%)</title><rect x="0.8742%" y="357" width="0.1345%" height="15" fill="rgb(244,218,35)" fg:x="13039117" fg:w="2006018"/><text x="1.1242%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="0.8742%" y="341" width="0.1345%" height="15" fill="rgb(240,68,47)" fg:x="13039117" fg:w="2006018"/><text x="1.1242%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="0.8742%" y="325" width="0.1345%" height="15" fill="rgb(210,16,53)" fg:x="13039117" fg:w="2006018"/><text x="1.1242%" y="335.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="0.8742%" y="309" width="0.1345%" height="15" fill="rgb(235,124,12)" fg:x="13039117" fg:w="2006018"/><text x="1.1242%" y="319.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="293" width="0.0672%" height="15" fill="rgb(224,169,11)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="277" width="0.0672%" height="15" fill="rgb(250,166,2)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="287.50"></text></g><g><title>core::hash::Hasher::write_isize (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="261" width="0.0672%" height="15" fill="rgb(242,216,29)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="271.50"></text></g><g><title>core::hash::Hasher::write_usize (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="245" width="0.0672%" height="15" fill="rgb(230,116,27)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="229" width="0.0672%" height="15" fill="rgb(228,99,48)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="213" width="0.0672%" height="15" fill="rgb(253,11,6)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="197" width="0.0672%" height="15" fill="rgb(247,143,39)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="181" width="0.0672%" height="15" fill="rgb(236,97,10)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,003,009 samples, 0.07%)</title><rect x="0.9415%" y="165" width="0.0672%" height="15" fill="rgb(233,208,19)" fg:x="14042126" fg:w="1003009"/><text x="1.1915%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="229" width="0.0672%" height="15" fill="rgb(216,164,2)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="213" width="0.0672%" height="15" fill="rgb(220,129,5)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="223.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="197" width="0.0672%" height="15" fill="rgb(242,17,10)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="207.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="181" width="0.0672%" height="15" fill="rgb(242,107,0)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="165" width="0.0672%" height="15" fill="rgb(251,28,31)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="175.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="149" width="0.0672%" height="15" fill="rgb(233,223,10)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="159.50"></text></g><g><title>core::hash::Hasher::write_usize (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="133" width="0.0672%" height="15" fill="rgb(215,21,27)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="143.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="117" width="0.0672%" height="15" fill="rgb(232,23,21)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="101" width="0.0672%" height="15" fill="rgb(244,5,23)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="85" width="0.0672%" height="15" fill="rgb(226,81,46)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="1.0087%" y="69" width="0.0672%" height="15" fill="rgb(247,70,30)" fg:x="15045135" fg:w="1003009"/><text x="1.2587%" y="79.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5,015,045 samples, 0.34%)</title><rect x="0.8070%" y="405" width="0.3362%" height="15" fill="rgb(212,68,19)" fg:x="12036108" fg:w="5015045"/><text x="1.0570%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5,015,045 samples, 0.34%)</title><rect x="0.8070%" y="389" width="0.3362%" height="15" fill="rgb(240,187,13)" fg:x="12036108" fg:w="5015045"/><text x="1.0570%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="373" width="0.1345%" height="15" fill="rgb(223,113,26)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="357" width="0.1345%" height="15" fill="rgb(206,192,2)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="341" width="0.1345%" height="15" fill="rgb(241,108,4)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="325" width="0.1345%" height="15" fill="rgb(247,173,49)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="309" width="0.1345%" height="15" fill="rgb(224,114,35)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="293" width="0.1345%" height="15" fill="rgb(245,159,27)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="303.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="277" width="0.1345%" height="15" fill="rgb(245,172,44)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="261" width="0.1345%" height="15" fill="rgb(236,23,11)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,006,018 samples, 0.13%)</title><rect x="1.0087%" y="245" width="0.1345%" height="15" fill="rgb(205,117,38)" fg:x="15045135" fg:w="2006018"/><text x="1.2587%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="1.0760%" y="229" width="0.0672%" height="15" fill="rgb(237,72,25)" fg:x="16048144" fg:w="1003009"/><text x="1.3260%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="1.0760%" y="213" width="0.0672%" height="15" fill="rgb(244,70,9)" fg:x="16048144" fg:w="1003009"/><text x="1.3260%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="1.0760%" y="197" width="0.0672%" height="15" fill="rgb(217,125,39)" fg:x="16048144" fg:w="1003009"/><text x="1.3260%" y="207.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1,003,009 samples, 0.07%)</title><rect x="1.1432%" y="405" width="0.0672%" height="15" fill="rgb(235,36,10)" fg:x="17051153" fg:w="1003009"/><text x="1.3932%" y="415.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1,003,009 samples, 0.07%)</title><rect x="1.1432%" y="389" width="0.0672%" height="15" fill="rgb(251,123,47)" fg:x="17051153" fg:w="1003009"/><text x="1.3932%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1,003,009 samples, 0.07%)</title><rect x="1.1432%" y="373" width="0.0672%" height="15" fill="rgb(221,13,13)" fg:x="17051153" fg:w="1003009"/><text x="1.3932%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1,003,009 samples, 0.07%)</title><rect x="1.1432%" y="357" width="0.0672%" height="15" fill="rgb(238,131,9)" fg:x="17051153" fg:w="1003009"/><text x="1.3932%" y="367.50"></text></g><g><title>hashbrown::raw::special_is_empty (1,003,009 samples, 0.07%)</title><rect x="1.1432%" y="341" width="0.0672%" height="15" fill="rgb(211,50,8)" fg:x="17051153" fg:w="1003009"/><text x="1.3932%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (2,006,018 samples, 0.13%)</title><rect x="1.2105%" y="309" width="0.1345%" height="15" fill="rgb(245,182,24)" fg:x="18054162" fg:w="2006018"/><text x="1.4605%" y="319.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (2,006,018 samples, 0.13%)</title><rect x="1.2105%" y="293" width="0.1345%" height="15" fill="rgb(242,14,37)" fg:x="18054162" fg:w="2006018"/><text x="1.4605%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.13%)</title><rect x="1.2105%" y="277" width="0.1345%" height="15" fill="rgb(246,228,12)" fg:x="18054162" fg:w="2006018"/><text x="1.4605%" y="287.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (3,009,027 samples, 0.20%)</title><rect x="1.2105%" y="357" width="0.2017%" height="15" fill="rgb(213,55,15)" fg:x="18054162" fg:w="3009027"/><text x="1.4605%" y="367.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (3,009,027 samples, 0.20%)</title><rect x="1.2105%" y="341" width="0.2017%" height="15" fill="rgb(209,9,3)" fg:x="18054162" fg:w="3009027"/><text x="1.4605%" y="351.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::{{closure}} (3,009,027 samples, 0.20%)</title><rect x="1.2105%" y="325" width="0.2017%" height="15" fill="rgb(230,59,30)" fg:x="18054162" fg:w="3009027"/><text x="1.4605%" y="335.50"></text></g><g><title>core::intrinsics::copy (1,003,009 samples, 0.07%)</title><rect x="1.3450%" y="309" width="0.0672%" height="15" fill="rgb(209,121,21)" fg:x="20060180" fg:w="1003009"/><text x="1.5950%" y="319.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (4,012,036 samples, 0.27%)</title><rect x="1.2105%" y="373" width="0.2690%" height="15" fill="rgb(220,109,13)" fg:x="18054162" fg:w="4012036"/><text x="1.4605%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (1,003,009 samples, 0.07%)</title><rect x="1.4122%" y="357" width="0.0672%" height="15" fill="rgb(232,18,1)" fg:x="21063189" fg:w="1003009"/><text x="1.6622%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1,003,009 samples, 0.07%)</title><rect x="1.4122%" y="341" width="0.0672%" height="15" fill="rgb(215,41,42)" fg:x="21063189" fg:w="1003009"/><text x="1.6622%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (1,003,009 samples, 0.07%)</title><rect x="1.4122%" y="325" width="0.0672%" height="15" fill="rgb(224,123,36)" fg:x="21063189" fg:w="1003009"/><text x="1.6622%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="1.4122%" y="309" width="0.0672%" height="15" fill="rgb(240,125,3)" fg:x="21063189" fg:w="1003009"/><text x="1.6622%" y="319.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="1.4122%" y="293" width="0.0672%" height="15" fill="rgb(205,98,50)" fg:x="21063189" fg:w="1003009"/><text x="1.6622%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="1.4122%" y="277" width="0.0672%" height="15" fill="rgb(205,185,37)" fg:x="21063189" fg:w="1003009"/><text x="1.6622%" y="287.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (1,003,009 samples, 0.07%)</title><rect x="1.4795%" y="373" width="0.0672%" height="15" fill="rgb(238,207,15)" fg:x="22066198" fg:w="1003009"/><text x="1.7295%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::ilog2 (1,003,009 samples, 0.07%)</title><rect x="1.4795%" y="357" width="0.0672%" height="15" fill="rgb(213,199,42)" fg:x="22066198" fg:w="1003009"/><text x="1.7295%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_ilog2 (1,003,009 samples, 0.07%)</title><rect x="1.4795%" y="341" width="0.0672%" height="15" fill="rgb(235,201,11)" fg:x="22066198" fg:w="1003009"/><text x="1.7295%" y="351.50"></text></g><g><title>core::num::nonzero::NonZero&lt;usize&gt;::ilog2 (1,003,009 samples, 0.07%)</title><rect x="1.4795%" y="325" width="0.0672%" height="15" fill="rgb(207,46,11)" fg:x="22066198" fg:w="1003009"/><text x="1.7295%" y="335.50"></text></g><g><title>core::num::nonzero::NonZero&lt;usize&gt;::leading_zeros (1,003,009 samples, 0.07%)</title><rect x="1.4795%" y="309" width="0.0672%" height="15" fill="rgb(241,35,35)" fg:x="22066198" fg:w="1003009"/><text x="1.7295%" y="319.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (1,003,009 samples, 0.07%)</title><rect x="1.5467%" y="325" width="0.0672%" height="15" fill="rgb(243,32,47)" fg:x="23069207" fg:w="1003009"/><text x="1.7967%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="1.5467%" y="309" width="0.0672%" height="15" fill="rgb(247,202,23)" fg:x="23069207" fg:w="1003009"/><text x="1.7967%" y="319.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="1.5467%" y="293" width="0.0672%" height="15" fill="rgb(219,102,11)" fg:x="23069207" fg:w="1003009"/><text x="1.7967%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="1.5467%" y="277" width="0.0672%" height="15" fill="rgb(243,110,44)" fg:x="23069207" fg:w="1003009"/><text x="1.7967%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (7,021,063 samples, 0.47%)</title><rect x="1.2105%" y="405" width="0.4707%" height="15" fill="rgb(222,74,54)" fg:x="18054162" fg:w="7021063"/><text x="1.4605%" y="415.50"></text></g><g><title>core::slice::sort::unstable::sort (7,021,063 samples, 0.47%)</title><rect x="1.2105%" y="389" width="0.4707%" height="15" fill="rgb(216,99,12)" fg:x="18054162" fg:w="7021063"/><text x="1.4605%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (2,006,018 samples, 0.13%)</title><rect x="1.5467%" y="373" width="0.1345%" height="15" fill="rgb(226,22,26)" fg:x="23069207" fg:w="2006018"/><text x="1.7967%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (2,006,018 samples, 0.13%)</title><rect x="1.5467%" y="357" width="0.1345%" height="15" fill="rgb(217,163,10)" fg:x="23069207" fg:w="2006018"/><text x="1.7967%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (2,006,018 samples, 0.13%)</title><rect x="1.5467%" y="341" width="0.1345%" height="15" fill="rgb(213,25,53)" fg:x="23069207" fg:w="2006018"/><text x="1.7967%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (1,003,009 samples, 0.07%)</title><rect x="1.6140%" y="325" width="0.0672%" height="15" fill="rgb(252,105,26)" fg:x="24072216" fg:w="1003009"/><text x="1.8640%" y="335.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (1,003,009 samples, 0.07%)</title><rect x="1.6140%" y="309" width="0.0672%" height="15" fill="rgb(220,39,43)" fg:x="24072216" fg:w="1003009"/><text x="1.8640%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="1.6140%" y="293" width="0.0672%" height="15" fill="rgb(229,68,48)" fg:x="24072216" fg:w="1003009"/><text x="1.8640%" y="303.50"></text></g><g><title>chlang::tree_evaluator::eval::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="1.6140%" y="277" width="0.0672%" height="15" fill="rgb(252,8,32)" fg:x="24072216" fg:w="1003009"/><text x="1.8640%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="1.6140%" y="261" width="0.0672%" height="15" fill="rgb(223,20,43)" fg:x="24072216" fg:w="1003009"/><text x="1.8640%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5,015,045 samples, 0.34%)</title><rect x="1.6812%" y="293" width="0.3362%" height="15" fill="rgb(229,81,49)" fg:x="25075225" fg:w="5015045"/><text x="1.9312%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5,015,045 samples, 0.34%)</title><rect x="1.6812%" y="277" width="0.3362%" height="15" fill="rgb(236,28,36)" fg:x="25075225" fg:w="5015045"/><text x="1.9312%" y="287.50"></text></g><g><title>hashbrown::raw::h2 (1,003,009 samples, 0.07%)</title><rect x="2.0175%" y="293" width="0.0672%" height="15" fill="rgb(249,185,26)" fg:x="30090270" fg:w="1003009"/><text x="2.2675%" y="303.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U: N]&gt; for [T: N]&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="2.0847%" y="197" width="0.0672%" height="15" fill="rgb(249,174,33)" fg:x="31093279" fg:w="1003009"/><text x="2.3347%" y="207.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1,003,009 samples, 0.07%)</title><rect x="2.0847%" y="181" width="0.0672%" height="15" fill="rgb(233,201,37)" fg:x="31093279" fg:w="1003009"/><text x="2.3347%" y="191.50"></text></g><g><title>__memcmp_avx2_movbe (1,003,009 samples, 0.07%)</title><rect x="2.0847%" y="165" width="0.0672%" height="15" fill="rgb(221,78,26)" fg:x="31093279" fg:w="1003009"/><text x="2.3347%" y="175.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::cmp::PartialEq&gt;::eq (8,024,072 samples, 0.54%)</title><rect x="2.0847%" y="213" width="0.5380%" height="15" fill="rgb(250,127,30)" fg:x="31093279" fg:w="8024072"/><text x="2.3347%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15,045,135 samples, 1.01%)</title><rect x="1.6812%" y="341" width="1.0087%" height="15" fill="rgb(230,49,44)" fg:x="25075225" fg:w="15045135"/><text x="1.9312%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15,045,135 samples, 1.01%)</title><rect x="1.6812%" y="325" width="1.0087%" height="15" fill="rgb(229,67,23)" fg:x="25075225" fg:w="15045135"/><text x="1.9312%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (15,045,135 samples, 1.01%)</title><rect x="1.6812%" y="309" width="1.0087%" height="15" fill="rgb(249,83,47)" fg:x="25075225" fg:w="15045135"/><text x="1.9312%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9,027,081 samples, 0.61%)</title><rect x="2.0847%" y="293" width="0.6052%" height="15" fill="rgb(215,43,3)" fg:x="31093279" fg:w="9027081"/><text x="2.3347%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9,027,081 samples, 0.61%)</title><rect x="2.0847%" y="277" width="0.6052%" height="15" fill="rgb(238,154,13)" fg:x="31093279" fg:w="9027081"/><text x="2.3347%" y="287.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (9,027,081 samples, 0.61%)</title><rect x="2.0847%" y="261" width="0.6052%" height="15" fill="rgb(219,56,2)" fg:x="31093279" fg:w="9027081"/><text x="2.3347%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9,027,081 samples, 0.61%)</title><rect x="2.0847%" y="245" width="0.6052%" height="15" fill="rgb(233,0,4)" fg:x="31093279" fg:w="9027081"/><text x="2.3347%" y="255.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (9,027,081 samples, 0.61%)</title><rect x="2.0847%" y="229" width="0.6052%" height="15" fill="rgb(235,30,7)" fg:x="31093279" fg:w="9027081"/><text x="2.3347%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="2.6900%" y="165" width="0.0672%" height="15" fill="rgb(250,79,13)" fg:x="40120360" fg:w="1003009"/><text x="2.9400%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,003,009 samples, 0.07%)</title><rect x="2.6900%" y="149" width="0.0672%" height="15" fill="rgb(211,146,34)" fg:x="40120360" fg:w="1003009"/><text x="2.9400%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (2,006,018 samples, 0.13%)</title><rect x="2.6900%" y="229" width="0.1345%" height="15" fill="rgb(228,22,38)" fg:x="40120360" fg:w="2006018"/><text x="2.9400%" y="239.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="2.6900%" y="213" width="0.1345%" height="15" fill="rgb(235,168,5)" fg:x="40120360" fg:w="2006018"/><text x="2.9400%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="2.6900%" y="197" width="0.1345%" height="15" fill="rgb(221,155,16)" fg:x="40120360" fg:w="2006018"/><text x="2.9400%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="2.6900%" y="181" width="0.1345%" height="15" fill="rgb(215,215,53)" fg:x="40120360" fg:w="2006018"/><text x="2.9400%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (3,009,027 samples, 0.20%)</title><rect x="2.8245%" y="197" width="0.2017%" height="15" fill="rgb(223,4,10)" fg:x="42126378" fg:w="3009027"/><text x="3.0745%" y="207.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (5,015,045 samples, 0.34%)</title><rect x="2.8245%" y="229" width="0.3362%" height="15" fill="rgb(234,103,6)" fg:x="42126378" fg:w="5015045"/><text x="3.0745%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (5,015,045 samples, 0.34%)</title><rect x="2.8245%" y="213" width="0.3362%" height="15" fill="rgb(227,97,0)" fg:x="42126378" fg:w="5015045"/><text x="3.0745%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="3.0262%" y="197" width="0.1345%" height="15" fill="rgb(234,150,53)" fg:x="45135405" fg:w="2006018"/><text x="3.2762%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="3.0262%" y="181" width="0.1345%" height="15" fill="rgb(228,201,54)" fg:x="45135405" fg:w="2006018"/><text x="3.2762%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="3.0262%" y="165" width="0.1345%" height="15" fill="rgb(222,22,37)" fg:x="45135405" fg:w="2006018"/><text x="3.2762%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="3.1607%" y="133" width="0.0672%" height="15" fill="rgb(237,53,32)" fg:x="47141423" fg:w="1003009"/><text x="3.4107%" y="143.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (9,027,081 samples, 0.61%)</title><rect x="2.6900%" y="261" width="0.6052%" height="15" fill="rgb(233,25,53)" fg:x="40120360" fg:w="9027081"/><text x="2.9400%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9,027,081 samples, 0.61%)</title><rect x="2.6900%" y="245" width="0.6052%" height="15" fill="rgb(210,40,34)" fg:x="40120360" fg:w="9027081"/><text x="2.9400%" y="255.50"></text></g><g><title>core::hash::Hash::hash_slice (2,006,018 samples, 0.13%)</title><rect x="3.1607%" y="229" width="0.1345%" height="15" fill="rgb(241,220,44)" fg:x="47141423" fg:w="2006018"/><text x="3.4107%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="3.1607%" y="213" width="0.1345%" height="15" fill="rgb(235,28,35)" fg:x="47141423" fg:w="2006018"/><text x="3.4107%" y="223.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,006,018 samples, 0.13%)</title><rect x="3.1607%" y="197" width="0.1345%" height="15" fill="rgb(210,56,17)" fg:x="47141423" fg:w="2006018"/><text x="3.4107%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="3.1607%" y="181" width="0.1345%" height="15" fill="rgb(224,130,29)" fg:x="47141423" fg:w="2006018"/><text x="3.4107%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="3.1607%" y="165" width="0.1345%" height="15" fill="rgb(235,212,8)" fg:x="47141423" fg:w="2006018"/><text x="3.4107%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="3.1607%" y="149" width="0.1345%" height="15" fill="rgb(223,33,50)" fg:x="47141423" fg:w="2006018"/><text x="3.4107%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10,030,090 samples, 0.67%)</title><rect x="2.6900%" y="309" width="0.6725%" height="15" fill="rgb(219,149,13)" fg:x="40120360" fg:w="10030090"/><text x="2.9400%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (10,030,090 samples, 0.67%)</title><rect x="2.6900%" y="293" width="0.6725%" height="15" fill="rgb(250,156,29)" fg:x="40120360" fg:w="10030090"/><text x="2.9400%" y="303.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (10,030,090 samples, 0.67%)</title><rect x="2.6900%" y="277" width="0.6725%" height="15" fill="rgb(216,193,19)" fg:x="40120360" fg:w="10030090"/><text x="2.9400%" y="287.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="261" width="0.0672%" height="15" fill="rgb(216,135,14)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="245" width="0.0672%" height="15" fill="rgb(241,47,5)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="255.50"></text></g><g><title>core::hash::Hasher::write_isize (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="229" width="0.0672%" height="15" fill="rgb(233,42,35)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="213" width="0.0672%" height="15" fill="rgb(231,13,6)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="197" width="0.0672%" height="15" fill="rgb(207,181,40)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="181" width="0.0672%" height="15" fill="rgb(254,173,49)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="165" width="0.0672%" height="15" fill="rgb(221,1,38)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="175.50"></text></g><g><title>core::hash::sip::u8to64_le (1,003,009 samples, 0.07%)</title><rect x="3.2952%" y="149" width="0.0672%" height="15" fill="rgb(206,124,46)" fg:x="49147441" fg:w="1003009"/><text x="3.5452%" y="159.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26,078,234 samples, 1.75%)</title><rect x="1.6812%" y="389" width="1.7485%" height="15" fill="rgb(249,21,11)" fg:x="25075225" fg:w="26078234"/><text x="1.9312%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26,078,234 samples, 1.75%)</title><rect x="1.6812%" y="373" width="1.7485%" height="15" fill="rgb(222,201,40)" fg:x="25075225" fg:w="26078234"/><text x="1.9312%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26,078,234 samples, 1.75%)</title><rect x="1.6812%" y="357" width="1.7485%" height="15" fill="rgb(235,61,29)" fg:x="25075225" fg:w="26078234"/><text x="1.9312%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (11,033,099 samples, 0.74%)</title><rect x="2.6900%" y="341" width="0.7397%" height="15" fill="rgb(219,207,3)" fg:x="40120360" fg:w="11033099"/><text x="2.9400%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11,033,099 samples, 0.74%)</title><rect x="2.6900%" y="325" width="0.7397%" height="15" fill="rgb(222,56,46)" fg:x="40120360" fg:w="11033099"/><text x="2.9400%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="3.3625%" y="309" width="0.0672%" height="15" fill="rgb(239,76,54)" fg:x="50150450" fg:w="1003009"/><text x="3.6125%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="3.3625%" y="293" width="0.0672%" height="15" fill="rgb(231,124,27)" fg:x="50150450" fg:w="1003009"/><text x="3.6125%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="3.3625%" y="277" width="0.0672%" height="15" fill="rgb(249,195,6)" fg:x="50150450" fg:w="1003009"/><text x="3.6125%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1,003,009 samples, 0.07%)</title><rect x="3.4297%" y="325" width="0.0672%" height="15" fill="rgb(237,174,47)" fg:x="51153459" fg:w="1003009"/><text x="3.6797%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,003,009 samples, 0.07%)</title><rect x="3.4297%" y="309" width="0.0672%" height="15" fill="rgb(206,201,31)" fg:x="51153459" fg:w="1003009"/><text x="3.6797%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,003,009 samples, 0.07%)</title><rect x="3.4297%" y="293" width="0.0672%" height="15" fill="rgb(231,57,52)" fg:x="51153459" fg:w="1003009"/><text x="3.6797%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,009,027 samples, 0.20%)</title><rect x="3.4297%" y="357" width="0.2017%" height="15" fill="rgb(248,177,22)" fg:x="51153459" fg:w="3009027"/><text x="3.6797%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,009,027 samples, 0.20%)</title><rect x="3.4297%" y="341" width="0.2017%" height="15" fill="rgb(215,211,37)" fg:x="51153459" fg:w="3009027"/><text x="3.6797%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (2,006,018 samples, 0.13%)</title><rect x="3.4970%" y="325" width="0.1345%" height="15" fill="rgb(241,128,51)" fg:x="52156468" fg:w="2006018"/><text x="3.7470%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="3.6315%" y="293" width="0.0672%" height="15" fill="rgb(227,165,31)" fg:x="54162486" fg:w="1003009"/><text x="3.8815%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,003,009 samples, 0.07%)</title><rect x="3.6315%" y="277" width="0.0672%" height="15" fill="rgb(228,167,24)" fg:x="54162486" fg:w="1003009"/><text x="3.8815%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.6315%" y="261" width="0.0672%" height="15" fill="rgb(228,143,12)" fg:x="54162486" fg:w="1003009"/><text x="3.8815%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.6315%" y="245" width="0.0672%" height="15" fill="rgb(249,149,8)" fg:x="54162486" fg:w="1003009"/><text x="3.8815%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.6315%" y="229" width="0.0672%" height="15" fill="rgb(243,35,44)" fg:x="54162486" fg:w="1003009"/><text x="3.8815%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (1,003,009 samples, 0.07%)</title><rect x="3.6315%" y="213" width="0.0672%" height="15" fill="rgb(246,89,9)" fg:x="54162486" fg:w="1003009"/><text x="3.8815%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (1,003,009 samples, 0.07%)</title><rect x="3.6987%" y="245" width="0.0672%" height="15" fill="rgb(233,213,13)" fg:x="55165495" fg:w="1003009"/><text x="3.9487%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="3.6987%" y="277" width="0.1345%" height="15" fill="rgb(233,141,41)" fg:x="55165495" fg:w="2006018"/><text x="3.9487%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,006,018 samples, 0.13%)</title><rect x="3.6987%" y="261" width="0.1345%" height="15" fill="rgb(239,167,4)" fg:x="55165495" fg:w="2006018"/><text x="3.9487%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.7660%" y="245" width="0.0672%" height="15" fill="rgb(209,217,16)" fg:x="56168504" fg:w="1003009"/><text x="4.0160%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.7660%" y="229" width="0.0672%" height="15" fill="rgb(219,88,35)" fg:x="56168504" fg:w="1003009"/><text x="4.0160%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="3.7660%" y="213" width="0.0672%" height="15" fill="rgb(220,193,23)" fg:x="56168504" fg:w="1003009"/><text x="4.0160%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="3.7660%" y="197" width="0.0672%" height="15" fill="rgb(230,90,52)" fg:x="56168504" fg:w="1003009"/><text x="4.0160%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,003,009 samples, 0.07%)</title><rect x="3.7660%" y="181" width="0.0672%" height="15" fill="rgb(252,106,19)" fg:x="56168504" fg:w="1003009"/><text x="4.0160%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,006,018 samples, 0.13%)</title><rect x="3.8332%" y="165" width="0.1345%" height="15" fill="rgb(206,74,20)" fg:x="57171513" fg:w="2006018"/><text x="4.0832%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,009,027 samples, 0.20%)</title><rect x="3.8332%" y="181" width="0.2017%" height="15" fill="rgb(230,138,44)" fg:x="57171513" fg:w="3009027"/><text x="4.0832%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (4,012,036 samples, 0.27%)</title><rect x="3.8332%" y="245" width="0.2690%" height="15" fill="rgb(235,182,43)" fg:x="57171513" fg:w="4012036"/><text x="4.0832%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,012,036 samples, 0.27%)</title><rect x="3.8332%" y="229" width="0.2690%" height="15" fill="rgb(242,16,51)" fg:x="57171513" fg:w="4012036"/><text x="4.0832%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,012,036 samples, 0.27%)</title><rect x="3.8332%" y="213" width="0.2690%" height="15" fill="rgb(248,9,4)" fg:x="57171513" fg:w="4012036"/><text x="4.0832%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,012,036 samples, 0.27%)</title><rect x="3.8332%" y="197" width="0.2690%" height="15" fill="rgb(210,31,22)" fg:x="57171513" fg:w="4012036"/><text x="4.0832%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1,003,009 samples, 0.07%)</title><rect x="4.1022%" y="213" width="0.0672%" height="15" fill="rgb(239,54,39)" fg:x="61183549" fg:w="1003009"/><text x="4.3522%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="4.1695%" y="213" width="0.0672%" height="15" fill="rgb(230,99,41)" fg:x="62186558" fg:w="1003009"/><text x="4.4195%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="4.1695%" y="197" width="0.0672%" height="15" fill="rgb(253,106,12)" fg:x="62186558" fg:w="1003009"/><text x="4.4195%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="4.1695%" y="181" width="0.0672%" height="15" fill="rgb(213,46,41)" fg:x="62186558" fg:w="1003009"/><text x="4.4195%" y="191.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (3,009,027 samples, 0.20%)</title><rect x="4.1022%" y="245" width="0.2017%" height="15" fill="rgb(215,133,35)" fg:x="61183549" fg:w="3009027"/><text x="4.3522%" y="255.50"></text></g><g><title>core::hash::Hasher::write_usize (3,009,027 samples, 0.20%)</title><rect x="4.1022%" y="229" width="0.2017%" height="15" fill="rgb(213,28,5)" fg:x="61183549" fg:w="3009027"/><text x="4.3522%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="4.3040%" y="149" width="0.0672%" height="15" fill="rgb(215,77,49)" fg:x="64192576" fg:w="1003009"/><text x="4.5540%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12,036,108 samples, 0.81%)</title><rect x="3.6315%" y="325" width="0.8070%" height="15" fill="rgb(248,100,22)" fg:x="54162486" fg:w="12036108"/><text x="3.8815%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (12,036,108 samples, 0.81%)</title><rect x="3.6315%" y="309" width="0.8070%" height="15" fill="rgb(208,67,9)" fg:x="54162486" fg:w="12036108"/><text x="3.8815%" y="319.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (11,033,099 samples, 0.74%)</title><rect x="3.6987%" y="293" width="0.7397%" height="15" fill="rgb(219,133,21)" fg:x="55165495" fg:w="11033099"/><text x="3.9487%" y="303.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (9,027,081 samples, 0.61%)</title><rect x="3.8332%" y="277" width="0.6052%" height="15" fill="rgb(246,46,29)" fg:x="57171513" fg:w="9027081"/><text x="4.0832%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9,027,081 samples, 0.61%)</title><rect x="3.8332%" y="261" width="0.6052%" height="15" fill="rgb(246,185,52)" fg:x="57171513" fg:w="9027081"/><text x="4.0832%" y="271.50"></text></g><g><title>core::hash::Hash::hash_slice (2,006,018 samples, 0.13%)</title><rect x="4.3040%" y="245" width="0.1345%" height="15" fill="rgb(252,136,11)" fg:x="64192576" fg:w="2006018"/><text x="4.5540%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="4.3040%" y="229" width="0.1345%" height="15" fill="rgb(219,138,53)" fg:x="64192576" fg:w="2006018"/><text x="4.5540%" y="239.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,006,018 samples, 0.13%)</title><rect x="4.3040%" y="213" width="0.1345%" height="15" fill="rgb(211,51,23)" fg:x="64192576" fg:w="2006018"/><text x="4.5540%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.3040%" y="197" width="0.1345%" height="15" fill="rgb(247,221,28)" fg:x="64192576" fg:w="2006018"/><text x="4.5540%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.3040%" y="181" width="0.1345%" height="15" fill="rgb(251,222,45)" fg:x="64192576" fg:w="2006018"/><text x="4.5540%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.3040%" y="165" width="0.1345%" height="15" fill="rgb(217,162,53)" fg:x="64192576" fg:w="2006018"/><text x="4.5540%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (13,039,117 samples, 0.87%)</title><rect x="3.6315%" y="357" width="0.8742%" height="15" fill="rgb(229,93,14)" fg:x="54162486" fg:w="13039117"/><text x="3.8815%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13,039,117 samples, 0.87%)</title><rect x="3.6315%" y="341" width="0.8742%" height="15" fill="rgb(209,67,49)" fg:x="54162486" fg:w="13039117"/><text x="3.8815%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="4.4385%" y="325" width="0.0672%" height="15" fill="rgb(213,87,29)" fg:x="66198594" fg:w="1003009"/><text x="4.6885%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="4.4385%" y="309" width="0.0672%" height="15" fill="rgb(205,151,52)" fg:x="66198594" fg:w="1003009"/><text x="4.6885%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,003,009 samples, 0.07%)</title><rect x="4.4385%" y="293" width="0.0672%" height="15" fill="rgb(253,215,39)" fg:x="66198594" fg:w="1003009"/><text x="4.6885%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1,003,009 samples, 0.07%)</title><rect x="4.5057%" y="277" width="0.0672%" height="15" fill="rgb(221,220,41)" fg:x="67201603" fg:w="1003009"/><text x="4.7557%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1,003,009 samples, 0.07%)</title><rect x="4.5057%" y="261" width="0.0672%" height="15" fill="rgb(218,133,21)" fg:x="67201603" fg:w="1003009"/><text x="4.7557%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1,003,009 samples, 0.07%)</title><rect x="4.5057%" y="245" width="0.0672%" height="15" fill="rgb(221,193,43)" fg:x="67201603" fg:w="1003009"/><text x="4.7557%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1,003,009 samples, 0.07%)</title><rect x="4.5057%" y="229" width="0.0672%" height="15" fill="rgb(240,128,52)" fg:x="67201603" fg:w="1003009"/><text x="4.7557%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,003,009 samples, 0.07%)</title><rect x="4.5057%" y="213" width="0.0672%" height="15" fill="rgb(253,114,12)" fg:x="67201603" fg:w="1003009"/><text x="4.7557%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="4.5730%" y="181" width="0.0672%" height="15" fill="rgb(215,223,47)" fg:x="68204612" fg:w="1003009"/><text x="4.8230%" y="191.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,003,009 samples, 0.07%)</title><rect x="4.5730%" y="165" width="0.0672%" height="15" fill="rgb(248,225,23)" fg:x="68204612" fg:w="1003009"/><text x="4.8230%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="4.5730%" y="149" width="0.0672%" height="15" fill="rgb(250,108,0)" fg:x="68204612" fg:w="1003009"/><text x="4.8230%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="4.5730%" y="133" width="0.0672%" height="15" fill="rgb(228,208,7)" fg:x="68204612" fg:w="1003009"/><text x="4.8230%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="4.5730%" y="117" width="0.0672%" height="15" fill="rgb(244,45,10)" fg:x="68204612" fg:w="1003009"/><text x="4.8230%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (1,003,009 samples, 0.07%)</title><rect x="4.6402%" y="133" width="0.0672%" height="15" fill="rgb(207,125,25)" fg:x="69207621" fg:w="1003009"/><text x="4.8902%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="4.7075%" y="85" width="0.0672%" height="15" fill="rgb(210,195,18)" fg:x="70210630" fg:w="1003009"/><text x="4.9575%" y="95.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.7075%" y="133" width="0.1345%" height="15" fill="rgb(249,80,12)" fg:x="70210630" fg:w="2006018"/><text x="4.9575%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.7075%" y="117" width="0.1345%" height="15" fill="rgb(221,65,9)" fg:x="70210630" fg:w="2006018"/><text x="4.9575%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.7075%" y="101" width="0.1345%" height="15" fill="rgb(235,49,36)" fg:x="70210630" fg:w="2006018"/><text x="4.9575%" y="111.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (4,012,036 samples, 0.27%)</title><rect x="4.6402%" y="165" width="0.2690%" height="15" fill="rgb(225,32,20)" fg:x="69207621" fg:w="4012036"/><text x="4.8902%" y="175.50"></text></g><g><title>core::hash::Hasher::write_u64 (4,012,036 samples, 0.27%)</title><rect x="4.6402%" y="149" width="0.2690%" height="15" fill="rgb(215,141,46)" fg:x="69207621" fg:w="4012036"/><text x="4.8902%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="4.9092%" y="69" width="0.0672%" height="15" fill="rgb(250,160,47)" fg:x="73219657" fg:w="1003009"/><text x="5.1592%" y="79.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,003,009 samples, 0.07%)</title><rect x="4.9092%" y="53" width="0.0672%" height="15" fill="rgb(216,222,40)" fg:x="73219657" fg:w="1003009"/><text x="5.1592%" y="63.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (2,006,018 samples, 0.13%)</title><rect x="4.9092%" y="133" width="0.1345%" height="15" fill="rgb(234,217,39)" fg:x="73219657" fg:w="2006018"/><text x="5.1592%" y="143.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.9092%" y="117" width="0.1345%" height="15" fill="rgb(207,178,40)" fg:x="73219657" fg:w="2006018"/><text x="5.1592%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.9092%" y="101" width="0.1345%" height="15" fill="rgb(221,136,13)" fg:x="73219657" fg:w="2006018"/><text x="5.1592%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="4.9092%" y="85" width="0.1345%" height="15" fill="rgb(249,199,10)" fg:x="73219657" fg:w="2006018"/><text x="5.1592%" y="95.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="5.0437%" y="85" width="0.0672%" height="15" fill="rgb(249,222,13)" fg:x="75225675" fg:w="1003009"/><text x="5.2937%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="5.0437%" y="69" width="0.0672%" height="15" fill="rgb(244,185,38)" fg:x="75225675" fg:w="1003009"/><text x="5.2937%" y="79.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4,012,036 samples, 0.27%)</title><rect x="4.9092%" y="165" width="0.2690%" height="15" fill="rgb(236,202,9)" fg:x="73219657" fg:w="4012036"/><text x="5.1592%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4,012,036 samples, 0.27%)</title><rect x="4.9092%" y="149" width="0.2690%" height="15" fill="rgb(250,229,37)" fg:x="73219657" fg:w="4012036"/><text x="5.1592%" y="159.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2,006,018 samples, 0.13%)</title><rect x="5.0437%" y="133" width="0.1345%" height="15" fill="rgb(206,174,23)" fg:x="75225675" fg:w="2006018"/><text x="5.2937%" y="143.50"></text></g><g><title>core::hash::Hasher::write_usize (2,006,018 samples, 0.13%)</title><rect x="5.0437%" y="117" width="0.1345%" height="15" fill="rgb(211,33,43)" fg:x="75225675" fg:w="2006018"/><text x="5.2937%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="5.0437%" y="101" width="0.1345%" height="15" fill="rgb(245,58,50)" fg:x="75225675" fg:w="2006018"/><text x="5.2937%" y="111.50"></text></g><g><title>core::hash::sip::u8to64_le (1,003,009 samples, 0.07%)</title><rect x="5.1782%" y="53" width="0.0672%" height="15" fill="rgb(244,68,36)" fg:x="77231693" fg:w="1003009"/><text x="5.4282%" y="63.50"></text></g><g><title>&lt;chlang::board::Player as core::hash::Hash&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="5.1782%" y="165" width="0.1345%" height="15" fill="rgb(232,229,15)" fg:x="77231693" fg:w="2006018"/><text x="5.4282%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="5.1782%" y="149" width="0.1345%" height="15" fill="rgb(254,30,23)" fg:x="77231693" fg:w="2006018"/><text x="5.4282%" y="159.50"></text></g><g><title>core::hash::Hasher::write_isize (2,006,018 samples, 0.13%)</title><rect x="5.1782%" y="133" width="0.1345%" height="15" fill="rgb(235,160,14)" fg:x="77231693" fg:w="2006018"/><text x="5.4282%" y="143.50"></text></g><g><title>core::hash::Hasher::write_usize (2,006,018 samples, 0.13%)</title><rect x="5.1782%" y="117" width="0.1345%" height="15" fill="rgb(212,155,44)" fg:x="77231693" fg:w="2006018"/><text x="5.4282%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="5.1782%" y="101" width="0.1345%" height="15" fill="rgb(226,2,50)" fg:x="77231693" fg:w="2006018"/><text x="5.4282%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="5.1782%" y="85" width="0.1345%" height="15" fill="rgb(234,177,6)" fg:x="77231693" fg:w="2006018"/><text x="5.4282%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.13%)</title><rect x="5.1782%" y="69" width="0.1345%" height="15" fill="rgb(217,24,9)" fg:x="77231693" fg:w="2006018"/><text x="5.4282%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,003,009 samples, 0.07%)</title><rect x="5.2455%" y="53" width="0.0672%" height="15" fill="rgb(220,13,46)" fg:x="78234702" fg:w="1003009"/><text x="5.4955%" y="63.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,003,009 samples, 0.07%)</title><rect x="5.2455%" y="37" width="0.0672%" height="15" fill="rgb(239,221,27)" fg:x="78234702" fg:w="1003009"/><text x="5.4955%" y="47.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (29,087,261 samples, 1.95%)</title><rect x="3.4297%" y="389" width="1.9502%" height="15" fill="rgb(222,198,25)" fg:x="51153459" fg:w="29087261"/><text x="3.6797%" y="399.50">s..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (29,087,261 samples, 1.95%)</title><rect x="3.4297%" y="373" width="1.9502%" height="15" fill="rgb(211,99,13)" fg:x="51153459" fg:w="29087261"/><text x="3.6797%" y="383.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (13,039,117 samples, 0.87%)</title><rect x="4.5057%" y="357" width="0.8742%" height="15" fill="rgb(232,111,31)" fg:x="67201603" fg:w="13039117"/><text x="4.7557%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13,039,117 samples, 0.87%)</title><rect x="4.5057%" y="341" width="0.8742%" height="15" fill="rgb(245,82,37)" fg:x="67201603" fg:w="13039117"/><text x="4.7557%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13,039,117 samples, 0.87%)</title><rect x="4.5057%" y="325" width="0.8742%" height="15" fill="rgb(227,149,46)" fg:x="67201603" fg:w="13039117"/><text x="4.7557%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (13,039,117 samples, 0.87%)</title><rect x="4.5057%" y="309" width="0.8742%" height="15" fill="rgb(218,36,50)" fg:x="67201603" fg:w="13039117"/><text x="4.7557%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (13,039,117 samples, 0.87%)</title><rect x="4.5057%" y="293" width="0.8742%" height="15" fill="rgb(226,80,48)" fg:x="67201603" fg:w="13039117"/><text x="4.7557%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (12,036,108 samples, 0.81%)</title><rect x="4.5730%" y="277" width="0.8070%" height="15" fill="rgb(238,224,15)" fg:x="68204612" fg:w="12036108"/><text x="4.8230%" y="287.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (12,036,108 samples, 0.81%)</title><rect x="4.5730%" y="261" width="0.8070%" height="15" fill="rgb(241,136,10)" fg:x="68204612" fg:w="12036108"/><text x="4.8230%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (12,036,108 samples, 0.81%)</title><rect x="4.5730%" y="245" width="0.8070%" height="15" fill="rgb(208,32,45)" fg:x="68204612" fg:w="12036108"/><text x="4.8230%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,036,108 samples, 0.81%)</title><rect x="4.5730%" y="229" width="0.8070%" height="15" fill="rgb(207,135,9)" fg:x="68204612" fg:w="12036108"/><text x="4.8230%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12,036,108 samples, 0.81%)</title><rect x="4.5730%" y="213" width="0.8070%" height="15" fill="rgb(206,86,44)" fg:x="68204612" fg:w="12036108"/><text x="4.8230%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (12,036,108 samples, 0.81%)</title><rect x="4.5730%" y="197" width="0.8070%" height="15" fill="rgb(245,177,15)" fg:x="68204612" fg:w="12036108"/><text x="4.8230%" y="207.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (11,033,099 samples, 0.74%)</title><rect x="4.6402%" y="181" width="0.7397%" height="15" fill="rgb(206,64,50)" fg:x="69207621" fg:w="11033099"/><text x="4.8902%" y="191.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (10,030,090 samples, 0.67%)</title><rect x="5.3800%" y="389" width="0.6725%" height="15" fill="rgb(234,36,40)" fg:x="80240720" fg:w="10030090"/><text x="5.6300%" y="399.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (10,030,090 samples, 0.67%)</title><rect x="5.3800%" y="373" width="0.6725%" height="15" fill="rgb(213,64,8)" fg:x="80240720" fg:w="10030090"/><text x="5.6300%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (10,030,090 samples, 0.67%)</title><rect x="5.3800%" y="357" width="0.6725%" height="15" fill="rgb(210,75,36)" fg:x="80240720" fg:w="10030090"/><text x="5.6300%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (10,030,090 samples, 0.67%)</title><rect x="5.3800%" y="341" width="0.6725%" height="15" fill="rgb(229,88,21)" fg:x="80240720" fg:w="10030090"/><text x="5.6300%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10,030,090 samples, 0.67%)</title><rect x="5.3800%" y="325" width="0.6725%" height="15" fill="rgb(252,204,47)" fg:x="80240720" fg:w="10030090"/><text x="5.6300%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10,030,090 samples, 0.67%)</title><rect x="5.3800%" y="309" width="0.6725%" height="15" fill="rgb(208,77,27)" fg:x="80240720" fg:w="10030090"/><text x="5.6300%" y="319.50"></text></g><g><title>core::ptr::write (10,030,090 samples, 0.67%)</title><rect x="5.3800%" y="293" width="0.6725%" height="15" fill="rgb(221,76,26)" fg:x="80240720" fg:w="10030090"/><text x="5.6300%" y="303.50"></text></g><g><title>chlang::board::Board::key (1,003,009 samples, 0.07%)</title><rect x="6.0525%" y="389" width="0.0672%" height="15" fill="rgb(225,139,18)" fg:x="90270810" fg:w="1003009"/><text x="6.3025%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="373" width="0.0672%" height="15" fill="rgb(230,137,11)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="357" width="0.0672%" height="15" fill="rgb(212,28,1)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="341" width="0.0672%" height="15" fill="rgb(248,164,17)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="325" width="0.0672%" height="15" fill="rgb(222,171,42)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="309" width="0.0672%" height="15" fill="rgb(243,84,45)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="293" width="0.0672%" height="15" fill="rgb(252,49,23)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="303.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="277" width="0.0672%" height="15" fill="rgb(215,19,7)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="287.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="6.1197%" y="261" width="0.0672%" height="15" fill="rgb(238,81,41)" fg:x="91273819" fg:w="1003009"/><text x="6.3697%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,003,009 samples, 0.07%)</title><rect x="6.1870%" y="293" width="0.0672%" height="15" fill="rgb(210,199,37)" fg:x="92276828" fg:w="1003009"/><text x="6.4370%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,003,009 samples, 0.07%)</title><rect x="6.1870%" y="277" width="0.0672%" height="15" fill="rgb(244,192,49)" fg:x="92276828" fg:w="1003009"/><text x="6.4370%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,003,009 samples, 0.07%)</title><rect x="6.1870%" y="261" width="0.0672%" height="15" fill="rgb(226,211,11)" fg:x="92276828" fg:w="1003009"/><text x="6.4370%" y="271.50"></text></g><g><title>hashbrown::raw::h2 (1,003,009 samples, 0.07%)</title><rect x="6.2542%" y="293" width="0.0672%" height="15" fill="rgb(236,162,54)" fg:x="93279837" fg:w="1003009"/><text x="6.5042%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,012,036 samples, 0.27%)</title><rect x="6.1870%" y="325" width="0.2690%" height="15" fill="rgb(220,229,9)" fg:x="92276828" fg:w="4012036"/><text x="6.4370%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,012,036 samples, 0.27%)</title><rect x="6.1870%" y="309" width="0.2690%" height="15" fill="rgb(250,87,22)" fg:x="92276828" fg:w="4012036"/><text x="6.4370%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (2,006,018 samples, 0.13%)</title><rect x="6.3215%" y="293" width="0.1345%" height="15" fill="rgb(239,43,17)" fg:x="94282846" fg:w="2006018"/><text x="6.5715%" y="303.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="6.4560%" y="245" width="0.0672%" height="15" fill="rgb(231,177,25)" fg:x="96288864" fg:w="1003009"/><text x="6.7060%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="6.4560%" y="229" width="0.0672%" height="15" fill="rgb(219,179,1)" fg:x="96288864" fg:w="1003009"/><text x="6.7060%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (1,003,009 samples, 0.07%)</title><rect x="6.4560%" y="213" width="0.0672%" height="15" fill="rgb(238,219,53)" fg:x="96288864" fg:w="1003009"/><text x="6.7060%" y="223.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="6.4560%" y="197" width="0.0672%" height="15" fill="rgb(232,167,36)" fg:x="96288864" fg:w="1003009"/><text x="6.7060%" y="207.50"></text></g><g><title>rustc_hash::hash_bytes (1,003,009 samples, 0.07%)</title><rect x="6.4560%" y="181" width="0.0672%" height="15" fill="rgb(244,19,51)" fg:x="96288864" fg:w="1003009"/><text x="6.7060%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (3,009,027 samples, 0.20%)</title><rect x="6.4560%" y="325" width="0.2017%" height="15" fill="rgb(224,6,22)" fg:x="96288864" fg:w="3009027"/><text x="6.7060%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,009,027 samples, 0.20%)</title><rect x="6.4560%" y="309" width="0.2017%" height="15" fill="rgb(224,145,5)" fg:x="96288864" fg:w="3009027"/><text x="6.7060%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,009,027 samples, 0.20%)</title><rect x="6.4560%" y="293" width="0.2017%" height="15" fill="rgb(234,130,49)" fg:x="96288864" fg:w="3009027"/><text x="6.7060%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,009,027 samples, 0.20%)</title><rect x="6.4560%" y="277" width="0.2017%" height="15" fill="rgb(254,6,2)" fg:x="96288864" fg:w="3009027"/><text x="6.7060%" y="287.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (3,009,027 samples, 0.20%)</title><rect x="6.4560%" y="261" width="0.2017%" height="15" fill="rgb(208,96,46)" fg:x="96288864" fg:w="3009027"/><text x="6.7060%" y="271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="6.5232%" y="245" width="0.1345%" height="15" fill="rgb(239,3,39)" fg:x="97291873" fg:w="2006018"/><text x="6.7732%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,003,009 samples, 0.07%)</title><rect x="6.6577%" y="213" width="0.0672%" height="15" fill="rgb(233,210,1)" fg:x="99297891" fg:w="1003009"/><text x="6.9077%" y="223.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,003,009 samples, 0.07%)</title><rect x="6.6577%" y="197" width="0.0672%" height="15" fill="rgb(244,137,37)" fg:x="99297891" fg:w="1003009"/><text x="6.9077%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (2,006,018 samples, 0.13%)</title><rect x="6.6577%" y="245" width="0.1345%" height="15" fill="rgb(240,136,2)" fg:x="99297891" fg:w="2006018"/><text x="6.9077%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (2,006,018 samples, 0.13%)</title><rect x="6.6577%" y="229" width="0.1345%" height="15" fill="rgb(239,18,37)" fg:x="99297891" fg:w="2006018"/><text x="6.9077%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1,003,009 samples, 0.07%)</title><rect x="6.7249%" y="213" width="0.0672%" height="15" fill="rgb(218,185,22)" fg:x="100300900" fg:w="1003009"/><text x="6.9749%" y="223.50"></text></g><g><title>core::intrinsics::write_bytes (1,003,009 samples, 0.07%)</title><rect x="6.7249%" y="197" width="0.0672%" height="15" fill="rgb(225,218,4)" fg:x="100300900" fg:w="1003009"/><text x="6.9749%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1,003,009 samples, 0.07%)</title><rect x="6.7922%" y="197" width="0.0672%" height="15" fill="rgb(230,182,32)" fg:x="101303909" fg:w="1003009"/><text x="7.0422%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,003,009 samples, 0.07%)</title><rect x="6.7922%" y="181" width="0.0672%" height="15" fill="rgb(242,56,43)" fg:x="101303909" fg:w="1003009"/><text x="7.0422%" y="191.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,003,009 samples, 0.07%)</title><rect x="6.8594%" y="197" width="0.0672%" height="15" fill="rgb(233,99,24)" fg:x="102306918" fg:w="1003009"/><text x="7.1094%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (3,009,027 samples, 0.20%)</title><rect x="6.7922%" y="245" width="0.2017%" height="15" fill="rgb(234,209,42)" fg:x="101303909" fg:w="3009027"/><text x="7.0422%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (3,009,027 samples, 0.20%)</title><rect x="6.7922%" y="229" width="0.2017%" height="15" fill="rgb(227,7,12)" fg:x="101303909" fg:w="3009027"/><text x="7.0422%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3,009,027 samples, 0.20%)</title><rect x="6.7922%" y="213" width="0.2017%" height="15" fill="rgb(245,203,43)" fg:x="101303909" fg:w="3009027"/><text x="7.0422%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1,003,009 samples, 0.07%)</title><rect x="6.9267%" y="197" width="0.0672%" height="15" fill="rgb(238,205,33)" fg:x="103309927" fg:w="1003009"/><text x="7.1767%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="6.9939%" y="133" width="0.1345%" height="15" fill="rgb(231,56,7)" fg:x="104312936" fg:w="2006018"/><text x="7.2439%" y="143.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (2,006,018 samples, 0.13%)</title><rect x="6.9939%" y="117" width="0.1345%" height="15" fill="rgb(244,186,29)" fg:x="104312936" fg:w="2006018"/><text x="7.2439%" y="127.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2,006,018 samples, 0.13%)</title><rect x="6.9939%" y="101" width="0.1345%" height="15" fill="rgb(234,111,31)" fg:x="104312936" fg:w="2006018"/><text x="7.2439%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2,006,018 samples, 0.13%)</title><rect x="6.9939%" y="85" width="0.1345%" height="15" fill="rgb(241,149,10)" fg:x="104312936" fg:w="2006018"/><text x="7.2439%" y="95.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (1,003,009 samples, 0.07%)</title><rect x="7.1284%" y="101" width="0.0672%" height="15" fill="rgb(249,206,44)" fg:x="106318954" fg:w="1003009"/><text x="7.3784%" y="111.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1,003,009 samples, 0.07%)</title><rect x="7.1284%" y="85" width="0.0672%" height="15" fill="rgb(251,153,30)" fg:x="106318954" fg:w="1003009"/><text x="7.3784%" y="95.50"></text></g><g><title>rustc_hash::hash_bytes (1,003,009 samples, 0.07%)</title><rect x="7.1284%" y="69" width="0.0672%" height="15" fill="rgb(239,152,38)" fg:x="106318954" fg:w="1003009"/><text x="7.3784%" y="79.50"></text></g><g><title>rustc_hash::multiply_mix (1,003,009 samples, 0.07%)</title><rect x="7.1284%" y="53" width="0.0672%" height="15" fill="rgb(249,139,47)" fg:x="106318954" fg:w="1003009"/><text x="7.3784%" y="63.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,012,036 samples, 0.27%)</title><rect x="6.9939%" y="165" width="0.2690%" height="15" fill="rgb(244,64,35)" fg:x="104312936" fg:w="4012036"/><text x="7.2439%" y="175.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (4,012,036 samples, 0.27%)</title><rect x="6.9939%" y="149" width="0.2690%" height="15" fill="rgb(216,46,15)" fg:x="104312936" fg:w="4012036"/><text x="7.2439%" y="159.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="7.1284%" y="133" width="0.1345%" height="15" fill="rgb(250,74,19)" fg:x="106318954" fg:w="2006018"/><text x="7.3784%" y="143.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2,006,018 samples, 0.13%)</title><rect x="7.1284%" y="117" width="0.1345%" height="15" fill="rgb(249,42,33)" fg:x="106318954" fg:w="2006018"/><text x="7.3784%" y="127.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1,003,009 samples, 0.07%)</title><rect x="7.1957%" y="101" width="0.0672%" height="15" fill="rgb(242,149,17)" fg:x="107321963" fg:w="1003009"/><text x="7.4457%" y="111.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (1,003,009 samples, 0.07%)</title><rect x="7.1957%" y="85" width="0.0672%" height="15" fill="rgb(244,29,21)" fg:x="107321963" fg:w="1003009"/><text x="7.4457%" y="95.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1,003,009 samples, 0.07%)</title><rect x="7.1957%" y="69" width="0.0672%" height="15" fill="rgb(220,130,37)" fg:x="107321963" fg:w="1003009"/><text x="7.4457%" y="79.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1,003,009 samples, 0.07%)</title><rect x="7.1957%" y="53" width="0.0672%" height="15" fill="rgb(211,67,2)" fg:x="107321963" fg:w="1003009"/><text x="7.4457%" y="63.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (5,015,045 samples, 0.34%)</title><rect x="6.9939%" y="245" width="0.3362%" height="15" fill="rgb(235,68,52)" fg:x="104312936" fg:w="5015045"/><text x="7.2439%" y="255.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (5,015,045 samples, 0.34%)</title><rect x="6.9939%" y="229" width="0.3362%" height="15" fill="rgb(246,142,3)" fg:x="104312936" fg:w="5015045"/><text x="7.2439%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (5,015,045 samples, 0.34%)</title><rect x="6.9939%" y="213" width="0.3362%" height="15" fill="rgb(241,25,7)" fg:x="104312936" fg:w="5015045"/><text x="7.2439%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,015,045 samples, 0.34%)</title><rect x="6.9939%" y="197" width="0.3362%" height="15" fill="rgb(242,119,39)" fg:x="104312936" fg:w="5015045"/><text x="7.2439%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5,015,045 samples, 0.34%)</title><rect x="6.9939%" y="181" width="0.3362%" height="15" fill="rgb(241,98,45)" fg:x="104312936" fg:w="5015045"/><text x="7.2439%" y="191.50"></text></g><g><title>__rust_dealloc (1,003,009 samples, 0.07%)</title><rect x="7.3302%" y="149" width="0.0672%" height="15" fill="rgb(254,28,30)" fg:x="109327981" fg:w="1003009"/><text x="7.5802%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (12,036,108 samples, 0.81%)</title><rect x="6.6577%" y="277" width="0.8070%" height="15" fill="rgb(241,142,54)" fg:x="99297891" fg:w="12036108"/><text x="6.9077%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (12,036,108 samples, 0.81%)</title><rect x="6.6577%" y="261" width="0.8070%" height="15" fill="rgb(222,85,15)" fg:x="99297891" fg:w="12036108"/><text x="6.9077%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize&lt;alloc::alloc::Global&gt;::{{closure}}&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="7.3302%" y="245" width="0.1345%" height="15" fill="rgb(210,85,47)" fg:x="109327981" fg:w="2006018"/><text x="7.5802%" y="255.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.13%)</title><rect x="7.3302%" y="229" width="0.1345%" height="15" fill="rgb(224,206,25)" fg:x="109327981" fg:w="2006018"/><text x="7.5802%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize::{{closure}} (2,006,018 samples, 0.13%)</title><rect x="7.3302%" y="213" width="0.1345%" height="15" fill="rgb(243,201,19)" fg:x="109327981" fg:w="2006018"/><text x="7.5802%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,006,018 samples, 0.13%)</title><rect x="7.3302%" y="197" width="0.1345%" height="15" fill="rgb(236,59,4)" fg:x="109327981" fg:w="2006018"/><text x="7.5802%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="7.3302%" y="181" width="0.1345%" height="15" fill="rgb(254,179,45)" fg:x="109327981" fg:w="2006018"/><text x="7.5802%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.13%)</title><rect x="7.3302%" y="165" width="0.1345%" height="15" fill="rgb(226,14,10)" fg:x="109327981" fg:w="2006018"/><text x="7.5802%" y="175.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="7.3974%" y="149" width="0.0672%" height="15" fill="rgb(244,27,41)" fg:x="110330990" fg:w="1003009"/><text x="7.6474%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (13,039,117 samples, 0.87%)</title><rect x="6.6577%" y="325" width="0.8742%" height="15" fill="rgb(235,35,32)" fg:x="99297891" fg:w="13039117"/><text x="6.9077%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13,039,117 samples, 0.87%)</title><rect x="6.6577%" y="309" width="0.8742%" height="15" fill="rgb(218,68,31)" fg:x="99297891" fg:w="13039117"/><text x="6.9077%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13,039,117 samples, 0.87%)</title><rect x="6.6577%" y="293" width="0.8742%" height="15" fill="rgb(207,120,37)" fg:x="99297891" fg:w="13039117"/><text x="6.9077%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (21,063,189 samples, 1.41%)</title><rect x="6.1870%" y="357" width="1.4122%" height="15" fill="rgb(227,98,0)" fg:x="92276828" fg:w="21063189"/><text x="6.4370%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (21,063,189 samples, 1.41%)</title><rect x="6.1870%" y="341" width="1.4122%" height="15" fill="rgb(207,7,3)" fg:x="92276828" fg:w="21063189"/><text x="6.4370%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1,003,009 samples, 0.07%)</title><rect x="7.5992%" y="261" width="0.0672%" height="15" fill="rgb(206,98,19)" fg:x="113340017" fg:w="1003009"/><text x="7.8492%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1,003,009 samples, 0.07%)</title><rect x="7.5992%" y="245" width="0.0672%" height="15" fill="rgb(217,5,26)" fg:x="113340017" fg:w="1003009"/><text x="7.8492%" y="255.50"></text></g><g><title>hashbrown::raw::is_full (1,003,009 samples, 0.07%)</title><rect x="7.5992%" y="229" width="0.0672%" height="15" fill="rgb(235,190,38)" fg:x="113340017" fg:w="1003009"/><text x="7.8492%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2,006,018 samples, 0.13%)</title><rect x="7.6664%" y="245" width="0.1345%" height="15" fill="rgb(247,86,24)" fg:x="114343026" fg:w="2006018"/><text x="7.9164%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,006,018 samples, 0.13%)</title><rect x="7.6664%" y="229" width="0.1345%" height="15" fill="rgb(205,101,16)" fg:x="114343026" fg:w="2006018"/><text x="7.9164%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3,009,027 samples, 0.20%)</title><rect x="7.6664%" y="261" width="0.2017%" height="15" fill="rgb(246,168,33)" fg:x="114343026" fg:w="3009027"/><text x="7.9164%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,003,009 samples, 0.07%)</title><rect x="7.8009%" y="245" width="0.0672%" height="15" fill="rgb(231,114,1)" fg:x="116349044" fg:w="1003009"/><text x="8.0509%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (6,018,054 samples, 0.40%)</title><rect x="7.5992%" y="293" width="0.4035%" height="15" fill="rgb(207,184,53)" fg:x="113340017" fg:w="6018054"/><text x="7.8492%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (6,018,054 samples, 0.40%)</title><rect x="7.5992%" y="277" width="0.4035%" height="15" fill="rgb(224,95,51)" fg:x="113340017" fg:w="6018054"/><text x="7.8492%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,006,018 samples, 0.13%)</title><rect x="7.8682%" y="261" width="0.1345%" height="15" fill="rgb(212,188,45)" fg:x="117352053" fg:w="2006018"/><text x="8.1182%" y="271.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (7,021,063 samples, 0.47%)</title><rect x="7.5992%" y="357" width="0.4707%" height="15" fill="rgb(223,154,38)" fg:x="113340017" fg:w="7021063"/><text x="7.8492%" y="367.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (7,021,063 samples, 0.47%)</title><rect x="7.5992%" y="341" width="0.4707%" height="15" fill="rgb(251,22,52)" fg:x="113340017" fg:w="7021063"/><text x="7.8492%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (7,021,063 samples, 0.47%)</title><rect x="7.5992%" y="325" width="0.4707%" height="15" fill="rgb(229,209,22)" fg:x="113340017" fg:w="7021063"/><text x="7.8492%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (7,021,063 samples, 0.47%)</title><rect x="7.5992%" y="309" width="0.4707%" height="15" fill="rgb(234,138,34)" fg:x="113340017" fg:w="7021063"/><text x="7.8492%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket (1,003,009 samples, 0.07%)</title><rect x="8.0027%" y="293" width="0.0672%" height="15" fill="rgb(212,95,11)" fg:x="119358071" fg:w="1003009"/><text x="8.2527%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1,003,009 samples, 0.07%)</title><rect x="8.0027%" y="277" width="0.0672%" height="15" fill="rgb(240,179,47)" fg:x="119358071" fg:w="1003009"/><text x="8.2527%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1,003,009 samples, 0.07%)</title><rect x="8.0027%" y="261" width="0.0672%" height="15" fill="rgb(240,163,11)" fg:x="119358071" fg:w="1003009"/><text x="8.2527%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32,rustc_hash::FxBuildHasher&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="357" width="0.0672%" height="15" fill="rgb(236,37,12)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;chlang::board::KeyStruct,i32,rustc_hash::FxBuildHasher&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="341" width="0.0672%" height="15" fill="rgb(232,164,16)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;chlang::board::KeyStruct,i32)&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="325" width="0.0672%" height="15" fill="rgb(244,205,15)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="309" width="0.0672%" height="15" fill="rgb(223,117,47)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="293" width="0.0672%" height="15" fill="rgb(244,107,35)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="277" width="0.0672%" height="15" fill="rgb(205,140,8)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="261" width="0.0672%" height="15" fill="rgb(228,84,46)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="245" width="0.0672%" height="15" fill="rgb(254,188,9)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="255.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="229" width="0.0672%" height="15" fill="rgb(206,112,54)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="239.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="8.0699%" y="213" width="0.0672%" height="15" fill="rgb(216,84,49)" fg:x="120361080" fg:w="1003009"/><text x="8.3199%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (2,006,018 samples, 0.13%)</title><rect x="8.1372%" y="357" width="0.1345%" height="15" fill="rgb(214,194,35)" fg:x="121364089" fg:w="2006018"/><text x="8.3872%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (2,006,018 samples, 0.13%)</title><rect x="8.2717%" y="357" width="0.1345%" height="15" fill="rgb(249,28,3)" fg:x="123370107" fg:w="2006018"/><text x="8.5217%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (2,006,018 samples, 0.13%)</title><rect x="8.2717%" y="341" width="0.1345%" height="15" fill="rgb(222,56,52)" fg:x="123370107" fg:w="2006018"/><text x="8.5217%" y="351.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (34,102,306 samples, 2.29%)</title><rect x="6.1870%" y="373" width="2.2865%" height="15" fill="rgb(245,217,50)" fg:x="92276828" fg:w="34102306"/><text x="6.4370%" y="383.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,003,009 samples, 0.07%)</title><rect x="8.4062%" y="357" width="0.0672%" height="15" fill="rgb(213,201,24)" fg:x="125376125" fg:w="1003009"/><text x="8.6562%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,003,009 samples, 0.07%)</title><rect x="8.4062%" y="341" width="0.0672%" height="15" fill="rgb(248,116,28)" fg:x="125376125" fg:w="1003009"/><text x="8.6562%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,003,009 samples, 0.07%)</title><rect x="8.4062%" y="325" width="0.0672%" height="15" fill="rgb(219,72,43)" fg:x="125376125" fg:w="1003009"/><text x="8.6562%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,003,009 samples, 0.07%)</title><rect x="8.4062%" y="309" width="0.0672%" height="15" fill="rgb(209,138,14)" fg:x="125376125" fg:w="1003009"/><text x="8.6562%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,003,009 samples, 0.07%)</title><rect x="8.4062%" y="293" width="0.0672%" height="15" fill="rgb(222,18,33)" fg:x="125376125" fg:w="1003009"/><text x="8.6562%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,003,009 samples, 0.07%)</title><rect x="8.4062%" y="277" width="0.0672%" height="15" fill="rgb(213,199,7)" fg:x="125376125" fg:w="1003009"/><text x="8.6562%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2,006,018 samples, 0.13%)</title><rect x="8.4734%" y="357" width="0.1345%" height="15" fill="rgb(250,110,10)" fg:x="126379134" fg:w="2006018"/><text x="8.7234%" y="367.50"></text></g><g><title>core::ptr::read (4,012,036 samples, 0.27%)</title><rect x="8.6079%" y="325" width="0.2690%" height="15" fill="rgb(248,123,6)" fg:x="128385152" fg:w="4012036"/><text x="8.8579%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5,015,045 samples, 0.34%)</title><rect x="8.6079%" y="341" width="0.3362%" height="15" fill="rgb(206,91,31)" fg:x="128385152" fg:w="5015045"/><text x="8.8579%" y="351.50"></text></g><g><title>chlang::board::Board::unmake_last (7,021,063 samples, 0.47%)</title><rect x="8.6079%" y="357" width="0.4707%" height="15" fill="rgb(211,154,13)" fg:x="128385152" fg:w="7021063"/><text x="8.8579%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.27%)</title><rect x="9.0787%" y="277" width="0.2690%" height="15" fill="rgb(225,148,7)" fg:x="135406215" fg:w="4012036"/><text x="9.3287%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,018,054 samples, 0.40%)</title><rect x="9.0787%" y="293" width="0.4035%" height="15" fill="rgb(220,160,43)" fg:x="135406215" fg:w="6018054"/><text x="9.3287%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (10,030,090 samples, 0.67%)</title><rect x="9.0787%" y="341" width="0.6725%" height="15" fill="rgb(213,52,39)" fg:x="135406215" fg:w="10030090"/><text x="9.3287%" y="351.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (10,030,090 samples, 0.67%)</title><rect x="9.0787%" y="325" width="0.6725%" height="15" fill="rgb(243,137,7)" fg:x="135406215" fg:w="10030090"/><text x="9.3287%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (10,030,090 samples, 0.67%)</title><rect x="9.0787%" y="309" width="0.6725%" height="15" fill="rgb(230,79,13)" fg:x="135406215" fg:w="10030090"/><text x="9.3287%" y="319.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (4,012,036 samples, 0.27%)</title><rect x="9.4822%" y="293" width="0.2690%" height="15" fill="rgb(247,105,23)" fg:x="141424269" fg:w="4012036"/><text x="9.7322%" y="303.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.27%)</title><rect x="9.4822%" y="277" width="0.2690%" height="15" fill="rgb(223,179,41)" fg:x="141424269" fg:w="4012036"/><text x="9.7322%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,003,009 samples, 0.07%)</title><rect x="9.7512%" y="277" width="0.0672%" height="15" fill="rgb(218,9,34)" fg:x="145436305" fg:w="1003009"/><text x="10.0012%" y="287.50"></text></g><g><title>__rust_dealloc (7,021,063 samples, 0.47%)</title><rect x="9.8184%" y="245" width="0.4707%" height="15" fill="rgb(222,106,8)" fg:x="146439314" fg:w="7021063"/><text x="10.0684%" y="255.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.13%)</title><rect x="10.2892%" y="245" width="0.1345%" height="15" fill="rgb(211,220,0)" fg:x="153460377" fg:w="2006018"/><text x="10.5392%" y="255.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,006,018 samples, 0.13%)</title><rect x="10.2892%" y="229" width="0.1345%" height="15" fill="rgb(229,52,16)" fg:x="153460377" fg:w="2006018"/><text x="10.5392%" y="239.50"></text></g><g><title>tcache_put (2,006,018 samples, 0.13%)</title><rect x="10.4237%" y="213" width="0.1345%" height="15" fill="rgb(212,155,18)" fg:x="155466395" fg:w="2006018"/><text x="10.6737%" y="223.50"></text></g><g><title>_int_free (17,051,153 samples, 1.14%)</title><rect x="10.4237%" y="229" width="1.1432%" height="15" fill="rgb(242,21,14)" fg:x="155466395" fg:w="17051153"/><text x="10.6737%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (30,090,270 samples, 2.02%)</title><rect x="9.7512%" y="341" width="2.0175%" height="15" fill="rgb(222,19,48)" fg:x="145436305" fg:w="30090270"/><text x="10.0012%" y="351.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (30,090,270 samples, 2.02%)</title><rect x="9.7512%" y="325" width="2.0175%" height="15" fill="rgb(232,45,27)" fg:x="145436305" fg:w="30090270"/><text x="10.0012%" y="335.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 2.02%)</title><rect x="9.7512%" y="309" width="2.0175%" height="15" fill="rgb(249,103,42)" fg:x="145436305" fg:w="30090270"/><text x="10.0012%" y="319.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (30,090,270 samples, 2.02%)</title><rect x="9.7512%" y="293" width="2.0175%" height="15" fill="rgb(246,81,33)" fg:x="145436305" fg:w="30090270"/><text x="10.0012%" y="303.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29,087,261 samples, 1.95%)</title><rect x="9.8184%" y="277" width="1.9502%" height="15" fill="rgb(252,33,42)" fg:x="146439314" fg:w="29087261"/><text x="10.0684%" y="287.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (29,087,261 samples, 1.95%)</title><rect x="9.8184%" y="261" width="1.9502%" height="15" fill="rgb(209,212,41)" fg:x="146439314" fg:w="29087261"/><text x="10.0684%" y="271.50">a..</text></g><g><title>__GI___libc_free (20,060,180 samples, 1.34%)</title><rect x="10.4237%" y="245" width="1.3450%" height="15" fill="rgb(207,154,6)" fg:x="155466395" fg:w="20060180"/><text x="10.6737%" y="255.50"></text></g><g><title>core::num::&lt;impl i64&gt;::abs (1,003,009 samples, 0.07%)</title><rect x="11.7687%" y="341" width="0.0672%" height="15" fill="rgb(223,64,47)" fg:x="175526575" fg:w="1003009"/><text x="12.0187%" y="351.50"></text></g><g><title>chlang::cmove::Move::to (7,021,063 samples, 0.47%)</title><rect x="11.8359%" y="341" width="0.4707%" height="15" fill="rgb(211,161,38)" fg:x="176529584" fg:w="7021063"/><text x="12.0859%" y="351.50"></text></g><g><title>chlang::cmove::Move::from (2,006,018 samples, 0.13%)</title><rect x="12.3067%" y="341" width="0.1345%" height="15" fill="rgb(219,138,40)" fg:x="183550647" fg:w="2006018"/><text x="12.5567%" y="351.50"></text></g><g><title>chlang::board::Position::bitboard (2,006,018 samples, 0.13%)</title><rect x="12.4412%" y="341" width="0.1345%" height="15" fill="rgb(241,228,46)" fg:x="185556665" fg:w="2006018"/><text x="12.6912%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1,003,009 samples, 0.07%)</title><rect x="12.5757%" y="325" width="0.0672%" height="15" fill="rgb(223,209,38)" fg:x="187562683" fg:w="1003009"/><text x="12.8257%" y="335.50"></text></g><g><title>chlang::board::Board::unmake_last (2,006,018 samples, 0.13%)</title><rect x="12.5757%" y="341" width="0.1345%" height="15" fill="rgb(236,164,45)" fg:x="187562683" fg:w="2006018"/><text x="12.8257%" y="351.50"></text></g><g><title>chlang::board::Position::bitboard (1,003,009 samples, 0.07%)</title><rect x="12.7102%" y="325" width="0.0672%" height="15" fill="rgb(231,15,5)" fg:x="189568701" fg:w="1003009"/><text x="12.9602%" y="335.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::BitAnd&lt;u64&gt;&gt;::bitand (1,003,009 samples, 0.07%)</title><rect x="12.7774%" y="325" width="0.0672%" height="15" fill="rgb(252,35,15)" fg:x="190571710" fg:w="1003009"/><text x="13.0274%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (14,042,126 samples, 0.94%)</title><rect x="12.7102%" y="341" width="0.9415%" height="15" fill="rgb(248,181,18)" fg:x="189568701" fg:w="14042126"/><text x="12.9602%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.07%)</title><rect x="13.6516%" y="325" width="0.0672%" height="15" fill="rgb(233,39,42)" fg:x="203610827" fg:w="1003009"/><text x="13.9016%" y="335.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (8,024,072 samples, 0.54%)</title><rect x="13.7189%" y="325" width="0.5380%" height="15" fill="rgb(238,110,33)" fg:x="204613836" fg:w="8024072"/><text x="13.9689%" y="335.50"></text></g><g><title>chlang::board::Board::key (18,054,162 samples, 1.21%)</title><rect x="13.6516%" y="341" width="1.2105%" height="15" fill="rgb(233,195,10)" fg:x="203610827" fg:w="18054162"/><text x="13.9016%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (7,021,063 samples, 0.47%)</title><rect x="14.8621%" y="197" width="0.4707%" height="15" fill="rgb(254,105,3)" fg:x="221664989" fg:w="7021063"/><text x="15.1121%" y="207.50"></text></g><g><title>__rust_dealloc (20,060,180 samples, 1.34%)</title><rect x="15.3329%" y="165" width="1.3450%" height="15" fill="rgb(221,225,9)" fg:x="228686052" fg:w="20060180"/><text x="15.5829%" y="175.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (20,060,180 samples, 1.34%)</title><rect x="16.6779%" y="149" width="1.3450%" height="15" fill="rgb(224,227,45)" fg:x="248746232" fg:w="20060180"/><text x="16.9279%" y="159.50"></text></g><g><title>__rdl_dealloc (21,063,189 samples, 1.41%)</title><rect x="16.6779%" y="165" width="1.4122%" height="15" fill="rgb(229,198,43)" fg:x="248746232" fg:w="21063189"/><text x="16.9279%" y="175.50"></text></g><g><title>arena_for_chunk (1,003,009 samples, 0.07%)</title><rect x="18.0901%" y="149" width="0.0672%" height="15" fill="rgb(206,209,35)" fg:x="269809421" fg:w="1003009"/><text x="18.3401%" y="159.50"></text></g><g><title>tcache_put (15,045,135 samples, 1.01%)</title><rect x="18.1574%" y="133" width="1.0087%" height="15" fill="rgb(245,195,53)" fg:x="270812430" fg:w="15045135"/><text x="18.4074%" y="143.50"></text></g><g><title>_int_free (73,219,657 samples, 4.91%)</title><rect x="18.1574%" y="149" width="4.9092%" height="15" fill="rgb(240,92,26)" fg:x="270812430" fg:w="73219657"/><text x="18.4074%" y="159.50">_int_f..</text></g><g><title>__GI___libc_free (107,321,963 samples, 7.20%)</title><rect x="18.0901%" y="165" width="7.1957%" height="15" fill="rgb(207,40,23)" fg:x="269809421" fg:w="107321963"/><text x="18.3401%" y="175.50">__GI___lib..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (156,469,404 samples, 10.49%)</title><rect x="14.8621%" y="309" width="10.4909%" height="15" fill="rgb(223,111,35)" fg:x="221664989" fg:w="156469404"/><text x="15.1121%" y="319.50">core::ptr::drop..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156,469,404 samples, 10.49%)</title><rect x="14.8621%" y="293" width="10.4909%" height="15" fill="rgb(229,147,28)" fg:x="221664989" fg:w="156469404"/><text x="15.1121%" y="303.50">&lt;alloc::vec::in..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (156,469,404 samples, 10.49%)</title><rect x="14.8621%" y="277" width="10.4909%" height="15" fill="rgb(211,29,28)" fg:x="221664989" fg:w="156469404"/><text x="15.1121%" y="287.50">core::ptr::drop..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156,469,404 samples, 10.49%)</title><rect x="14.8621%" y="261" width="10.4909%" height="15" fill="rgb(228,72,33)" fg:x="221664989" fg:w="156469404"/><text x="15.1121%" y="271.50">&lt;&lt;alloc::vec::i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (156,469,404 samples, 10.49%)</title><rect x="14.8621%" y="245" width="10.4909%" height="15" fill="rgb(205,214,31)" fg:x="221664989" fg:w="156469404"/><text x="15.1121%" y="255.50">core::ptr::drop..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156,469,404 samples, 10.49%)</title><rect x="14.8621%" y="229" width="10.4909%" height="15" fill="rgb(224,111,15)" fg:x="221664989" fg:w="156469404"/><text x="15.1121%" y="239.50">&lt;alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (156,469,404 samples, 10.49%)</title><rect x="14.8621%" y="213" width="10.4909%" height="15" fill="rgb(253,21,26)" fg:x="221664989" fg:w="156469404"/><text x="15.1121%" y="223.50">alloc::raw_vec:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (149,448,341 samples, 10.02%)</title><rect x="15.3329%" y="197" width="10.0202%" height="15" fill="rgb(245,139,43)" fg:x="228686052" fg:w="149448341"/><text x="15.5829%" y="207.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::dealloc (149,448,341 samples, 10.02%)</title><rect x="15.3329%" y="181" width="10.0202%" height="15" fill="rgb(252,170,7)" fg:x="228686052" fg:w="149448341"/><text x="15.5829%" y="191.50">alloc::alloc::..</text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (4,012,036 samples, 0.27%)</title><rect x="25.3531%" y="309" width="0.2690%" height="15" fill="rgb(231,118,14)" fg:x="378134393" fg:w="4012036"/><text x="25.6031%" y="319.50"></text></g><g><title>chlang::cmove::Move::to (13,039,117 samples, 0.87%)</title><rect x="25.6221%" y="309" width="0.8742%" height="15" fill="rgb(238,83,0)" fg:x="382146429" fg:w="13039117"/><text x="25.8721%" y="319.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.20%)</title><rect x="26.4963%" y="293" width="0.2017%" height="15" fill="rgb(221,39,39)" fg:x="395185546" fg:w="3009027"/><text x="26.7463%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (35,105,315 samples, 2.35%)</title><rect x="26.4963%" y="309" width="2.3537%" height="15" fill="rgb(222,119,46)" fg:x="395185546" fg:w="35105315"/><text x="26.7463%" y="319.50">c..</text></g><g><title>chlang::board::Position::valid (5,015,045 samples, 0.34%)</title><rect x="28.8500%" y="293" width="0.3362%" height="15" fill="rgb(222,165,49)" fg:x="430290861" fg:w="5015045"/><text x="29.1000%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (6,018,054 samples, 0.40%)</title><rect x="29.1863%" y="293" width="0.4035%" height="15" fill="rgb(219,113,52)" fg:x="435305906" fg:w="6018054"/><text x="29.4363%" y="303.50"></text></g><g><title>__rust_alloc (1,003,009 samples, 0.07%)</title><rect x="29.5898%" y="165" width="0.0672%" height="15" fill="rgb(214,7,15)" fg:x="441323960" fg:w="1003009"/><text x="29.8398%" y="175.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.13%)</title><rect x="29.6570%" y="165" width="0.1345%" height="15" fill="rgb(235,32,4)" fg:x="442326969" fg:w="2006018"/><text x="29.9070%" y="175.50"></text></g><g><title>tcache_get (3,009,027 samples, 0.20%)</title><rect x="29.7915%" y="149" width="0.2017%" height="15" fill="rgb(238,90,54)" fg:x="444332987" fg:w="3009027"/><text x="30.0415%" y="159.50"></text></g><g><title>checked_request2size (1,003,009 samples, 0.07%)</title><rect x="29.9933%" y="149" width="0.0672%" height="15" fill="rgb(213,208,19)" fg:x="447342014" fg:w="1003009"/><text x="30.2433%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19,057,171 samples, 1.28%)</title><rect x="29.5898%" y="213" width="1.2777%" height="15" fill="rgb(233,156,4)" fg:x="441323960" fg:w="19057171"/><text x="29.8398%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19,057,171 samples, 1.28%)</title><rect x="29.5898%" y="197" width="1.2777%" height="15" fill="rgb(207,194,5)" fg:x="441323960" fg:w="19057171"/><text x="29.8398%" y="207.50"></text></g><g><title>alloc::alloc::alloc (19,057,171 samples, 1.28%)</title><rect x="29.5898%" y="181" width="1.2777%" height="15" fill="rgb(206,111,30)" fg:x="441323960" fg:w="19057171"/><text x="29.8398%" y="191.50"></text></g><g><title>__GI___libc_malloc (16,048,144 samples, 1.08%)</title><rect x="29.7915%" y="165" width="1.0760%" height="15" fill="rgb(243,70,54)" fg:x="444332987" fg:w="16048144"/><text x="30.0415%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20,060,180 samples, 1.34%)</title><rect x="29.5898%" y="261" width="1.3450%" height="15" fill="rgb(242,28,8)" fg:x="441323960" fg:w="20060180"/><text x="29.8398%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (20,060,180 samples, 1.34%)</title><rect x="29.5898%" y="245" width="1.3450%" height="15" fill="rgb(219,106,18)" fg:x="441323960" fg:w="20060180"/><text x="29.8398%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (20,060,180 samples, 1.34%)</title><rect x="29.5898%" y="229" width="1.3450%" height="15" fill="rgb(244,222,10)" fg:x="441323960" fg:w="20060180"/><text x="29.8398%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21,063,189 samples, 1.41%)</title><rect x="29.5898%" y="293" width="1.4122%" height="15" fill="rgb(236,179,52)" fg:x="441323960" fg:w="21063189"/><text x="29.8398%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21,063,189 samples, 1.41%)</title><rect x="29.5898%" y="277" width="1.4122%" height="15" fill="rgb(213,23,39)" fg:x="441323960" fg:w="21063189"/><text x="29.8398%" y="287.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.13%)</title><rect x="31.0020%" y="277" width="0.1345%" height="15" fill="rgb(238,48,10)" fg:x="462387149" fg:w="2006018"/><text x="31.2520%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2,006,018 samples, 0.13%)</title><rect x="31.1365%" y="277" width="0.1345%" height="15" fill="rgb(251,196,23)" fg:x="464393167" fg:w="2006018"/><text x="31.3865%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.13%)</title><rect x="31.1365%" y="261" width="0.1345%" height="15" fill="rgb(250,152,24)" fg:x="464393167" fg:w="2006018"/><text x="31.3865%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.13%)</title><rect x="31.1365%" y="245" width="0.1345%" height="15" fill="rgb(209,150,17)" fg:x="464393167" fg:w="2006018"/><text x="31.3865%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.13%)</title><rect x="31.1365%" y="229" width="0.1345%" height="15" fill="rgb(234,202,34)" fg:x="464393167" fg:w="2006018"/><text x="31.3865%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16,048,144 samples, 1.08%)</title><rect x="31.0020%" y="293" width="1.0760%" height="15" fill="rgb(253,148,53)" fg:x="462387149" fg:w="16048144"/><text x="31.2520%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (1,003,009 samples, 0.07%)</title><rect x="32.0780%" y="293" width="0.0672%" height="15" fill="rgb(218,129,16)" fg:x="478435293" fg:w="1003009"/><text x="32.3280%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (1,003,009 samples, 0.07%)</title><rect x="32.0780%" y="277" width="0.0672%" height="15" fill="rgb(216,85,19)" fg:x="478435293" fg:w="1003009"/><text x="32.3280%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (84,252,756 samples, 5.65%)</title><rect x="28.8500%" y="309" width="5.6490%" height="15" fill="rgb(235,228,7)" fg:x="430290861" fg:w="84252756"/><text x="29.1000%" y="319.50">chlang:..</text></g><g><title>chlang::board::Position::valid (3,009,027 samples, 0.20%)</title><rect x="34.4990%" y="293" width="0.2017%" height="15" fill="rgb(245,175,0)" fg:x="514543617" fg:w="3009027"/><text x="34.7490%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (2,006,018 samples, 0.13%)</title><rect x="34.7007%" y="293" width="0.1345%" height="15" fill="rgb(208,168,36)" fg:x="517552644" fg:w="2006018"/><text x="34.9507%" y="303.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.13%)</title><rect x="34.8352%" y="165" width="0.1345%" height="15" fill="rgb(246,171,24)" fg:x="519558662" fg:w="2006018"/><text x="35.0852%" y="175.50"></text></g><g><title>__rdl_alloc (3,009,027 samples, 0.20%)</title><rect x="34.9697%" y="165" width="0.2017%" height="15" fill="rgb(215,142,24)" fg:x="521564680" fg:w="3009027"/><text x="35.2197%" y="175.50"></text></g><g><title>tcache_get (5,015,045 samples, 0.34%)</title><rect x="35.1715%" y="149" width="0.3362%" height="15" fill="rgb(250,187,7)" fg:x="524573707" fg:w="5015045"/><text x="35.4215%" y="159.50"></text></g><g><title>checked_request2size (1,003,009 samples, 0.07%)</title><rect x="35.5077%" y="149" width="0.0672%" height="15" fill="rgb(228,66,33)" fg:x="529588752" fg:w="1003009"/><text x="35.7577%" y="159.50"></text></g><g><title>__GI___libc_malloc (15,045,135 samples, 1.01%)</title><rect x="35.1715%" y="165" width="1.0087%" height="15" fill="rgb(234,215,21)" fg:x="524573707" fg:w="15045135"/><text x="35.4215%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21,063,189 samples, 1.41%)</title><rect x="34.8352%" y="213" width="1.4122%" height="15" fill="rgb(222,191,20)" fg:x="519558662" fg:w="21063189"/><text x="35.0852%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21,063,189 samples, 1.41%)</title><rect x="34.8352%" y="197" width="1.4122%" height="15" fill="rgb(245,79,54)" fg:x="519558662" fg:w="21063189"/><text x="35.0852%" y="207.50"></text></g><g><title>alloc::alloc::alloc (21,063,189 samples, 1.41%)</title><rect x="34.8352%" y="181" width="1.4122%" height="15" fill="rgb(240,10,37)" fg:x="519558662" fg:w="21063189"/><text x="35.0852%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (23,069,207 samples, 1.55%)</title><rect x="34.8352%" y="293" width="1.5467%" height="15" fill="rgb(214,192,32)" fg:x="519558662" fg:w="23069207"/><text x="35.0852%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23,069,207 samples, 1.55%)</title><rect x="34.8352%" y="277" width="1.5467%" height="15" fill="rgb(209,36,54)" fg:x="519558662" fg:w="23069207"/><text x="35.0852%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23,069,207 samples, 1.55%)</title><rect x="34.8352%" y="261" width="1.5467%" height="15" fill="rgb(220,10,11)" fg:x="519558662" fg:w="23069207"/><text x="35.0852%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (23,069,207 samples, 1.55%)</title><rect x="34.8352%" y="245" width="1.5467%" height="15" fill="rgb(221,106,17)" fg:x="519558662" fg:w="23069207"/><text x="35.0852%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (23,069,207 samples, 1.55%)</title><rect x="34.8352%" y="229" width="1.5467%" height="15" fill="rgb(251,142,44)" fg:x="519558662" fg:w="23069207"/><text x="35.0852%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="36.3820%" y="293" width="0.0672%" height="15" fill="rgb(238,13,15)" fg:x="542627869" fg:w="1003009"/><text x="36.6320%" y="303.50"></text></g><g><title>core::ptr::write (1,003,009 samples, 0.07%)</title><rect x="36.3820%" y="277" width="0.0672%" height="15" fill="rgb(208,107,27)" fg:x="542627869" fg:w="1003009"/><text x="36.6320%" y="287.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.13%)</title><rect x="36.4492%" y="277" width="0.1345%" height="15" fill="rgb(205,136,37)" fg:x="543630878" fg:w="2006018"/><text x="36.6992%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.20%)</title><rect x="36.4492%" y="293" width="0.2017%" height="15" fill="rgb(250,205,27)" fg:x="543630878" fg:w="3009027"/><text x="36.6992%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (46,138,414 samples, 3.09%)</title><rect x="34.4990%" y="309" width="3.0935%" height="15" fill="rgb(210,80,43)" fg:x="514543617" fg:w="46138414"/><text x="34.7490%" y="319.50">chl..</text></g><g><title>chlang::cmove::Move::new (3,009,027 samples, 0.20%)</title><rect x="37.5925%" y="293" width="0.2017%" height="15" fill="rgb(247,160,36)" fg:x="560682031" fg:w="3009027"/><text x="37.8425%" y="303.50"></text></g><g><title>chlang::board::Position::valid (10,030,090 samples, 0.67%)</title><rect x="37.7942%" y="293" width="0.6725%" height="15" fill="rgb(234,13,49)" fg:x="563691058" fg:w="10030090"/><text x="38.0442%" y="303.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.13%)</title><rect x="38.4667%" y="165" width="0.1345%" height="15" fill="rgb(234,122,0)" fg:x="573721148" fg:w="2006018"/><text x="38.7167%" y="175.50"></text></g><g><title>__rdl_alloc (1,003,009 samples, 0.07%)</title><rect x="38.6012%" y="165" width="0.0672%" height="15" fill="rgb(207,146,38)" fg:x="575727166" fg:w="1003009"/><text x="38.8512%" y="175.50"></text></g><g><title>tcache_get (3,009,027 samples, 0.20%)</title><rect x="38.6685%" y="149" width="0.2017%" height="15" fill="rgb(207,177,25)" fg:x="576730175" fg:w="3009027"/><text x="38.9185%" y="159.50"></text></g><g><title>__GI___libc_malloc (18,054,162 samples, 1.21%)</title><rect x="38.6685%" y="165" width="1.2105%" height="15" fill="rgb(211,178,42)" fg:x="576730175" fg:w="18054162"/><text x="38.9185%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22,066,198 samples, 1.48%)</title><rect x="38.4667%" y="213" width="1.4795%" height="15" fill="rgb(230,69,54)" fg:x="573721148" fg:w="22066198"/><text x="38.7167%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22,066,198 samples, 1.48%)</title><rect x="38.4667%" y="197" width="1.4795%" height="15" fill="rgb(214,135,41)" fg:x="573721148" fg:w="22066198"/><text x="38.7167%" y="207.50"></text></g><g><title>alloc::alloc::alloc (22,066,198 samples, 1.48%)</title><rect x="38.4667%" y="181" width="1.4795%" height="15" fill="rgb(237,67,25)" fg:x="573721148" fg:w="22066198"/><text x="38.7167%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (24,072,216 samples, 1.61%)</title><rect x="38.4667%" y="293" width="1.6140%" height="15" fill="rgb(222,189,50)" fg:x="573721148" fg:w="24072216"/><text x="38.7167%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24,072,216 samples, 1.61%)</title><rect x="38.4667%" y="277" width="1.6140%" height="15" fill="rgb(245,148,34)" fg:x="573721148" fg:w="24072216"/><text x="38.7167%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24,072,216 samples, 1.61%)</title><rect x="38.4667%" y="261" width="1.6140%" height="15" fill="rgb(222,29,6)" fg:x="573721148" fg:w="24072216"/><text x="38.7167%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (24,072,216 samples, 1.61%)</title><rect x="38.4667%" y="245" width="1.6140%" height="15" fill="rgb(221,189,43)" fg:x="573721148" fg:w="24072216"/><text x="38.7167%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (24,072,216 samples, 1.61%)</title><rect x="38.4667%" y="229" width="1.6140%" height="15" fill="rgb(207,36,27)" fg:x="573721148" fg:w="24072216"/><text x="38.7167%" y="239.50"></text></g><g><title>core::ptr::write (1,003,009 samples, 0.07%)</title><rect x="40.0807%" y="277" width="0.0672%" height="15" fill="rgb(217,90,24)" fg:x="597793364" fg:w="1003009"/><text x="40.3307%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7,021,063 samples, 0.47%)</title><rect x="40.0807%" y="293" width="0.4707%" height="15" fill="rgb(224,66,35)" fg:x="597793364" fg:w="7021063"/><text x="40.3307%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (2,006,018 samples, 0.13%)</title><rect x="40.5514%" y="293" width="0.1345%" height="15" fill="rgb(221,13,50)" fg:x="604814427" fg:w="2006018"/><text x="40.8014%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (2,006,018 samples, 0.13%)</title><rect x="40.5514%" y="277" width="0.1345%" height="15" fill="rgb(236,68,49)" fg:x="604814427" fg:w="2006018"/><text x="40.8014%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (61,183,549 samples, 4.10%)</title><rect x="37.5925%" y="309" width="4.1022%" height="15" fill="rgb(229,146,28)" fg:x="560682031" fg:w="61183549"/><text x="37.8425%" y="319.50">chla..</text></g><g><title>chlang::cmove::Move::new (6,018,054 samples, 0.40%)</title><rect x="41.6947%" y="293" width="0.4035%" height="15" fill="rgb(225,31,38)" fg:x="621865580" fg:w="6018054"/><text x="41.9447%" y="303.50"></text></g><g><title>chlang::board::Position::valid (5,015,045 samples, 0.34%)</title><rect x="42.0982%" y="293" width="0.3362%" height="15" fill="rgb(250,208,3)" fg:x="627883634" fg:w="5015045"/><text x="42.3482%" y="303.50"></text></g><g><title>__rust_alloc (1,003,009 samples, 0.07%)</title><rect x="42.4344%" y="165" width="0.0672%" height="15" fill="rgb(246,54,23)" fg:x="632898679" fg:w="1003009"/><text x="42.6844%" y="175.50"></text></g><g><title>__rdl_alloc (1,003,009 samples, 0.07%)</title><rect x="42.5017%" y="165" width="0.0672%" height="15" fill="rgb(243,76,11)" fg:x="633901688" fg:w="1003009"/><text x="42.7517%" y="175.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.13%)</title><rect x="42.5689%" y="149" width="0.1345%" height="15" fill="rgb(245,21,50)" fg:x="634904697" fg:w="2006018"/><text x="42.8189%" y="159.50"></text></g><g><title>__GI___libc_malloc (14,042,126 samples, 0.94%)</title><rect x="42.5689%" y="165" width="0.9415%" height="15" fill="rgb(228,9,43)" fg:x="634904697" fg:w="14042126"/><text x="42.8189%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,051,153 samples, 1.14%)</title><rect x="42.4344%" y="213" width="1.1432%" height="15" fill="rgb(208,100,47)" fg:x="632898679" fg:w="17051153"/><text x="42.6844%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,051,153 samples, 1.14%)</title><rect x="42.4344%" y="197" width="1.1432%" height="15" fill="rgb(232,26,8)" fg:x="632898679" fg:w="17051153"/><text x="42.6844%" y="207.50"></text></g><g><title>alloc::alloc::alloc (17,051,153 samples, 1.14%)</title><rect x="42.4344%" y="181" width="1.1432%" height="15" fill="rgb(216,166,38)" fg:x="632898679" fg:w="17051153"/><text x="42.6844%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19,057,171 samples, 1.28%)</title><rect x="42.4344%" y="261" width="1.2777%" height="15" fill="rgb(251,202,51)" fg:x="632898679" fg:w="19057171"/><text x="42.6844%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (19,057,171 samples, 1.28%)</title><rect x="42.4344%" y="245" width="1.2777%" height="15" fill="rgb(254,216,34)" fg:x="632898679" fg:w="19057171"/><text x="42.6844%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (19,057,171 samples, 1.28%)</title><rect x="42.4344%" y="229" width="1.2777%" height="15" fill="rgb(251,32,27)" fg:x="632898679" fg:w="19057171"/><text x="42.6844%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (20,060,180 samples, 1.34%)</title><rect x="42.4344%" y="293" width="1.3450%" height="15" fill="rgb(208,127,28)" fg:x="632898679" fg:w="20060180"/><text x="42.6844%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20,060,180 samples, 1.34%)</title><rect x="42.4344%" y="277" width="1.3450%" height="15" fill="rgb(224,137,22)" fg:x="632898679" fg:w="20060180"/><text x="42.6844%" y="287.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.13%)</title><rect x="43.7794%" y="277" width="0.1345%" height="15" fill="rgb(254,70,32)" fg:x="652958859" fg:w="2006018"/><text x="44.0294%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19,057,171 samples, 1.28%)</title><rect x="43.7794%" y="293" width="1.2777%" height="15" fill="rgb(229,75,37)" fg:x="652958859" fg:w="19057171"/><text x="44.0294%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (1,003,009 samples, 0.07%)</title><rect x="45.0572%" y="293" width="0.0672%" height="15" fill="rgb(252,64,23)" fg:x="672016030" fg:w="1003009"/><text x="45.3072%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (1,003,009 samples, 0.07%)</title><rect x="45.0572%" y="277" width="0.0672%" height="15" fill="rgb(232,162,48)" fg:x="672016030" fg:w="1003009"/><text x="45.3072%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (79,237,711 samples, 5.31%)</title><rect x="41.6947%" y="309" width="5.3127%" height="15" fill="rgb(246,160,12)" fg:x="621865580" fg:w="79237711"/><text x="41.9447%" y="319.50">chlang:..</text></g><g><title>chlang::board::Position::valid (16,048,144 samples, 1.08%)</title><rect x="47.0074%" y="293" width="1.0760%" height="15" fill="rgb(247,166,0)" fg:x="701103291" fg:w="16048144"/><text x="47.2574%" y="303.50"></text></g><g><title>chlang::board::Position::bitboard (1,003,009 samples, 0.07%)</title><rect x="48.0834%" y="293" width="0.0672%" height="15" fill="rgb(249,219,21)" fg:x="717151435" fg:w="1003009"/><text x="48.3334%" y="303.50"></text></g><g><title>__rust_alloc (3,009,027 samples, 0.20%)</title><rect x="48.1506%" y="165" width="0.2017%" height="15" fill="rgb(205,209,3)" fg:x="718154444" fg:w="3009027"/><text x="48.4006%" y="175.50"></text></g><g><title>tcache_get (3,009,027 samples, 0.20%)</title><rect x="48.3524%" y="149" width="0.2017%" height="15" fill="rgb(243,44,1)" fg:x="721163471" fg:w="3009027"/><text x="48.6024%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="293" width="1.0760%" height="15" fill="rgb(206,159,16)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="277" width="1.0760%" height="15" fill="rgb(244,77,30)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="261" width="1.0760%" height="15" fill="rgb(218,69,12)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="245" width="1.0760%" height="15" fill="rgb(212,87,7)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="229" width="1.0760%" height="15" fill="rgb(245,114,25)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="213" width="1.0760%" height="15" fill="rgb(210,61,42)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="197" width="1.0760%" height="15" fill="rgb(211,52,33)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="207.50"></text></g><g><title>alloc::alloc::alloc (16,048,144 samples, 1.08%)</title><rect x="48.1506%" y="181" width="1.0760%" height="15" fill="rgb(234,58,33)" fg:x="718154444" fg:w="16048144"/><text x="48.4006%" y="191.50"></text></g><g><title>__GI___libc_malloc (13,039,117 samples, 0.87%)</title><rect x="48.3524%" y="165" width="0.8742%" height="15" fill="rgb(220,115,36)" fg:x="721163471" fg:w="13039117"/><text x="48.6024%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20,060,180 samples, 1.34%)</title><rect x="49.2266%" y="293" width="1.3450%" height="15" fill="rgb(243,153,54)" fg:x="734202588" fg:w="20060180"/><text x="49.4766%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (6,018,054 samples, 0.40%)</title><rect x="50.5716%" y="293" width="0.4035%" height="15" fill="rgb(251,47,18)" fg:x="754262768" fg:w="6018054"/><text x="50.8216%" y="303.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (6,018,054 samples, 0.40%)</title><rect x="50.5716%" y="277" width="0.4035%" height="15" fill="rgb(242,102,42)" fg:x="754262768" fg:w="6018054"/><text x="50.8216%" y="287.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (87,261,783 samples, 5.85%)</title><rect x="47.0074%" y="309" width="5.8507%" height="15" fill="rgb(234,31,38)" fg:x="701103291" fg:w="87261783"/><text x="47.2574%" y="319.50">chlang:..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6,018,054 samples, 0.40%)</title><rect x="52.8581%" y="293" width="0.4035%" height="15" fill="rgb(221,117,51)" fg:x="788365074" fg:w="6018054"/><text x="53.1081%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,024,072 samples, 0.54%)</title><rect x="52.8581%" y="309" width="0.5380%" height="15" fill="rgb(212,20,18)" fg:x="788365074" fg:w="8024072"/><text x="53.1081%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19,057,171 samples, 1.28%)</title><rect x="53.3961%" y="309" width="1.2777%" height="15" fill="rgb(245,133,36)" fg:x="796389146" fg:w="19057171"/><text x="53.6461%" y="319.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (19,057,171 samples, 1.28%)</title><rect x="53.3961%" y="293" width="1.2777%" height="15" fill="rgb(212,6,19)" fg:x="796389146" fg:w="19057171"/><text x="53.6461%" y="303.50"></text></g><g><title>chlang::board::Board::attacked_by_color (619,859,562 samples, 41.56%)</title><rect x="14.8621%" y="325" width="41.5602%" height="15" fill="rgb(218,1,36)" fg:x="221664989" fg:w="619859562"/><text x="15.1121%" y="335.50">chlang::board::Board::attacked_by_color</text></g><g><title>&lt;chlang::board::Position as core::convert::From&lt;u64&gt;&gt;::from (1,003,009 samples, 0.07%)</title><rect x="56.4223%" y="325" width="0.0672%" height="15" fill="rgb(246,84,54)" fg:x="841524551" fg:w="1003009"/><text x="56.6723%" y="335.50"></text></g><g><title>chlang::board::Board::is_valid (622,868,589 samples, 41.76%)</title><rect x="14.8621%" y="341" width="41.7619%" height="15" fill="rgb(242,110,6)" fg:x="221664989" fg:w="622868589"/><text x="15.1121%" y="351.50">chlang::board::Board::is_valid</text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="56.6241%" y="197" width="0.0672%" height="15" fill="rgb(214,47,5)" fg:x="844533578" fg:w="1003009"/><text x="56.8741%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;chlang::cmove::Move&gt;: 2]&gt; (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="325" width="0.1345%" height="15" fill="rgb(218,159,25)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="309" width="0.1345%" height="15" fill="rgb(215,211,28)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="293" width="0.1345%" height="15" fill="rgb(238,59,32)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="277" width="0.1345%" height="15" fill="rgb(226,82,3)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="261" width="0.1345%" height="15" fill="rgb(240,164,32)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="245" width="0.1345%" height="15" fill="rgb(232,46,7)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="229" width="0.1345%" height="15" fill="rgb(229,129,53)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="239.50"></text></g><g><title>__GI___libc_free (2,006,018 samples, 0.13%)</title><rect x="56.6241%" y="213" width="0.1345%" height="15" fill="rgb(234,188,29)" fg:x="844533578" fg:w="2006018"/><text x="56.8741%" y="223.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.20%)</title><rect x="56.7586%" y="309" width="0.2017%" height="15" fill="rgb(246,141,4)" fg:x="846539596" fg:w="3009027"/><text x="57.0086%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="309" width="0.1345%" height="15" fill="rgb(229,23,39)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="293" width="0.1345%" height="15" fill="rgb(206,12,3)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="303.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="277" width="0.1345%" height="15" fill="rgb(252,226,20)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="261" width="0.1345%" height="15" fill="rgb(216,123,35)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="245" width="0.1345%" height="15" fill="rgb(212,68,40)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="229" width="0.1345%" height="15" fill="rgb(254,125,32)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="213" width="0.1345%" height="15" fill="rgb(253,97,22)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="223.50"></text></g><g><title>core::ptr::read (2,006,018 samples, 0.13%)</title><rect x="56.9603%" y="197" width="0.1345%" height="15" fill="rgb(241,101,14)" fg:x="849548623" fg:w="2006018"/><text x="57.2103%" y="207.50"></text></g><g><title>chlang::board::Board::piece_type (13,039,117 samples, 0.87%)</title><rect x="56.7586%" y="325" width="0.8742%" height="15" fill="rgb(238,103,29)" fg:x="846539596" fg:w="13039117"/><text x="57.0086%" y="335.50"></text></g><g><title>chlang::board::Position::valid (4,012,036 samples, 0.27%)</title><rect x="57.6328%" y="309" width="0.2690%" height="15" fill="rgb(233,195,47)" fg:x="859578713" fg:w="4012036"/><text x="57.8828%" y="319.50"></text></g><g><title>chlang::board::Position::bitboard (3,009,027 samples, 0.20%)</title><rect x="57.9018%" y="309" width="0.2017%" height="15" fill="rgb(246,218,30)" fg:x="863590749" fg:w="3009027"/><text x="58.1518%" y="319.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="58.1036%" y="165" width="0.0672%" height="15" fill="rgb(219,145,47)" fg:x="866599776" fg:w="1003009"/><text x="58.3536%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.40%)</title><rect x="58.1036%" y="277" width="0.4035%" height="15" fill="rgb(243,12,26)" fg:x="866599776" fg:w="6018054"/><text x="58.3536%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,018,054 samples, 0.40%)</title><rect x="58.1036%" y="261" width="0.4035%" height="15" fill="rgb(214,87,16)" fg:x="866599776" fg:w="6018054"/><text x="58.3536%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,018,054 samples, 0.40%)</title><rect x="58.1036%" y="245" width="0.4035%" height="15" fill="rgb(208,99,42)" fg:x="866599776" fg:w="6018054"/><text x="58.3536%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,018,054 samples, 0.40%)</title><rect x="58.1036%" y="229" width="0.4035%" height="15" fill="rgb(253,99,2)" fg:x="866599776" fg:w="6018054"/><text x="58.3536%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,018,054 samples, 0.40%)</title><rect x="58.1036%" y="213" width="0.4035%" height="15" fill="rgb(220,168,23)" fg:x="866599776" fg:w="6018054"/><text x="58.3536%" y="223.50"></text></g><g><title>alloc::alloc::alloc (6,018,054 samples, 0.40%)</title><rect x="58.1036%" y="197" width="0.4035%" height="15" fill="rgb(242,38,24)" fg:x="866599776" fg:w="6018054"/><text x="58.3536%" y="207.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.40%)</title><rect x="58.1036%" y="181" width="0.4035%" height="15" fill="rgb(225,182,9)" fg:x="866599776" fg:w="6018054"/><text x="58.3536%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7,021,063 samples, 0.47%)</title><rect x="58.1036%" y="309" width="0.4707%" height="15" fill="rgb(243,178,37)" fg:x="866599776" fg:w="7021063"/><text x="58.3536%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.47%)</title><rect x="58.1036%" y="293" width="0.4707%" height="15" fill="rgb(232,139,19)" fg:x="866599776" fg:w="7021063"/><text x="58.3536%" y="303.50"></text></g><g><title>core::ptr::write (5,015,045 samples, 0.34%)</title><rect x="58.5743%" y="293" width="0.3362%" height="15" fill="rgb(225,201,24)" fg:x="873620839" fg:w="5015045"/><text x="58.8243%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11,033,099 samples, 0.74%)</title><rect x="58.5743%" y="309" width="0.7397%" height="15" fill="rgb(221,47,46)" fg:x="873620839" fg:w="11033099"/><text x="58.8243%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (36,108,324 samples, 2.42%)</title><rect x="57.6328%" y="325" width="2.4210%" height="15" fill="rgb(249,23,13)" fg:x="859578713" fg:w="36108324"/><text x="57.8828%" y="335.50">ch..</text></g><g><title>chlang::cmove::Move::new (1,003,009 samples, 0.07%)</title><rect x="60.0538%" y="309" width="0.0672%" height="15" fill="rgb(219,9,5)" fg:x="895687037" fg:w="1003009"/><text x="60.3038%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="60.1210%" y="229" width="0.1345%" height="15" fill="rgb(254,171,16)" fg:x="896690046" fg:w="2006018"/><text x="60.3710%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="60.1210%" y="213" width="0.1345%" height="15" fill="rgb(230,171,20)" fg:x="896690046" fg:w="2006018"/><text x="60.3710%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="60.1210%" y="197" width="0.1345%" height="15" fill="rgb(210,71,41)" fg:x="896690046" fg:w="2006018"/><text x="60.3710%" y="207.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.13%)</title><rect x="60.1210%" y="181" width="0.1345%" height="15" fill="rgb(206,173,20)" fg:x="896690046" fg:w="2006018"/><text x="60.3710%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.20%)</title><rect x="60.1210%" y="309" width="0.2017%" height="15" fill="rgb(233,88,34)" fg:x="896690046" fg:w="3009027"/><text x="60.3710%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="60.1210%" y="293" width="0.2017%" height="15" fill="rgb(223,209,46)" fg:x="896690046" fg:w="3009027"/><text x="60.3710%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="60.1210%" y="277" width="0.2017%" height="15" fill="rgb(250,43,18)" fg:x="896690046" fg:w="3009027"/><text x="60.3710%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="60.1210%" y="261" width="0.2017%" height="15" fill="rgb(208,13,10)" fg:x="896690046" fg:w="3009027"/><text x="60.3710%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.20%)</title><rect x="60.1210%" y="245" width="0.2017%" height="15" fill="rgb(212,200,36)" fg:x="896690046" fg:w="3009027"/><text x="60.3710%" y="255.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="60.3228%" y="293" width="0.0672%" height="15" fill="rgb(225,90,30)" fg:x="899699073" fg:w="1003009"/><text x="60.5728%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.13%)</title><rect x="60.3228%" y="309" width="0.1345%" height="15" fill="rgb(236,182,39)" fg:x="899699073" fg:w="2006018"/><text x="60.5728%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (9,027,081 samples, 0.61%)</title><rect x="60.0538%" y="325" width="0.6052%" height="15" fill="rgb(212,144,35)" fg:x="895687037" fg:w="9027081"/><text x="60.3038%" y="335.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="60.6590%" y="309" width="0.0672%" height="15" fill="rgb(228,63,44)" fg:x="904714118" fg:w="1003009"/><text x="60.9090%" y="319.50"></text></g><g><title>tcache_get (2,006,018 samples, 0.13%)</title><rect x="60.7263%" y="165" width="0.1345%" height="15" fill="rgb(228,109,6)" fg:x="905717127" fg:w="2006018"/><text x="60.9763%" y="175.50"></text></g><g><title>checked_request2size (1,003,009 samples, 0.07%)</title><rect x="60.8608%" y="165" width="0.0672%" height="15" fill="rgb(238,117,24)" fg:x="907723145" fg:w="1003009"/><text x="61.1108%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.27%)</title><rect x="60.7263%" y="229" width="0.2690%" height="15" fill="rgb(242,26,26)" fg:x="905717127" fg:w="4012036"/><text x="60.9763%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.27%)</title><rect x="60.7263%" y="213" width="0.2690%" height="15" fill="rgb(221,92,48)" fg:x="905717127" fg:w="4012036"/><text x="60.9763%" y="223.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.27%)</title><rect x="60.7263%" y="197" width="0.2690%" height="15" fill="rgb(209,209,32)" fg:x="905717127" fg:w="4012036"/><text x="60.9763%" y="207.50"></text></g><g><title>__GI___libc_malloc (4,012,036 samples, 0.27%)</title><rect x="60.7263%" y="181" width="0.2690%" height="15" fill="rgb(221,70,22)" fg:x="905717127" fg:w="4012036"/><text x="60.9763%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5,015,045 samples, 0.34%)</title><rect x="60.7263%" y="309" width="0.3362%" height="15" fill="rgb(248,145,5)" fg:x="905717127" fg:w="5015045"/><text x="60.9763%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.34%)</title><rect x="60.7263%" y="293" width="0.3362%" height="15" fill="rgb(226,116,26)" fg:x="905717127" fg:w="5015045"/><text x="60.9763%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.34%)</title><rect x="60.7263%" y="277" width="0.3362%" height="15" fill="rgb(244,5,17)" fg:x="905717127" fg:w="5015045"/><text x="60.9763%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,015,045 samples, 0.34%)</title><rect x="60.7263%" y="261" width="0.3362%" height="15" fill="rgb(252,159,33)" fg:x="905717127" fg:w="5015045"/><text x="60.9763%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,015,045 samples, 0.34%)</title><rect x="60.7263%" y="245" width="0.3362%" height="15" fill="rgb(206,71,0)" fg:x="905717127" fg:w="5015045"/><text x="60.9763%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5,015,045 samples, 0.34%)</title><rect x="61.0625%" y="309" width="0.3362%" height="15" fill="rgb(233,118,54)" fg:x="910732172" fg:w="5015045"/><text x="61.3125%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (12,036,108 samples, 0.81%)</title><rect x="60.6590%" y="325" width="0.8070%" height="15" fill="rgb(234,83,48)" fg:x="904714118" fg:w="12036108"/><text x="60.9090%" y="335.50"></text></g><g><title>__rust_dealloc (1,003,009 samples, 0.07%)</title><rect x="61.4660%" y="149" width="0.0672%" height="15" fill="rgb(228,3,54)" fg:x="916750226" fg:w="1003009"/><text x="61.7160%" y="159.50"></text></g><g><title>tcache_put (1,003,009 samples, 0.07%)</title><rect x="61.5333%" y="117" width="0.0672%" height="15" fill="rgb(226,155,13)" fg:x="917753235" fg:w="1003009"/><text x="61.7833%" y="127.50"></text></g><g><title>_int_free (2,006,018 samples, 0.13%)</title><rect x="61.5333%" y="133" width="0.1345%" height="15" fill="rgb(241,28,37)" fg:x="917753235" fg:w="2006018"/><text x="61.7833%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="293" width="0.2690%" height="15" fill="rgb(233,93,10)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="277" width="0.2690%" height="15" fill="rgb(225,113,19)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="261" width="0.2690%" height="15" fill="rgb(241,2,18)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="271.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="245" width="0.2690%" height="15" fill="rgb(228,207,21)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="229" width="0.2690%" height="15" fill="rgb(213,211,35)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="213" width="0.2690%" height="15" fill="rgb(209,83,10)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="197" width="0.2690%" height="15" fill="rgb(209,164,1)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="181" width="0.2690%" height="15" fill="rgb(213,184,43)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (4,012,036 samples, 0.27%)</title><rect x="61.4660%" y="165" width="0.2690%" height="15" fill="rgb(231,61,34)" fg:x="916750226" fg:w="4012036"/><text x="61.7160%" y="175.50"></text></g><g><title>__GI___libc_free (3,009,027 samples, 0.20%)</title><rect x="61.5333%" y="149" width="0.2017%" height="15" fill="rgb(235,75,3)" fg:x="917753235" fg:w="3009027"/><text x="61.7833%" y="159.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="61.7350%" y="293" width="0.0672%" height="15" fill="rgb(220,106,47)" fg:x="920762262" fg:w="1003009"/><text x="61.9850%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="293" width="0.0672%" height="15" fill="rgb(210,196,33)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="277" width="0.0672%" height="15" fill="rgb(229,154,42)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="261" width="0.0672%" height="15" fill="rgb(228,114,26)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="245" width="0.0672%" height="15" fill="rgb(208,144,1)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="229" width="0.0672%" height="15" fill="rgb(239,112,37)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="213" width="0.0672%" height="15" fill="rgb(210,96,50)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="197" width="0.0672%" height="15" fill="rgb(222,178,2)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="181" width="0.0672%" height="15" fill="rgb(226,74,18)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="165" width="0.0672%" height="15" fill="rgb(225,67,54)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="175.50"></text></g><g><title>__rust_alloc (1,003,009 samples, 0.07%)</title><rect x="61.8023%" y="149" width="0.0672%" height="15" fill="rgb(251,92,32)" fg:x="921765271" fg:w="1003009"/><text x="62.0523%" y="159.50"></text></g><g><title>chlang::board::Board::attacked_by_color (7,021,063 samples, 0.47%)</title><rect x="61.4660%" y="309" width="0.4707%" height="15" fill="rgb(228,149,22)" fg:x="916750226" fg:w="7021063"/><text x="61.7160%" y="319.50"></text></g><g><title>tcache_get (4,012,036 samples, 0.27%)</title><rect x="61.9368%" y="165" width="0.2690%" height="15" fill="rgb(243,54,13)" fg:x="923771289" fg:w="4012036"/><text x="62.1868%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="309" width="0.5380%" height="15" fill="rgb(243,180,28)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="293" width="0.5380%" height="15" fill="rgb(208,167,24)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="277" width="0.5380%" height="15" fill="rgb(245,73,45)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="261" width="0.5380%" height="15" fill="rgb(237,203,48)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="245" width="0.5380%" height="15" fill="rgb(211,197,16)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="229" width="0.5380%" height="15" fill="rgb(243,99,51)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="213" width="0.5380%" height="15" fill="rgb(215,123,29)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="223.50"></text></g><g><title>alloc::alloc::alloc (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="197" width="0.5380%" height="15" fill="rgb(239,186,37)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="207.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.54%)</title><rect x="61.9368%" y="181" width="0.5380%" height="15" fill="rgb(252,136,39)" fg:x="923771289" fg:w="8024072"/><text x="62.1868%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.13%)</title><rect x="62.4748%" y="309" width="0.1345%" height="15" fill="rgb(223,213,32)" fg:x="931795361" fg:w="2006018"/><text x="62.7248%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (23,069,207 samples, 1.55%)</title><rect x="61.4660%" y="325" width="1.5467%" height="15" fill="rgb(233,115,5)" fg:x="916750226" fg:w="23069207"/><text x="61.7160%" y="335.50"></text></g><g><title>chlang::board::Position::valid (4,012,036 samples, 0.27%)</title><rect x="63.0128%" y="309" width="0.2690%" height="15" fill="rgb(207,226,44)" fg:x="939819433" fg:w="4012036"/><text x="63.2628%" y="319.50"></text></g><g><title>__rust_alloc (1,003,009 samples, 0.07%)</title><rect x="63.2818%" y="181" width="0.0672%" height="15" fill="rgb(208,126,0)" fg:x="943831469" fg:w="1003009"/><text x="63.5318%" y="191.50"></text></g><g><title>__rdl_alloc (1,003,009 samples, 0.07%)</title><rect x="63.3490%" y="181" width="0.0672%" height="15" fill="rgb(244,66,21)" fg:x="944834478" fg:w="1003009"/><text x="63.5990%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="309" width="0.3362%" height="15" fill="rgb(222,97,12)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="293" width="0.3362%" height="15" fill="rgb(219,213,19)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="277" width="0.3362%" height="15" fill="rgb(252,169,30)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="261" width="0.3362%" height="15" fill="rgb(206,32,51)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="245" width="0.3362%" height="15" fill="rgb(250,172,42)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="229" width="0.3362%" height="15" fill="rgb(209,34,43)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="213" width="0.3362%" height="15" fill="rgb(223,11,35)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="223.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.34%)</title><rect x="63.2818%" y="197" width="0.3362%" height="15" fill="rgb(251,219,26)" fg:x="943831469" fg:w="5015045"/><text x="63.5318%" y="207.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.20%)</title><rect x="63.4163%" y="181" width="0.2017%" height="15" fill="rgb(231,119,3)" fg:x="945837487" fg:w="3009027"/><text x="63.6663%" y="191.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.13%)</title><rect x="63.6180%" y="293" width="0.1345%" height="15" fill="rgb(216,97,11)" fg:x="948846514" fg:w="2006018"/><text x="63.8680%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8,024,072 samples, 0.54%)</title><rect x="63.6180%" y="309" width="0.5380%" height="15" fill="rgb(223,59,9)" fg:x="948846514" fg:w="8024072"/><text x="63.8680%" y="319.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (1,003,009 samples, 0.07%)</title><rect x="64.1560%" y="309" width="0.0672%" height="15" fill="rgb(233,93,31)" fg:x="956870586" fg:w="1003009"/><text x="64.4060%" y="319.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (1,003,009 samples, 0.07%)</title><rect x="64.1560%" y="293" width="0.0672%" height="15" fill="rgb(239,81,33)" fg:x="956870586" fg:w="1003009"/><text x="64.4060%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (25,075,225 samples, 1.68%)</title><rect x="63.0128%" y="325" width="1.6812%" height="15" fill="rgb(213,120,34)" fg:x="939819433" fg:w="25075225"/><text x="63.2628%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="293" width="0.1345%" height="15" fill="rgb(243,49,53)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="277" width="0.1345%" height="15" fill="rgb(247,216,33)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="261" width="0.1345%" height="15" fill="rgb(226,26,14)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="245" width="0.1345%" height="15" fill="rgb(215,49,53)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="229" width="0.1345%" height="15" fill="rgb(245,162,40)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="213" width="0.1345%" height="15" fill="rgb(229,68,17)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="197" width="0.1345%" height="15" fill="rgb(213,182,10)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="181" width="0.1345%" height="15" fill="rgb(245,125,30)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="191.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.13%)</title><rect x="64.6940%" y="165" width="0.1345%" height="15" fill="rgb(232,202,2)" fg:x="964894658" fg:w="2006018"/><text x="64.9440%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="64.8285%" y="165" width="0.0672%" height="15" fill="rgb(237,140,51)" fg:x="966900676" fg:w="1003009"/><text x="65.0785%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="64.8285%" y="149" width="0.0672%" height="15" fill="rgb(236,157,25)" fg:x="966900676" fg:w="1003009"/><text x="65.0785%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="64.8285%" y="133" width="0.0672%" height="15" fill="rgb(219,209,0)" fg:x="966900676" fg:w="1003009"/><text x="65.0785%" y="143.50"></text></g><g><title>core::ptr::write (1,003,009 samples, 0.07%)</title><rect x="64.8285%" y="117" width="0.0672%" height="15" fill="rgb(240,116,54)" fg:x="966900676" fg:w="1003009"/><text x="65.0785%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,006,018 samples, 0.13%)</title><rect x="64.8285%" y="229" width="0.1345%" height="15" fill="rgb(216,10,36)" fg:x="966900676" fg:w="2006018"/><text x="65.0785%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,006,018 samples, 0.13%)</title><rect x="64.8285%" y="213" width="0.1345%" height="15" fill="rgb(222,72,44)" fg:x="966900676" fg:w="2006018"/><text x="65.0785%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,006,018 samples, 0.13%)</title><rect x="64.8285%" y="197" width="0.1345%" height="15" fill="rgb(232,159,9)" fg:x="966900676" fg:w="2006018"/><text x="65.0785%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,006,018 samples, 0.13%)</title><rect x="64.8285%" y="181" width="0.1345%" height="15" fill="rgb(210,39,32)" fg:x="966900676" fg:w="2006018"/><text x="65.0785%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4,012,036 samples, 0.27%)</title><rect x="64.8285%" y="293" width="0.2690%" height="15" fill="rgb(216,194,45)" fg:x="966900676" fg:w="4012036"/><text x="65.0785%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4,012,036 samples, 0.27%)</title><rect x="64.8285%" y="277" width="0.2690%" height="15" fill="rgb(218,18,35)" fg:x="966900676" fg:w="4012036"/><text x="65.0785%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,012,036 samples, 0.27%)</title><rect x="64.8285%" y="261" width="0.2690%" height="15" fill="rgb(207,83,51)" fg:x="966900676" fg:w="4012036"/><text x="65.0785%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4,012,036 samples, 0.27%)</title><rect x="64.8285%" y="245" width="0.2690%" height="15" fill="rgb(225,63,43)" fg:x="966900676" fg:w="4012036"/><text x="65.0785%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,006,018 samples, 0.13%)</title><rect x="64.9630%" y="229" width="0.1345%" height="15" fill="rgb(207,57,36)" fg:x="968906694" fg:w="2006018"/><text x="65.2130%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,006,018 samples, 0.13%)</title><rect x="64.9630%" y="213" width="0.1345%" height="15" fill="rgb(216,99,33)" fg:x="968906694" fg:w="2006018"/><text x="65.2130%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,006,018 samples, 0.13%)</title><rect x="64.9630%" y="197" width="0.1345%" height="15" fill="rgb(225,42,16)" fg:x="968906694" fg:w="2006018"/><text x="65.2130%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (2,006,018 samples, 0.13%)</title><rect x="64.9630%" y="181" width="0.1345%" height="15" fill="rgb(220,201,45)" fg:x="968906694" fg:w="2006018"/><text x="65.2130%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2,006,018 samples, 0.13%)</title><rect x="64.9630%" y="165" width="0.1345%" height="15" fill="rgb(225,33,4)" fg:x="968906694" fg:w="2006018"/><text x="65.2130%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (7,021,063 samples, 0.47%)</title><rect x="64.6940%" y="325" width="0.4707%" height="15" fill="rgb(224,33,50)" fg:x="964894658" fg:w="7021063"/><text x="64.9440%" y="335.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (7,021,063 samples, 0.47%)</title><rect x="64.6940%" y="309" width="0.4707%" height="15" fill="rgb(246,198,51)" fg:x="964894658" fg:w="7021063"/><text x="64.9440%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (165,496,485 samples, 11.10%)</title><rect x="56.6241%" y="341" width="11.0962%" height="15" fill="rgb(205,22,4)" fg:x="844533578" fg:w="165496485"/><text x="56.8741%" y="351.50">chlang::board::B..</text></g><g><title>core::ptr::write (14,042,126 samples, 0.94%)</title><rect x="67.7202%" y="325" width="0.9415%" height="15" fill="rgb(206,3,8)" fg:x="1010030063" fg:w="14042126"/><text x="67.9702%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15,045,135 samples, 1.01%)</title><rect x="67.7202%" y="341" width="1.0087%" height="15" fill="rgb(251,23,15)" fg:x="1010030063" fg:w="15045135"/><text x="67.9702%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6,018,054 samples, 0.40%)</title><rect x="68.7290%" y="341" width="0.4035%" height="15" fill="rgb(252,88,28)" fg:x="1025075198" fg:w="6018054"/><text x="68.9790%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (6,018,054 samples, 0.40%)</title><rect x="68.7290%" y="325" width="0.4035%" height="15" fill="rgb(212,127,14)" fg:x="1025075198" fg:w="6018054"/><text x="68.9790%" y="335.50"></text></g><g><title>chlang::board::Board::make_move (937,813,415 samples, 62.88%)</title><rect x="9.0787%" y="357" width="62.8783%" height="15" fill="rgb(247,145,37)" fg:x="135406215" fg:w="937813415"/><text x="9.3287%" y="367.50">chlang::board::Board::make_move</text></g><g><title>__rust_dealloc (1,003,009 samples, 0.07%)</title><rect x="71.9570%" y="197" width="0.0672%" height="15" fill="rgb(209,117,53)" fg:x="1073219630" fg:w="1003009"/><text x="72.2070%" y="207.50"></text></g><g><title>_int_free (5,015,045 samples, 0.34%)</title><rect x="72.0242%" y="181" width="0.3362%" height="15" fill="rgb(212,90,42)" fg:x="1074222639" fg:w="5015045"/><text x="72.2742%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="341" width="0.4707%" height="15" fill="rgb(218,164,37)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="325" width="0.4707%" height="15" fill="rgb(246,65,34)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="309" width="0.4707%" height="15" fill="rgb(231,100,33)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="293" width="0.4707%" height="15" fill="rgb(228,126,14)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="277" width="0.4707%" height="15" fill="rgb(215,173,21)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="261" width="0.4707%" height="15" fill="rgb(210,6,40)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="245" width="0.4707%" height="15" fill="rgb(212,48,18)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="229" width="0.4707%" height="15" fill="rgb(230,214,11)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (7,021,063 samples, 0.47%)</title><rect x="71.9570%" y="213" width="0.4707%" height="15" fill="rgb(254,105,39)" fg:x="1073219630" fg:w="7021063"/><text x="72.2070%" y="223.50"></text></g><g><title>__GI___libc_free (6,018,054 samples, 0.40%)</title><rect x="72.0242%" y="197" width="0.4035%" height="15" fill="rgb(245,158,5)" fg:x="1074222639" fg:w="6018054"/><text x="72.2742%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Position&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="341" width="0.0672%" height="15" fill="rgb(249,208,11)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Position&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="325" width="0.0672%" height="15" fill="rgb(210,39,28)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="309" width="0.0672%" height="15" fill="rgb(211,56,53)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="293" width="0.0672%" height="15" fill="rgb(226,201,30)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="277" width="0.0672%" height="15" fill="rgb(239,101,34)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="261" width="0.0672%" height="15" fill="rgb(226,209,5)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="271.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="245" width="0.0672%" height="15" fill="rgb(250,105,47)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="255.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="72.4277%" y="229" width="0.0672%" height="15" fill="rgb(230,72,3)" fg:x="1080240693" fg:w="1003009"/><text x="72.6777%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (43,129,387 samples, 2.89%)</title><rect x="72.4950%" y="341" width="2.8917%" height="15" fill="rgb(232,218,39)" fg:x="1081243702" fg:w="43129387"/><text x="72.7450%" y="351.50">co..</text></g><g><title>chlang::board::Position::bitboard (2,006,018 samples, 0.13%)</title><rect x="75.3867%" y="309" width="0.1345%" height="15" fill="rgb(248,166,6)" fg:x="1124373089" fg:w="2006018"/><text x="75.6367%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="309" width="0.0672%" height="15" fill="rgb(247,89,20)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="293" width="0.0672%" height="15" fill="rgb(248,130,54)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="303.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="277" width="0.0672%" height="15" fill="rgb(234,196,4)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="261" width="0.0672%" height="15" fill="rgb(250,143,31)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="245" width="0.0672%" height="15" fill="rgb(211,110,34)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="229" width="0.0672%" height="15" fill="rgb(215,124,48)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="213" width="0.0672%" height="15" fill="rgb(216,46,13)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="223.50"></text></g><g><title>core::ptr::read (1,003,009 samples, 0.07%)</title><rect x="75.5212%" y="197" width="0.0672%" height="15" fill="rgb(205,184,25)" fg:x="1126379107" fg:w="1003009"/><text x="75.7712%" y="207.50"></text></g><g><title>chlang::board::Board::piece_type (6,018,054 samples, 0.40%)</title><rect x="75.3867%" y="325" width="0.4035%" height="15" fill="rgb(228,1,10)" fg:x="1124373089" fg:w="6018054"/><text x="75.6367%" y="335.50"></text></g><g><title>chlang::board::Position::bitboard (1,003,009 samples, 0.07%)</title><rect x="75.7902%" y="309" width="0.0672%" height="15" fill="rgb(213,116,27)" fg:x="1130391143" fg:w="1003009"/><text x="76.0402%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="309" width="0.0672%" height="15" fill="rgb(241,95,50)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="293" width="0.0672%" height="15" fill="rgb(238,48,32)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="277" width="0.0672%" height="15" fill="rgb(235,113,49)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="261" width="0.0672%" height="15" fill="rgb(205,127,43)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="245" width="0.0672%" height="15" fill="rgb(250,162,2)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="229" width="0.0672%" height="15" fill="rgb(220,13,41)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="213" width="0.0672%" height="15" fill="rgb(249,221,25)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="197" width="0.0672%" height="15" fill="rgb(215,208,19)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="207.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="75.8574%" y="181" width="0.0672%" height="15" fill="rgb(236,175,2)" fg:x="1131394152" fg:w="1003009"/><text x="76.1074%" y="191.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (1,003,009 samples, 0.07%)</title><rect x="75.9247%" y="309" width="0.0672%" height="15" fill="rgb(241,52,2)" fg:x="1132397161" fg:w="1003009"/><text x="76.1747%" y="319.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (1,003,009 samples, 0.07%)</title><rect x="75.9247%" y="293" width="0.0672%" height="15" fill="rgb(248,140,14)" fg:x="1132397161" fg:w="1003009"/><text x="76.1747%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (6,018,054 samples, 0.40%)</title><rect x="75.7902%" y="325" width="0.4035%" height="15" fill="rgb(253,22,42)" fg:x="1130391143" fg:w="6018054"/><text x="76.0402%" y="335.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="76.1937%" y="165" width="0.0672%" height="15" fill="rgb(234,61,47)" fg:x="1136409197" fg:w="1003009"/><text x="76.4437%" y="175.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.20%)</title><rect x="76.1937%" y="181" width="0.2017%" height="15" fill="rgb(208,226,15)" fg:x="1136409197" fg:w="3009027"/><text x="76.4437%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="309" width="0.2690%" height="15" fill="rgb(217,221,4)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="293" width="0.2690%" height="15" fill="rgb(212,174,34)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="277" width="0.2690%" height="15" fill="rgb(253,83,4)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="261" width="0.2690%" height="15" fill="rgb(250,195,49)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="245" width="0.2690%" height="15" fill="rgb(241,192,25)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="229" width="0.2690%" height="15" fill="rgb(208,124,10)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="213" width="0.2690%" height="15" fill="rgb(222,33,0)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="223.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.27%)</title><rect x="76.1937%" y="197" width="0.2690%" height="15" fill="rgb(234,209,28)" fg:x="1136409197" fg:w="4012036"/><text x="76.4437%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (10,030,090 samples, 0.67%)</title><rect x="76.1937%" y="325" width="0.6725%" height="15" fill="rgb(224,11,23)" fg:x="1136409197" fg:w="10030090"/><text x="76.4437%" y="335.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="76.8662%" y="309" width="0.0672%" height="15" fill="rgb(232,99,1)" fg:x="1146439287" fg:w="1003009"/><text x="77.1162%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="309" width="0.2017%" height="15" fill="rgb(237,95,45)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="293" width="0.2017%" height="15" fill="rgb(208,109,11)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="277" width="0.2017%" height="15" fill="rgb(216,190,48)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="261" width="0.2017%" height="15" fill="rgb(251,171,36)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="245" width="0.2017%" height="15" fill="rgb(230,62,22)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="229" width="0.2017%" height="15" fill="rgb(225,114,35)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="213" width="0.2017%" height="15" fill="rgb(215,118,42)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="197" width="0.2017%" height="15" fill="rgb(243,119,21)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="207.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.20%)</title><rect x="76.9334%" y="181" width="0.2017%" height="15" fill="rgb(252,177,53)" fg:x="1147442296" fg:w="3009027"/><text x="77.1834%" y="191.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (5,015,045 samples, 0.34%)</title><rect x="76.8662%" y="325" width="0.3362%" height="15" fill="rgb(237,209,29)" fg:x="1146439287" fg:w="5015045"/><text x="77.1162%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="77.1352%" y="309" width="0.0672%" height="15" fill="rgb(212,65,23)" fg:x="1150451323" fg:w="1003009"/><text x="77.3852%" y="319.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="77.2024%" y="309" width="0.0672%" height="15" fill="rgb(230,222,46)" fg:x="1151454332" fg:w="1003009"/><text x="77.4524%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="77.2697%" y="277" width="0.1345%" height="15" fill="rgb(215,135,32)" fg:x="1152457341" fg:w="2006018"/><text x="77.5197%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="77.2697%" y="261" width="0.1345%" height="15" fill="rgb(246,101,22)" fg:x="1152457341" fg:w="2006018"/><text x="77.5197%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="77.2697%" y="245" width="0.1345%" height="15" fill="rgb(206,107,13)" fg:x="1152457341" fg:w="2006018"/><text x="77.5197%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="77.2697%" y="229" width="0.1345%" height="15" fill="rgb(250,100,44)" fg:x="1152457341" fg:w="2006018"/><text x="77.5197%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="77.2697%" y="213" width="0.1345%" height="15" fill="rgb(231,147,38)" fg:x="1152457341" fg:w="2006018"/><text x="77.5197%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="77.2697%" y="197" width="0.1345%" height="15" fill="rgb(229,8,40)" fg:x="1152457341" fg:w="2006018"/><text x="77.5197%" y="207.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.13%)</title><rect x="77.2697%" y="181" width="0.1345%" height="15" fill="rgb(221,135,30)" fg:x="1152457341" fg:w="2006018"/><text x="77.5197%" y="191.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (4,012,036 samples, 0.27%)</title><rect x="77.2024%" y="325" width="0.2690%" height="15" fill="rgb(249,193,18)" fg:x="1151454332" fg:w="4012036"/><text x="77.4524%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.20%)</title><rect x="77.2697%" y="309" width="0.2017%" height="15" fill="rgb(209,133,39)" fg:x="1152457341" fg:w="3009027"/><text x="77.5197%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="77.2697%" y="293" width="0.2017%" height="15" fill="rgb(232,100,14)" fg:x="1152457341" fg:w="3009027"/><text x="77.5197%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="77.4714%" y="325" width="0.0672%" height="15" fill="rgb(224,185,1)" fg:x="1155466368" fg:w="1003009"/><text x="77.7214%" y="335.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="77.4714%" y="309" width="0.0672%" height="15" fill="rgb(223,139,8)" fg:x="1155466368" fg:w="1003009"/><text x="77.7214%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (43,129,387 samples, 2.89%)</title><rect x="75.3867%" y="341" width="2.8917%" height="15" fill="rgb(232,213,38)" fg:x="1124373089" fg:w="43129387"/><text x="75.6367%" y="351.50">ch..</text></g><g><title>__rdl_alloc (1,003,009 samples, 0.07%)</title><rect x="78.2784%" y="213" width="0.0672%" height="15" fill="rgb(207,94,22)" fg:x="1167502476" fg:w="1003009"/><text x="78.5284%" y="223.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,003,009 samples, 0.07%)</title><rect x="78.2784%" y="197" width="0.0672%" height="15" fill="rgb(219,183,54)" fg:x="1167502476" fg:w="1003009"/><text x="78.5284%" y="207.50"></text></g><g><title>_int_malloc (1,003,009 samples, 0.07%)</title><rect x="78.3457%" y="197" width="0.0672%" height="15" fill="rgb(216,185,54)" fg:x="1168505485" fg:w="1003009"/><text x="78.5957%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.20%)</title><rect x="78.2784%" y="261" width="0.2017%" height="15" fill="rgb(254,217,39)" fg:x="1167502476" fg:w="3009027"/><text x="78.5284%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.20%)</title><rect x="78.2784%" y="245" width="0.2017%" height="15" fill="rgb(240,178,23)" fg:x="1167502476" fg:w="3009027"/><text x="78.5284%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.20%)</title><rect x="78.2784%" y="229" width="0.2017%" height="15" fill="rgb(218,11,47)" fg:x="1167502476" fg:w="3009027"/><text x="78.5284%" y="239.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.13%)</title><rect x="78.3457%" y="213" width="0.1345%" height="15" fill="rgb(218,51,51)" fg:x="1168505485" fg:w="2006018"/><text x="78.5957%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.27%)</title><rect x="78.2784%" y="341" width="0.2690%" height="15" fill="rgb(238,126,27)" fg:x="1167502476" fg:w="4012036"/><text x="78.5284%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="78.2784%" y="325" width="0.2690%" height="15" fill="rgb(249,202,22)" fg:x="1167502476" fg:w="4012036"/><text x="78.5284%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="78.2784%" y="309" width="0.2690%" height="15" fill="rgb(254,195,49)" fg:x="1167502476" fg:w="4012036"/><text x="78.5284%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="78.2784%" y="293" width="0.2690%" height="15" fill="rgb(208,123,14)" fg:x="1167502476" fg:w="4012036"/><text x="78.5284%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.27%)</title><rect x="78.2784%" y="277" width="0.2690%" height="15" fill="rgb(224,200,8)" fg:x="1167502476" fg:w="4012036"/><text x="78.5284%" y="287.50"></text></g><g><title>core::ptr::write (1,003,009 samples, 0.07%)</title><rect x="78.5474%" y="325" width="0.0672%" height="15" fill="rgb(217,61,36)" fg:x="1171514512" fg:w="1003009"/><text x="78.7974%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,003,009 samples, 0.07%)</title><rect x="78.6147%" y="325" width="0.0672%" height="15" fill="rgb(206,35,45)" fg:x="1172517521" fg:w="1003009"/><text x="78.8647%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,003,009 samples, 0.07%)</title><rect x="78.6147%" y="309" width="0.0672%" height="15" fill="rgb(217,65,33)" fg:x="1172517521" fg:w="1003009"/><text x="78.8647%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,003,009 samples, 0.07%)</title><rect x="78.6147%" y="293" width="0.0672%" height="15" fill="rgb(222,158,48)" fg:x="1172517521" fg:w="1003009"/><text x="78.8647%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,003,009 samples, 0.07%)</title><rect x="78.6147%" y="277" width="0.0672%" height="15" fill="rgb(254,2,54)" fg:x="1172517521" fg:w="1003009"/><text x="78.8647%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6,018,054 samples, 0.40%)</title><rect x="78.5474%" y="341" width="0.4035%" height="15" fill="rgb(250,143,38)" fg:x="1171514512" fg:w="6018054"/><text x="78.7974%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.07%)</title><rect x="78.9509%" y="341" width="0.0672%" height="15" fill="rgb(248,25,0)" fg:x="1177532566" fg:w="1003009"/><text x="79.2009%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="78.9509%" y="325" width="0.0672%" height="15" fill="rgb(206,152,27)" fg:x="1177532566" fg:w="1003009"/><text x="79.2009%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,009,027 samples, 0.20%)</title><rect x="79.0182%" y="341" width="0.2017%" height="15" fill="rgb(240,77,30)" fg:x="1178535575" fg:w="3009027"/><text x="79.2682%" y="351.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3,009,027 samples, 0.20%)</title><rect x="79.0182%" y="325" width="0.2017%" height="15" fill="rgb(231,5,3)" fg:x="1178535575" fg:w="3009027"/><text x="79.2682%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (120,361,080 samples, 8.07%)</title><rect x="71.9570%" y="357" width="8.0699%" height="15" fill="rgb(207,226,32)" fg:x="1073219630" fg:w="120361080"/><text x="72.2070%" y="367.50">chlang::boa..</text></g><g><title>__rust_alloc (2,006,018 samples, 0.13%)</title><rect x="80.0269%" y="229" width="0.1345%" height="15" fill="rgb(222,207,47)" fg:x="1193580710" fg:w="2006018"/><text x="80.2769%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="357" width="0.2017%" height="15" fill="rgb(229,115,45)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="341" width="0.2017%" height="15" fill="rgb(224,191,6)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="325" width="0.2017%" height="15" fill="rgb(230,227,24)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="309" width="0.2017%" height="15" fill="rgb(228,80,19)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="293" width="0.2017%" height="15" fill="rgb(247,229,0)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="277" width="0.2017%" height="15" fill="rgb(237,194,15)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="261" width="0.2017%" height="15" fill="rgb(219,203,20)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="271.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.20%)</title><rect x="80.0269%" y="245" width="0.2017%" height="15" fill="rgb(234,128,8)" fg:x="1193580710" fg:w="3009027"/><text x="80.2769%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="80.1614%" y="229" width="0.0672%" height="15" fill="rgb(248,202,8)" fg:x="1195586728" fg:w="1003009"/><text x="80.4114%" y="239.50"></text></g><g><title>_int_malloc (1,003,009 samples, 0.07%)</title><rect x="80.1614%" y="213" width="0.0672%" height="15" fill="rgb(206,104,37)" fg:x="1195586728" fg:w="1003009"/><text x="80.4114%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.13%)</title><rect x="80.2286%" y="357" width="0.1345%" height="15" fill="rgb(223,8,27)" fg:x="1196589737" fg:w="2006018"/><text x="80.4786%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (1,003,009 samples, 0.07%)</title><rect x="80.3631%" y="341" width="0.0672%" height="15" fill="rgb(216,217,28)" fg:x="1198595755" fg:w="1003009"/><text x="80.6131%" y="351.50"></text></g><g><title>core::ptr::read (1,003,009 samples, 0.07%)</title><rect x="80.3631%" y="325" width="0.0672%" height="15" fill="rgb(249,199,1)" fg:x="1198595755" fg:w="1003009"/><text x="80.6131%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.13%)</title><rect x="80.3631%" y="357" width="0.1345%" height="15" fill="rgb(240,85,17)" fg:x="1198595755" fg:w="2006018"/><text x="80.6131%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="80.4304%" y="341" width="0.0672%" height="15" fill="rgb(206,108,45)" fg:x="1199598764" fg:w="1003009"/><text x="80.6804%" y="351.50"></text></g><g><title>chlang::board::Board::get_valid_moves (1,076,228,657 samples, 72.16%)</title><rect x="8.4734%" y="373" width="72.1587%" height="15" fill="rgb(245,210,41)" fg:x="126379134" fg:w="1076228657"/><text x="8.7234%" y="383.50">chlang::board::Board::get_valid_moves</text></g><g><title>chlang::board::Board::get_game_state (1,112,336,981 samples, 74.58%)</title><rect x="6.1197%" y="389" width="74.5797%" height="15" fill="rgb(206,13,37)" fg:x="91273819" fg:w="1112336981"/><text x="6.3697%" y="399.50">chlang::board::Board::get_game_state</text></g><g><title>chlang::board::Board::attacked_by_color (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="373" width="0.0672%" height="15" fill="rgb(250,61,18)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="357" width="0.0672%" height="15" fill="rgb(235,172,48)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="341" width="0.0672%" height="15" fill="rgb(249,201,17)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="325" width="0.0672%" height="15" fill="rgb(219,208,6)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="309" width="0.0672%" height="15" fill="rgb(248,31,23)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="293" width="0.0672%" height="15" fill="rgb(245,15,42)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="277" width="0.0672%" height="15" fill="rgb(222,217,39)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="261" width="0.0672%" height="15" fill="rgb(210,219,27)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="245" width="0.0672%" height="15" fill="rgb(252,166,36)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="229" width="0.0672%" height="15" fill="rgb(245,132,34)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="239.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="213" width="0.0672%" height="15" fill="rgb(236,54,3)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="223.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="80.6321%" y="197" width="0.0672%" height="15" fill="rgb(241,173,43)" fg:x="1202607791" fg:w="1003009"/><text x="80.8821%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (3,009,027 samples, 0.20%)</title><rect x="80.6994%" y="373" width="0.2017%" height="15" fill="rgb(215,190,9)" fg:x="1203610800" fg:w="3009027"/><text x="80.9494%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4,012,036 samples, 0.27%)</title><rect x="80.9011%" y="341" width="0.2690%" height="15" fill="rgb(242,101,16)" fg:x="1206619827" fg:w="4012036"/><text x="81.1511%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,036,108 samples, 0.81%)</title><rect x="80.9011%" y="373" width="0.8070%" height="15" fill="rgb(223,190,21)" fg:x="1206619827" fg:w="12036108"/><text x="81.1511%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,036,108 samples, 0.81%)</title><rect x="80.9011%" y="357" width="0.8070%" height="15" fill="rgb(215,228,25)" fg:x="1206619827" fg:w="12036108"/><text x="81.1511%" y="367.50"></text></g><g><title>chlang::tree_evaluator::eval (1,220,661,953 samples, 81.84%)</title><rect x="1.6812%" y="405" width="81.8426%" height="15" fill="rgb(225,36,22)" fg:x="25075225" fg:w="1220661953"/><text x="1.9312%" y="415.50">chlang::tree_evaluator::eval</text></g><g><title>&lt;chlang::evaluators::positional_evaluator::PositionalEvaluator as chlang::tree_evaluator::Eval&gt;::evaluate (42,126,378 samples, 2.82%)</title><rect x="80.6994%" y="389" width="2.8245%" height="15" fill="rgb(251,106,46)" fg:x="1203610800" fg:w="42126378"/><text x="80.9494%" y="399.50">&lt;c..</text></g><g><title>chlang::board::Board::unmake_last (1,003,009 samples, 0.07%)</title><rect x="83.5239%" y="405" width="0.0672%" height="15" fill="rgb(208,90,1)" fg:x="1245737178" fg:w="1003009"/><text x="83.7739%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="389" width="0.0672%" height="15" fill="rgb(243,10,4)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="373" width="0.0672%" height="15" fill="rgb(212,137,27)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="357" width="0.0672%" height="15" fill="rgb(231,220,49)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="341" width="0.0672%" height="15" fill="rgb(237,96,20)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="325" width="0.0672%" height="15" fill="rgb(239,229,30)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="309" width="0.0672%" height="15" fill="rgb(219,65,33)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="319.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="293" width="0.0672%" height="15" fill="rgb(243,134,7)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="303.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="83.5911%" y="277" width="0.0672%" height="15" fill="rgb(216,177,54)" fg:x="1246740187" fg:w="1003009"/><text x="83.8411%" y="287.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="83.6584%" y="389" width="0.0672%" height="15" fill="rgb(211,160,20)" fg:x="1247743196" fg:w="1003009"/><text x="83.9084%" y="399.50"></text></g><g><title>chlang::board::Board::key (1,003,009 samples, 0.07%)</title><rect x="83.7256%" y="389" width="0.0672%" height="15" fill="rgb(239,85,39)" fg:x="1248746205" fg:w="1003009"/><text x="83.9756%" y="399.50"></text></g><g><title>__rust_dealloc (3,009,027 samples, 0.20%)</title><rect x="83.7929%" y="213" width="0.2017%" height="15" fill="rgb(232,125,22)" fg:x="1249749214" fg:w="3009027"/><text x="84.0429%" y="223.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.13%)</title><rect x="83.9946%" y="213" width="0.1345%" height="15" fill="rgb(244,57,34)" fg:x="1252758241" fg:w="2006018"/><text x="84.2446%" y="223.50"></text></g><g><title>tcache_put (1,003,009 samples, 0.07%)</title><rect x="84.1291%" y="181" width="0.0672%" height="15" fill="rgb(214,203,32)" fg:x="1254764259" fg:w="1003009"/><text x="84.3791%" y="191.50"></text></g><g><title>_int_free (2,006,018 samples, 0.13%)</title><rect x="84.1291%" y="197" width="0.1345%" height="15" fill="rgb(207,58,43)" fg:x="1254764259" fg:w="2006018"/><text x="84.3791%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="357" width="0.6052%" height="15" fill="rgb(215,193,15)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="341" width="0.6052%" height="15" fill="rgb(232,15,44)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="325" width="0.6052%" height="15" fill="rgb(212,3,48)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="309" width="0.6052%" height="15" fill="rgb(218,128,7)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="293" width="0.6052%" height="15" fill="rgb(226,216,39)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="277" width="0.6052%" height="15" fill="rgb(243,47,51)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="261" width="0.6052%" height="15" fill="rgb(241,183,40)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="245" width="0.6052%" height="15" fill="rgb(231,217,32)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (9,027,081 samples, 0.61%)</title><rect x="83.7929%" y="229" width="0.6052%" height="15" fill="rgb(229,61,38)" fg:x="1249749214" fg:w="9027081"/><text x="84.0429%" y="239.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.27%)</title><rect x="84.1291%" y="213" width="0.2690%" height="15" fill="rgb(225,210,5)" fg:x="1254764259" fg:w="4012036"/><text x="84.3791%" y="223.50"></text></g><g><title>chlang::board::Board::piece_type (2,006,018 samples, 0.13%)</title><rect x="84.3981%" y="357" width="0.1345%" height="15" fill="rgb(231,79,45)" fg:x="1258776295" fg:w="2006018"/><text x="84.6481%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="341" width="0.0672%" height="15" fill="rgb(224,100,7)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="325" width="0.0672%" height="15" fill="rgb(241,198,18)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="309" width="0.0672%" height="15" fill="rgb(252,97,53)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="293" width="0.0672%" height="15" fill="rgb(220,88,7)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="277" width="0.0672%" height="15" fill="rgb(213,176,14)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="261" width="0.0672%" height="15" fill="rgb(246,73,7)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="245" width="0.0672%" height="15" fill="rgb(245,64,36)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="229" width="0.0672%" height="15" fill="rgb(245,80,10)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="84.5326%" y="213" width="0.0672%" height="15" fill="rgb(232,107,50)" fg:x="1260782313" fg:w="1003009"/><text x="84.7826%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="84.5999%" y="341" width="0.0672%" height="15" fill="rgb(253,3,0)" fg:x="1261785322" fg:w="1003009"/><text x="84.8499%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (3,009,027 samples, 0.20%)</title><rect x="84.5326%" y="357" width="0.2017%" height="15" fill="rgb(212,99,53)" fg:x="1260782313" fg:w="3009027"/><text x="84.7826%" y="367.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (1,003,009 samples, 0.07%)</title><rect x="84.6671%" y="341" width="0.0672%" height="15" fill="rgb(249,111,54)" fg:x="1262788331" fg:w="1003009"/><text x="84.9171%" y="351.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (1,003,009 samples, 0.07%)</title><rect x="84.6671%" y="325" width="0.0672%" height="15" fill="rgb(249,55,30)" fg:x="1262788331" fg:w="1003009"/><text x="84.9171%" y="335.50"></text></g><g><title>__rust_alloc (1,003,009 samples, 0.07%)</title><rect x="84.7344%" y="213" width="0.0672%" height="15" fill="rgb(237,47,42)" fg:x="1263791340" fg:w="1003009"/><text x="84.9844%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="341" width="0.1345%" height="15" fill="rgb(211,20,18)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="325" width="0.1345%" height="15" fill="rgb(231,203,46)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="309" width="0.1345%" height="15" fill="rgb(237,142,3)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="293" width="0.1345%" height="15" fill="rgb(241,107,1)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="277" width="0.1345%" height="15" fill="rgb(229,83,13)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="261" width="0.1345%" height="15" fill="rgb(241,91,40)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="245" width="0.1345%" height="15" fill="rgb(225,3,45)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="84.7344%" y="229" width="0.1345%" height="15" fill="rgb(244,223,14)" fg:x="1263791340" fg:w="2006018"/><text x="84.9844%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="84.8016%" y="213" width="0.0672%" height="15" fill="rgb(224,124,37)" fg:x="1264794349" fg:w="1003009"/><text x="85.0516%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (3,009,027 samples, 0.20%)</title><rect x="84.7344%" y="357" width="0.2017%" height="15" fill="rgb(251,171,30)" fg:x="1263791340" fg:w="3009027"/><text x="84.9844%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="357" width="0.0672%" height="15" fill="rgb(236,46,54)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="341" width="0.0672%" height="15" fill="rgb(245,213,5)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="325" width="0.0672%" height="15" fill="rgb(230,144,27)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="309" width="0.0672%" height="15" fill="rgb(220,86,6)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="293" width="0.0672%" height="15" fill="rgb(240,20,13)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="277" width="0.0672%" height="15" fill="rgb(217,89,34)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="261" width="0.0672%" height="15" fill="rgb(229,13,5)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="245" width="0.0672%" height="15" fill="rgb(244,67,35)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="229" width="0.0672%" height="15" fill="rgb(221,40,2)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="239.50"></text></g><g><title>__rust_alloc (1,003,009 samples, 0.07%)</title><rect x="84.9361%" y="213" width="0.0672%" height="15" fill="rgb(237,157,21)" fg:x="1266800367" fg:w="1003009"/><text x="85.1861%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="85.0034%" y="341" width="0.0672%" height="15" fill="rgb(222,94,11)" fg:x="1267803376" fg:w="1003009"/><text x="85.2534%" y="351.50"></text></g><g><title>core::ptr::write (1,003,009 samples, 0.07%)</title><rect x="85.0034%" y="325" width="0.0672%" height="15" fill="rgb(249,113,6)" fg:x="1267803376" fg:w="1003009"/><text x="85.2534%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (5,015,045 samples, 0.34%)</title><rect x="85.0034%" y="357" width="0.3362%" height="15" fill="rgb(238,137,36)" fg:x="1267803376" fg:w="5015045"/><text x="85.2534%" y="367.50"></text></g><g><title>chlang::board::Position::valid (3,009,027 samples, 0.20%)</title><rect x="85.3396%" y="341" width="0.2017%" height="15" fill="rgb(210,102,26)" fg:x="1272818421" fg:w="3009027"/><text x="85.5896%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="341" width="0.0672%" height="15" fill="rgb(218,30,30)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="325" width="0.0672%" height="15" fill="rgb(214,67,26)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="309" width="0.0672%" height="15" fill="rgb(251,9,53)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="293" width="0.0672%" height="15" fill="rgb(228,204,25)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="277" width="0.0672%" height="15" fill="rgb(207,153,8)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="261" width="0.0672%" height="15" fill="rgb(242,9,16)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="245" width="0.0672%" height="15" fill="rgb(217,211,10)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="229" width="0.0672%" height="15" fill="rgb(219,228,52)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="85.5414%" y="213" width="0.0672%" height="15" fill="rgb(231,92,29)" fg:x="1275827448" fg:w="1003009"/><text x="85.7914%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="85.6086%" y="341" width="0.0672%" height="15" fill="rgb(232,8,23)" fg:x="1276830457" fg:w="1003009"/><text x="85.8586%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (7,021,063 samples, 0.47%)</title><rect x="85.3396%" y="357" width="0.4707%" height="15" fill="rgb(216,211,34)" fg:x="1272818421" fg:w="7021063"/><text x="85.5896%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.07%)</title><rect x="85.8104%" y="357" width="0.0672%" height="15" fill="rgb(236,151,0)" fg:x="1279839484" fg:w="1003009"/><text x="86.0604%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="85.8104%" y="341" width="0.0672%" height="15" fill="rgb(209,168,3)" fg:x="1279839484" fg:w="1003009"/><text x="86.0604%" y="351.50"></text></g><g><title>chlang::board::Board::attacked_by_color (32,096,288 samples, 2.15%)</title><rect x="83.7929%" y="373" width="2.1520%" height="15" fill="rgb(208,129,28)" fg:x="1249749214" fg:w="32096288"/><text x="84.0429%" y="383.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,003,009 samples, 0.07%)</title><rect x="85.8776%" y="357" width="0.0672%" height="15" fill="rgb(229,78,22)" fg:x="1280842493" fg:w="1003009"/><text x="86.1276%" y="367.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,003,009 samples, 0.07%)</title><rect x="85.8776%" y="341" width="0.0672%" height="15" fill="rgb(228,187,13)" fg:x="1280842493" fg:w="1003009"/><text x="86.1276%" y="351.50"></text></g><g><title>chlang::board::Board::is_valid (33,099,297 samples, 2.22%)</title><rect x="83.7929%" y="389" width="2.2192%" height="15" fill="rgb(240,119,24)" fg:x="1249749214" fg:w="33099297"/><text x="84.0429%" y="399.50">c..</text></g><g><title>chlang::board::Board::piece_type (10,030,090 samples, 0.67%)</title><rect x="86.0121%" y="373" width="0.6725%" height="15" fill="rgb(209,194,42)" fg:x="1282848511" fg:w="10030090"/><text x="86.2621%" y="383.50"></text></g><g><title>chlang::board::Position::bitboard (1,003,009 samples, 0.07%)</title><rect x="86.6846%" y="357" width="0.0672%" height="15" fill="rgb(247,200,46)" fg:x="1292878601" fg:w="1003009"/><text x="86.9346%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (2,006,018 samples, 0.13%)</title><rect x="86.6846%" y="373" width="0.1345%" height="15" fill="rgb(218,76,16)" fg:x="1292878601" fg:w="2006018"/><text x="86.9346%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="357" width="0.0672%" height="15" fill="rgb(225,21,48)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="341" width="0.0672%" height="15" fill="rgb(239,223,50)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="325" width="0.0672%" height="15" fill="rgb(244,45,21)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="309" width="0.0672%" height="15" fill="rgb(232,33,43)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="293" width="0.0672%" height="15" fill="rgb(209,8,3)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="277" width="0.0672%" height="15" fill="rgb(214,25,53)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="261" width="0.0672%" height="15" fill="rgb(254,186,54)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="245" width="0.0672%" height="15" fill="rgb(208,174,49)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="86.7518%" y="229" width="0.0672%" height="15" fill="rgb(233,191,51)" fg:x="1293881610" fg:w="1003009"/><text x="87.0018%" y="239.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="86.8191%" y="373" width="0.0672%" height="15" fill="rgb(222,134,10)" fg:x="1294884619" fg:w="1003009"/><text x="87.0691%" y="383.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="86.8863%" y="357" width="0.0672%" height="15" fill="rgb(230,226,20)" fg:x="1295887628" fg:w="1003009"/><text x="87.1363%" y="367.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="86.9536%" y="229" width="0.0672%" height="15" fill="rgb(251,111,25)" fg:x="1296890637" fg:w="1003009"/><text x="87.2036%" y="239.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (3,009,027 samples, 0.20%)</title><rect x="86.8863%" y="373" width="0.2017%" height="15" fill="rgb(224,40,46)" fg:x="1295887628" fg:w="3009027"/><text x="87.1363%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="357" width="0.1345%" height="15" fill="rgb(236,108,47)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="341" width="0.1345%" height="15" fill="rgb(234,93,0)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="325" width="0.1345%" height="15" fill="rgb(224,213,32)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="309" width="0.1345%" height="15" fill="rgb(251,11,48)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="293" width="0.1345%" height="15" fill="rgb(236,173,5)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="277" width="0.1345%" height="15" fill="rgb(230,95,12)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="261" width="0.1345%" height="15" fill="rgb(232,209,1)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="86.9536%" y="245" width="0.1345%" height="15" fill="rgb(232,6,1)" fg:x="1296890637" fg:w="2006018"/><text x="87.2036%" y="255.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="87.0881%" y="357" width="0.0672%" height="15" fill="rgb(210,224,50)" fg:x="1298896655" fg:w="1003009"/><text x="87.3381%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (3,009,027 samples, 0.20%)</title><rect x="87.0881%" y="373" width="0.2017%" height="15" fill="rgb(228,127,35)" fg:x="1298896655" fg:w="3009027"/><text x="87.3381%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (22,066,198 samples, 1.48%)</title><rect x="86.0121%" y="389" width="1.4795%" height="15" fill="rgb(245,102,45)" fg:x="1282848511" fg:w="22066198"/><text x="86.2621%" y="399.50"></text></g><g><title>chlang::board::Board::make_move (59,177,531 samples, 3.97%)</title><rect x="83.5911%" y="405" width="3.9677%" height="15" fill="rgb(214,1,49)" fg:x="1246740187" fg:w="59177531"/><text x="83.8411%" y="415.50">chla..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="389" width="0.0672%" height="15" fill="rgb(226,163,40)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="373" width="0.0672%" height="15" fill="rgb(239,212,28)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="357" width="0.0672%" height="15" fill="rgb(220,20,13)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="341" width="0.0672%" height="15" fill="rgb(210,164,35)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="325" width="0.0672%" height="15" fill="rgb(248,109,41)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="309" width="0.0672%" height="15" fill="rgb(238,23,50)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="293" width="0.0672%" height="15" fill="rgb(211,48,49)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="277" width="0.0672%" height="15" fill="rgb(223,36,21)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="261" width="0.0672%" height="15" fill="rgb(207,123,46)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="271.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="245" width="0.0672%" height="15" fill="rgb(240,218,32)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="255.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="87.5588%" y="229" width="0.0672%" height="15" fill="rgb(252,5,43)" fg:x="1305917718" fg:w="1003009"/><text x="87.8088%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (5,015,045 samples, 0.34%)</title><rect x="87.6261%" y="389" width="0.3362%" height="15" fill="rgb(252,84,19)" fg:x="1306920727" fg:w="5015045"/><text x="87.8761%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,003,009 samples, 0.07%)</title><rect x="87.9623%" y="389" width="0.0672%" height="15" fill="rgb(243,152,39)" fg:x="1311935772" fg:w="1003009"/><text x="88.2123%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,003,009 samples, 0.07%)</title><rect x="87.9623%" y="373" width="0.0672%" height="15" fill="rgb(234,160,15)" fg:x="1311935772" fg:w="1003009"/><text x="88.2123%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (1,003,009 samples, 0.07%)</title><rect x="87.9623%" y="357" width="0.0672%" height="15" fill="rgb(237,34,20)" fg:x="1311935772" fg:w="1003009"/><text x="88.2123%" y="367.50"></text></g><g><title>chlang::board::Position::bitboard (1,003,009 samples, 0.07%)</title><rect x="88.0296%" y="357" width="0.0672%" height="15" fill="rgb(229,97,13)" fg:x="1312938781" fg:w="1003009"/><text x="88.2796%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (2,006,018 samples, 0.13%)</title><rect x="88.0296%" y="373" width="0.1345%" height="15" fill="rgb(234,71,50)" fg:x="1312938781" fg:w="2006018"/><text x="88.2796%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="373" width="0.0672%" height="15" fill="rgb(253,155,4)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="357" width="0.0672%" height="15" fill="rgb(222,185,37)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="341" width="0.0672%" height="15" fill="rgb(251,177,13)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="325" width="0.0672%" height="15" fill="rgb(250,179,40)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="309" width="0.0672%" height="15" fill="rgb(242,44,2)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="293" width="0.0672%" height="15" fill="rgb(216,177,13)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="277" width="0.0672%" height="15" fill="rgb(216,106,43)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="261" width="0.0672%" height="15" fill="rgb(216,183,2)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="245" width="0.0672%" height="15" fill="rgb(249,75,3)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="229" width="0.0672%" height="15" fill="rgb(219,67,39)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="239.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="88.1641%" y="213" width="0.0672%" height="15" fill="rgb(253,228,2)" fg:x="1314944799" fg:w="1003009"/><text x="88.4141%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="373" width="0.0672%" height="15" fill="rgb(235,138,27)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="383.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="357" width="0.0672%" height="15" fill="rgb(236,97,51)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="341" width="0.0672%" height="15" fill="rgb(240,80,30)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="325" width="0.0672%" height="15" fill="rgb(230,178,19)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="309" width="0.0672%" height="15" fill="rgb(210,190,27)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="293" width="0.0672%" height="15" fill="rgb(222,107,31)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="277" width="0.0672%" height="15" fill="rgb(216,127,34)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="261" width="0.0672%" height="15" fill="rgb(234,116,52)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="245" width="0.0672%" height="15" fill="rgb(222,124,15)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="229" width="0.0672%" height="15" fill="rgb(231,179,28)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="88.2313%" y="213" width="0.0672%" height="15" fill="rgb(226,93,45)" fg:x="1315947808" fg:w="1003009"/><text x="88.4813%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (5,015,045 samples, 0.34%)</title><rect x="88.0296%" y="389" width="0.3362%" height="15" fill="rgb(215,8,51)" fg:x="1312938781" fg:w="5015045"/><text x="88.2796%" y="399.50"></text></g><g><title>__rust_alloc (1,003,009 samples, 0.07%)</title><rect x="88.3658%" y="261" width="0.0672%" height="15" fill="rgb(223,106,5)" fg:x="1317953826" fg:w="1003009"/><text x="88.6158%" y="271.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (14,042,126 samples, 0.94%)</title><rect x="87.5588%" y="405" width="0.9415%" height="15" fill="rgb(250,191,5)" fg:x="1305917718" fg:w="14042126"/><text x="87.8088%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="389" width="0.1345%" height="15" fill="rgb(242,132,44)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="373" width="0.1345%" height="15" fill="rgb(251,152,29)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="357" width="0.1345%" height="15" fill="rgb(218,179,5)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="341" width="0.1345%" height="15" fill="rgb(227,67,19)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="325" width="0.1345%" height="15" fill="rgb(233,119,31)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="309" width="0.1345%" height="15" fill="rgb(241,120,22)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="293" width="0.1345%" height="15" fill="rgb(224,102,30)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="88.3658%" y="277" width="0.1345%" height="15" fill="rgb(210,164,37)" fg:x="1317953826" fg:w="2006018"/><text x="88.6158%" y="287.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="88.4331%" y="261" width="0.0672%" height="15" fill="rgb(226,191,16)" fg:x="1318956835" fg:w="1003009"/><text x="88.6831%" y="271.50"></text></g><g><title>_int_malloc (1,003,009 samples, 0.07%)</title><rect x="88.4331%" y="245" width="0.0672%" height="15" fill="rgb(214,40,45)" fg:x="1318956835" fg:w="1003009"/><text x="88.6831%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="341" width="0.0672%" height="15" fill="rgb(244,29,26)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="325" width="0.0672%" height="15" fill="rgb(216,16,5)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="309" width="0.0672%" height="15" fill="rgb(249,76,35)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="293" width="0.0672%" height="15" fill="rgb(207,11,44)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="303.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="277" width="0.0672%" height="15" fill="rgb(228,190,49)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="287.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="261" width="0.0672%" height="15" fill="rgb(214,173,12)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="245" width="0.0672%" height="15" fill="rgb(218,26,35)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="255.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="229" width="0.0672%" height="15" fill="rgb(220,200,19)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="239.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="213" width="0.0672%" height="15" fill="rgb(239,95,49)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="223.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="197" width="0.0672%" height="15" fill="rgb(235,85,53)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1,003,009 samples, 0.07%)</title><rect x="88.5003%" y="181" width="0.0672%" height="15" fill="rgb(233,133,31)" fg:x="1319959844" fg:w="1003009"/><text x="88.7503%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1,003,009 samples, 0.07%)</title><rect x="88.5676%" y="261" width="0.0672%" height="15" fill="rgb(218,25,20)" fg:x="1320962853" fg:w="1003009"/><text x="88.8176%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1,003,009 samples, 0.07%)</title><rect x="88.5676%" y="245" width="0.0672%" height="15" fill="rgb(252,210,38)" fg:x="1320962853" fg:w="1003009"/><text x="88.8176%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1,003,009 samples, 0.07%)</title><rect x="88.5676%" y="229" width="0.0672%" height="15" fill="rgb(242,134,21)" fg:x="1320962853" fg:w="1003009"/><text x="88.8176%" y="239.50"></text></g><g><title>core::intrinsics::unlikely (1,003,009 samples, 0.07%)</title><rect x="88.5676%" y="213" width="0.0672%" height="15" fill="rgb(213,28,48)" fg:x="1320962853" fg:w="1003009"/><text x="88.8176%" y="223.50"></text></g><g><title>chlang::board::Board::is_threefold_rep (3,009,027 samples, 0.20%)</title><rect x="88.5003%" y="389" width="0.2017%" height="15" fill="rgb(250,196,2)" fg:x="1319959844" fg:w="3009027"/><text x="88.7503%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3,009,027 samples, 0.20%)</title><rect x="88.5003%" y="373" width="0.2017%" height="15" fill="rgb(227,5,17)" fg:x="1319959844" fg:w="3009027"/><text x="88.7503%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3,009,027 samples, 0.20%)</title><rect x="88.5003%" y="357" width="0.2017%" height="15" fill="rgb(221,226,24)" fg:x="1319959844" fg:w="3009027"/><text x="88.7503%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2,006,018 samples, 0.13%)</title><rect x="88.5676%" y="341" width="0.1345%" height="15" fill="rgb(211,5,48)" fg:x="1320962853" fg:w="2006018"/><text x="88.8176%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2,006,018 samples, 0.13%)</title><rect x="88.5676%" y="325" width="0.1345%" height="15" fill="rgb(219,150,6)" fg:x="1320962853" fg:w="2006018"/><text x="88.8176%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,006,018 samples, 0.13%)</title><rect x="88.5676%" y="309" width="0.1345%" height="15" fill="rgb(251,46,16)" fg:x="1320962853" fg:w="2006018"/><text x="88.8176%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2,006,018 samples, 0.13%)</title><rect x="88.5676%" y="293" width="0.1345%" height="15" fill="rgb(220,204,40)" fg:x="1320962853" fg:w="2006018"/><text x="88.8176%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2,006,018 samples, 0.13%)</title><rect x="88.5676%" y="277" width="0.1345%" height="15" fill="rgb(211,85,2)" fg:x="1320962853" fg:w="2006018"/><text x="88.8176%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="261" width="0.0672%" height="15" fill="rgb(229,17,7)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="271.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="245" width="0.0672%" height="15" fill="rgb(239,72,28)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="229" width="0.0672%" height="15" fill="rgb(230,47,54)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="213" width="0.0672%" height="15" fill="rgb(214,50,8)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="197" width="0.0672%" height="15" fill="rgb(216,198,43)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="181" width="0.0672%" height="15" fill="rgb(234,20,35)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="191.50"></text></g><g><title>&lt;chlang::board::KeyStruct as core::hash::Hash&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="165" width="0.0672%" height="15" fill="rgb(254,45,19)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="149" width="0.0672%" height="15" fill="rgb(219,14,44)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="159.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="133" width="0.0672%" height="15" fill="rgb(217,220,26)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="143.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="117" width="0.0672%" height="15" fill="rgb(213,158,28)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1,003,009 samples, 0.07%)</title><rect x="88.6348%" y="101" width="0.0672%" height="15" fill="rgb(252,51,52)" fg:x="1321965862" fg:w="1003009"/><text x="88.8848%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="373" width="0.0672%" height="15" fill="rgb(246,89,16)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="357" width="0.0672%" height="15" fill="rgb(216,158,49)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="341" width="0.0672%" height="15" fill="rgb(236,107,19)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="325" width="0.0672%" height="15" fill="rgb(228,185,30)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="309" width="0.0672%" height="15" fill="rgb(246,134,8)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="293" width="0.0672%" height="15" fill="rgb(214,143,50)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="277" width="0.0672%" height="15" fill="rgb(228,75,8)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="261" width="0.0672%" height="15" fill="rgb(207,175,4)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="245" width="0.0672%" height="15" fill="rgb(205,108,24)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="255.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="229" width="0.0672%" height="15" fill="rgb(244,120,49)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="239.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="88.7021%" y="213" width="0.0672%" height="15" fill="rgb(223,47,38)" fg:x="1322968871" fg:w="1003009"/><text x="88.9521%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1,003,009 samples, 0.07%)</title><rect x="88.7693%" y="357" width="0.0672%" height="15" fill="rgb(229,179,11)" fg:x="1323971880" fg:w="1003009"/><text x="89.0193%" y="367.50"></text></g><g><title>core::ptr::read (1,003,009 samples, 0.07%)</title><rect x="88.7693%" y="341" width="0.0672%" height="15" fill="rgb(231,122,1)" fg:x="1323971880" fg:w="1003009"/><text x="89.0193%" y="351.50"></text></g><g><title>chlang::board::Board::unmake_last (3,009,027 samples, 0.20%)</title><rect x="88.7693%" y="373" width="0.2017%" height="15" fill="rgb(245,119,9)" fg:x="1323971880" fg:w="3009027"/><text x="89.0193%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1,003,009 samples, 0.07%)</title><rect x="88.9711%" y="357" width="0.0672%" height="15" fill="rgb(241,163,25)" fg:x="1326980907" fg:w="1003009"/><text x="89.2211%" y="367.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1,003,009 samples, 0.07%)</title><rect x="88.9711%" y="341" width="0.0672%" height="15" fill="rgb(217,214,3)" fg:x="1326980907" fg:w="1003009"/><text x="89.2211%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1,003,009 samples, 0.07%)</title><rect x="88.9711%" y="325" width="0.0672%" height="15" fill="rgb(240,86,28)" fg:x="1326980907" fg:w="1003009"/><text x="89.2211%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.07%)</title><rect x="88.9711%" y="309" width="0.0672%" height="15" fill="rgb(215,47,9)" fg:x="1326980907" fg:w="1003009"/><text x="89.2211%" y="319.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="88.9711%" y="293" width="0.0672%" height="15" fill="rgb(252,25,45)" fg:x="1326980907" fg:w="1003009"/><text x="89.2211%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,003,009 samples, 0.07%)</title><rect x="89.0383%" y="293" width="0.0672%" height="15" fill="rgb(251,164,9)" fg:x="1327983916" fg:w="1003009"/><text x="89.2883%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1,003,009 samples, 0.07%)</title><rect x="89.0383%" y="277" width="0.0672%" height="15" fill="rgb(233,194,0)" fg:x="1327983916" fg:w="1003009"/><text x="89.2883%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="89.0383%" y="357" width="0.1345%" height="15" fill="rgb(249,111,24)" fg:x="1327983916" fg:w="2006018"/><text x="89.2883%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="89.0383%" y="341" width="0.1345%" height="15" fill="rgb(250,223,3)" fg:x="1327983916" fg:w="2006018"/><text x="89.2883%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.13%)</title><rect x="89.0383%" y="325" width="0.1345%" height="15" fill="rgb(236,178,37)" fg:x="1327983916" fg:w="2006018"/><text x="89.2883%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="89.0383%" y="309" width="0.1345%" height="15" fill="rgb(241,158,50)" fg:x="1327983916" fg:w="2006018"/><text x="89.2883%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="89.1056%" y="293" width="0.0672%" height="15" fill="rgb(213,121,41)" fg:x="1328986925" fg:w="1003009"/><text x="89.3556%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="89.1056%" y="277" width="0.0672%" height="15" fill="rgb(240,92,3)" fg:x="1328986925" fg:w="1003009"/><text x="89.3556%" y="287.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="89.1056%" y="261" width="0.0672%" height="15" fill="rgb(205,123,3)" fg:x="1328986925" fg:w="1003009"/><text x="89.3556%" y="271.50"></text></g><g><title>chlang::cmove::Move::to (1,003,009 samples, 0.07%)</title><rect x="89.1728%" y="357" width="0.0672%" height="15" fill="rgb(205,97,47)" fg:x="1329989934" fg:w="1003009"/><text x="89.4228%" y="367.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.20%)</title><rect x="89.2401%" y="357" width="0.2017%" height="15" fill="rgb(247,152,14)" fg:x="1330992943" fg:w="3009027"/><text x="89.4901%" y="367.50"></text></g><g><title>chlang::board::Board::key (1,003,009 samples, 0.07%)</title><rect x="89.4418%" y="357" width="0.0672%" height="15" fill="rgb(248,195,53)" fg:x="1334001970" fg:w="1003009"/><text x="89.6918%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.07%)</title><rect x="89.4418%" y="341" width="0.0672%" height="15" fill="rgb(226,201,16)" fg:x="1334001970" fg:w="1003009"/><text x="89.6918%" y="351.50"></text></g><g><title>__rust_dealloc (4,012,036 samples, 0.27%)</title><rect x="89.5091%" y="181" width="0.2690%" height="15" fill="rgb(205,98,0)" fg:x="1335004979" fg:w="4012036"/><text x="89.7591%" y="191.50"></text></g><g><title>tcache_put (5,015,045 samples, 0.34%)</title><rect x="89.7781%" y="149" width="0.3362%" height="15" fill="rgb(214,191,48)" fg:x="1339017015" fg:w="5015045"/><text x="90.0281%" y="159.50"></text></g><g><title>_int_free (14,042,126 samples, 0.94%)</title><rect x="89.7781%" y="165" width="0.9415%" height="15" fill="rgb(237,112,39)" fg:x="1339017015" fg:w="14042126"/><text x="90.0281%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="325" width="1.4122%" height="15" fill="rgb(247,203,27)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="309" width="1.4122%" height="15" fill="rgb(235,124,28)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="293" width="1.4122%" height="15" fill="rgb(208,207,46)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="277" width="1.4122%" height="15" fill="rgb(234,176,4)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="261" width="1.4122%" height="15" fill="rgb(230,133,28)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="245" width="1.4122%" height="15" fill="rgb(211,137,40)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="229" width="1.4122%" height="15" fill="rgb(254,35,13)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="213" width="1.4122%" height="15" fill="rgb(225,49,51)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (21,063,189 samples, 1.41%)</title><rect x="89.5091%" y="197" width="1.4122%" height="15" fill="rgb(251,10,15)" fg:x="1335004979" fg:w="21063189"/><text x="89.7591%" y="207.50"></text></g><g><title>__GI___libc_free (17,051,153 samples, 1.14%)</title><rect x="89.7781%" y="181" width="1.1432%" height="15" fill="rgb(228,207,15)" fg:x="1339017015" fg:w="17051153"/><text x="90.0281%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (1,003,009 samples, 0.07%)</title><rect x="90.9213%" y="325" width="0.0672%" height="15" fill="rgb(241,99,19)" fg:x="1356068168" fg:w="1003009"/><text x="91.1713%" y="335.50"></text></g><g><title>chlang::cmove::Move::to (1,003,009 samples, 0.07%)</title><rect x="90.9886%" y="325" width="0.0672%" height="15" fill="rgb(207,104,49)" fg:x="1357071177" fg:w="1003009"/><text x="91.2386%" y="335.50"></text></g><g><title>chlang::board::Board::piece_type (6,018,054 samples, 0.40%)</title><rect x="91.0558%" y="325" width="0.4035%" height="15" fill="rgb(234,99,18)" fg:x="1358074186" fg:w="6018054"/><text x="91.3058%" y="335.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="91.4593%" y="165" width="0.0672%" height="15" fill="rgb(213,191,49)" fg:x="1364092240" fg:w="1003009"/><text x="91.7093%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.20%)</title><rect x="91.4593%" y="229" width="0.2017%" height="15" fill="rgb(210,226,19)" fg:x="1364092240" fg:w="3009027"/><text x="91.7093%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.20%)</title><rect x="91.4593%" y="213" width="0.2017%" height="15" fill="rgb(229,97,18)" fg:x="1364092240" fg:w="3009027"/><text x="91.7093%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.20%)</title><rect x="91.4593%" y="197" width="0.2017%" height="15" fill="rgb(211,167,15)" fg:x="1364092240" fg:w="3009027"/><text x="91.7093%" y="207.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.20%)</title><rect x="91.4593%" y="181" width="0.2017%" height="15" fill="rgb(210,169,34)" fg:x="1364092240" fg:w="3009027"/><text x="91.7093%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.27%)</title><rect x="91.4593%" y="309" width="0.2690%" height="15" fill="rgb(241,121,31)" fg:x="1364092240" fg:w="4012036"/><text x="91.7093%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="91.4593%" y="293" width="0.2690%" height="15" fill="rgb(232,40,11)" fg:x="1364092240" fg:w="4012036"/><text x="91.7093%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="91.4593%" y="277" width="0.2690%" height="15" fill="rgb(205,86,26)" fg:x="1364092240" fg:w="4012036"/><text x="91.7093%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.27%)</title><rect x="91.4593%" y="261" width="0.2690%" height="15" fill="rgb(231,126,28)" fg:x="1364092240" fg:w="4012036"/><text x="91.7093%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.27%)</title><rect x="91.4593%" y="245" width="0.2690%" height="15" fill="rgb(219,221,18)" fg:x="1364092240" fg:w="4012036"/><text x="91.7093%" y="255.50"></text></g><g><title>core::ptr::write (1,003,009 samples, 0.07%)</title><rect x="91.7283%" y="293" width="0.0672%" height="15" fill="rgb(211,40,0)" fg:x="1368104276" fg:w="1003009"/><text x="91.9783%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.13%)</title><rect x="91.7283%" y="309" width="0.1345%" height="15" fill="rgb(239,85,43)" fg:x="1368104276" fg:w="2006018"/><text x="91.9783%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (11,033,099 samples, 0.74%)</title><rect x="91.4593%" y="325" width="0.7397%" height="15" fill="rgb(231,55,21)" fg:x="1364092240" fg:w="11033099"/><text x="91.7093%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="92.1991%" y="229" width="0.0672%" height="15" fill="rgb(225,184,43)" fg:x="1375125339" fg:w="1003009"/><text x="92.4491%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="92.1991%" y="213" width="0.0672%" height="15" fill="rgb(251,158,41)" fg:x="1375125339" fg:w="1003009"/><text x="92.4491%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="92.1991%" y="197" width="0.0672%" height="15" fill="rgb(234,159,37)" fg:x="1375125339" fg:w="1003009"/><text x="92.4491%" y="207.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="92.1991%" y="181" width="0.0672%" height="15" fill="rgb(216,204,22)" fg:x="1375125339" fg:w="1003009"/><text x="92.4491%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="92.1991%" y="309" width="0.1345%" height="15" fill="rgb(214,17,3)" fg:x="1375125339" fg:w="2006018"/><text x="92.4491%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="92.1991%" y="293" width="0.1345%" height="15" fill="rgb(212,111,17)" fg:x="1375125339" fg:w="2006018"/><text x="92.4491%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="92.1991%" y="277" width="0.1345%" height="15" fill="rgb(221,157,24)" fg:x="1375125339" fg:w="2006018"/><text x="92.4491%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="92.1991%" y="261" width="0.1345%" height="15" fill="rgb(252,16,13)" fg:x="1375125339" fg:w="2006018"/><text x="92.4491%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="92.1991%" y="245" width="0.1345%" height="15" fill="rgb(221,62,2)" fg:x="1375125339" fg:w="2006018"/><text x="92.4491%" y="255.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (3,009,027 samples, 0.20%)</title><rect x="92.1991%" y="325" width="0.2017%" height="15" fill="rgb(247,87,22)" fg:x="1375125339" fg:w="3009027"/><text x="92.4491%" y="335.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="92.4008%" y="309" width="0.0672%" height="15" fill="rgb(215,73,9)" fg:x="1378134366" fg:w="1003009"/><text x="92.6508%" y="319.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="92.4681%" y="165" width="0.0672%" height="15" fill="rgb(207,175,33)" fg:x="1379137375" fg:w="1003009"/><text x="92.7181%" y="175.50"></text></g><g><title>__GI___libc_malloc (4,012,036 samples, 0.27%)</title><rect x="92.4681%" y="181" width="0.2690%" height="15" fill="rgb(243,129,54)" fg:x="1379137375" fg:w="4012036"/><text x="92.7181%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.34%)</title><rect x="92.4681%" y="229" width="0.3362%" height="15" fill="rgb(227,119,45)" fg:x="1379137375" fg:w="5015045"/><text x="92.7181%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.34%)</title><rect x="92.4681%" y="213" width="0.3362%" height="15" fill="rgb(205,109,36)" fg:x="1379137375" fg:w="5015045"/><text x="92.7181%" y="223.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.34%)</title><rect x="92.4681%" y="197" width="0.3362%" height="15" fill="rgb(205,6,39)" fg:x="1379137375" fg:w="5015045"/><text x="92.7181%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6,018,054 samples, 0.40%)</title><rect x="92.4681%" y="309" width="0.4035%" height="15" fill="rgb(221,32,16)" fg:x="1379137375" fg:w="6018054"/><text x="92.7181%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.40%)</title><rect x="92.4681%" y="293" width="0.4035%" height="15" fill="rgb(228,144,50)" fg:x="1379137375" fg:w="6018054"/><text x="92.7181%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.40%)</title><rect x="92.4681%" y="277" width="0.4035%" height="15" fill="rgb(229,201,53)" fg:x="1379137375" fg:w="6018054"/><text x="92.7181%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,018,054 samples, 0.40%)</title><rect x="92.4681%" y="261" width="0.4035%" height="15" fill="rgb(249,153,27)" fg:x="1379137375" fg:w="6018054"/><text x="92.7181%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,018,054 samples, 0.40%)</title><rect x="92.4681%" y="245" width="0.4035%" height="15" fill="rgb(227,106,25)" fg:x="1379137375" fg:w="6018054"/><text x="92.7181%" y="255.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (8,024,072 samples, 0.54%)</title><rect x="92.4008%" y="325" width="0.5380%" height="15" fill="rgb(230,65,29)" fg:x="1378134366" fg:w="8024072"/><text x="92.6508%" y="335.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.13%)</title><rect x="92.9388%" y="309" width="0.1345%" height="15" fill="rgb(221,57,46)" fg:x="1386158438" fg:w="2006018"/><text x="93.1888%" y="319.50"></text></g><g><title>__rdl_alloc (1,003,009 samples, 0.07%)</title><rect x="93.0733%" y="181" width="0.0672%" height="15" fill="rgb(229,161,17)" fg:x="1388164456" fg:w="1003009"/><text x="93.3233%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="309" width="0.1345%" height="15" fill="rgb(222,213,11)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="293" width="0.1345%" height="15" fill="rgb(235,35,13)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="277" width="0.1345%" height="15" fill="rgb(233,158,34)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="261" width="0.1345%" height="15" fill="rgb(215,151,48)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="245" width="0.1345%" height="15" fill="rgb(229,84,14)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="229" width="0.1345%" height="15" fill="rgb(229,68,14)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="213" width="0.1345%" height="15" fill="rgb(243,106,26)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="93.0733%" y="197" width="0.1345%" height="15" fill="rgb(206,45,38)" fg:x="1388164456" fg:w="2006018"/><text x="93.3233%" y="207.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="93.1406%" y="181" width="0.0672%" height="15" fill="rgb(226,6,15)" fg:x="1389167465" fg:w="1003009"/><text x="93.3906%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="93.2078%" y="309" width="0.0672%" height="15" fill="rgb(232,22,54)" fg:x="1390170474" fg:w="1003009"/><text x="93.4578%" y="319.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (8,024,072 samples, 0.54%)</title><rect x="92.9388%" y="325" width="0.5380%" height="15" fill="rgb(229,222,32)" fg:x="1386158438" fg:w="8024072"/><text x="93.1888%" y="335.50"></text></g><g><title>chlang::cmove::Move::new (1,003,009 samples, 0.07%)</title><rect x="93.4768%" y="309" width="0.0672%" height="15" fill="rgb(228,62,29)" fg:x="1394182510" fg:w="1003009"/><text x="93.7268%" y="319.50"></text></g><g><title>chlang::board::Position::valid (1,003,009 samples, 0.07%)</title><rect x="93.5440%" y="309" width="0.0672%" height="15" fill="rgb(251,103,34)" fg:x="1395185519" fg:w="1003009"/><text x="93.7940%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="93.6113%" y="229" width="0.1345%" height="15" fill="rgb(233,12,30)" fg:x="1396188528" fg:w="2006018"/><text x="93.8613%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="93.6113%" y="213" width="0.1345%" height="15" fill="rgb(238,52,0)" fg:x="1396188528" fg:w="2006018"/><text x="93.8613%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="93.6113%" y="197" width="0.1345%" height="15" fill="rgb(223,98,5)" fg:x="1396188528" fg:w="2006018"/><text x="93.8613%" y="207.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.13%)</title><rect x="93.6113%" y="181" width="0.1345%" height="15" fill="rgb(228,75,37)" fg:x="1396188528" fg:w="2006018"/><text x="93.8613%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,027 samples, 0.20%)</title><rect x="93.6113%" y="309" width="0.2017%" height="15" fill="rgb(205,115,49)" fg:x="1396188528" fg:w="3009027"/><text x="93.8613%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="93.6113%" y="293" width="0.2017%" height="15" fill="rgb(250,154,43)" fg:x="1396188528" fg:w="3009027"/><text x="93.8613%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="93.6113%" y="277" width="0.2017%" height="15" fill="rgb(226,43,29)" fg:x="1396188528" fg:w="3009027"/><text x="93.8613%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,027 samples, 0.20%)</title><rect x="93.6113%" y="261" width="0.2017%" height="15" fill="rgb(249,228,39)" fg:x="1396188528" fg:w="3009027"/><text x="93.8613%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,027 samples, 0.20%)</title><rect x="93.6113%" y="245" width="0.2017%" height="15" fill="rgb(216,79,43)" fg:x="1396188528" fg:w="3009027"/><text x="93.8613%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.13%)</title><rect x="93.8130%" y="309" width="0.1345%" height="15" fill="rgb(228,95,12)" fg:x="1399197555" fg:w="2006018"/><text x="94.0630%" y="319.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (1,003,009 samples, 0.07%)</title><rect x="93.9475%" y="309" width="0.0672%" height="15" fill="rgb(249,221,15)" fg:x="1401203573" fg:w="1003009"/><text x="94.1975%" y="319.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (1,003,009 samples, 0.07%)</title><rect x="93.9475%" y="293" width="0.0672%" height="15" fill="rgb(233,34,13)" fg:x="1401203573" fg:w="1003009"/><text x="94.1975%" y="303.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (13,039,117 samples, 0.87%)</title><rect x="93.4768%" y="325" width="0.8742%" height="15" fill="rgb(214,103,39)" fg:x="1394182510" fg:w="13039117"/><text x="93.7268%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.07%)</title><rect x="94.3510%" y="325" width="0.0672%" height="15" fill="rgb(251,126,39)" fg:x="1407221627" fg:w="1003009"/><text x="94.6010%" y="335.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="94.3510%" y="309" width="0.0672%" height="15" fill="rgb(214,216,36)" fg:x="1407221627" fg:w="1003009"/><text x="94.6010%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,003,009 samples, 0.07%)</title><rect x="94.4183%" y="325" width="0.0672%" height="15" fill="rgb(220,221,8)" fg:x="1408224636" fg:w="1003009"/><text x="94.6683%" y="335.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,003,009 samples, 0.07%)</title><rect x="94.4183%" y="309" width="0.0672%" height="15" fill="rgb(240,216,3)" fg:x="1408224636" fg:w="1003009"/><text x="94.6683%" y="319.50"></text></g><g><title>chlang::board::Board::attacked_by_color (76,228,684 samples, 5.11%)</title><rect x="89.5091%" y="341" width="5.1110%" height="15" fill="rgb(232,218,17)" fg:x="1335004979" fg:w="76228684"/><text x="89.7591%" y="351.50">chlang..</text></g><g><title>chlang::board::Board::is_valid (78,234,702 samples, 5.25%)</title><rect x="89.5091%" y="357" width="5.2455%" height="15" fill="rgb(229,163,45)" fg:x="1335004979" fg:w="78234702"/><text x="89.7591%" y="367.50">chlang..</text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="94.7545%" y="341" width="0.0672%" height="15" fill="rgb(231,110,42)" fg:x="1413239681" fg:w="1003009"/><text x="95.0045%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="94.8218%" y="341" width="0.0672%" height="15" fill="rgb(208,170,48)" fg:x="1414242690" fg:w="1003009"/><text x="95.0718%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="94.8890%" y="245" width="0.0672%" height="15" fill="rgb(239,116,25)" fg:x="1415245699" fg:w="1003009"/><text x="95.1390%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="94.8890%" y="229" width="0.0672%" height="15" fill="rgb(219,200,50)" fg:x="1415245699" fg:w="1003009"/><text x="95.1390%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="94.8890%" y="213" width="0.0672%" height="15" fill="rgb(245,200,0)" fg:x="1415245699" fg:w="1003009"/><text x="95.1390%" y="223.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="94.8890%" y="197" width="0.0672%" height="15" fill="rgb(245,119,33)" fg:x="1415245699" fg:w="1003009"/><text x="95.1390%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="94.8890%" y="325" width="0.1345%" height="15" fill="rgb(231,125,12)" fg:x="1415245699" fg:w="2006018"/><text x="95.1390%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="94.8890%" y="309" width="0.1345%" height="15" fill="rgb(216,96,41)" fg:x="1415245699" fg:w="2006018"/><text x="95.1390%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="94.8890%" y="293" width="0.1345%" height="15" fill="rgb(248,43,45)" fg:x="1415245699" fg:w="2006018"/><text x="95.1390%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="94.8890%" y="277" width="0.1345%" height="15" fill="rgb(217,222,7)" fg:x="1415245699" fg:w="2006018"/><text x="95.1390%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="94.8890%" y="261" width="0.1345%" height="15" fill="rgb(233,28,6)" fg:x="1415245699" fg:w="2006018"/><text x="95.1390%" y="271.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (3,009,027 samples, 0.20%)</title><rect x="94.8890%" y="341" width="0.2017%" height="15" fill="rgb(231,218,15)" fg:x="1415245699" fg:w="3009027"/><text x="95.1390%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="95.0235%" y="325" width="0.0672%" height="15" fill="rgb(226,171,48)" fg:x="1417251717" fg:w="1003009"/><text x="95.2735%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (2,006,018 samples, 0.13%)</title><rect x="95.0908%" y="341" width="0.1345%" height="15" fill="rgb(235,201,9)" fg:x="1418254726" fg:w="2006018"/><text x="95.3408%" y="351.50"></text></g><g><title>chlang::board::Position::valid (2,006,018 samples, 0.13%)</title><rect x="95.2253%" y="325" width="0.1345%" height="15" fill="rgb(217,80,15)" fg:x="1420260744" fg:w="2006018"/><text x="95.4753%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="95.3598%" y="325" width="0.0672%" height="15" fill="rgb(219,152,8)" fg:x="1422266762" fg:w="1003009"/><text x="95.6098%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (4,012,036 samples, 0.27%)</title><rect x="95.2253%" y="341" width="0.2690%" height="15" fill="rgb(243,107,38)" fg:x="1420260744" fg:w="4012036"/><text x="95.4753%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (14,042,126 samples, 0.94%)</title><rect x="94.7545%" y="357" width="0.9415%" height="15" fill="rgb(231,17,5)" fg:x="1413239681" fg:w="14042126"/><text x="95.0045%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="95.6960%" y="357" width="0.0672%" height="15" fill="rgb(209,25,54)" fg:x="1427281807" fg:w="1003009"/><text x="95.9460%" y="367.50"></text></g><g><title>chlang::board::Board::make_move (105,315,945 samples, 7.06%)</title><rect x="88.9711%" y="373" width="7.0612%" height="15" fill="rgb(219,0,2)" fg:x="1326980907" fg:w="105315945"/><text x="89.2211%" y="383.50">chlang::b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="357" width="0.0672%" height="15" fill="rgb(246,9,5)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="341" width="0.0672%" height="15" fill="rgb(226,159,4)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="325" width="0.0672%" height="15" fill="rgb(219,175,34)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="309" width="0.0672%" height="15" fill="rgb(236,10,46)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="293" width="0.0672%" height="15" fill="rgb(240,211,16)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="277" width="0.0672%" height="15" fill="rgb(205,3,43)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="261" width="0.0672%" height="15" fill="rgb(245,7,22)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="245" width="0.0672%" height="15" fill="rgb(239,132,32)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="229" width="0.0672%" height="15" fill="rgb(228,202,34)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="239.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="213" width="0.0672%" height="15" fill="rgb(254,200,22)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="223.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="96.0323%" y="197" width="0.0672%" height="15" fill="rgb(219,10,39)" fg:x="1432296852" fg:w="1003009"/><text x="96.2823%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Position&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="357" width="0.1345%" height="15" fill="rgb(226,210,39)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Position&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="341" width="0.1345%" height="15" fill="rgb(208,219,16)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="325" width="0.1345%" height="15" fill="rgb(216,158,51)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="309" width="0.1345%" height="15" fill="rgb(233,14,44)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="293" width="0.1345%" height="15" fill="rgb(237,97,39)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="277" width="0.1345%" height="15" fill="rgb(218,198,43)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="287.50"></text></g><g><title>__GI___libc_free (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="261" width="0.1345%" height="15" fill="rgb(231,104,20)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="271.50"></text></g><g><title>_int_free (2,006,018 samples, 0.13%)</title><rect x="96.0995%" y="245" width="0.1345%" height="15" fill="rgb(254,36,13)" fg:x="1433299861" fg:w="2006018"/><text x="96.3495%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (7,021,063 samples, 0.47%)</title><rect x="96.2340%" y="357" width="0.4707%" height="15" fill="rgb(248,14,50)" fg:x="1435305879" fg:w="7021063"/><text x="96.4840%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="96.7048%" y="341" width="0.0672%" height="15" fill="rgb(217,107,29)" fg:x="1442326942" fg:w="1003009"/><text x="96.9548%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="96.7720%" y="341" width="0.0672%" height="15" fill="rgb(251,169,33)" fg:x="1443329951" fg:w="1003009"/><text x="97.0220%" y="351.50"></text></g><g><title>chlang::cmove::Move::promotion (1,003,009 samples, 0.07%)</title><rect x="96.7720%" y="325" width="0.0672%" height="15" fill="rgb(217,108,32)" fg:x="1443329951" fg:w="1003009"/><text x="97.0220%" y="335.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="96.8393%" y="341" width="0.0672%" height="15" fill="rgb(219,66,42)" fg:x="1444332960" fg:w="1003009"/><text x="97.0893%" y="351.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (4,012,036 samples, 0.27%)</title><rect x="96.7048%" y="357" width="0.2690%" height="15" fill="rgb(206,180,7)" fg:x="1442326942" fg:w="4012036"/><text x="96.9548%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="357" width="0.0672%" height="15" fill="rgb(208,226,31)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="341" width="0.0672%" height="15" fill="rgb(218,26,49)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="325" width="0.0672%" height="15" fill="rgb(233,197,48)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="309" width="0.0672%" height="15" fill="rgb(252,181,51)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="293" width="0.0672%" height="15" fill="rgb(253,90,19)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="277" width="0.0672%" height="15" fill="rgb(215,171,30)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="261" width="0.0672%" height="15" fill="rgb(214,222,9)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="245" width="0.0672%" height="15" fill="rgb(223,3,22)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="255.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="229" width="0.0672%" height="15" fill="rgb(225,196,46)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="239.50"></text></g><g><title>_int_malloc (1,003,009 samples, 0.07%)</title><rect x="96.9738%" y="213" width="0.0672%" height="15" fill="rgb(209,110,37)" fg:x="1446338978" fg:w="1003009"/><text x="97.2238%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,003,009 samples, 0.07%)</title><rect x="97.0410%" y="357" width="0.0672%" height="15" fill="rgb(249,89,12)" fg:x="1447341987" fg:w="1003009"/><text x="97.2910%" y="367.50"></text></g><g><title>chlang::board::Board::get_game_state (130,391,170 samples, 8.74%)</title><rect x="88.5003%" y="405" width="8.7424%" height="15" fill="rgb(226,27,33)" fg:x="1319959844" fg:w="130391170"/><text x="88.7503%" y="415.50">chlang::boar..</text></g><g><title>chlang::board::Board::get_valid_moves (127,382,143 samples, 8.54%)</title><rect x="88.7021%" y="389" width="8.5407%" height="15" fill="rgb(213,82,22)" fg:x="1322968871" fg:w="127382143"/><text x="88.9521%" y="399.50">chlang::boar..</text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (18,054,162 samples, 1.21%)</title><rect x="96.0323%" y="373" width="1.2105%" height="15" fill="rgb(248,140,0)" fg:x="1432296852" fg:w="18054162"/><text x="96.2823%" y="383.50"></text></g><g><title>chlang::tree_evaluator::eval (1,440,320,924 samples, 96.57%)</title><rect x="0.7397%" y="421" width="96.5703%" height="15" fill="rgb(228,106,3)" fg:x="11033099" fg:w="1440320924"/><text x="0.9897%" y="431.50">chlang::tree_evaluator::eval</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="405" width="0.0672%" height="15" fill="rgb(209,23,37)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="389" width="0.0672%" height="15" fill="rgb(241,93,50)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="373" width="0.0672%" height="15" fill="rgb(253,46,43)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="357" width="0.0672%" height="15" fill="rgb(226,206,43)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="341" width="0.0672%" height="15" fill="rgb(217,54,7)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="325" width="0.0672%" height="15" fill="rgb(223,5,52)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="335.50"></text></g><g><title>__rdl_dealloc (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="309" width="0.0672%" height="15" fill="rgb(206,52,46)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="319.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,003,009 samples, 0.07%)</title><rect x="97.3100%" y="293" width="0.0672%" height="15" fill="rgb(253,136,11)" fg:x="1451354023" fg:w="1003009"/><text x="97.5600%" y="303.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="97.3773%" y="405" width="0.0672%" height="15" fill="rgb(208,106,33)" fg:x="1452357032" fg:w="1003009"/><text x="97.6273%" y="415.50"></text></g><g><title>__rust_dealloc (1,003,009 samples, 0.07%)</title><rect x="97.4445%" y="229" width="0.0672%" height="15" fill="rgb(206,54,4)" fg:x="1453360041" fg:w="1003009"/><text x="97.6945%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="373" width="0.1345%" height="15" fill="rgb(213,3,15)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="357" width="0.1345%" height="15" fill="rgb(252,211,39)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="341" width="0.1345%" height="15" fill="rgb(223,6,36)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="325" width="0.1345%" height="15" fill="rgb(252,169,45)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="309" width="0.1345%" height="15" fill="rgb(212,48,26)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="293" width="0.1345%" height="15" fill="rgb(251,102,48)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="277" width="0.1345%" height="15" fill="rgb(243,208,16)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="261" width="0.1345%" height="15" fill="rgb(219,96,24)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (2,006,018 samples, 0.13%)</title><rect x="97.4445%" y="245" width="0.1345%" height="15" fill="rgb(219,33,29)" fg:x="1453360041" fg:w="2006018"/><text x="97.6945%" y="255.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="97.5118%" y="229" width="0.0672%" height="15" fill="rgb(223,176,5)" fg:x="1454363050" fg:w="1003009"/><text x="97.7618%" y="239.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="97.5118%" y="213" width="0.0672%" height="15" fill="rgb(228,140,14)" fg:x="1454363050" fg:w="1003009"/><text x="97.7618%" y="223.50"></text></g><g><title>tcache_put (1,003,009 samples, 0.07%)</title><rect x="97.5118%" y="197" width="0.0672%" height="15" fill="rgb(217,179,31)" fg:x="1454363050" fg:w="1003009"/><text x="97.7618%" y="207.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="97.5790%" y="373" width="0.0672%" height="15" fill="rgb(230,9,30)" fg:x="1455366059" fg:w="1003009"/><text x="97.8290%" y="383.50"></text></g><g><title>chlang::board::Board::is_valid (4,012,036 samples, 0.27%)</title><rect x="97.4445%" y="405" width="0.2690%" height="15" fill="rgb(230,136,20)" fg:x="1453360041" fg:w="4012036"/><text x="97.6945%" y="415.50"></text></g><g><title>chlang::board::Board::attacked_by_color (4,012,036 samples, 0.27%)</title><rect x="97.4445%" y="389" width="0.2690%" height="15" fill="rgb(215,210,22)" fg:x="1453360041" fg:w="4012036"/><text x="97.6945%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.07%)</title><rect x="97.6463%" y="373" width="0.0672%" height="15" fill="rgb(218,43,5)" fg:x="1456369068" fg:w="1003009"/><text x="97.8963%" y="383.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="97.6463%" y="357" width="0.0672%" height="15" fill="rgb(216,11,5)" fg:x="1456369068" fg:w="1003009"/><text x="97.8963%" y="367.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="97.7135%" y="389" width="0.0672%" height="15" fill="rgb(209,82,29)" fg:x="1457372077" fg:w="1003009"/><text x="97.9635%" y="399.50"></text></g><g><title>chlang::board::Board::make_move (8,024,072 samples, 0.54%)</title><rect x="97.3100%" y="421" width="0.5380%" height="15" fill="rgb(244,115,12)" fg:x="1451354023" fg:w="8024072"/><text x="97.5600%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (2,006,018 samples, 0.13%)</title><rect x="97.7135%" y="405" width="0.1345%" height="15" fill="rgb(222,82,18)" fg:x="1457372077" fg:w="2006018"/><text x="97.9635%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="405" width="0.0672%" height="15" fill="rgb(249,227,8)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="389" width="0.0672%" height="15" fill="rgb(253,141,45)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="373" width="0.0672%" height="15" fill="rgb(234,184,4)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="357" width="0.0672%" height="15" fill="rgb(218,194,23)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="341" width="0.0672%" height="15" fill="rgb(235,66,41)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="325" width="0.0672%" height="15" fill="rgb(245,217,1)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="309" width="0.0672%" height="15" fill="rgb(229,91,1)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="293" width="0.0672%" height="15" fill="rgb(207,101,30)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="277" width="0.0672%" height="15" fill="rgb(223,82,49)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="287.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="261" width="0.0672%" height="15" fill="rgb(218,167,17)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="271.50"></text></g><g><title>_int_free (1,003,009 samples, 0.07%)</title><rect x="97.8480%" y="245" width="0.0672%" height="15" fill="rgb(208,103,14)" fg:x="1459378095" fg:w="1003009"/><text x="98.0980%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,003,009 samples, 0.07%)</title><rect x="97.9153%" y="405" width="0.0672%" height="15" fill="rgb(238,20,8)" fg:x="1460381104" fg:w="1003009"/><text x="98.1653%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (3,009,027 samples, 0.20%)</title><rect x="97.8480%" y="421" width="0.2017%" height="15" fill="rgb(218,80,54)" fg:x="1459378095" fg:w="3009027"/><text x="98.0980%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,003,009 samples, 0.07%)</title><rect x="97.9825%" y="405" width="0.0672%" height="15" fill="rgb(240,144,17)" fg:x="1461384113" fg:w="1003009"/><text x="98.2325%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,003,009 samples, 0.07%)</title><rect x="97.9825%" y="389" width="0.0672%" height="15" fill="rgb(245,27,50)" fg:x="1461384113" fg:w="1003009"/><text x="98.2325%" y="399.50"></text></g><g><title>chlang::board::Board::unmake_last (1,003,009 samples, 0.07%)</title><rect x="98.0498%" y="389" width="0.0672%" height="15" fill="rgb(251,51,7)" fg:x="1462387122" fg:w="1003009"/><text x="98.2998%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1,003,009 samples, 0.07%)</title><rect x="98.1170%" y="373" width="0.0672%" height="15" fill="rgb(245,217,29)" fg:x="1463390131" fg:w="1003009"/><text x="98.3670%" y="383.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1,003,009 samples, 0.07%)</title><rect x="98.1170%" y="357" width="0.0672%" height="15" fill="rgb(221,176,29)" fg:x="1463390131" fg:w="1003009"/><text x="98.3670%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1,003,009 samples, 0.07%)</title><rect x="98.1170%" y="341" width="0.0672%" height="15" fill="rgb(212,180,24)" fg:x="1463390131" fg:w="1003009"/><text x="98.3670%" y="351.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (1,003,009 samples, 0.07%)</title><rect x="98.1170%" y="325" width="0.0672%" height="15" fill="rgb(254,24,2)" fg:x="1463390131" fg:w="1003009"/><text x="98.3670%" y="335.50"></text></g><g><title>&lt;chlang::cmove::Move as core::cmp::PartialEq&gt;::eq (1,003,009 samples, 0.07%)</title><rect x="98.1170%" y="309" width="0.0672%" height="15" fill="rgb(230,100,2)" fg:x="1463390131" fg:w="1003009"/><text x="98.3670%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="98.1843%" y="373" width="0.0672%" height="15" fill="rgb(219,142,25)" fg:x="1464393140" fg:w="1003009"/><text x="98.4343%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (1,003,009 samples, 0.07%)</title><rect x="98.1843%" y="357" width="0.0672%" height="15" fill="rgb(240,73,43)" fg:x="1464393140" fg:w="1003009"/><text x="98.4343%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.07%)</title><rect x="98.1843%" y="341" width="0.0672%" height="15" fill="rgb(214,114,15)" fg:x="1464393140" fg:w="1003009"/><text x="98.4343%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="98.1843%" y="325" width="0.0672%" height="15" fill="rgb(207,130,4)" fg:x="1464393140" fg:w="1003009"/><text x="98.4343%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.07%)</title><rect x="98.1843%" y="309" width="0.0672%" height="15" fill="rgb(221,25,40)" fg:x="1464393140" fg:w="1003009"/><text x="98.4343%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.07%)</title><rect x="98.1843%" y="293" width="0.0672%" height="15" fill="rgb(241,184,7)" fg:x="1464393140" fg:w="1003009"/><text x="98.4343%" y="303.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.07%)</title><rect x="98.1843%" y="277" width="0.0672%" height="15" fill="rgb(235,159,4)" fg:x="1464393140" fg:w="1003009"/><text x="98.4343%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="357" width="0.1345%" height="15" fill="rgb(214,87,48)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="341" width="0.1345%" height="15" fill="rgb(246,198,24)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="325" width="0.1345%" height="15" fill="rgb(209,66,40)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="309" width="0.1345%" height="15" fill="rgb(233,147,39)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="319.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="293" width="0.1345%" height="15" fill="rgb(231,145,52)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="277" width="0.1345%" height="15" fill="rgb(206,20,26)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="261" width="0.1345%" height="15" fill="rgb(238,220,4)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="271.50"></text></g><g><title>core::ptr::read (2,006,018 samples, 0.13%)</title><rect x="98.2515%" y="245" width="0.1345%" height="15" fill="rgb(252,195,42)" fg:x="1465396149" fg:w="2006018"/><text x="98.5015%" y="255.50"></text></g><g><title>chlang::board::Board::piece_type (3,009,027 samples, 0.20%)</title><rect x="98.2515%" y="373" width="0.2017%" height="15" fill="rgb(209,10,6)" fg:x="1465396149" fg:w="3009027"/><text x="98.5015%" y="383.50"></text></g><g><title>__rust_dealloc (1,003,009 samples, 0.07%)</title><rect x="98.4533%" y="197" width="0.0672%" height="15" fill="rgb(229,3,52)" fg:x="1468405176" fg:w="1003009"/><text x="98.7033%" y="207.50"></text></g><g><title>__rdl_dealloc (1,003,009 samples, 0.07%)</title><rect x="98.5205%" y="197" width="0.0672%" height="15" fill="rgb(253,49,37)" fg:x="1469408185" fg:w="1003009"/><text x="98.7705%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="341" width="0.3362%" height="15" fill="rgb(240,103,49)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="325" width="0.3362%" height="15" fill="rgb(250,182,30)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chlang::cmove::Move,alloc::alloc::Global&gt;&gt; (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="309" width="0.3362%" height="15" fill="rgb(248,8,30)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="293" width="0.3362%" height="15" fill="rgb(237,120,30)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::cmove::Move&gt;&gt; (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="277" width="0.3362%" height="15" fill="rgb(221,146,34)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="261" width="0.3362%" height="15" fill="rgb(242,55,13)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="245" width="0.3362%" height="15" fill="rgb(242,112,31)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="229" width="0.3362%" height="15" fill="rgb(249,192,27)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.34%)</title><rect x="98.4533%" y="213" width="0.3362%" height="15" fill="rgb(208,204,44)" fg:x="1468405176" fg:w="5015045"/><text x="98.7033%" y="223.50"></text></g><g><title>__GI___libc_free (3,009,027 samples, 0.20%)</title><rect x="98.5878%" y="197" width="0.2017%" height="15" fill="rgb(208,93,54)" fg:x="1470411194" fg:w="3009027"/><text x="98.8378%" y="207.50"></text></g><g><title>_int_free (3,009,027 samples, 0.20%)</title><rect x="98.5878%" y="181" width="0.2017%" height="15" fill="rgb(242,1,31)" fg:x="1470411194" fg:w="3009027"/><text x="98.8378%" y="191.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="341" width="0.0672%" height="15" fill="rgb(241,83,25)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="325" width="0.0672%" height="15" fill="rgb(205,169,50)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="309" width="0.0672%" height="15" fill="rgb(239,186,37)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="293" width="0.0672%" height="15" fill="rgb(205,221,10)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="277" width="0.0672%" height="15" fill="rgb(218,196,15)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="261" width="0.0672%" height="15" fill="rgb(218,196,35)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="245" width="0.0672%" height="15" fill="rgb(233,63,24)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="229" width="0.0672%" height="15" fill="rgb(225,8,4)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="213" width="0.0672%" height="15" fill="rgb(234,105,35)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="223.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="98.7895%" y="197" width="0.0672%" height="15" fill="rgb(236,21,32)" fg:x="1473420221" fg:w="1003009"/><text x="99.0395%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="98.8568%" y="341" width="0.0672%" height="15" fill="rgb(228,109,6)" fg:x="1474423230" fg:w="1003009"/><text x="99.1068%" y="351.50"></text></g><g><title>chlang::cmove::Move::new (1,003,009 samples, 0.07%)</title><rect x="98.8568%" y="325" width="0.0672%" height="15" fill="rgb(229,215,31)" fg:x="1474423230" fg:w="1003009"/><text x="99.1068%" y="335.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="98.9240%" y="181" width="0.0672%" height="15" fill="rgb(221,52,54)" fg:x="1475426239" fg:w="1003009"/><text x="99.1740%" y="191.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="341" width="0.1345%" height="15" fill="rgb(252,129,43)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="325" width="0.1345%" height="15" fill="rgb(248,183,27)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="309" width="0.1345%" height="15" fill="rgb(250,0,22)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="293" width="0.1345%" height="15" fill="rgb(213,166,10)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="277" width="0.1345%" height="15" fill="rgb(207,163,36)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="261" width="0.1345%" height="15" fill="rgb(208,122,22)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="245" width="0.1345%" height="15" fill="rgb(207,104,49)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="229" width="0.1345%" height="15" fill="rgb(248,211,50)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="213" width="0.1345%" height="15" fill="rgb(217,13,45)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="223.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.13%)</title><rect x="98.9240%" y="197" width="0.1345%" height="15" fill="rgb(211,216,49)" fg:x="1475426239" fg:w="2006018"/><text x="99.1740%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,003,009 samples, 0.07%)</title><rect x="99.0585%" y="341" width="0.0672%" height="15" fill="rgb(221,58,53)" fg:x="1477432257" fg:w="1003009"/><text x="99.3085%" y="351.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,003,009 samples, 0.07%)</title><rect x="99.0585%" y="325" width="0.0672%" height="15" fill="rgb(220,112,41)" fg:x="1477432257" fg:w="1003009"/><text x="99.3085%" y="335.50"></text></g><g><title>chlang::board::Board::is_valid (11,033,099 samples, 0.74%)</title><rect x="98.4533%" y="373" width="0.7397%" height="15" fill="rgb(236,38,28)" fg:x="1468405176" fg:w="11033099"/><text x="98.7033%" y="383.50"></text></g><g><title>chlang::board::Board::attacked_by_color (11,033,099 samples, 0.74%)</title><rect x="98.4533%" y="357" width="0.7397%" height="15" fill="rgb(227,195,22)" fg:x="1468405176" fg:w="11033099"/><text x="98.7033%" y="367.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_knight_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="357" width="0.0672%" height="15" fill="rgb(214,55,33)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="341" width="0.0672%" height="15" fill="rgb(248,80,13)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="325" width="0.0672%" height="15" fill="rgb(238,52,6)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="309" width="0.0672%" height="15" fill="rgb(224,198,47)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="293" width="0.0672%" height="15" fill="rgb(233,171,20)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="277" width="0.0672%" height="15" fill="rgb(241,30,25)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="261" width="0.0672%" height="15" fill="rgb(207,171,38)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="245" width="0.0672%" height="15" fill="rgb(234,70,1)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="229" width="0.0672%" height="15" fill="rgb(232,178,18)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="213" width="0.0672%" height="15" fill="rgb(241,78,40)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="223.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="99.1930%" y="197" width="0.0672%" height="15" fill="rgb(222,35,25)" fg:x="1479438275" fg:w="1003009"/><text x="99.4430%" y="207.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_king_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="357" width="0.0672%" height="15" fill="rgb(207,92,16)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="341" width="0.0672%" height="15" fill="rgb(216,59,51)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="325" width="0.0672%" height="15" fill="rgb(213,80,28)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="309" width="0.0672%" height="15" fill="rgb(220,93,7)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="293" width="0.0672%" height="15" fill="rgb(225,24,44)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="277" width="0.0672%" height="15" fill="rgb(243,74,40)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="261" width="0.0672%" height="15" fill="rgb(228,39,7)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="245" width="0.0672%" height="15" fill="rgb(227,79,8)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="229" width="0.0672%" height="15" fill="rgb(236,58,11)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="99.2603%" y="213" width="0.0672%" height="15" fill="rgb(249,63,35)" fg:x="1480441284" fg:w="1003009"/><text x="99.5103%" y="223.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (5,015,045 samples, 0.34%)</title><rect x="99.1930%" y="373" width="0.3362%" height="15" fill="rgb(252,114,16)" fg:x="1479438275" fg:w="5015045"/><text x="99.4430%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,003,009 samples, 0.07%)</title><rect x="99.5293%" y="373" width="0.0672%" height="15" fill="rgb(254,151,24)" fg:x="1484453320" fg:w="1003009"/><text x="99.7793%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,003,009 samples, 0.07%)</title><rect x="99.5293%" y="357" width="0.0672%" height="15" fill="rgb(253,54,39)" fg:x="1484453320" fg:w="1003009"/><text x="99.7793%" y="367.50"></text></g><g><title>chlang::board::Board::make_move (23,069,207 samples, 1.55%)</title><rect x="98.1170%" y="389" width="1.5467%" height="15" fill="rgb(243,25,45)" fg:x="1463390131" fg:w="23069207"/><text x="98.3670%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (1,003,009 samples, 0.07%)</title><rect x="99.6638%" y="373" width="0.0672%" height="15" fill="rgb(234,134,9)" fg:x="1486459338" fg:w="1003009"/><text x="99.9138%" y="383.50"></text></g><g><title>chlang::board::Board::piece_type (1,003,009 samples, 0.07%)</title><rect x="99.7310%" y="357" width="0.0672%" height="15" fill="rgb(227,166,31)" fg:x="1487462347" fg:w="1003009"/><text x="99.9810%" y="367.50"></text></g><g><title>chlang::tree_evaluator::eval (1,483,450,311 samples, 99.46%)</title><rect x="0.4035%" y="437" width="99.4620%" height="15" fill="rgb(245,143,41)" fg:x="6018054" fg:w="1483450311"/><text x="0.6535%" y="447.50">chlang::tree_evaluator::eval</text></g><g><title>chlang::board::Board::get_game_state (27,081,243 samples, 1.82%)</title><rect x="98.0498%" y="421" width="1.8157%" height="15" fill="rgb(238,181,32)" fg:x="1462387122" fg:w="27081243"/><text x="98.2998%" y="431.50">c..</text></g><g><title>chlang::board::Board::get_valid_moves (27,081,243 samples, 1.82%)</title><rect x="98.0498%" y="405" width="1.8157%" height="15" fill="rgb(224,113,18)" fg:x="1462387122" fg:w="27081243"/><text x="98.2998%" y="415.50">c..</text></g><g><title>chlang::board::Board::get_pseudo_legal_moves (3,009,027 samples, 0.20%)</title><rect x="99.6638%" y="389" width="0.2017%" height="15" fill="rgb(240,229,28)" fg:x="1486459338" fg:w="3009027"/><text x="99.9138%" y="399.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (2,006,018 samples, 0.13%)</title><rect x="99.7310%" y="373" width="0.1345%" height="15" fill="rgb(250,185,3)" fg:x="1487462347" fg:w="2006018"/><text x="99.9810%" y="383.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_pawn_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="357" width="0.0672%" height="15" fill="rgb(212,59,25)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="341" width="0.0672%" height="15" fill="rgb(221,87,20)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="325" width="0.0672%" height="15" fill="rgb(213,74,28)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="309" width="0.0672%" height="15" fill="rgb(224,132,34)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="293" width="0.0672%" height="15" fill="rgb(222,101,24)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="277" width="0.0672%" height="15" fill="rgb(254,142,4)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="261" width="0.0672%" height="15" fill="rgb(230,229,49)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="245" width="0.0672%" height="15" fill="rgb(238,70,47)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="229" width="0.0672%" height="15" fill="rgb(231,160,17)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="213" width="0.0672%" height="15" fill="rgb(218,68,53)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="223.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.07%)</title><rect x="99.7983%" y="197" width="0.0672%" height="15" fill="rgb(236,111,10)" fg:x="1488465356" fg:w="1003009"/><text x="100.0483%" y="207.50"></text></g><g><title>chlang::tree_evaluator::Bot::find_best_move (1,484,453,320 samples, 99.53%)</title><rect x="0.4035%" y="453" width="99.5293%" height="15" fill="rgb(224,34,41)" fg:x="6018054" fg:w="1484453320"/><text x="0.6535%" y="463.50">chlang::tree_evaluator::Bot::find_best_move</text></g><g><title>chlang::board::Board::make_move (1,003,009 samples, 0.07%)</title><rect x="99.8655%" y="437" width="0.0672%" height="15" fill="rgb(241,118,19)" fg:x="1489468365" fg:w="1003009"/><text x="100.1155%" y="447.50"></text></g><g><title>chlang::board::Board::is_valid (1,003,009 samples, 0.07%)</title><rect x="99.8655%" y="421" width="0.0672%" height="15" fill="rgb(238,129,25)" fg:x="1489468365" fg:w="1003009"/><text x="100.1155%" y="431.50"></text></g><g><title>chlang::board::Board::attacked_by_color (1,003,009 samples, 0.07%)</title><rect x="99.8655%" y="405" width="0.0672%" height="15" fill="rgb(238,22,31)" fg:x="1489468365" fg:w="1003009"/><text x="100.1155%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_rook_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="99.8655%" y="389" width="0.0672%" height="15" fill="rgb(222,174,48)" fg:x="1489468365" fg:w="1003009"/><text x="100.1155%" y="399.50"></text></g><g><title>all (1,491,474,383 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(206,152,40)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="767.50"></text></g><g><title>chlang (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(218,99,54)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="751.50">chlang</text></g><g><title>_start (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(220,174,26)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="735.50">_start</text></g><g><title>__libc_start_main_impl (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(245,116,9)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="719.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(209,72,35)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="703.50">__libc_start_call_main</text></g><g><title>main (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(226,126,21)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(227,192,1)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="671.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(237,180,29)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(230,197,35)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(246,193,31)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="623.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,491,474,383 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(241,36,4)" fg:x="0" fg:w="1491474383"/><text x="0.2500%" y="607.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="581" width="99.9328%" height="15" fill="rgb(241,130,17)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="591.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="565" width="99.9328%" height="15" fill="rgb(206,137,32)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="575.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="549" width="99.9328%" height="15" fill="rgb(237,228,51)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="559.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="533" width="99.9328%" height="15" fill="rgb(243,6,42)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="543.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="517" width="99.9328%" height="15" fill="rgb(251,74,28)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="527.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="501" width="99.9328%" height="15" fill="rgb(218,20,49)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="511.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="485" width="99.9328%" height="15" fill="rgb(238,28,14)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="495.50">core::ops::function::FnOnce::call_once</text></g><g><title>chlang::main (1,490,471,374 samples, 99.93%)</title><rect x="0.0672%" y="469" width="99.9328%" height="15" fill="rgb(229,40,46)" fg:x="1003009" fg:w="1490471374"/><text x="0.3172%" y="479.50">chlang::main</text></g><g><title>chlang::board::Board::get_game_state (1,003,009 samples, 0.07%)</title><rect x="99.9328%" y="453" width="0.0672%" height="15" fill="rgb(244,195,20)" fg:x="1490471374" fg:w="1003009"/><text x="100.1828%" y="463.50"></text></g><g><title>chlang::board::Board::get_valid_moves (1,003,009 samples, 0.07%)</title><rect x="99.9328%" y="437" width="0.0672%" height="15" fill="rgb(253,56,35)" fg:x="1490471374" fg:w="1003009"/><text x="100.1828%" y="447.50"></text></g><g><title>chlang::board::Board::make_move (1,003,009 samples, 0.07%)</title><rect x="99.9328%" y="421" width="0.0672%" height="15" fill="rgb(210,149,44)" fg:x="1490471374" fg:w="1003009"/><text x="100.1828%" y="431.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="99.9328%" y="405" width="0.0672%" height="15" fill="rgb(240,135,12)" fg:x="1490471374" fg:w="1003009"/><text x="100.1828%" y="415.50"></text></g><g><title>chlang::board::Board::get_pseudo_legal_bishop_moves_from_pos (1,003,009 samples, 0.07%)</title><rect x="99.9328%" y="389" width="0.0672%" height="15" fill="rgb(251,24,50)" fg:x="1490471374" fg:w="1003009"/><text x="100.1828%" y="399.50"></text></g></svg></svg>