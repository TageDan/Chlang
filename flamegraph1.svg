<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1990" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1973.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1973.00"> </text><svg id="frames" x="10" width="1180" total_samples="31653961031"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14,042,126 samples, 0.04%)</title><rect x="2.0311%" y="997" width="0.0444%" height="15" fill="rgb(227,0,7)" fg:x="642928769" fg:w="14042126"/><text x="2.2811%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26,078,234 samples, 0.08%)</title><rect x="3.9513%" y="917" width="0.0824%" height="15" fill="rgb(217,0,24)" fg:x="1250752223" fg:w="26078234"/><text x="4.2013%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26,078,234 samples, 0.08%)</title><rect x="6.4356%" y="837" width="0.0824%" height="15" fill="rgb(221,193,54)" fg:x="2037111279" fg:w="26078234"/><text x="6.6856%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (22,066,198 samples, 0.07%)</title><rect x="9.4268%" y="757" width="0.0697%" height="15" fill="rgb(248,212,6)" fg:x="2983951775" fg:w="22066198"/><text x="9.6768%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (41,123,369 samples, 0.13%)</title><rect x="12.1677%" y="677" width="0.1299%" height="15" fill="rgb(208,68,35)" fg:x="3851554560" fg:w="41123369"/><text x="12.4177%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34,102,306 samples, 0.11%)</title><rect x="15.0100%" y="597" width="0.1077%" height="15" fill="rgb(232,128,0)" fg:x="4751253633" fg:w="34102306"/><text x="15.2600%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14,042,126 samples, 0.04%)</title><rect x="16.9809%" y="517" width="0.0444%" height="15" fill="rgb(207,160,47)" fg:x="5375125231" fg:w="14042126"/><text x="17.2309%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9,027,081 samples, 0.03%)</title><rect x="18.1850%" y="437" width="0.0285%" height="15" fill="rgb(228,23,34)" fg:x="5756268651" fg:w="9027081"/><text x="18.4350%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10,030,090 samples, 0.03%)</title><rect x="18.7870%" y="357" width="0.0317%" height="15" fill="rgb(218,30,26)" fg:x="5946840361" fg:w="10030090"/><text x="19.0370%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="19.1261%" y="133" width="0.0190%" height="15" fill="rgb(220,122,19)" fg:x="6054162324" fg:w="6018054"/><text x="19.3761%" y="143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,018,054 samples, 0.02%)</title><rect x="19.1261%" y="117" width="0.0190%" height="15" fill="rgb(250,228,42)" fg:x="6054162324" fg:w="6018054"/><text x="19.3761%" y="127.50"></text></g><g><title>alloc::slice::hack::to_vec (6,018,054 samples, 0.02%)</title><rect x="19.1261%" y="101" width="0.0190%" height="15" fill="rgb(240,193,28)" fg:x="6054162324" fg:w="6018054"/><text x="19.3761%" y="111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,018,054 samples, 0.02%)</title><rect x="19.1261%" y="85" width="0.0190%" height="15" fill="rgb(216,20,37)" fg:x="6054162324" fg:w="6018054"/><text x="19.3761%" y="95.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (5,015,045 samples, 0.02%)</title><rect x="19.1451%" y="133" width="0.0158%" height="15" fill="rgb(206,188,39)" fg:x="6060180378" fg:w="5015045"/><text x="19.3951%" y="143.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (19,057,171 samples, 0.06%)</title><rect x="19.1071%" y="149" width="0.0602%" height="15" fill="rgb(217,207,13)" fg:x="6048144270" fg:w="19057171"/><text x="19.3571%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,090,270 samples, 0.10%)</title><rect x="19.0944%" y="213" width="0.0951%" height="15" fill="rgb(231,73,38)" fg:x="6044132234" fg:w="30090270"/><text x="19.3444%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,078,234 samples, 0.08%)</title><rect x="19.1071%" y="197" width="0.0824%" height="15" fill="rgb(225,20,46)" fg:x="6048144270" fg:w="26078234"/><text x="19.3571%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (26,078,234 samples, 0.08%)</title><rect x="19.1071%" y="181" width="0.0824%" height="15" fill="rgb(210,31,41)" fg:x="6048144270" fg:w="26078234"/><text x="19.3571%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,078,234 samples, 0.08%)</title><rect x="19.1071%" y="165" width="0.0824%" height="15" fill="rgb(221,200,47)" fg:x="6048144270" fg:w="26078234"/><text x="19.3571%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.02%)</title><rect x="19.1673%" y="149" width="0.0222%" height="15" fill="rgb(226,26,5)" fg:x="6067201441" fg:w="7021063"/><text x="19.4173%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.02%)</title><rect x="19.1673%" y="133" width="0.0222%" height="15" fill="rgb(249,33,26)" fg:x="6067201441" fg:w="7021063"/><text x="19.4173%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7,021,063 samples, 0.02%)</title><rect x="19.1673%" y="117" width="0.0222%" height="15" fill="rgb(235,183,28)" fg:x="6067201441" fg:w="7021063"/><text x="19.4173%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,018,054 samples, 0.02%)</title><rect x="19.1704%" y="101" width="0.0190%" height="15" fill="rgb(221,5,38)" fg:x="6068204450" fg:w="6018054"/><text x="19.4204%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,018,054 samples, 0.02%)</title><rect x="19.1704%" y="85" width="0.0190%" height="15" fill="rgb(247,18,42)" fg:x="6068204450" fg:w="6018054"/><text x="19.4204%" y="95.50"></text></g><g><title>alloc::alloc::alloc (6,018,054 samples, 0.02%)</title><rect x="19.1704%" y="69" width="0.0190%" height="15" fill="rgb(241,131,45)" fg:x="6068204450" fg:w="6018054"/><text x="19.4204%" y="79.50"></text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.02%)</title><rect x="19.1736%" y="53" width="0.0158%" height="15" fill="rgb(249,31,29)" fg:x="6069207459" fg:w="5015045"/><text x="19.4236%" y="63.50"></text></g><g><title>_int_malloc (5,015,045 samples, 0.02%)</title><rect x="19.1736%" y="37" width="0.0158%" height="15" fill="rgb(225,111,53)" fg:x="6069207459" fg:w="5015045"/><text x="19.4236%" y="47.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (28,084,252 samples, 0.09%)</title><rect x="19.1895%" y="213" width="0.0887%" height="15" fill="rgb(238,160,17)" fg:x="6074222504" fg:w="28084252"/><text x="19.4395%" y="223.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (4,012,036 samples, 0.01%)</title><rect x="19.2782%" y="213" width="0.0127%" height="15" fill="rgb(214,148,48)" fg:x="6102306756" fg:w="4012036"/><text x="19.5282%" y="223.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (4,012,036 samples, 0.01%)</title><rect x="19.2782%" y="197" width="0.0127%" height="15" fill="rgb(232,36,49)" fg:x="6102306756" fg:w="4012036"/><text x="19.5282%" y="207.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (91,273,819 samples, 0.29%)</title><rect x="19.0120%" y="229" width="0.2883%" height="15" fill="rgb(209,103,24)" fg:x="6018054000" fg:w="91273819"/><text x="19.2620%" y="239.50"></text></g><g><title>_int_malloc (13,039,117 samples, 0.04%)</title><rect x="19.3289%" y="117" width="0.0412%" height="15" fill="rgb(229,88,8)" fg:x="6118354900" fg:w="13039117"/><text x="19.5789%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19,057,171 samples, 0.06%)</title><rect x="19.3130%" y="229" width="0.0602%" height="15" fill="rgb(213,181,19)" fg:x="6113339855" fg:w="19057171"/><text x="19.5630%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18,054,162 samples, 0.06%)</title><rect x="19.3162%" y="213" width="0.0570%" height="15" fill="rgb(254,191,54)" fg:x="6114342864" fg:w="18054162"/><text x="19.5662%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (18,054,162 samples, 0.06%)</title><rect x="19.3162%" y="197" width="0.0570%" height="15" fill="rgb(241,83,37)" fg:x="6114342864" fg:w="18054162"/><text x="19.5662%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,051,153 samples, 0.05%)</title><rect x="19.3194%" y="181" width="0.0539%" height="15" fill="rgb(233,36,39)" fg:x="6115345873" fg:w="17051153"/><text x="19.5694%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,051,153 samples, 0.05%)</title><rect x="19.3194%" y="165" width="0.0539%" height="15" fill="rgb(226,3,54)" fg:x="6115345873" fg:w="17051153"/><text x="19.5694%" y="175.50"></text></g><g><title>alloc::alloc::alloc (17,051,153 samples, 0.05%)</title><rect x="19.3194%" y="149" width="0.0539%" height="15" fill="rgb(245,192,40)" fg:x="6115345873" fg:w="17051153"/><text x="19.5694%" y="159.50"></text></g><g><title>__GI___libc_malloc (16,048,144 samples, 0.05%)</title><rect x="19.3225%" y="133" width="0.0507%" height="15" fill="rgb(238,167,29)" fg:x="6116348882" fg:w="16048144"/><text x="19.5725%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (123,370,107 samples, 0.39%)</title><rect x="18.9962%" y="293" width="0.3897%" height="15" fill="rgb(232,182,51)" fg:x="6013038955" fg:w="123370107"/><text x="19.2462%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (119,358,071 samples, 0.38%)</title><rect x="19.0088%" y="277" width="0.3771%" height="15" fill="rgb(231,60,39)" fg:x="6017050991" fg:w="119358071"/><text x="19.2588%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (119,358,071 samples, 0.38%)</title><rect x="19.0088%" y="261" width="0.3771%" height="15" fill="rgb(208,69,12)" fg:x="6017050991" fg:w="119358071"/><text x="19.2588%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (119,358,071 samples, 0.38%)</title><rect x="19.0088%" y="245" width="0.3771%" height="15" fill="rgb(235,93,37)" fg:x="6017050991" fg:w="119358071"/><text x="19.2588%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4,012,036 samples, 0.01%)</title><rect x="19.3732%" y="229" width="0.0127%" height="15" fill="rgb(213,116,39)" fg:x="6132397026" fg:w="4012036"/><text x="19.6232%" y="239.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (60,180,540 samples, 0.19%)</title><rect x="19.3859%" y="293" width="0.1901%" height="15" fill="rgb(222,207,29)" fg:x="6136409062" fg:w="60180540"/><text x="19.6359%" y="303.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (10,030,090 samples, 0.03%)</title><rect x="19.5855%" y="293" width="0.0317%" height="15" fill="rgb(206,96,30)" fg:x="6199598629" fg:w="10030090"/><text x="19.8355%" y="303.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (10,030,090 samples, 0.03%)</title><rect x="19.5855%" y="277" width="0.0317%" height="15" fill="rgb(218,138,4)" fg:x="6199598629" fg:w="10030090"/><text x="19.8355%" y="287.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (252,758,268 samples, 0.80%)</title><rect x="18.8251%" y="309" width="0.7985%" height="15" fill="rgb(250,191,14)" fg:x="5958876469" fg:w="252758268"/><text x="19.0751%" y="319.50"></text></g><g><title>_int_malloc (32,096,288 samples, 0.10%)</title><rect x="19.6743%" y="197" width="0.1014%" height="15" fill="rgb(239,60,40)" fg:x="6227682881" fg:w="32096288"/><text x="19.9243%" y="207.50"></text></g><g><title>tcache_put (4,012,036 samples, 0.01%)</title><rect x="19.7630%" y="181" width="0.0127%" height="15" fill="rgb(206,27,48)" fg:x="6255767133" fg:w="4012036"/><text x="20.0130%" y="191.50"></text></g><g><title>__GI___libc_malloc (40,120,360 samples, 0.13%)</title><rect x="19.6521%" y="213" width="0.1267%" height="15" fill="rgb(225,35,8)" fg:x="6220661818" fg:w="40120360"/><text x="19.9021%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45,135,405 samples, 0.14%)</title><rect x="19.6426%" y="309" width="0.1426%" height="15" fill="rgb(250,213,24)" fg:x="6217652791" fg:w="45135405"/><text x="19.8926%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44,132,396 samples, 0.14%)</title><rect x="19.6457%" y="293" width="0.1394%" height="15" fill="rgb(247,123,22)" fg:x="6218655800" fg:w="44132396"/><text x="19.8957%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (44,132,396 samples, 0.14%)</title><rect x="19.6457%" y="277" width="0.1394%" height="15" fill="rgb(231,138,38)" fg:x="6218655800" fg:w="44132396"/><text x="19.8957%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42,126,378 samples, 0.13%)</title><rect x="19.6521%" y="261" width="0.1331%" height="15" fill="rgb(231,145,46)" fg:x="6220661818" fg:w="42126378"/><text x="19.9021%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42,126,378 samples, 0.13%)</title><rect x="19.6521%" y="245" width="0.1331%" height="15" fill="rgb(251,118,11)" fg:x="6220661818" fg:w="42126378"/><text x="19.9021%" y="255.50"></text></g><g><title>alloc::alloc::alloc (42,126,378 samples, 0.13%)</title><rect x="19.6521%" y="229" width="0.1331%" height="15" fill="rgb(217,147,25)" fg:x="6220661818" fg:w="42126378"/><text x="19.9021%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (332,998,988 samples, 1.05%)</title><rect x="18.7649%" y="373" width="1.0520%" height="15" fill="rgb(247,81,37)" fg:x="5939819298" fg:w="332998988"/><text x="19.0149%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (315,947,835 samples, 1.00%)</title><rect x="18.8187%" y="357" width="0.9981%" height="15" fill="rgb(209,12,38)" fg:x="5956870451" fg:w="315947835"/><text x="19.0687%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (315,947,835 samples, 1.00%)</title><rect x="18.8187%" y="341" width="0.9981%" height="15" fill="rgb(227,1,9)" fg:x="5956870451" fg:w="315947835"/><text x="19.0687%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (315,947,835 samples, 1.00%)</title><rect x="18.8187%" y="325" width="0.9981%" height="15" fill="rgb(248,47,43)" fg:x="5956870451" fg:w="315947835"/><text x="19.0687%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10,030,090 samples, 0.03%)</title><rect x="19.7852%" y="309" width="0.0317%" height="15" fill="rgb(221,10,30)" fg:x="6262788196" fg:w="10030090"/><text x="20.0352%" y="319.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (174,523,566 samples, 0.55%)</title><rect x="19.8169%" y="373" width="0.5513%" height="15" fill="rgb(210,229,1)" fg:x="6272818286" fg:w="174523566"/><text x="20.0669%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,015,045 samples, 0.02%)</title><rect x="20.3682%" y="373" width="0.0158%" height="15" fill="rgb(222,148,37)" fg:x="6447341852" fg:w="5015045"/><text x="20.6182%" y="383.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (26,078,234 samples, 0.08%)</title><rect x="20.3840%" y="373" width="0.0824%" height="15" fill="rgb(234,67,33)" fg:x="6452356897" fg:w="26078234"/><text x="20.6340%" y="383.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (26,078,234 samples, 0.08%)</title><rect x="20.3840%" y="357" width="0.0824%" height="15" fill="rgb(247,98,35)" fg:x="6452356897" fg:w="26078234"/><text x="20.6340%" y="367.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (697,091,255 samples, 2.20%)</title><rect x="18.2737%" y="389" width="2.2022%" height="15" fill="rgb(247,138,52)" fg:x="5784352903" fg:w="697091255"/><text x="18.5237%" y="399.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,027,081 samples, 0.03%)</title><rect x="20.4759%" y="389" width="0.0285%" height="15" fill="rgb(213,79,30)" fg:x="6481444158" fg:w="9027081"/><text x="20.7259%" y="399.50"></text></g><g><title>_int_malloc (93,279,837 samples, 0.29%)</title><rect x="20.5868%" y="277" width="0.2947%" height="15" fill="rgb(246,177,23)" fg:x="6516549473" fg:w="93279837"/><text x="20.8368%" y="287.50"></text></g><g><title>tcache_put (6,018,054 samples, 0.02%)</title><rect x="20.8625%" y="261" width="0.0190%" height="15" fill="rgb(230,62,27)" fg:x="6603811256" fg:w="6018054"/><text x="21.1125%" y="271.50"></text></g><g><title>__GI___libc_malloc (113,340,017 samples, 0.36%)</title><rect x="20.5266%" y="293" width="0.3581%" height="15" fill="rgb(216,154,8)" fg:x="6497492302" fg:w="113340017"/><text x="20.7766%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (121,364,089 samples, 0.38%)</title><rect x="20.5235%" y="341" width="0.3834%" height="15" fill="rgb(244,35,45)" fg:x="6496489293" fg:w="121364089"/><text x="20.7735%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (121,364,089 samples, 0.38%)</title><rect x="20.5235%" y="325" width="0.3834%" height="15" fill="rgb(251,115,12)" fg:x="6496489293" fg:w="121364089"/><text x="20.7735%" y="335.50"></text></g><g><title>alloc::alloc::alloc (121,364,089 samples, 0.38%)</title><rect x="20.5235%" y="309" width="0.3834%" height="15" fill="rgb(240,54,50)" fg:x="6496489293" fg:w="121364089"/><text x="20.7735%" y="319.50"></text></g><g><title>__rust_alloc (4,012,036 samples, 0.01%)</title><rect x="20.8942%" y="293" width="0.0127%" height="15" fill="rgb(233,84,52)" fg:x="6613841346" fg:w="4012036"/><text x="21.1442%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (125,376,125 samples, 0.40%)</title><rect x="20.5140%" y="389" width="0.3961%" height="15" fill="rgb(207,117,47)" fg:x="6493480266" fg:w="125376125"/><text x="20.7640%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (123,370,107 samples, 0.39%)</title><rect x="20.5203%" y="373" width="0.3897%" height="15" fill="rgb(249,43,39)" fg:x="6495486284" fg:w="123370107"/><text x="20.7703%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (123,370,107 samples, 0.39%)</title><rect x="20.5203%" y="357" width="0.3897%" height="15" fill="rgb(209,38,44)" fg:x="6495486284" fg:w="123370107"/><text x="20.7703%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (907,723,145 samples, 2.87%)</title><rect x="18.1755%" y="453" width="2.8676%" height="15" fill="rgb(236,212,23)" fg:x="5753259624" fg:w="907723145"/><text x="18.4255%" y="463.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (895,687,037 samples, 2.83%)</title><rect x="18.2135%" y="437" width="2.8296%" height="15" fill="rgb(242,79,21)" fg:x="5765295732" fg:w="895687037"/><text x="18.4635%" y="447.50">al..</text></g><g><title>alloc::slice::hack::to_vec (895,687,037 samples, 2.83%)</title><rect x="18.2135%" y="421" width="2.8296%" height="15" fill="rgb(211,96,35)" fg:x="5765295732" fg:w="895687037"/><text x="18.4635%" y="431.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (895,687,037 samples, 2.83%)</title><rect x="18.2135%" y="405" width="2.8296%" height="15" fill="rgb(253,215,40)" fg:x="5765295732" fg:w="895687037"/><text x="18.4635%" y="415.50">&lt;T..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (42,126,378 samples, 0.13%)</title><rect x="20.9100%" y="389" width="0.1331%" height="15" fill="rgb(211,81,21)" fg:x="6618856391" fg:w="42126378"/><text x="21.1600%" y="399.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (321,965,889 samples, 1.02%)</title><rect x="21.0431%" y="453" width="1.0171%" height="15" fill="rgb(208,190,38)" fg:x="6660982769" fg:w="321965889"/><text x="21.2931%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (14,042,126 samples, 0.04%)</title><rect x="22.0603%" y="453" width="0.0444%" height="15" fill="rgb(235,213,38)" fg:x="6982948658" fg:w="14042126"/><text x="22.3103%" y="463.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (32,096,288 samples, 0.10%)</title><rect x="22.1046%" y="453" width="0.1014%" height="15" fill="rgb(237,122,38)" fg:x="6996990784" fg:w="32096288"/><text x="22.3546%" y="463.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (32,096,288 samples, 0.10%)</title><rect x="22.1046%" y="437" width="0.1014%" height="15" fill="rgb(244,218,35)" fg:x="6996990784" fg:w="32096288"/><text x="22.3546%" y="447.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (5,015,045 samples, 0.02%)</title><rect x="22.2060%" y="453" width="0.0158%" height="15" fill="rgb(240,68,47)" fg:x="7029087072" fg:w="5015045"/><text x="22.4560%" y="463.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (1,629,889,625 samples, 5.15%)</title><rect x="17.0918%" y="469" width="5.1491%" height="15" fill="rgb(210,16,53)" fg:x="5410230546" fg:w="1629889625"/><text x="17.3418%" y="479.50">&lt;chlan..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="22.2219%" y="453" width="0.0190%" height="15" fill="rgb(235,124,12)" fg:x="7034102117" fg:w="6018054"/><text x="22.4719%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,039,117 samples, 0.04%)</title><rect x="22.2409%" y="469" width="0.0412%" height="15" fill="rgb(224,169,11)" fg:x="7040120171" fg:w="13039117"/><text x="22.4909%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (5,015,045 samples, 0.02%)</title><rect x="22.2821%" y="469" width="0.0158%" height="15" fill="rgb(250,166,2)" fg:x="7053159288" fg:w="5015045"/><text x="22.5321%" y="479.50"></text></g><g><title>alloc_perturb (10,030,090 samples, 0.03%)</title><rect x="22.8556%" y="341" width="0.0317%" height="15" fill="rgb(242,216,29)" fg:x="7234703917" fg:w="10030090"/><text x="23.1056%" y="351.50"></text></g><g><title>_int_malloc (168,505,512 samples, 0.53%)</title><rect x="22.4278%" y="357" width="0.5323%" height="15" fill="rgb(230,116,27)" fg:x="7099297702" fg:w="168505512"/><text x="22.6778%" y="367.50"></text></g><g><title>tcache_put (20,060,180 samples, 0.06%)</title><rect x="22.8968%" y="341" width="0.0634%" height="15" fill="rgb(228,99,48)" fg:x="7247743034" fg:w="20060180"/><text x="23.1468%" y="351.50"></text></g><g><title>__GI___libc_malloc (200,601,800 samples, 0.63%)</title><rect x="22.3328%" y="373" width="0.6337%" height="15" fill="rgb(253,11,6)" fg:x="7069207432" fg:w="200601800"/><text x="22.5828%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (208,625,872 samples, 0.66%)</title><rect x="22.3296%" y="421" width="0.6591%" height="15" fill="rgb(247,143,39)" fg:x="7068204423" fg:w="208625872"/><text x="22.5796%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (208,625,872 samples, 0.66%)</title><rect x="22.3296%" y="405" width="0.6591%" height="15" fill="rgb(236,97,10)" fg:x="7068204423" fg:w="208625872"/><text x="22.5796%" y="415.50"></text></g><g><title>alloc::alloc::alloc (208,625,872 samples, 0.66%)</title><rect x="22.3296%" y="389" width="0.6591%" height="15" fill="rgb(233,208,19)" fg:x="7068204423" fg:w="208625872"/><text x="22.5796%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (220,661,980 samples, 0.70%)</title><rect x="22.2979%" y="469" width="0.6971%" height="15" fill="rgb(216,164,2)" fg:x="7058174333" fg:w="220661980"/><text x="22.5479%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (216,649,944 samples, 0.68%)</title><rect x="22.3106%" y="453" width="0.6844%" height="15" fill="rgb(220,129,5)" fg:x="7062186369" fg:w="216649944"/><text x="22.5606%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (216,649,944 samples, 0.68%)</title><rect x="22.3106%" y="437" width="0.6844%" height="15" fill="rgb(242,17,10)" fg:x="7062186369" fg:w="216649944"/><text x="22.5606%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,969,909,676 samples, 6.22%)</title><rect x="16.9397%" y="533" width="6.2233%" height="15" fill="rgb(242,107,0)" fg:x="5362086114" fg:w="1969909676"/><text x="17.1897%" y="543.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,942,828,433 samples, 6.14%)</title><rect x="17.0253%" y="517" width="6.1377%" height="15" fill="rgb(251,28,31)" fg:x="5389167357" fg:w="1942828433"/><text x="17.2753%" y="527.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (1,942,828,433 samples, 6.14%)</title><rect x="17.0253%" y="501" width="6.1377%" height="15" fill="rgb(233,223,10)" fg:x="5389167357" fg:w="1942828433"/><text x="17.2753%" y="511.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,942,828,433 samples, 6.14%)</title><rect x="17.0253%" y="485" width="6.1377%" height="15" fill="rgb(215,21,27)" fg:x="5389167357" fg:w="1942828433"/><text x="17.2753%" y="495.50">&lt;T as al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (53,159,477 samples, 0.17%)</title><rect x="22.9950%" y="469" width="0.1679%" height="15" fill="rgb(232,23,21)" fg:x="7278836313" fg:w="53159477"/><text x="23.2450%" y="479.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (552,657,959 samples, 1.75%)</title><rect x="23.1630%" y="533" width="1.7459%" height="15" fill="rgb(244,5,23)" fg:x="7331995790" fg:w="552657959"/><text x="23.4130%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12,036,108 samples, 0.04%)</title><rect x="24.9089%" y="533" width="0.0380%" height="15" fill="rgb(226,81,46)" fg:x="7884653749" fg:w="12036108"/><text x="25.1589%" y="543.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (68,204,612 samples, 0.22%)</title><rect x="24.9469%" y="533" width="0.2155%" height="15" fill="rgb(247,70,30)" fg:x="7896689857" fg:w="68204612"/><text x="25.1969%" y="543.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (68,204,612 samples, 0.22%)</title><rect x="24.9469%" y="517" width="0.2155%" height="15" fill="rgb(212,68,19)" fg:x="7896689857" fg:w="68204612"/><text x="25.1969%" y="527.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (5,015,045 samples, 0.02%)</title><rect x="25.1624%" y="533" width="0.0158%" height="15" fill="rgb(240,187,13)" fg:x="7964894469" fg:w="5015045"/><text x="25.4124%" y="543.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (3,162,487,377 samples, 9.99%)</title><rect x="15.2033%" y="549" width="9.9908%" height="15" fill="rgb(223,113,26)" fg:x="4812437182" fg:w="3162487377"/><text x="15.4533%" y="559.50">&lt;chlang::board..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (5,015,045 samples, 0.02%)</title><rect x="25.1782%" y="533" width="0.0158%" height="15" fill="rgb(206,192,2)" fg:x="7969909514" fg:w="5015045"/><text x="25.4282%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,051,153 samples, 0.05%)</title><rect x="25.1941%" y="549" width="0.0539%" height="15" fill="rgb(241,108,4)" fg:x="7974924559" fg:w="17051153"/><text x="25.4441%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (8,024,072 samples, 0.03%)</title><rect x="25.2479%" y="549" width="0.0253%" height="15" fill="rgb(247,173,49)" fg:x="7991975712" fg:w="8024072"/><text x="25.4979%" y="559.50"></text></g><g><title>alloc_perturb (5,015,045 samples, 0.02%)</title><rect x="26.2904%" y="421" width="0.0158%" height="15" fill="rgb(224,114,35)" fg:x="8321965673" fg:w="5015045"/><text x="26.5404%" y="431.50"></text></g><g><title>checked_request2size (7,021,063 samples, 0.02%)</title><rect x="26.3063%" y="421" width="0.0222%" height="15" fill="rgb(245,159,27)" fg:x="8326980718" fg:w="7021063"/><text x="26.5563%" y="431.50"></text></g><g><title>_int_malloc (303,911,727 samples, 0.96%)</title><rect x="25.4634%" y="437" width="0.9601%" height="15" fill="rgb(245,172,44)" fg:x="8060180324" fg:w="303911727"/><text x="25.7134%" y="447.50"></text></g><g><title>tcache_put (29,087,261 samples, 0.09%)</title><rect x="26.3316%" y="421" width="0.0919%" height="15" fill="rgb(236,23,11)" fg:x="8335004790" fg:w="29087261"/><text x="26.5816%" y="431.50"></text></g><g><title>__GI___libc_malloc (355,065,186 samples, 1.12%)</title><rect x="25.3113%" y="453" width="1.1217%" height="15" fill="rgb(205,117,38)" fg:x="8012035892" fg:w="355065186"/><text x="25.5613%" y="463.50"></text></g><g><title>__rdl_alloc (8,024,072 samples, 0.03%)</title><rect x="26.4330%" y="453" width="0.0253%" height="15" fill="rgb(237,72,25)" fg:x="8367101078" fg:w="8024072"/><text x="26.6830%" y="463.50"></text></g><g><title>__rust_alloc (8,024,072 samples, 0.03%)</title><rect x="26.4584%" y="453" width="0.0253%" height="15" fill="rgb(244,70,9)" fg:x="8375125150" fg:w="8024072"/><text x="26.7084%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (376,128,375 samples, 1.19%)</title><rect x="25.2986%" y="501" width="1.1883%" height="15" fill="rgb(217,125,39)" fg:x="8008023856" fg:w="376128375"/><text x="25.5486%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (376,128,375 samples, 1.19%)</title><rect x="25.2986%" y="485" width="1.1883%" height="15" fill="rgb(235,36,10)" fg:x="8008023856" fg:w="376128375"/><text x="25.5486%" y="495.50"></text></g><g><title>alloc::alloc::alloc (376,128,375 samples, 1.19%)</title><rect x="25.2986%" y="469" width="1.1883%" height="15" fill="rgb(251,123,47)" fg:x="8008023856" fg:w="376128375"/><text x="25.5486%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (392,176,519 samples, 1.24%)</title><rect x="25.2733%" y="549" width="1.2389%" height="15" fill="rgb(221,13,13)" fg:x="7999999784" fg:w="392176519"/><text x="25.5233%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (387,161,474 samples, 1.22%)</title><rect x="25.2891%" y="533" width="1.2231%" height="15" fill="rgb(238,131,9)" fg:x="8005014829" fg:w="387161474"/><text x="25.5391%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (387,161,474 samples, 1.22%)</title><rect x="25.2891%" y="517" width="1.2231%" height="15" fill="rgb(211,50,8)" fg:x="8005014829" fg:w="387161474"/><text x="25.5391%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array (8,024,072 samples, 0.03%)</title><rect x="26.4869%" y="501" width="0.0253%" height="15" fill="rgb(245,182,24)" fg:x="8384152231" fg:w="8024072"/><text x="26.7369%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8,024,072 samples, 0.03%)</title><rect x="26.4869%" y="485" width="0.0253%" height="15" fill="rgb(242,14,37)" fg:x="8384152231" fg:w="8024072"/><text x="26.7369%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,750,250,651 samples, 11.85%)</title><rect x="14.9561%" y="613" width="11.8477%" height="15" fill="rgb(246,228,12)" fg:x="4734202480" fg:w="3750250651"/><text x="15.2061%" y="623.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,699,097,192 samples, 11.69%)</title><rect x="15.1177%" y="597" width="11.6860%" height="15" fill="rgb(213,55,15)" fg:x="4785355939" fg:w="3699097192"/><text x="15.3677%" y="607.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (3,699,097,192 samples, 11.69%)</title><rect x="15.1177%" y="581" width="11.6860%" height="15" fill="rgb(209,9,3)" fg:x="4785355939" fg:w="3699097192"/><text x="15.3677%" y="591.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,699,097,192 samples, 11.69%)</title><rect x="15.1177%" y="565" width="11.6860%" height="15" fill="rgb(230,59,30)" fg:x="4785355939" fg:w="3699097192"/><text x="15.3677%" y="575.50">&lt;T as alloc::slic..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (92,276,828 samples, 0.29%)</title><rect x="26.5122%" y="549" width="0.2915%" height="15" fill="rgb(209,121,21)" fg:x="8392176303" fg:w="92276828"/><text x="26.7622%" y="559.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (782,347,020 samples, 2.47%)</title><rect x="26.8038%" y="613" width="2.4716%" height="15" fill="rgb(220,109,13)" fg:x="8484453131" fg:w="782347020"/><text x="27.0538%" y="623.50">&lt;c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (20,060,180 samples, 0.06%)</title><rect x="29.2753%" y="613" width="0.0634%" height="15" fill="rgb(232,18,1)" fg:x="9266800151" fg:w="20060180"/><text x="29.5253%" y="623.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (112,337,008 samples, 0.35%)</title><rect x="29.3387%" y="613" width="0.3549%" height="15" fill="rgb(215,41,42)" fg:x="9286860331" fg:w="112337008"/><text x="29.5887%" y="623.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (112,337,008 samples, 0.35%)</title><rect x="29.3387%" y="597" width="0.3549%" height="15" fill="rgb(224,123,36)" fg:x="9286860331" fg:w="112337008"/><text x="29.5887%" y="607.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (9,027,081 samples, 0.03%)</title><rect x="29.6936%" y="613" width="0.0285%" height="15" fill="rgb(240,125,3)" fg:x="9399197339" fg:w="9027081"/><text x="29.9436%" y="623.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (5,501,504,365 samples, 17.38%)</title><rect x="12.3673%" y="629" width="17.3801%" height="15" fill="rgb(205,98,50)" fg:x="3914744127" fg:w="5501504365"/><text x="12.6173%" y="639.50">&lt;chlang::board::Board as co..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (8,024,072 samples, 0.03%)</title><rect x="29.7221%" y="613" width="0.0253%" height="15" fill="rgb(205,185,37)" fg:x="9408224420" fg:w="8024072"/><text x="29.9721%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,060,180 samples, 0.06%)</title><rect x="29.7475%" y="629" width="0.0634%" height="15" fill="rgb(238,207,15)" fg:x="9416248492" fg:w="20060180"/><text x="29.9975%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,015,045 samples, 0.02%)</title><rect x="29.7950%" y="613" width="0.0158%" height="15" fill="rgb(213,199,42)" fg:x="9431293627" fg:w="5015045"/><text x="30.0450%" y="623.50"></text></g><g><title>alloc_perturb (17,051,153 samples, 0.05%)</title><rect x="31.2209%" y="501" width="0.0539%" height="15" fill="rgb(235,201,11)" fg:x="9882647677" fg:w="17051153"/><text x="31.4709%" y="511.50"></text></g><g><title>checked_request2size (5,015,045 samples, 0.02%)</title><rect x="31.2748%" y="501" width="0.0158%" height="15" fill="rgb(207,46,11)" fg:x="9899698830" fg:w="5015045"/><text x="31.5248%" y="511.50"></text></g><g><title>_int_malloc (409,227,672 samples, 1.29%)</title><rect x="30.0770%" y="517" width="1.2928%" height="15" fill="rgb(241,35,35)" fg:x="9520561428" fg:w="409227672"/><text x="30.3270%" y="527.50"></text></g><g><title>tcache_put (23,069,207 samples, 0.07%)</title><rect x="31.2969%" y="501" width="0.0729%" height="15" fill="rgb(243,32,47)" fg:x="9906719893" fg:w="23069207"/><text x="31.5469%" y="511.50"></text></g><g><title>__GI___libc_malloc (477,432,284 samples, 1.51%)</title><rect x="29.8932%" y="533" width="1.5083%" height="15" fill="rgb(247,202,23)" fg:x="9462386906" fg:w="477432284"/><text x="30.1432%" y="543.50"></text></g><g><title>checked_request2size (9,027,081 samples, 0.03%)</title><rect x="31.3730%" y="517" width="0.0285%" height="15" fill="rgb(219,102,11)" fg:x="9930792109" fg:w="9027081"/><text x="31.6230%" y="527.50"></text></g><g><title>__rdl_alloc (10,030,090 samples, 0.03%)</title><rect x="31.4015%" y="533" width="0.0317%" height="15" fill="rgb(243,110,44)" fg:x="9939819190" fg:w="10030090"/><text x="31.6515%" y="543.50"></text></g><g><title>__rust_alloc (6,018,054 samples, 0.02%)</title><rect x="31.4332%" y="533" width="0.0190%" height="15" fill="rgb(222,74,54)" fg:x="9949849280" fg:w="6018054"/><text x="31.6832%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (501,504,500 samples, 1.58%)</title><rect x="29.8774%" y="581" width="1.5843%" height="15" fill="rgb(216,99,12)" fg:x="9457371861" fg:w="501504500"/><text x="30.1274%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (501,504,500 samples, 1.58%)</title><rect x="29.8774%" y="565" width="1.5843%" height="15" fill="rgb(226,22,26)" fg:x="9457371861" fg:w="501504500"/><text x="30.1274%" y="575.50"></text></g><g><title>alloc::alloc::alloc (501,504,500 samples, 1.58%)</title><rect x="29.8774%" y="549" width="1.5843%" height="15" fill="rgb(217,163,10)" fg:x="9457371861" fg:w="501504500"/><text x="30.1274%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (524,573,707 samples, 1.66%)</title><rect x="29.8203%" y="629" width="1.6572%" height="15" fill="rgb(213,25,53)" fg:x="9439317699" fg:w="524573707"/><text x="30.0703%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (517,552,644 samples, 1.64%)</title><rect x="29.8425%" y="613" width="1.6350%" height="15" fill="rgb(252,105,26)" fg:x="9446338762" fg:w="517552644"/><text x="30.0925%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (517,552,644 samples, 1.64%)</title><rect x="29.8425%" y="597" width="1.6350%" height="15" fill="rgb(220,39,43)" fg:x="9446338762" fg:w="517552644"/><text x="30.0925%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::array (5,015,045 samples, 0.02%)</title><rect x="31.4617%" y="581" width="0.0158%" height="15" fill="rgb(229,68,48)" fg:x="9958876361" fg:w="5015045"/><text x="31.7117%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (5,015,045 samples, 0.02%)</title><rect x="31.4617%" y="565" width="0.0158%" height="15" fill="rgb(252,8,32)" fg:x="9958876361" fg:w="5015045"/><text x="31.7117%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,270,812,268 samples, 19.81%)</title><rect x="12.1011%" y="693" width="19.8105%" height="15" fill="rgb(223,20,43)" fg:x="3830491371" fg:w="6270812268"/><text x="12.3511%" y="703.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,208,625,710 samples, 19.61%)</title><rect x="12.2976%" y="677" width="19.6141%" height="15" fill="rgb(229,81,49)" fg:x="3892677929" fg:w="6208625710"/><text x="12.5476%" y="687.50">alloc::slice::&lt;impl [T]&gt;::to_ve..</text></g><g><title>alloc::slice::hack::to_vec (6,208,625,710 samples, 19.61%)</title><rect x="12.2976%" y="661" width="19.6141%" height="15" fill="rgb(236,28,36)" fg:x="3892677929" fg:w="6208625710"/><text x="12.5476%" y="671.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,208,625,710 samples, 19.61%)</title><rect x="12.2976%" y="645" width="19.6141%" height="15" fill="rgb(249,185,26)" fg:x="3892677929" fg:w="6208625710"/><text x="12.5476%" y="655.50">&lt;T as alloc::slice::hack::Conve..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (137,412,233 samples, 0.43%)</title><rect x="31.4775%" y="629" width="0.4341%" height="15" fill="rgb(249,174,33)" fg:x="9963891406" fg:w="137412233"/><text x="31.7275%" y="639.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (892,678,010 samples, 2.82%)</title><rect x="31.9117%" y="693" width="2.8201%" height="15" fill="rgb(233,201,37)" fg:x="10101303639" fg:w="892678010"/><text x="32.1617%" y="703.50">&lt;c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (28,084,252 samples, 0.09%)</title><rect x="34.7318%" y="693" width="0.0887%" height="15" fill="rgb(221,78,26)" fg:x="10993981649" fg:w="28084252"/><text x="34.9818%" y="703.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (113,340,017 samples, 0.36%)</title><rect x="34.8205%" y="693" width="0.3581%" height="15" fill="rgb(250,127,30)" fg:x="11022065901" fg:w="113340017"/><text x="35.0705%" y="703.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (113,340,017 samples, 0.36%)</title><rect x="34.8205%" y="677" width="0.3581%" height="15" fill="rgb(230,49,44)" fg:x="11022065901" fg:w="113340017"/><text x="35.0705%" y="687.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (7,021,063 samples, 0.02%)</title><rect x="35.1786%" y="693" width="0.0222%" height="15" fill="rgb(229,67,23)" fg:x="11135405918" fg:w="7021063"/><text x="35.4286%" y="703.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (8,126,378,918 samples, 25.67%)</title><rect x="9.5472%" y="709" width="25.6725%" height="15" fill="rgb(249,83,47)" fg:x="3022066117" fg:w="8126378918"/><text x="9.7972%" y="719.50">&lt;chlang::board::Board as core::clone::Clo..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="35.2007%" y="693" width="0.0190%" height="15" fill="rgb(215,43,3)" fg:x="11142426981" fg:w="6018054"/><text x="35.4507%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30,090,270 samples, 0.10%)</title><rect x="35.2197%" y="709" width="0.0951%" height="15" fill="rgb(238,154,13)" fg:x="11148445035" fg:w="30090270"/><text x="35.4697%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,015,045 samples, 0.02%)</title><rect x="35.2990%" y="693" width="0.0158%" height="15" fill="rgb(219,56,2)" fg:x="11173520260" fg:w="5015045"/><text x="35.5490%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,015,045 samples, 0.02%)</title><rect x="35.2990%" y="677" width="0.0158%" height="15" fill="rgb(233,0,4)" fg:x="11173520260" fg:w="5015045"/><text x="35.5490%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.01%)</title><rect x="35.3021%" y="661" width="0.0127%" height="15" fill="rgb(235,30,7)" fg:x="11174523269" fg:w="4012036"/><text x="35.5521%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (5,015,045 samples, 0.02%)</title><rect x="35.3148%" y="709" width="0.0158%" height="15" fill="rgb(250,79,13)" fg:x="11178535305" fg:w="5015045"/><text x="35.5648%" y="719.50"></text></g><g><title>alloc_perturb (12,036,108 samples, 0.04%)</title><rect x="37.1495%" y="581" width="0.0380%" height="15" fill="rgb(211,146,34)" fg:x="11759277516" fg:w="12036108"/><text x="37.3995%" y="591.50"></text></g><g><title>checked_request2size (6,018,054 samples, 0.02%)</title><rect x="37.1875%" y="581" width="0.0190%" height="15" fill="rgb(228,22,38)" fg:x="11771313624" fg:w="6018054"/><text x="37.4375%" y="591.50"></text></g><g><title>tcache_put (22,066,198 samples, 0.07%)</title><rect x="37.2097%" y="581" width="0.0697%" height="15" fill="rgb(235,168,5)" fg:x="11778334687" fg:w="22066198"/><text x="37.4597%" y="591.50"></text></g><g><title>_int_malloc (492,477,419 samples, 1.56%)</title><rect x="35.7299%" y="597" width="1.5558%" height="15" fill="rgb(221,155,16)" fg:x="11309929484" fg:w="492477419"/><text x="35.9799%" y="607.50"></text></g><g><title>__GI___libc_malloc (591,775,310 samples, 1.87%)</title><rect x="35.4320%" y="613" width="1.8695%" height="15" fill="rgb(215,215,53)" fg:x="11215646638" fg:w="591775310"/><text x="35.6820%" y="623.50">_..</text></g><g><title>checked_request2size (5,015,045 samples, 0.02%)</title><rect x="37.2857%" y="597" width="0.0158%" height="15" fill="rgb(223,4,10)" fg:x="11802406903" fg:w="5015045"/><text x="37.5357%" y="607.50"></text></g><g><title>__rdl_alloc (5,015,045 samples, 0.02%)</title><rect x="37.3016%" y="613" width="0.0158%" height="15" fill="rgb(234,103,6)" fg:x="11807421948" fg:w="5015045"/><text x="37.5516%" y="623.50"></text></g><g><title>__rust_alloc (8,024,072 samples, 0.03%)</title><rect x="37.3174%" y="613" width="0.0253%" height="15" fill="rgb(227,97,0)" fg:x="11812436993" fg:w="8024072"/><text x="37.5674%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (609,829,472 samples, 1.93%)</title><rect x="35.4225%" y="661" width="1.9266%" height="15" fill="rgb(234,150,53)" fg:x="11212637611" fg:w="609829472"/><text x="35.6725%" y="671.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (609,829,472 samples, 1.93%)</title><rect x="35.4225%" y="645" width="1.9266%" height="15" fill="rgb(228,201,54)" fg:x="11212637611" fg:w="609829472"/><text x="35.6725%" y="655.50">a..</text></g><g><title>alloc::alloc::alloc (609,829,472 samples, 1.93%)</title><rect x="35.4225%" y="629" width="1.9266%" height="15" fill="rgb(222,22,37)" fg:x="11212637611" fg:w="609829472"/><text x="35.6725%" y="639.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (644,934,787 samples, 2.04%)</title><rect x="35.3307%" y="709" width="2.0375%" height="15" fill="rgb(237,53,32)" fg:x="11183550350" fg:w="644934787"/><text x="35.5807%" y="719.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (636,910,715 samples, 2.01%)</title><rect x="35.3560%" y="693" width="2.0121%" height="15" fill="rgb(233,25,53)" fg:x="11191574422" fg:w="636910715"/><text x="35.6060%" y="703.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (636,910,715 samples, 2.01%)</title><rect x="35.3560%" y="677" width="2.0121%" height="15" fill="rgb(210,40,34)" fg:x="11191574422" fg:w="636910715"/><text x="35.6060%" y="687.50">a..</text></g><g><title>core::alloc::layout::Layout::array (6,018,054 samples, 0.02%)</title><rect x="37.3491%" y="661" width="0.0190%" height="15" fill="rgb(241,220,44)" fg:x="11822467083" fg:w="6018054"/><text x="37.5991%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6,018,054 samples, 0.02%)</title><rect x="37.3491%" y="645" width="0.0190%" height="15" fill="rgb(235,28,35)" fg:x="11822467083" fg:w="6018054"/><text x="37.5991%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,062,186,315 samples, 28.63%)</title><rect x="9.3507%" y="773" width="28.6289%" height="15" fill="rgb(210,56,17)" fg:x="2959879559" fg:w="9062186315"/><text x="9.6007%" y="783.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,016,047,901 samples, 28.48%)</title><rect x="9.4965%" y="757" width="28.4832%" height="15" fill="rgb(224,130,29)" fg:x="3006017973" fg:w="9016047901"/><text x="9.7465%" y="767.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (9,016,047,901 samples, 28.48%)</title><rect x="9.4965%" y="741" width="28.4832%" height="15" fill="rgb(235,212,8)" fg:x="3006017973" fg:w="9016047901"/><text x="9.7465%" y="751.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,016,047,901 samples, 28.48%)</title><rect x="9.4965%" y="725" width="28.4832%" height="15" fill="rgb(223,33,50)" fg:x="3006017973" fg:w="9016047901"/><text x="9.7465%" y="735.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (193,580,737 samples, 0.61%)</title><rect x="37.3681%" y="709" width="0.6116%" height="15" fill="rgb(219,149,13)" fg:x="11828485137" fg:w="193580737"/><text x="37.6181%" y="719.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (818,455,344 samples, 2.59%)</title><rect x="37.9797%" y="773" width="2.5856%" height="15" fill="rgb(250,156,29)" fg:x="12022065874" fg:w="818455344"/><text x="38.2297%" y="783.50">&lt;c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (22,066,198 samples, 0.07%)</title><rect x="40.5653%" y="773" width="0.0697%" height="15" fill="rgb(216,193,19)" fg:x="12840521218" fg:w="22066198"/><text x="40.8153%" y="783.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (106,318,954 samples, 0.34%)</title><rect x="40.6350%" y="773" width="0.3359%" height="15" fill="rgb(216,135,14)" fg:x="12862587416" fg:w="106318954"/><text x="40.8850%" y="783.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (106,318,954 samples, 0.34%)</title><rect x="40.6350%" y="757" width="0.3359%" height="15" fill="rgb(241,47,5)" fg:x="12862587416" fg:w="106318954"/><text x="40.8850%" y="767.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (10,030,090 samples, 0.03%)</title><rect x="40.9709%" y="773" width="0.0317%" height="15" fill="rgb(233,42,35)" fg:x="12968906370" fg:w="10030090"/><text x="41.2209%" y="783.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (10,905,716,857 samples, 34.45%)</title><rect x="6.5782%" y="789" width="34.4529%" height="15" fill="rgb(231,13,6)" fg:x="2082246684" fg:w="10905716857"/><text x="6.8282%" y="799.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (9,027,081 samples, 0.03%)</title><rect x="41.0026%" y="773" width="0.0285%" height="15" fill="rgb(207,181,40)" fg:x="12978936460" fg:w="9027081"/><text x="41.2526%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (32,096,288 samples, 0.10%)</title><rect x="41.0311%" y="789" width="0.1014%" height="15" fill="rgb(254,173,49)" fg:x="12987963541" fg:w="32096288"/><text x="41.2811%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,015,045 samples, 0.02%)</title><rect x="41.1166%" y="773" width="0.0158%" height="15" fill="rgb(221,1,38)" fg:x="13015044784" fg:w="5015045"/><text x="41.3666%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (6,018,054 samples, 0.02%)</title><rect x="41.1325%" y="789" width="0.0190%" height="15" fill="rgb(206,124,46)" fg:x="13020059829" fg:w="6018054"/><text x="41.3825%" y="799.50"></text></g><g><title>alloc_perturb (23,069,207 samples, 0.07%)</title><rect x="42.6629%" y="661" width="0.0729%" height="15" fill="rgb(249,21,11)" fg:x="13504513176" fg:w="23069207"/><text x="42.9129%" y="671.50"></text></g><g><title>_int_malloc (437,311,924 samples, 1.38%)</title><rect x="41.4240%" y="677" width="1.3815%" height="15" fill="rgb(222,201,40)" fg:x="13112336657" fg:w="437311924"/><text x="41.6740%" y="687.50"></text></g><g><title>tcache_put (19,057,171 samples, 0.06%)</title><rect x="42.7453%" y="661" width="0.0602%" height="15" fill="rgb(235,61,29)" fg:x="13530591410" fg:w="19057171"/><text x="42.9953%" y="671.50"></text></g><g><title>__GI___libc_malloc (504,513,527 samples, 1.59%)</title><rect x="41.2307%" y="693" width="1.5938%" height="15" fill="rgb(219,207,3)" fg:x="13051153108" fg:w="504513527"/><text x="41.4807%" y="703.50"></text></g><g><title>checked_request2size (6,018,054 samples, 0.02%)</title><rect x="42.8055%" y="677" width="0.0190%" height="15" fill="rgb(222,56,46)" fg:x="13549648581" fg:w="6018054"/><text x="43.0555%" y="687.50"></text></g><g><title>__rdl_alloc (9,027,081 samples, 0.03%)</title><rect x="42.8246%" y="693" width="0.0285%" height="15" fill="rgb(239,76,54)" fg:x="13555666635" fg:w="9027081"/><text x="43.0746%" y="703.50"></text></g><g><title>__rust_alloc (7,021,063 samples, 0.02%)</title><rect x="42.8531%" y="693" width="0.0222%" height="15" fill="rgb(231,124,27)" fg:x="13564693716" fg:w="7021063"/><text x="43.1031%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (526,579,725 samples, 1.66%)</title><rect x="41.2180%" y="741" width="1.6636%" height="15" fill="rgb(249,195,6)" fg:x="13047141072" fg:w="526579725"/><text x="41.4680%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (526,579,725 samples, 1.66%)</title><rect x="41.2180%" y="725" width="1.6636%" height="15" fill="rgb(237,174,47)" fg:x="13047141072" fg:w="526579725"/><text x="41.4680%" y="735.50"></text></g><g><title>alloc::alloc::alloc (526,579,725 samples, 1.66%)</title><rect x="41.2180%" y="709" width="1.6636%" height="15" fill="rgb(206,201,31)" fg:x="13047141072" fg:w="526579725"/><text x="41.4680%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (553,660,968 samples, 1.75%)</title><rect x="41.1515%" y="789" width="1.7491%" height="15" fill="rgb(231,57,52)" fg:x="13026077883" fg:w="553660968"/><text x="41.4015%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (543,630,878 samples, 1.72%)</title><rect x="41.1832%" y="773" width="1.7174%" height="15" fill="rgb(248,177,22)" fg:x="13036107973" fg:w="543630878"/><text x="41.4332%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (543,630,878 samples, 1.72%)</title><rect x="41.1832%" y="757" width="1.7174%" height="15" fill="rgb(215,211,37)" fg:x="13036107973" fg:w="543630878"/><text x="41.4332%" y="767.50"></text></g><g><title>core::alloc::layout::Layout::array (6,018,054 samples, 0.02%)</title><rect x="42.8816%" y="741" width="0.0190%" height="15" fill="rgb(241,128,51)" fg:x="13573720797" fg:w="6018054"/><text x="43.1316%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6,018,054 samples, 0.02%)</title><rect x="42.8816%" y="725" width="0.0190%" height="15" fill="rgb(227,165,31)" fg:x="13573720797" fg:w="6018054"/><text x="43.1316%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,728,184,237 samples, 37.05%)</title><rect x="6.3627%" y="853" width="37.0512%" height="15" fill="rgb(228,167,24)" fg:x="2014042072" fg:w="11728184237"/><text x="6.6127%" y="863.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,679,036,796 samples, 36.90%)</title><rect x="6.5180%" y="837" width="36.8960%" height="15" fill="rgb(228,143,12)" fg:x="2063189513" fg:w="11679036796"/><text x="6.7680%" y="847.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (11,679,036,796 samples, 36.90%)</title><rect x="6.5180%" y="821" width="36.8960%" height="15" fill="rgb(249,149,8)" fg:x="2063189513" fg:w="11679036796"/><text x="6.7680%" y="831.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,679,036,796 samples, 36.90%)</title><rect x="6.5180%" y="805" width="36.8960%" height="15" fill="rgb(243,35,44)" fg:x="2063189513" fg:w="11679036796"/><text x="6.7680%" y="815.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (162,487,458 samples, 0.51%)</title><rect x="42.9006%" y="789" width="0.5133%" height="15" fill="rgb(246,89,9)" fg:x="13579738851" fg:w="162487458"/><text x="43.1506%" y="799.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (731,193,561 samples, 2.31%)</title><rect x="43.4139%" y="853" width="2.3100%" height="15" fill="rgb(233,213,13)" fg:x="13742226309" fg:w="731193561"/><text x="43.6639%" y="863.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (10,030,090 samples, 0.03%)</title><rect x="45.7239%" y="853" width="0.0317%" height="15" fill="rgb(233,141,41)" fg:x="14473419870" fg:w="10030090"/><text x="45.9739%" y="863.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (79,237,711 samples, 0.25%)</title><rect x="45.7556%" y="853" width="0.2503%" height="15" fill="rgb(239,167,4)" fg:x="14483449960" fg:w="79237711"/><text x="46.0056%" y="863.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (79,237,711 samples, 0.25%)</title><rect x="45.7556%" y="837" width="0.2503%" height="15" fill="rgb(209,217,16)" fg:x="14483449960" fg:w="79237711"/><text x="46.0056%" y="847.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (8,024,072 samples, 0.03%)</title><rect x="46.0059%" y="853" width="0.0253%" height="15" fill="rgb(219,88,35)" fg:x="14562687671" fg:w="8024072"/><text x="46.2559%" y="863.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (13,283,851,196 samples, 41.97%)</title><rect x="4.0844%" y="869" width="41.9658%" height="15" fill="rgb(220,193,23)" fg:x="1292878601" fg:w="13283851196"/><text x="4.3344%" y="879.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="46.0312%" y="853" width="0.0190%" height="15" fill="rgb(230,90,52)" fg:x="14570711743" fg:w="6018054"/><text x="46.2812%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27,081,243 samples, 0.09%)</title><rect x="46.0503%" y="869" width="0.0856%" height="15" fill="rgb(252,106,19)" fg:x="14576729797" fg:w="27081243"/><text x="46.3003%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (6,018,054 samples, 0.02%)</title><rect x="46.1358%" y="869" width="0.0190%" height="15" fill="rgb(206,74,20)" fg:x="14603811040" fg:w="6018054"/><text x="46.3858%" y="879.50"></text></g><g><title>alloc_perturb (15,045,135 samples, 0.05%)</title><rect x="47.4096%" y="741" width="0.0475%" height="15" fill="rgb(230,138,44)" fg:x="15007020658" fg:w="15045135"/><text x="47.6596%" y="751.50"></text></g><g><title>checked_request2size (7,021,063 samples, 0.02%)</title><rect x="47.4571%" y="741" width="0.0222%" height="15" fill="rgb(235,182,43)" fg:x="15022065793" fg:w="7021063"/><text x="47.7071%" y="751.50"></text></g><g><title>tcache_put (21,063,189 samples, 0.07%)</title><rect x="47.4793%" y="741" width="0.0665%" height="15" fill="rgb(242,16,51)" fg:x="15029086856" fg:w="21063189"/><text x="47.7293%" y="751.50"></text></g><g><title>_int_malloc (366,098,285 samples, 1.16%)</title><rect x="46.3925%" y="757" width="1.1566%" height="15" fill="rgb(248,9,4)" fg:x="14685054769" fg:w="366098285"/><text x="46.6425%" y="767.50"></text></g><g><title>__GI___libc_malloc (419,257,762 samples, 1.32%)</title><rect x="46.2309%" y="773" width="1.3245%" height="15" fill="rgb(210,31,22)" fg:x="14633901310" fg:w="419257762"/><text x="46.4809%" y="783.50"></text></g><g><title>__rdl_alloc (5,015,045 samples, 0.02%)</title><rect x="47.5554%" y="773" width="0.0158%" height="15" fill="rgb(239,54,39)" fg:x="15053159072" fg:w="5015045"/><text x="47.8054%" y="783.50"></text></g><g><title>__rust_alloc (11,033,099 samples, 0.03%)</title><rect x="47.5712%" y="773" width="0.0349%" height="15" fill="rgb(230,99,41)" fg:x="15058174117" fg:w="11033099"/><text x="47.8212%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (441,323,960 samples, 1.39%)</title><rect x="46.2182%" y="821" width="1.3942%" height="15" fill="rgb(253,106,12)" fg:x="14629889274" fg:w="441323960"/><text x="46.4682%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (441,323,960 samples, 1.39%)</title><rect x="46.2182%" y="805" width="1.3942%" height="15" fill="rgb(213,46,41)" fg:x="14629889274" fg:w="441323960"/><text x="46.4682%" y="815.50"></text></g><g><title>alloc::alloc::alloc (441,323,960 samples, 1.39%)</title><rect x="46.2182%" y="789" width="1.3942%" height="15" fill="rgb(215,133,35)" fg:x="14629889274" fg:w="441323960"/><text x="46.4682%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (465,396,176 samples, 1.47%)</title><rect x="46.1548%" y="869" width="1.4703%" height="15" fill="rgb(213,28,5)" fg:x="14609829094" fg:w="465396176"/><text x="46.4048%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (455,366,086 samples, 1.44%)</title><rect x="46.1865%" y="853" width="1.4386%" height="15" fill="rgb(215,77,49)" fg:x="14619859184" fg:w="455366086"/><text x="46.4365%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (455,366,086 samples, 1.44%)</title><rect x="46.1865%" y="837" width="1.4386%" height="15" fill="rgb(248,100,22)" fg:x="14619859184" fg:w="455366086"/><text x="46.4365%" y="847.50"></text></g><g><title>core::alloc::layout::Layout::array (4,012,036 samples, 0.01%)</title><rect x="47.6124%" y="821" width="0.0127%" height="15" fill="rgb(208,67,9)" fg:x="15071213234" fg:w="4012036"/><text x="47.8624%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4,012,036 samples, 0.01%)</title><rect x="47.6124%" y="805" width="0.0127%" height="15" fill="rgb(219,133,21)" fg:x="15071213234" fg:w="4012036"/><text x="47.8624%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,982,948,469 samples, 44.17%)</title><rect x="3.9070%" y="933" width="44.1744%" height="15" fill="rgb(246,46,29)" fg:x="1236710097" fg:w="13982948469"/><text x="4.1570%" y="943.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,942,828,109 samples, 44.05%)</title><rect x="4.0337%" y="917" width="44.0477%" height="15" fill="rgb(246,185,52)" fg:x="1276830457" fg:w="13942828109"/><text x="4.2837%" y="927.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (13,942,828,109 samples, 44.05%)</title><rect x="4.0337%" y="901" width="44.0477%" height="15" fill="rgb(252,136,11)" fg:x="1276830457" fg:w="13942828109"/><text x="4.2837%" y="911.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,942,828,109 samples, 44.05%)</title><rect x="4.0337%" y="885" width="44.0477%" height="15" fill="rgb(219,138,53)" fg:x="1276830457" fg:w="13942828109"/><text x="4.2837%" y="895.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (144,433,296 samples, 0.46%)</title><rect x="47.6251%" y="869" width="0.4563%" height="15" fill="rgb(211,51,23)" fg:x="15075225270" fg:w="144433296"/><text x="47.8751%" y="879.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (514,543,617 samples, 1.63%)</title><rect x="48.0814%" y="933" width="1.6255%" height="15" fill="rgb(247,221,28)" fg:x="15219658566" fg:w="514543617"/><text x="48.3314%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12,036,108 samples, 0.04%)</title><rect x="49.7069%" y="933" width="0.0380%" height="15" fill="rgb(251,222,45)" fg:x="15734202183" fg:w="12036108"/><text x="49.9569%" y="943.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (67,201,603 samples, 0.21%)</title><rect x="49.7449%" y="933" width="0.2123%" height="15" fill="rgb(217,162,53)" fg:x="15746238291" fg:w="67201603"/><text x="49.9949%" y="943.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (67,201,603 samples, 0.21%)</title><rect x="49.7449%" y="917" width="0.2123%" height="15" fill="rgb(229,93,14)" fg:x="15746238291" fg:w="67201603"/><text x="49.9949%" y="927.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (15,156,468,999 samples, 47.88%)</title><rect x="2.1040%" y="949" width="47.8817%" height="15" fill="rgb(209,67,49)" fg:x="665997976" fg:w="15156468999"/><text x="2.3540%" y="959.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="49.9667%" y="933" width="0.0190%" height="15" fill="rgb(213,87,29)" fg:x="15816448921" fg:w="6018054"/><text x="50.2167%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,045,135 samples, 0.05%)</title><rect x="49.9857%" y="949" width="0.0475%" height="15" fill="rgb(205,151,52)" fg:x="15822466975" fg:w="15045135"/><text x="50.2357%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,012,036 samples, 0.01%)</title><rect x="50.0206%" y="933" width="0.0127%" height="15" fill="rgb(253,215,39)" fg:x="15833500074" fg:w="4012036"/><text x="50.2706%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,012,036 samples, 0.01%)</title><rect x="50.0206%" y="917" width="0.0127%" height="15" fill="rgb(221,220,41)" fg:x="15833500074" fg:w="4012036"/><text x="50.2706%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (4,012,036 samples, 0.01%)</title><rect x="50.0333%" y="949" width="0.0127%" height="15" fill="rgb(218,133,21)" fg:x="15837512110" fg:w="4012036"/><text x="50.2833%" y="959.50"></text></g><g><title>alloc_perturb (14,042,126 samples, 0.04%)</title><rect x="50.9142%" y="821" width="0.0444%" height="15" fill="rgb(221,193,43)" fg:x="16116348612" fg:w="14042126"/><text x="51.1642%" y="831.50"></text></g><g><title>tcache_put (8,024,072 samples, 0.03%)</title><rect x="50.9585%" y="821" width="0.0253%" height="15" fill="rgb(240,128,52)" fg:x="16130390738" fg:w="8024072"/><text x="51.2085%" y="831.50"></text></g><g><title>_int_malloc (243,731,187 samples, 0.77%)</title><rect x="50.2234%" y="837" width="0.7700%" height="15" fill="rgb(253,114,12)" fg:x="15897692650" fg:w="243731187"/><text x="50.4734%" y="847.50"></text></g><g><title>__GI___libc_malloc (278,836,502 samples, 0.88%)</title><rect x="50.1188%" y="853" width="0.8809%" height="15" fill="rgb(215,223,47)" fg:x="15864593353" fg:w="278836502"/><text x="50.3688%" y="863.50"></text></g><g><title>__rdl_alloc (4,012,036 samples, 0.01%)</title><rect x="50.9997%" y="853" width="0.0127%" height="15" fill="rgb(248,225,23)" fg:x="16143429855" fg:w="4012036"/><text x="51.2497%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (290,872,610 samples, 0.92%)</title><rect x="50.1062%" y="901" width="0.9189%" height="15" fill="rgb(250,108,0)" fg:x="15860581317" fg:w="290872610"/><text x="50.3562%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (290,872,610 samples, 0.92%)</title><rect x="50.1062%" y="885" width="0.9189%" height="15" fill="rgb(228,208,7)" fg:x="15860581317" fg:w="290872610"/><text x="50.3562%" y="895.50"></text></g><g><title>alloc::alloc::alloc (290,872,610 samples, 0.92%)</title><rect x="50.1062%" y="869" width="0.9189%" height="15" fill="rgb(244,45,10)" fg:x="15860581317" fg:w="290872610"/><text x="50.3562%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (311,935,799 samples, 0.99%)</title><rect x="50.0459%" y="949" width="0.9855%" height="15" fill="rgb(207,125,25)" fg:x="15841524146" fg:w="311935799"/><text x="50.2959%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (301,905,709 samples, 0.95%)</title><rect x="50.0776%" y="933" width="0.9538%" height="15" fill="rgb(210,195,18)" fg:x="15851554236" fg:w="301905709"/><text x="50.3276%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (301,905,709 samples, 0.95%)</title><rect x="50.0776%" y="917" width="0.9538%" height="15" fill="rgb(249,80,12)" fg:x="15851554236" fg:w="301905709"/><text x="50.3276%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,625,877,211 samples, 49.36%)</title><rect x="2.0026%" y="1013" width="49.3647%" height="15" fill="rgb(221,65,9)" fg:x="633901688" fg:w="15625877211"/><text x="2.2526%" y="1023.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,602,808,004 samples, 49.29%)</title><rect x="2.0755%" y="997" width="49.2918%" height="15" fill="rgb(235,49,36)" fg:x="656970895" fg:w="15602808004"/><text x="2.3255%" y="1007.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (15,602,808,004 samples, 49.29%)</title><rect x="2.0755%" y="981" width="49.2918%" height="15" fill="rgb(225,32,20)" fg:x="656970895" fg:w="15602808004"/><text x="2.3255%" y="991.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,602,808,004 samples, 49.29%)</title><rect x="2.0755%" y="965" width="49.2918%" height="15" fill="rgb(215,141,46)" fg:x="656970895" fg:w="15602808004"/><text x="2.3255%" y="975.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (106,318,954 samples, 0.34%)</title><rect x="51.0314%" y="949" width="0.3359%" height="15" fill="rgb(250,160,47)" fg:x="16153459945" fg:w="106318954"/><text x="51.2814%" y="959.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (324,974,916 samples, 1.03%)</title><rect x="51.3673%" y="1013" width="1.0266%" height="15" fill="rgb(216,222,40)" fg:x="16259778899" fg:w="324974916"/><text x="51.6173%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11,033,099 samples, 0.03%)</title><rect x="52.3939%" y="1013" width="0.0349%" height="15" fill="rgb(234,217,39)" fg:x="16584753815" fg:w="11033099"/><text x="52.6439%" y="1023.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (49,147,441 samples, 0.16%)</title><rect x="52.4288%" y="1013" width="0.1553%" height="15" fill="rgb(207,178,40)" fg:x="16595786914" fg:w="49147441"/><text x="52.6788%" y="1023.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (49,147,441 samples, 0.16%)</title><rect x="52.4288%" y="997" width="0.1553%" height="15" fill="rgb(221,136,13)" fg:x="16595786914" fg:w="49147441"/><text x="52.6788%" y="1007.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (16,360,079,799 samples, 51.68%)</title><rect x="0.9284%" y="1029" width="51.6841%" height="15" fill="rgb(249,199,10)" fg:x="293881637" fg:w="16360079799"/><text x="1.1784%" y="1039.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="52.5936%" y="1013" width="0.0190%" height="15" fill="rgb(249,222,13)" fg:x="16647943382" fg:w="6018054"/><text x="52.8436%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,027,081 samples, 0.03%)</title><rect x="52.6126%" y="1029" width="0.0285%" height="15" fill="rgb(244,185,38)" fg:x="16653961436" fg:w="9027081"/><text x="52.8626%" y="1039.50"></text></g><g><title>alloc_perturb (9,027,081 samples, 0.03%)</title><rect x="53.0467%" y="901" width="0.0285%" height="15" fill="rgb(236,202,9)" fg:x="16791373669" fg:w="9027081"/><text x="53.2967%" y="911.50"></text></g><g><title>checked_request2size (4,012,036 samples, 0.01%)</title><rect x="53.0752%" y="901" width="0.0127%" height="15" fill="rgb(250,229,37)" fg:x="16800400750" fg:w="4012036"/><text x="53.3252%" y="911.50"></text></g><g><title>tcache_put (9,027,081 samples, 0.03%)</title><rect x="53.0879%" y="901" width="0.0285%" height="15" fill="rgb(206,174,23)" fg:x="16804412786" fg:w="9027081"/><text x="53.3379%" y="911.50"></text></g><g><title>_int_malloc (134,403,206 samples, 0.42%)</title><rect x="52.7045%" y="917" width="0.4246%" height="15" fill="rgb(211,33,43)" fg:x="16683048697" fg:w="134403206"/><text x="52.9545%" y="927.50"></text></g><g><title>unlink_chunk (4,012,036 samples, 0.01%)</title><rect x="53.1164%" y="901" width="0.0127%" height="15" fill="rgb(245,58,50)" fg:x="16813439867" fg:w="4012036"/><text x="53.3664%" y="911.50"></text></g><g><title>__GI___libc_malloc (151,454,359 samples, 0.48%)</title><rect x="52.6633%" y="933" width="0.4785%" height="15" fill="rgb(244,68,36)" fg:x="16670009580" fg:w="151454359"/><text x="52.9133%" y="943.50"></text></g><g><title>checked_request2size (4,012,036 samples, 0.01%)</title><rect x="53.1291%" y="917" width="0.0127%" height="15" fill="rgb(232,229,15)" fg:x="16817451903" fg:w="4012036"/><text x="53.3791%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (159,478,431 samples, 0.50%)</title><rect x="52.6601%" y="981" width="0.5038%" height="15" fill="rgb(254,30,23)" fg:x="16669006571" fg:w="159478431"/><text x="52.9101%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (159,478,431 samples, 0.50%)</title><rect x="52.6601%" y="965" width="0.5038%" height="15" fill="rgb(235,160,14)" fg:x="16669006571" fg:w="159478431"/><text x="52.9101%" y="975.50"></text></g><g><title>alloc::alloc::alloc (159,478,431 samples, 0.50%)</title><rect x="52.6601%" y="949" width="0.5038%" height="15" fill="rgb(212,155,44)" fg:x="16669006571" fg:w="159478431"/><text x="52.9101%" y="959.50"></text></g><g><title>core::ptr::read_volatile (4,012,036 samples, 0.01%)</title><rect x="53.1512%" y="933" width="0.0127%" height="15" fill="rgb(226,2,50)" fg:x="16824472966" fg:w="4012036"/><text x="53.4012%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (164,493,476 samples, 0.52%)</title><rect x="52.6474%" y="1029" width="0.5197%" height="15" fill="rgb(234,177,6)" fg:x="16664994535" fg:w="164493476"/><text x="52.8974%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (164,493,476 samples, 0.52%)</title><rect x="52.6474%" y="1013" width="0.5197%" height="15" fill="rgb(217,24,9)" fg:x="16664994535" fg:w="164493476"/><text x="52.8974%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (164,493,476 samples, 0.52%)</title><rect x="52.6474%" y="997" width="0.5197%" height="15" fill="rgb(220,13,46)" fg:x="16664994535" fg:w="164493476"/><text x="52.8974%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,608,826,031 samples, 52.47%)</title><rect x="0.9062%" y="1093" width="52.4700%" height="15" fill="rgb(239,221,27)" fg:x="286860574" fg:w="16608826031"/><text x="1.1562%" y="1103.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,602,807,977 samples, 52.45%)</title><rect x="0.9253%" y="1077" width="52.4510%" height="15" fill="rgb(222,198,25)" fg:x="292878628" fg:w="16602807977"/><text x="1.1753%" y="1087.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (16,602,807,977 samples, 52.45%)</title><rect x="0.9253%" y="1061" width="52.4510%" height="15" fill="rgb(211,99,13)" fg:x="292878628" fg:w="16602807977"/><text x="1.1753%" y="1071.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,602,807,977 samples, 52.45%)</title><rect x="0.9253%" y="1045" width="52.4510%" height="15" fill="rgb(232,111,31)" fg:x="292878628" fg:w="16602807977"/><text x="1.1753%" y="1055.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (66,198,594 samples, 0.21%)</title><rect x="53.1671%" y="1029" width="0.2091%" height="15" fill="rgb(245,82,37)" fg:x="16829488011" fg:w="66198594"/><text x="53.4171%" y="1039.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (118,355,062 samples, 0.37%)</title><rect x="53.3762%" y="1093" width="0.3739%" height="15" fill="rgb(227,149,46)" fg:x="16895686605" fg:w="118355062"/><text x="53.6262%" y="1103.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (12,036,108 samples, 0.04%)</title><rect x="53.7596%" y="1093" width="0.0380%" height="15" fill="rgb(218,36,50)" fg:x="17017050694" fg:w="12036108"/><text x="54.0096%" y="1103.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (12,036,108 samples, 0.04%)</title><rect x="53.7596%" y="1077" width="0.0380%" height="15" fill="rgb(226,80,48)" fg:x="17017050694" fg:w="12036108"/><text x="54.0096%" y="1087.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (16,916,749,794 samples, 53.44%)</title><rect x="0.3612%" y="1109" width="53.4428%" height="15" fill="rgb(238,224,15)" fg:x="114343026" fg:w="16916749794"/><text x="0.6112%" y="1119.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>alloc_perturb (4,012,036 samples, 0.01%)</title><rect x="53.9973%" y="981" width="0.0127%" height="15" fill="rgb(241,136,10)" fg:x="17092276369" fg:w="4012036"/><text x="54.2473%" y="991.50"></text></g><g><title>__GI___libc_malloc (62,186,558 samples, 0.20%)</title><rect x="53.8357%" y="1013" width="0.1965%" height="15" fill="rgb(208,32,45)" fg:x="17041122910" fg:w="62186558"/><text x="54.0857%" y="1023.50"></text></g><g><title>_int_malloc (52,156,468 samples, 0.16%)</title><rect x="53.8674%" y="997" width="0.1648%" height="15" fill="rgb(207,135,9)" fg:x="17051153000" fg:w="52156468"/><text x="54.1174%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (70,210,630 samples, 0.22%)</title><rect x="53.8167%" y="1109" width="0.2218%" height="15" fill="rgb(206,86,44)" fg:x="17035104856" fg:w="70210630"/><text x="54.0667%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (68,204,612 samples, 0.22%)</title><rect x="53.8230%" y="1093" width="0.2155%" height="15" fill="rgb(245,177,15)" fg:x="17037110874" fg:w="68204612"/><text x="54.0730%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (68,204,612 samples, 0.22%)</title><rect x="53.8230%" y="1077" width="0.2155%" height="15" fill="rgb(206,64,50)" fg:x="17037110874" fg:w="68204612"/><text x="54.0730%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67,201,603 samples, 0.21%)</title><rect x="53.8262%" y="1061" width="0.2123%" height="15" fill="rgb(234,36,40)" fg:x="17038113883" fg:w="67201603"/><text x="54.0762%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67,201,603 samples, 0.21%)</title><rect x="53.8262%" y="1045" width="0.2123%" height="15" fill="rgb(213,64,8)" fg:x="17038113883" fg:w="67201603"/><text x="54.0762%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (67,201,603 samples, 0.21%)</title><rect x="53.8262%" y="1029" width="0.2123%" height="15" fill="rgb(210,75,36)" fg:x="17038113883" fg:w="67201603"/><text x="54.0762%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,028,083,793 samples, 53.79%)</title><rect x="0.3390%" y="1173" width="53.7945%" height="15" fill="rgb(229,88,21)" fg:x="107321963" fg:w="17028083793"/><text x="0.5890%" y="1183.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,023,068,748 samples, 53.78%)</title><rect x="0.3549%" y="1157" width="53.7786%" height="15" fill="rgb(252,204,47)" fg:x="112337008" fg:w="17023068748"/><text x="0.6049%" y="1167.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (17,023,068,748 samples, 53.78%)</title><rect x="0.3549%" y="1141" width="53.7786%" height="15" fill="rgb(208,77,27)" fg:x="112337008" fg:w="17023068748"/><text x="0.6049%" y="1151.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,023,068,748 samples, 53.78%)</title><rect x="0.3549%" y="1125" width="53.7786%" height="15" fill="rgb(221,76,26)" fg:x="112337008" fg:w="17023068748"/><text x="0.6049%" y="1135.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (30,090,270 samples, 0.10%)</title><rect x="54.0385%" y="1109" width="0.0951%" height="15" fill="rgb(225,139,18)" fg:x="17105315486" fg:w="30090270"/><text x="54.2885%" y="1119.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (30,090,270 samples, 0.10%)</title><rect x="54.1335%" y="1173" width="0.0951%" height="15" fill="rgb(230,137,11)" fg:x="17135405756" fg:w="30090270"/><text x="54.3835%" y="1183.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (5,015,045 samples, 0.02%)</title><rect x="54.2286%" y="1173" width="0.0158%" height="15" fill="rgb(212,28,1)" fg:x="17165496026" fg:w="5015045"/><text x="54.4786%" y="1183.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (5,015,045 samples, 0.02%)</title><rect x="54.2286%" y="1157" width="0.0158%" height="15" fill="rgb(248,164,17)" fg:x="17165496026" fg:w="5015045"/><text x="54.4786%" y="1167.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (17,130,390,711 samples, 54.12%)</title><rect x="0.1331%" y="1189" width="54.1177%" height="15" fill="rgb(222,171,42)" fg:x="42126378" fg:w="17130390711"/><text x="0.3831%" y="1199.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,015,045 samples, 0.02%)</title><rect x="54.2508%" y="1189" width="0.0158%" height="15" fill="rgb(243,84,45)" fg:x="17172517089" fg:w="5015045"/><text x="54.5008%" y="1199.50"></text></g><g><title>__GI___libc_malloc (31,093,279 samples, 0.10%)</title><rect x="54.2698%" y="1093" width="0.0982%" height="15" fill="rgb(252,49,23)" fg:x="17178535143" fg:w="31093279"/><text x="54.5198%" y="1103.50"></text></g><g><title>_int_malloc (29,087,261 samples, 0.09%)</title><rect x="54.2761%" y="1077" width="0.0919%" height="15" fill="rgb(215,19,7)" fg:x="17180541161" fg:w="29087261"/><text x="54.5261%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33,099,297 samples, 0.10%)</title><rect x="54.2666%" y="1189" width="0.1046%" height="15" fill="rgb(238,81,41)" fg:x="17177532134" fg:w="33099297"/><text x="54.5166%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33,099,297 samples, 0.10%)</title><rect x="54.2666%" y="1173" width="0.1046%" height="15" fill="rgb(210,199,37)" fg:x="17177532134" fg:w="33099297"/><text x="54.5166%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (33,099,297 samples, 0.10%)</title><rect x="54.2666%" y="1157" width="0.1046%" height="15" fill="rgb(244,192,49)" fg:x="17177532134" fg:w="33099297"/><text x="54.5166%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33,099,297 samples, 0.10%)</title><rect x="54.2666%" y="1141" width="0.1046%" height="15" fill="rgb(226,211,11)" fg:x="17177532134" fg:w="33099297"/><text x="54.5166%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33,099,297 samples, 0.10%)</title><rect x="54.2666%" y="1125" width="0.1046%" height="15" fill="rgb(236,162,54)" fg:x="17177532134" fg:w="33099297"/><text x="54.5166%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (33,099,297 samples, 0.10%)</title><rect x="54.2666%" y="1109" width="0.1046%" height="15" fill="rgb(220,229,9)" fg:x="17177532134" fg:w="33099297"/><text x="54.5166%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,187,562,224 samples, 54.30%)</title><rect x="0.1299%" y="1253" width="54.2983%" height="15" fill="rgb(250,87,22)" fg:x="41123369" fg:w="17187562224"/><text x="0.3799%" y="1263.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,187,562,224 samples, 54.30%)</title><rect x="0.1299%" y="1237" width="54.2983%" height="15" fill="rgb(239,43,17)" fg:x="41123369" fg:w="17187562224"/><text x="0.3799%" y="1247.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (17,187,562,224 samples, 54.30%)</title><rect x="0.1299%" y="1221" width="54.2983%" height="15" fill="rgb(231,177,25)" fg:x="41123369" fg:w="17187562224"/><text x="0.3799%" y="1231.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,187,562,224 samples, 54.30%)</title><rect x="0.1299%" y="1205" width="54.2983%" height="15" fill="rgb(219,179,1)" fg:x="41123369" fg:w="17187562224"/><text x="0.3799%" y="1215.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18,054,162 samples, 0.06%)</title><rect x="54.3712%" y="1189" width="0.0570%" height="15" fill="rgb(238,219,53)" fg:x="17210631431" fg:w="18054162"/><text x="54.6212%" y="1199.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (14,042,126 samples, 0.04%)</title><rect x="54.4282%" y="1253" width="0.0444%" height="15" fill="rgb(232,167,36)" fg:x="17228685593" fg:w="14042126"/><text x="54.6782%" y="1263.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (17,229,688,602 samples, 54.43%)</title><rect x="0.0475%" y="1269" width="54.4314%" height="15" fill="rgb(244,19,51)" fg:x="15045135" fg:w="17229688602"/><text x="0.2975%" y="1279.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>__GI___libc_malloc (9,027,081 samples, 0.03%)</title><rect x="54.4789%" y="1173" width="0.0285%" height="15" fill="rgb(224,6,22)" fg:x="17244733737" fg:w="9027081"/><text x="54.7289%" y="1183.50"></text></g><g><title>_int_malloc (8,024,072 samples, 0.03%)</title><rect x="54.4821%" y="1157" width="0.0253%" height="15" fill="rgb(224,145,5)" fg:x="17245736746" fg:w="8024072"/><text x="54.7321%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,030,090 samples, 0.03%)</title><rect x="54.4789%" y="1269" width="0.0317%" height="15" fill="rgb(234,130,49)" fg:x="17244733737" fg:w="10030090"/><text x="54.7289%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,030,090 samples, 0.03%)</title><rect x="54.4789%" y="1253" width="0.0317%" height="15" fill="rgb(254,6,2)" fg:x="17244733737" fg:w="10030090"/><text x="54.7289%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (10,030,090 samples, 0.03%)</title><rect x="54.4789%" y="1237" width="0.0317%" height="15" fill="rgb(208,96,46)" fg:x="17244733737" fg:w="10030090"/><text x="54.7289%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,030,090 samples, 0.03%)</title><rect x="54.4789%" y="1221" width="0.0317%" height="15" fill="rgb(239,3,39)" fg:x="17244733737" fg:w="10030090"/><text x="54.7289%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,030,090 samples, 0.03%)</title><rect x="54.4789%" y="1205" width="0.0317%" height="15" fill="rgb(233,210,1)" fg:x="17244733737" fg:w="10030090"/><text x="54.7289%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (10,030,090 samples, 0.03%)</title><rect x="54.4789%" y="1189" width="0.0317%" height="15" fill="rgb(244,137,37)" fg:x="17244733737" fg:w="10030090"/><text x="54.7289%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,244,733,737 samples, 54.48%)</title><rect x="0.0475%" y="1333" width="54.4789%" height="15" fill="rgb(240,136,2)" fg:x="15045135" fg:w="17244733737"/><text x="0.2975%" y="1343.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,244,733,737 samples, 54.48%)</title><rect x="0.0475%" y="1317" width="54.4789%" height="15" fill="rgb(239,18,37)" fg:x="15045135" fg:w="17244733737"/><text x="0.2975%" y="1327.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (17,244,733,737 samples, 54.48%)</title><rect x="0.0475%" y="1301" width="54.4789%" height="15" fill="rgb(218,185,22)" fg:x="15045135" fg:w="17244733737"/><text x="0.2975%" y="1311.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,244,733,737 samples, 54.48%)</title><rect x="0.0475%" y="1285" width="54.4789%" height="15" fill="rgb(225,218,4)" fg:x="15045135" fg:w="17244733737"/><text x="0.2975%" y="1295.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5,015,045 samples, 0.02%)</title><rect x="54.5106%" y="1269" width="0.0158%" height="15" fill="rgb(230,182,32)" fg:x="17254763827" fg:w="5015045"/><text x="54.7606%" y="1279.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (17,263,790,908 samples, 54.54%)</title><rect x="0.0063%" y="1349" width="54.5391%" height="15" fill="rgb(242,56,43)" fg:x="2006018" fg:w="17263790908"/><text x="0.2563%" y="1359.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="54.5264%" y="1333" width="0.0190%" height="15" fill="rgb(233,99,24)" fg:x="17259778872" fg:w="6018054"/><text x="54.7764%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1349" width="0.0127%" height="15" fill="rgb(234,209,42)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1333" width="0.0127%" height="15" fill="rgb(227,7,12)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1317" width="0.0127%" height="15" fill="rgb(245,203,43)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1301" width="0.0127%" height="15" fill="rgb(238,205,33)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1285" width="0.0127%" height="15" fill="rgb(231,56,7)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1269" width="0.0127%" height="15" fill="rgb(244,186,29)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1279.50"></text></g><g><title>__GI___libc_malloc (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1253" width="0.0127%" height="15" fill="rgb(234,111,31)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1263.50"></text></g><g><title>_int_malloc (4,012,036 samples, 0.01%)</title><rect x="54.5455%" y="1237" width="0.0127%" height="15" fill="rgb(241,149,10)" fg:x="17265796926" fg:w="4012036"/><text x="54.7955%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,272,817,989 samples, 54.57%)</title><rect x="0.0032%" y="1413" width="54.5676%" height="15" fill="rgb(249,206,44)" fg:x="1003009" fg:w="17272817989"/><text x="0.2532%" y="1423.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,271,814,980 samples, 54.56%)</title><rect x="0.0063%" y="1397" width="54.5645%" height="15" fill="rgb(251,153,30)" fg:x="2006018" fg:w="17271814980"/><text x="0.2563%" y="1407.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (17,271,814,980 samples, 54.56%)</title><rect x="0.0063%" y="1381" width="54.5645%" height="15" fill="rgb(239,152,38)" fg:x="2006018" fg:w="17271814980"/><text x="0.2563%" y="1391.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,271,814,980 samples, 54.56%)</title><rect x="0.0063%" y="1365" width="54.5645%" height="15" fill="rgb(249,139,47)" fg:x="2006018" fg:w="17271814980"/><text x="0.2563%" y="1375.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4,012,036 samples, 0.01%)</title><rect x="54.5581%" y="1349" width="0.0127%" height="15" fill="rgb(244,64,35)" fg:x="17269808962" fg:w="4012036"/><text x="54.8081%" y="1359.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (17,276,830,025 samples, 54.58%)</title><rect x="0.0032%" y="1429" width="54.5803%" height="15" fill="rgb(216,46,15)" fg:x="1003009" fg:w="17276830025"/><text x="0.2532%" y="1439.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (17,281,845,070 samples, 54.60%)</title><rect x="0.0000%" y="1509" width="54.5962%" height="15" fill="rgb(250,74,19)" fg:x="0" fg:w="17281845070"/><text x="0.2500%" y="1519.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,281,845,070 samples, 54.60%)</title><rect x="0.0000%" y="1493" width="54.5962%" height="15" fill="rgb(249,42,33)" fg:x="0" fg:w="17281845070"/><text x="0.2500%" y="1503.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,280,842,061 samples, 54.59%)</title><rect x="0.0032%" y="1477" width="54.5930%" height="15" fill="rgb(242,149,17)" fg:x="1003009" fg:w="17280842061"/><text x="0.2532%" y="1487.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (17,280,842,061 samples, 54.59%)</title><rect x="0.0032%" y="1461" width="54.5930%" height="15" fill="rgb(244,29,21)" fg:x="1003009" fg:w="17280842061"/><text x="0.2532%" y="1471.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,280,842,061 samples, 54.59%)</title><rect x="0.0032%" y="1445" width="54.5930%" height="15" fill="rgb(220,130,37)" fg:x="1003009" fg:w="17280842061"/><text x="0.2532%" y="1455.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (23,222,667,377 samples, 73.36%)</title><rect x="0.0000%" y="1589" width="73.3642%" height="15" fill="rgb(211,67,2)" fg:x="0" fg:w="23222667377"/><text x="0.2500%" y="1599.50">&lt;chlang::board::Board as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,222,667,377 samples, 73.36%)</title><rect x="0.0000%" y="1573" width="73.3642%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="23222667377"/><text x="0.2500%" y="1583.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,222,667,377 samples, 73.36%)</title><rect x="0.0000%" y="1557" width="73.3642%" height="15" fill="rgb(246,142,3)" fg:x="0" fg:w="23222667377"/><text x="0.2500%" y="1567.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (23,222,667,377 samples, 73.36%)</title><rect x="0.0000%" y="1541" width="73.3642%" height="15" fill="rgb(241,25,7)" fg:x="0" fg:w="23222667377"/><text x="0.2500%" y="1551.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,222,667,377 samples, 73.36%)</title><rect x="0.0000%" y="1525" width="73.3642%" height="15" fill="rgb(242,119,39)" fg:x="0" fg:w="23222667377"/><text x="0.2500%" y="1535.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1509" width="18.7680%" height="15" fill="rgb(241,98,45)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1519.50">alloc::vec::Vec&lt;T,A&gt;::with_ca..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1493" width="18.7680%" height="15" fill="rgb(254,28,30)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1503.50">alloc::raw_vec::RawVec&lt;T,A&gt;::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1477" width="18.7680%" height="15" fill="rgb(241,142,54)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1487.50">alloc::raw_vec::RawVec&lt;T,A&gt;::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1461" width="18.7680%" height="15" fill="rgb(222,85,15)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1471.50">&lt;alloc::alloc::Global as core..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1445" width="18.7680%" height="15" fill="rgb(210,85,47)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1455.50">alloc::alloc::Global::alloc_i..</text></g><g><title>alloc::alloc::alloc (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1429" width="18.7680%" height="15" fill="rgb(224,206,25)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1439.50">alloc::alloc::alloc</text></g><g><title>__GI___libc_malloc (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1413" width="18.7680%" height="15" fill="rgb(243,201,19)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1423.50">__GI___libc_malloc</text></g><g><title>_int_malloc (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1397" width="18.7680%" height="15" fill="rgb(236,59,4)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1407.50">_int_malloc</text></g><g><title>malloc_consolidate (5,940,822,307 samples, 18.77%)</title><rect x="54.5962%" y="1381" width="18.7680%" height="15" fill="rgb(254,179,45)" fg:x="17281845070" fg:w="5940822307"/><text x="54.8462%" y="1391.50">malloc_consolidate</text></g><g><title>unlink_chunk (4,815,446,209 samples, 15.21%)</title><rect x="58.1514%" y="1365" width="15.2128%" height="15" fill="rgb(226,14,10)" fg:x="18407221168" fg:w="4815446209"/><text x="58.4014%" y="1375.50">unlink_chunk</text></g><g><title>__GI___libc_free (5,015,045 samples, 0.02%)</title><rect x="73.3959%" y="1253" width="0.0158%" height="15" fill="rgb(244,27,41)" fg:x="23232697467" fg:w="5015045"/><text x="73.6459%" y="1263.50"></text></g><g><title>_int_free (5,015,045 samples, 0.02%)</title><rect x="73.3959%" y="1237" width="0.0158%" height="15" fill="rgb(235,35,32)" fg:x="23232697467" fg:w="5015045"/><text x="73.6459%" y="1247.50"></text></g><g><title>__GI___libc_free (6,018,054 samples, 0.02%)</title><rect x="73.4212%" y="1189" width="0.0190%" height="15" fill="rgb(218,68,31)" fg:x="23240721539" fg:w="6018054"/><text x="73.6712%" y="1199.50"></text></g><g><title>_int_free (6,018,054 samples, 0.02%)</title><rect x="73.4212%" y="1173" width="0.0190%" height="15" fill="rgb(207,120,37)" fg:x="23240721539" fg:w="6018054"/><text x="73.6712%" y="1183.50"></text></g><g><title>_int_free (12,036,108 samples, 0.04%)</title><rect x="73.4909%" y="1109" width="0.0380%" height="15" fill="rgb(227,98,0)" fg:x="23262787737" fg:w="12036108"/><text x="73.7409%" y="1119.50"></text></g><g><title>__GI___libc_free (13,039,117 samples, 0.04%)</title><rect x="73.4909%" y="1125" width="0.0412%" height="15" fill="rgb(207,7,3)" fg:x="23262787737" fg:w="13039117"/><text x="73.7409%" y="1135.50"></text></g><g><title>_int_free (16,048,144 samples, 0.05%)</title><rect x="73.6367%" y="1045" width="0.0507%" height="15" fill="rgb(206,98,19)" fg:x="23308926151" fg:w="16048144"/><text x="73.8867%" y="1055.50"></text></g><g><title>__GI___libc_free (20,060,180 samples, 0.06%)</title><rect x="73.6272%" y="1061" width="0.0634%" height="15" fill="rgb(217,5,26)" fg:x="23305917124" fg:w="20060180"/><text x="73.8772%" y="1071.50"></text></g><g><title>__GI___libc_free (31,093,279 samples, 0.10%)</title><rect x="73.7983%" y="997" width="0.0982%" height="15" fill="rgb(235,190,38)" fg:x="23360079610" fg:w="31093279"/><text x="74.0483%" y="1007.50"></text></g><g><title>_int_free (27,081,243 samples, 0.09%)</title><rect x="73.8110%" y="981" width="0.0856%" height="15" fill="rgb(247,86,24)" fg:x="23364091646" fg:w="27081243"/><text x="74.0610%" y="991.50"></text></g><g><title>__GI___libc_free (31,093,279 samples, 0.10%)</title><rect x="74.0486%" y="933" width="0.0982%" height="15" fill="rgb(205,101,16)" fg:x="23439317321" fg:w="31093279"/><text x="74.2986%" y="943.50"></text></g><g><title>_int_free (25,075,225 samples, 0.08%)</title><rect x="74.0676%" y="917" width="0.0792%" height="15" fill="rgb(246,168,33)" fg:x="23445335375" fg:w="25075225"/><text x="74.3176%" y="927.50"></text></g><g><title>__GI___libc_free (20,060,180 samples, 0.06%)</title><rect x="74.3465%" y="869" width="0.0634%" height="15" fill="rgb(231,114,1)" fg:x="23533600167" fg:w="20060180"/><text x="74.5965%" y="879.50"></text></g><g><title>_int_free (19,057,171 samples, 0.06%)</title><rect x="74.3496%" y="853" width="0.0602%" height="15" fill="rgb(207,184,53)" fg:x="23534603176" fg:w="19057171"/><text x="74.5996%" y="863.50"></text></g><g><title>_int_free (12,036,108 samples, 0.04%)</title><rect x="74.6000%" y="789" width="0.0380%" height="15" fill="rgb(224,95,51)" fg:x="23613840887" fg:w="12036108"/><text x="74.8500%" y="799.50"></text></g><g><title>__GI___libc_free (17,051,153 samples, 0.05%)</title><rect x="74.5873%" y="805" width="0.0539%" height="15" fill="rgb(212,188,45)" fg:x="23609828851" fg:w="17051153"/><text x="74.8373%" y="815.50"></text></g><g><title>__GI___libc_free (19,057,171 samples, 0.06%)</title><rect x="74.7901%" y="741" width="0.0602%" height="15" fill="rgb(223,154,38)" fg:x="23674021427" fg:w="19057171"/><text x="75.0401%" y="751.50"></text></g><g><title>_int_free (16,048,144 samples, 0.05%)</title><rect x="74.7996%" y="725" width="0.0507%" height="15" fill="rgb(251,22,52)" fg:x="23677030454" fg:w="16048144"/><text x="75.0496%" y="735.50"></text></g><g><title>__GI___libc_free (9,027,081 samples, 0.03%)</title><rect x="75.0151%" y="677" width="0.0285%" height="15" fill="rgb(229,209,22)" fg:x="23745235066" fg:w="9027081"/><text x="75.2651%" y="687.50"></text></g><g><title>_int_free (7,021,063 samples, 0.02%)</title><rect x="75.0214%" y="661" width="0.0222%" height="15" fill="rgb(234,138,34)" fg:x="23747241084" fg:w="7021063"/><text x="75.2714%" y="671.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.01%)</title><rect x="75.1101%" y="613" width="0.0127%" height="15" fill="rgb(212,95,11)" fg:x="23775325336" fg:w="4012036"/><text x="75.3601%" y="623.50"></text></g><g><title>_int_free (4,012,036 samples, 0.01%)</title><rect x="75.1101%" y="597" width="0.0127%" height="15" fill="rgb(240,179,47)" fg:x="23775325336" fg:w="4012036"/><text x="75.3601%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (105,315,945 samples, 0.33%)</title><rect x="74.8534%" y="725" width="0.3327%" height="15" fill="rgb(240,163,11)" fg:x="23694081607" fg:w="105315945"/><text x="75.1034%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (58,174,522 samples, 0.18%)</title><rect x="75.0024%" y="709" width="0.1838%" height="15" fill="rgb(236,37,12)" fg:x="23741223030" fg:w="58174522"/><text x="75.2524%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (54,162,486 samples, 0.17%)</title><rect x="75.0151%" y="693" width="0.1711%" height="15" fill="rgb(232,164,16)" fg:x="23745235066" fg:w="54162486"/><text x="75.2651%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (45,135,405 samples, 0.14%)</title><rect x="75.0436%" y="677" width="0.1426%" height="15" fill="rgb(244,205,15)" fg:x="23754262147" fg:w="45135405"/><text x="75.2936%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,126,378 samples, 0.13%)</title><rect x="75.0531%" y="661" width="0.1331%" height="15" fill="rgb(223,117,47)" fg:x="23757271174" fg:w="42126378"/><text x="75.3031%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (26,078,234 samples, 0.08%)</title><rect x="75.1038%" y="645" width="0.0824%" height="15" fill="rgb(244,107,35)" fg:x="23773319318" fg:w="26078234"/><text x="75.3538%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (24,072,216 samples, 0.08%)</title><rect x="75.1101%" y="629" width="0.0760%" height="15" fill="rgb(205,140,8)" fg:x="23775325336" fg:w="24072216"/><text x="75.3601%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (20,060,180 samples, 0.06%)</title><rect x="75.1228%" y="613" width="0.0634%" height="15" fill="rgb(228,84,46)" fg:x="23779337372" fg:w="20060180"/><text x="75.3728%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,057,171 samples, 0.06%)</title><rect x="75.1260%" y="597" width="0.0602%" height="15" fill="rgb(254,188,9)" fg:x="23780340381" fg:w="19057171"/><text x="75.3760%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (14,042,126 samples, 0.04%)</title><rect x="75.1418%" y="581" width="0.0444%" height="15" fill="rgb(206,112,54)" fg:x="23785355426" fg:w="14042126"/><text x="75.3918%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (13,039,117 samples, 0.04%)</title><rect x="75.1450%" y="565" width="0.0412%" height="15" fill="rgb(216,84,49)" fg:x="23786358435" fg:w="13039117"/><text x="75.3950%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (12,036,108 samples, 0.04%)</title><rect x="75.1481%" y="549" width="0.0380%" height="15" fill="rgb(214,194,35)" fg:x="23787361444" fg:w="12036108"/><text x="75.3981%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.04%)</title><rect x="75.1481%" y="533" width="0.0380%" height="15" fill="rgb(249,28,3)" fg:x="23787361444" fg:w="12036108"/><text x="75.3981%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (4,012,036 samples, 0.01%)</title><rect x="75.1735%" y="517" width="0.0127%" height="15" fill="rgb(222,56,52)" fg:x="23795385516" fg:w="4012036"/><text x="75.4235%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (4,012,036 samples, 0.01%)</title><rect x="75.1735%" y="501" width="0.0127%" height="15" fill="rgb(245,217,50)" fg:x="23795385516" fg:w="4012036"/><text x="75.4235%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (4,012,036 samples, 0.01%)</title><rect x="75.1735%" y="485" width="0.0127%" height="15" fill="rgb(213,201,24)" fg:x="23795385516" fg:w="4012036"/><text x="75.4235%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.01%)</title><rect x="75.1735%" y="469" width="0.0127%" height="15" fill="rgb(248,116,28)" fg:x="23795385516" fg:w="4012036"/><text x="75.4235%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (324,974,916 samples, 1.03%)</title><rect x="74.1658%" y="917" width="1.0266%" height="15" fill="rgb(219,72,43)" fg:x="23476428654" fg:w="324974916"/><text x="74.4158%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (271,815,439 samples, 0.86%)</title><rect x="74.3338%" y="901" width="0.8587%" height="15" fill="rgb(209,138,14)" fg:x="23529588131" fg:w="271815439"/><text x="74.5838%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (267,803,403 samples, 0.85%)</title><rect x="74.3465%" y="885" width="0.8460%" height="15" fill="rgb(222,18,33)" fg:x="23533600167" fg:w="267803403"/><text x="74.5965%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (246,740,214 samples, 0.78%)</title><rect x="74.4130%" y="869" width="0.7795%" height="15" fill="rgb(213,199,7)" fg:x="23554663356" fg:w="246740214"/><text x="74.6630%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (241,725,169 samples, 0.76%)</title><rect x="74.4288%" y="853" width="0.7636%" height="15" fill="rgb(250,110,10)" fg:x="23559678401" fg:w="241725169"/><text x="74.6788%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (198,595,782 samples, 0.63%)</title><rect x="74.5651%" y="837" width="0.6274%" height="15" fill="rgb(248,123,6)" fg:x="23602807788" fg:w="198595782"/><text x="74.8151%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (191,574,719 samples, 0.61%)</title><rect x="74.5873%" y="821" width="0.6052%" height="15" fill="rgb(206,91,31)" fg:x="23609828851" fg:w="191574719"/><text x="74.8373%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (173,520,557 samples, 0.55%)</title><rect x="74.6443%" y="805" width="0.5482%" height="15" fill="rgb(211,154,13)" fg:x="23627883013" fg:w="173520557"/><text x="74.8943%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168,505,512 samples, 0.53%)</title><rect x="74.6602%" y="789" width="0.5323%" height="15" fill="rgb(225,148,7)" fg:x="23632898058" fg:w="168505512"/><text x="74.9102%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (128,385,152 samples, 0.41%)</title><rect x="74.7869%" y="773" width="0.4056%" height="15" fill="rgb(220,160,43)" fg:x="23673018418" fg:w="128385152"/><text x="75.0369%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (127,382,143 samples, 0.40%)</title><rect x="74.7901%" y="757" width="0.4024%" height="15" fill="rgb(213,52,39)" fg:x="23674021427" fg:w="127382143"/><text x="75.0401%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (108,324,972 samples, 0.34%)</title><rect x="74.8503%" y="741" width="0.3422%" height="15" fill="rgb(243,137,7)" fg:x="23693078598" fg:w="108324972"/><text x="75.1003%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (412,236,699 samples, 1.30%)</title><rect x="73.8997%" y="981" width="1.3023%" height="15" fill="rgb(230,79,13)" fg:x="23392175898" fg:w="412236699"/><text x="74.1497%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (370,110,321 samples, 1.17%)</title><rect x="74.0328%" y="965" width="1.1692%" height="15" fill="rgb(247,105,23)" fg:x="23434302276" fg:w="370110321"/><text x="74.2828%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (365,095,276 samples, 1.15%)</title><rect x="74.0486%" y="949" width="1.1534%" height="15" fill="rgb(223,179,41)" fg:x="23439317321" fg:w="365095276"/><text x="74.2986%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (331,995,979 samples, 1.05%)</title><rect x="74.1532%" y="933" width="1.0488%" height="15" fill="rgb(218,9,34)" fg:x="23472416618" fg:w="331995979"/><text x="74.4032%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (479,438,302 samples, 1.51%)</title><rect x="73.7001%" y="1045" width="1.5146%" height="15" fill="rgb(222,106,8)" fg:x="23328986331" fg:w="479438302"/><text x="73.9501%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (452,357,059 samples, 1.43%)</title><rect x="73.7856%" y="1029" width="1.4291%" height="15" fill="rgb(211,220,0)" fg:x="23356067574" fg:w="452357059"/><text x="74.0356%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (449,348,032 samples, 1.42%)</title><rect x="73.7951%" y="1013" width="1.4196%" height="15" fill="rgb(229,52,16)" fg:x="23359076601" fg:w="449348032"/><text x="74.0451%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (417,251,744 samples, 1.32%)</title><rect x="73.8965%" y="997" width="1.3182%" height="15" fill="rgb(212,155,18)" fg:x="23391172889" fg:w="417251744"/><text x="74.1465%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (4,012,036 samples, 0.01%)</title><rect x="75.2020%" y="981" width="0.0127%" height="15" fill="rgb(242,21,14)" fg:x="23804412597" fg:w="4012036"/><text x="75.4520%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.01%)</title><rect x="75.2020%" y="965" width="0.0127%" height="15" fill="rgb(222,19,48)" fg:x="23804412597" fg:w="4012036"/><text x="75.4520%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (530,591,761 samples, 1.68%)</title><rect x="73.5416%" y="1109" width="1.6762%" height="15" fill="rgb(232,45,27)" fg:x="23278835881" fg:w="530591761"/><text x="73.7916%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (505,516,536 samples, 1.60%)</title><rect x="73.6208%" y="1093" width="1.5970%" height="15" fill="rgb(249,103,42)" fg:x="23303911106" fg:w="505516536"/><text x="73.8708%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (503,510,518 samples, 1.59%)</title><rect x="73.6272%" y="1077" width="1.5907%" height="15" fill="rgb(246,81,33)" fg:x="23305917124" fg:w="503510518"/><text x="73.8772%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (482,447,329 samples, 1.52%)</title><rect x="73.6937%" y="1061" width="1.5241%" height="15" fill="rgb(252,33,42)" fg:x="23326980313" fg:w="482447329"/><text x="73.9437%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (560,682,031 samples, 1.77%)</title><rect x="73.4561%" y="1173" width="1.7713%" height="15" fill="rgb(209,212,41)" fg:x="23251754638" fg:w="560682031"/><text x="73.7061%" y="1183.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (554,663,977 samples, 1.75%)</title><rect x="73.4751%" y="1157" width="1.7523%" height="15" fill="rgb(207,154,6)" fg:x="23257772692" fg:w="554663977"/><text x="73.7251%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (549,648,932 samples, 1.74%)</title><rect x="73.4909%" y="1141" width="1.7364%" height="15" fill="rgb(223,64,47)" fg:x="23262787737" fg:w="549648932"/><text x="73.7409%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (536,609,815 samples, 1.70%)</title><rect x="73.5321%" y="1125" width="1.6952%" height="15" fill="rgb(211,161,38)" fg:x="23275826854" fg:w="536609815"/><text x="73.7821%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (575,727,166 samples, 1.82%)</title><rect x="73.4117%" y="1237" width="1.8188%" height="15" fill="rgb(219,138,40)" fg:x="23237712512" fg:w="575727166"/><text x="73.6617%" y="1247.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (572,718,139 samples, 1.81%)</title><rect x="73.4212%" y="1221" width="1.8093%" height="15" fill="rgb(241,228,46)" fg:x="23240721539" fg:w="572718139"/><text x="73.6712%" y="1231.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (572,718,139 samples, 1.81%)</title><rect x="73.4212%" y="1205" width="1.8093%" height="15" fill="rgb(223,209,38)" fg:x="23240721539" fg:w="572718139"/><text x="73.6712%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (564,694,067 samples, 1.78%)</title><rect x="73.4466%" y="1189" width="1.7840%" height="15" fill="rgb(236,164,45)" fg:x="23248745611" fg:w="564694067"/><text x="73.6966%" y="1199.50">c..</text></g><g><title>chlang::board::Board::make_move (23,814,442,687 samples, 75.23%)</title><rect x="0.0000%" y="1605" width="75.2337%" height="15" fill="rgb(231,15,5)" fg:x="0" fg:w="23814442687"/><text x="0.2500%" y="1615.50">chlang::board::Board::make_move</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (585,757,256 samples, 1.85%)</title><rect x="73.3832%" y="1589" width="1.8505%" height="15" fill="rgb(252,35,15)" fg:x="23228685431" fg:w="585757256"/><text x="73.6332%" y="1599.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (585,757,256 samples, 1.85%)</title><rect x="73.3832%" y="1573" width="1.8505%" height="15" fill="rgb(248,181,18)" fg:x="23228685431" fg:w="585757256"/><text x="73.6332%" y="1583.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (585,757,256 samples, 1.85%)</title><rect x="73.3832%" y="1557" width="1.8505%" height="15" fill="rgb(233,39,42)" fg:x="23228685431" fg:w="585757256"/><text x="73.6332%" y="1567.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (585,757,256 samples, 1.85%)</title><rect x="73.3832%" y="1541" width="1.8505%" height="15" fill="rgb(238,110,33)" fg:x="23228685431" fg:w="585757256"/><text x="73.6332%" y="1551.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (585,757,256 samples, 1.85%)</title><rect x="73.3832%" y="1525" width="1.8505%" height="15" fill="rgb(233,195,10)" fg:x="23228685431" fg:w="585757256"/><text x="73.6332%" y="1535.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (584,754,247 samples, 1.85%)</title><rect x="73.3864%" y="1509" width="1.8473%" height="15" fill="rgb(254,105,3)" fg:x="23229688440" fg:w="584754247"/><text x="73.6364%" y="1519.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (584,754,247 samples, 1.85%)</title><rect x="73.3864%" y="1493" width="1.8473%" height="15" fill="rgb(221,225,9)" fg:x="23229688440" fg:w="584754247"/><text x="73.6364%" y="1503.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (584,754,247 samples, 1.85%)</title><rect x="73.3864%" y="1477" width="1.8473%" height="15" fill="rgb(224,227,45)" fg:x="23229688440" fg:w="584754247"/><text x="73.6364%" y="1487.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (584,754,247 samples, 1.85%)</title><rect x="73.3864%" y="1461" width="1.8473%" height="15" fill="rgb(229,198,43)" fg:x="23229688440" fg:w="584754247"/><text x="73.6364%" y="1471.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (584,754,247 samples, 1.85%)</title><rect x="73.3864%" y="1445" width="1.8473%" height="15" fill="rgb(206,209,35)" fg:x="23229688440" fg:w="584754247"/><text x="73.6364%" y="1455.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (584,754,247 samples, 1.85%)</title><rect x="73.3864%" y="1429" width="1.8473%" height="15" fill="rgb(245,195,53)" fg:x="23229688440" fg:w="584754247"/><text x="73.6364%" y="1439.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (583,751,238 samples, 1.84%)</title><rect x="73.3895%" y="1413" width="1.8442%" height="15" fill="rgb(240,92,26)" fg:x="23230691449" fg:w="583751238"/><text x="73.6395%" y="1423.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (583,751,238 samples, 1.84%)</title><rect x="73.3895%" y="1397" width="1.8442%" height="15" fill="rgb(207,40,23)" fg:x="23230691449" fg:w="583751238"/><text x="73.6395%" y="1407.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (583,751,238 samples, 1.84%)</title><rect x="73.3895%" y="1381" width="1.8442%" height="15" fill="rgb(223,111,35)" fg:x="23230691449" fg:w="583751238"/><text x="73.6395%" y="1391.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (583,751,238 samples, 1.84%)</title><rect x="73.3895%" y="1365" width="1.8442%" height="15" fill="rgb(229,147,28)" fg:x="23230691449" fg:w="583751238"/><text x="73.6395%" y="1375.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (582,748,229 samples, 1.84%)</title><rect x="73.3927%" y="1349" width="1.8410%" height="15" fill="rgb(211,29,28)" fg:x="23231694458" fg:w="582748229"/><text x="73.6427%" y="1359.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (582,748,229 samples, 1.84%)</title><rect x="73.3927%" y="1333" width="1.8410%" height="15" fill="rgb(228,72,33)" fg:x="23231694458" fg:w="582748229"/><text x="73.6427%" y="1343.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (581,745,220 samples, 1.84%)</title><rect x="73.3959%" y="1317" width="1.8378%" height="15" fill="rgb(205,214,31)" fg:x="23232697467" fg:w="581745220"/><text x="73.6459%" y="1327.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (581,745,220 samples, 1.84%)</title><rect x="73.3959%" y="1301" width="1.8378%" height="15" fill="rgb(224,111,15)" fg:x="23232697467" fg:w="581745220"/><text x="73.6459%" y="1311.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (581,745,220 samples, 1.84%)</title><rect x="73.3959%" y="1285" width="1.8378%" height="15" fill="rgb(253,21,26)" fg:x="23232697467" fg:w="581745220"/><text x="73.6459%" y="1295.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (581,745,220 samples, 1.84%)</title><rect x="73.3959%" y="1269" width="1.8378%" height="15" fill="rgb(245,139,43)" fg:x="23232697467" fg:w="581745220"/><text x="73.6459%" y="1279.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (576,730,175 samples, 1.82%)</title><rect x="73.4117%" y="1253" width="1.8220%" height="15" fill="rgb(252,170,7)" fg:x="23237712512" fg:w="576730175"/><text x="73.6617%" y="1263.50">c..</text></g><g><title>__GI___libc_free (6,018,054 samples, 0.02%)</title><rect x="75.2432%" y="1381" width="0.0190%" height="15" fill="rgb(231,118,14)" fg:x="23817451714" fg:w="6018054"/><text x="75.4932%" y="1391.50"></text></g><g><title>_int_free (4,012,036 samples, 0.01%)</title><rect x="75.2495%" y="1365" width="0.0127%" height="15" fill="rgb(238,83,0)" fg:x="23819457732" fg:w="4012036"/><text x="75.4995%" y="1375.50"></text></g><g><title>__GI___libc_free (13,039,117 samples, 0.04%)</title><rect x="75.2876%" y="1317" width="0.0412%" height="15" fill="rgb(221,39,39)" fg:x="23831493840" fg:w="13039117"/><text x="75.5376%" y="1327.50"></text></g><g><title>_int_free (10,030,090 samples, 0.03%)</title><rect x="75.2971%" y="1301" width="0.0317%" height="15" fill="rgb(222,119,46)" fg:x="23834502867" fg:w="10030090"/><text x="75.5471%" y="1311.50"></text></g><g><title>__GI___libc_free (29,087,261 samples, 0.09%)</title><rect x="75.3985%" y="1253" width="0.0919%" height="15" fill="rgb(222,165,49)" fg:x="23866599155" fg:w="29087261"/><text x="75.6485%" y="1263.50"></text></g><g><title>_int_free (22,066,198 samples, 0.07%)</title><rect x="75.4206%" y="1237" width="0.0697%" height="15" fill="rgb(219,113,52)" fg:x="23873620218" fg:w="22066198"/><text x="75.6706%" y="1247.50"></text></g><g><title>__GI___libc_free (84,252,756 samples, 0.27%)</title><rect x="75.6393%" y="1189" width="0.2662%" height="15" fill="rgb(214,7,15)" fg:x="23942827839" fg:w="84252756"/><text x="75.8893%" y="1199.50"></text></g><g><title>_int_free (72,216,648 samples, 0.23%)</title><rect x="75.6773%" y="1173" width="0.2281%" height="15" fill="rgb(235,32,4)" fg:x="23954863947" fg:w="72216648"/><text x="75.9273%" y="1183.50"></text></g><g><title>__rdl_dealloc (4,012,036 samples, 0.01%)</title><rect x="75.9054%" y="1189" width="0.0127%" height="15" fill="rgb(238,90,54)" fg:x="24027080595" fg:w="4012036"/><text x="76.1554%" y="1199.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,012,036 samples, 0.01%)</title><rect x="75.9054%" y="1173" width="0.0127%" height="15" fill="rgb(213,208,19)" fg:x="24027080595" fg:w="4012036"/><text x="76.1554%" y="1183.50"></text></g><g><title>_int_free (93,279,837 samples, 0.29%)</title><rect x="76.2160%" y="1109" width="0.2947%" height="15" fill="rgb(233,156,4)" fg:x="24125375477" fg:w="93279837"/><text x="76.4660%" y="1119.50"></text></g><g><title>__GI___libc_free (109,327,981 samples, 0.35%)</title><rect x="76.1684%" y="1125" width="0.3454%" height="15" fill="rgb(207,194,5)" fg:x="24110330342" fg:w="109327981"/><text x="76.4184%" y="1135.50"></text></g><g><title>__rdl_dealloc (7,021,063 samples, 0.02%)</title><rect x="76.5138%" y="1125" width="0.0222%" height="15" fill="rgb(206,111,30)" fg:x="24219658323" fg:w="7021063"/><text x="76.7638%" y="1135.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6,018,054 samples, 0.02%)</title><rect x="76.5170%" y="1109" width="0.0190%" height="15" fill="rgb(243,70,54)" fg:x="24220661332" fg:w="6018054"/><text x="76.7670%" y="1119.50"></text></g><g><title>_int_free (179,538,611 samples, 0.57%)</title><rect x="77.3599%" y="1045" width="0.5672%" height="15" fill="rgb(242,28,8)" fg:x="24487461726" fg:w="179538611"/><text x="77.6099%" y="1055.50"></text></g><g><title>__GI___libc_free (211,634,899 samples, 0.67%)</title><rect x="77.2616%" y="1061" width="0.6686%" height="15" fill="rgb(219,106,18)" fg:x="24456368447" fg:w="211634899"/><text x="77.5116%" y="1071.50"></text></g><g><title>__rdl_dealloc (5,015,045 samples, 0.02%)</title><rect x="77.9302%" y="1061" width="0.0158%" height="15" fill="rgb(244,222,10)" fg:x="24668003346" fg:w="5015045"/><text x="78.1802%" y="1071.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5,015,045 samples, 0.02%)</title><rect x="77.9302%" y="1045" width="0.0158%" height="15" fill="rgb(236,179,52)" fg:x="24668003346" fg:w="5015045"/><text x="78.1802%" y="1055.50"></text></g><g><title>_int_free (244,734,196 samples, 0.77%)</title><rect x="79.1977%" y="981" width="0.7732%" height="15" fill="rgb(213,23,39)" fg:x="25069206946" fg:w="244734196"/><text x="79.4477%" y="991.50"></text></g><g><title>__GI___libc_free (281,845,529 samples, 0.89%)</title><rect x="79.0836%" y="997" width="0.8904%" height="15" fill="rgb(238,48,10)" fg:x="25033098622" fg:w="281845529"/><text x="79.3336%" y="1007.50"></text></g><g><title>__rdl_dealloc (25,075,225 samples, 0.08%)</title><rect x="79.9740%" y="997" width="0.0792%" height="15" fill="rgb(251,196,23)" fg:x="25314944151" fg:w="25075225"/><text x="80.2240%" y="1007.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (22,066,198 samples, 0.07%)</title><rect x="79.9835%" y="981" width="0.0697%" height="15" fill="rgb(250,152,24)" fg:x="25317953178" fg:w="22066198"/><text x="80.2335%" y="991.50"></text></g><g><title>_int_free (269,809,421 samples, 0.85%)</title><rect x="81.9544%" y="917" width="0.8524%" height="15" fill="rgb(209,150,17)" fg:x="25941824776" fg:w="269809421"/><text x="82.2044%" y="927.50"></text></g><g><title>__GI___libc_free (306,920,754 samples, 0.97%)</title><rect x="81.8435%" y="933" width="0.9696%" height="15" fill="rgb(234,202,34)" fg:x="25906719461" fg:w="306920754"/><text x="82.0935%" y="943.50"></text></g><g><title>__rdl_dealloc (18,054,162 samples, 0.06%)</title><rect x="82.8131%" y="933" width="0.0570%" height="15" fill="rgb(253,148,53)" fg:x="26213640215" fg:w="18054162"/><text x="83.0631%" y="943.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (16,048,144 samples, 0.05%)</title><rect x="82.8195%" y="917" width="0.0507%" height="15" fill="rgb(218,129,16)" fg:x="26215646233" fg:w="16048144"/><text x="83.0695%" y="927.50"></text></g><g><title>_int_free (224,674,016 samples, 0.71%)</title><rect x="85.2372%" y="853" width="0.7098%" height="15" fill="rgb(216,85,19)" fg:x="26980942100" fg:w="224674016"/><text x="85.4872%" y="863.50"></text></g><g><title>__GI___libc_free (269,809,421 samples, 0.85%)</title><rect x="85.0978%" y="869" width="0.8524%" height="15" fill="rgb(235,228,7)" fg:x="26936809704" fg:w="269809421"/><text x="85.3478%" y="879.50"></text></g><g><title>__rdl_dealloc (16,048,144 samples, 0.05%)</title><rect x="85.9501%" y="869" width="0.0507%" height="15" fill="rgb(245,175,0)" fg:x="27206619125" fg:w="16048144"/><text x="86.2001%" y="879.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13,039,117 samples, 0.04%)</title><rect x="85.9596%" y="853" width="0.0412%" height="15" fill="rgb(208,168,36)" fg:x="27209628152" fg:w="13039117"/><text x="86.2096%" y="863.50"></text></g><g><title>__GI___libc_free (204,613,836 samples, 0.65%)</title><rect x="88.2569%" y="805" width="0.6464%" height="15" fill="rgb(246,171,24)" fg:x="27936809677" fg:w="204613836"/><text x="88.5069%" y="815.50"></text></g><g><title>_int_free (169,508,521 samples, 0.54%)</title><rect x="88.3678%" y="789" width="0.5355%" height="15" fill="rgb(215,142,24)" fg:x="27971914992" fg:w="169508521"/><text x="88.6178%" y="799.50"></text></g><g><title>__rdl_dealloc (11,033,099 samples, 0.03%)</title><rect x="88.9033%" y="805" width="0.0349%" height="15" fill="rgb(250,187,7)" fg:x="28141423513" fg:w="11033099"/><text x="89.1533%" y="815.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11,033,099 samples, 0.03%)</title><rect x="88.9033%" y="789" width="0.0349%" height="15" fill="rgb(228,66,33)" fg:x="28141423513" fg:w="11033099"/><text x="89.1533%" y="799.50"></text></g><g><title>_int_free (113,340,017 samples, 0.36%)</title><rect x="90.9471%" y="725" width="0.3581%" height="15" fill="rgb(234,215,21)" fg:x="28788364318" fg:w="113340017"/><text x="91.1971%" y="735.50"></text></g><g><title>__GI___libc_free (141,424,269 samples, 0.45%)</title><rect x="90.8647%" y="741" width="0.4468%" height="15" fill="rgb(222,191,20)" fg:x="28762286084" fg:w="141424269"/><text x="91.1147%" y="751.50"></text></g><g><title>_int_free (77,231,693 samples, 0.24%)</title><rect x="92.6931%" y="661" width="0.2440%" height="15" fill="rgb(245,79,54)" fg:x="29341022277" fg:w="77231693"/><text x="92.9431%" y="671.50"></text></g><g><title>__GI___libc_free (90,270,810 samples, 0.29%)</title><rect x="92.6582%" y="677" width="0.2852%" height="15" fill="rgb(240,10,37)" fg:x="29329989178" fg:w="90270810"/><text x="92.9082%" y="687.50"></text></g><g><title>_int_free (29,087,261 samples, 0.09%)</title><rect x="93.8369%" y="597" width="0.0919%" height="15" fill="rgb(214,192,32)" fg:x="29703108526" fg:w="29087261"/><text x="94.0869%" y="607.50"></text></g><g><title>__GI___libc_free (33,099,297 samples, 0.10%)</title><rect x="93.8274%" y="613" width="0.1046%" height="15" fill="rgb(209,36,54)" fg:x="29700099499" fg:w="33099297"/><text x="94.0774%" y="623.50"></text></g><g><title>__GI___libc_free (17,051,153 samples, 0.05%)</title><rect x="94.4326%" y="549" width="0.0539%" height="15" fill="rgb(220,10,11)" fg:x="29891674218" fg:w="17051153"/><text x="94.6826%" y="559.50"></text></g><g><title>_int_free (16,048,144 samples, 0.05%)</title><rect x="94.4358%" y="533" width="0.0507%" height="15" fill="rgb(221,106,17)" fg:x="29892677227" fg:w="16048144"/><text x="94.6858%" y="543.50"></text></g><g><title>__GI___libc_free (4,012,036 samples, 0.01%)</title><rect x="94.6830%" y="485" width="0.0127%" height="15" fill="rgb(251,142,44)" fg:x="29970911929" fg:w="4012036"/><text x="94.9330%" y="495.50"></text></g><g><title>_int_free (4,012,036 samples, 0.01%)</title><rect x="94.6830%" y="469" width="0.0127%" height="15" fill="rgb(238,13,15)" fg:x="29970911929" fg:w="4012036"/><text x="94.9330%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.02%)</title><rect x="94.7527%" y="405" width="0.0222%" height="15" fill="rgb(208,107,27)" fg:x="29992978127" fg:w="7021063"/><text x="95.0027%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,078,234 samples, 0.08%)</title><rect x="94.6956%" y="469" width="0.0824%" height="15" fill="rgb(205,136,37)" fg:x="29974923965" fg:w="26078234"/><text x="94.9456%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (10,030,090 samples, 0.03%)</title><rect x="94.7463%" y="453" width="0.0317%" height="15" fill="rgb(250,205,27)" fg:x="29990972109" fg:w="10030090"/><text x="94.9963%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (9,027,081 samples, 0.03%)</title><rect x="94.7495%" y="437" width="0.0285%" height="15" fill="rgb(210,80,43)" fg:x="29991975118" fg:w="9027081"/><text x="94.9995%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (8,024,072 samples, 0.03%)</title><rect x="94.7527%" y="421" width="0.0253%" height="15" fill="rgb(247,160,36)" fg:x="29992978127" fg:w="8024072"/><text x="95.0027%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (262,788,358 samples, 0.83%)</title><rect x="93.9510%" y="597" width="0.8302%" height="15" fill="rgb(234,13,49)" fg:x="29739216850" fg:w="262788358"/><text x="94.2010%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (116,349,044 samples, 0.37%)</title><rect x="94.4136%" y="581" width="0.3676%" height="15" fill="rgb(234,122,0)" fg:x="29885656164" fg:w="116349044"/><text x="94.6636%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (110,330,990 samples, 0.35%)</title><rect x="94.4326%" y="565" width="0.3486%" height="15" fill="rgb(207,146,38)" fg:x="29891674218" fg:w="110330990"/><text x="94.6826%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (93,279,837 samples, 0.29%)</title><rect x="94.4865%" y="549" width="0.2947%" height="15" fill="rgb(207,177,25)" fg:x="29908725371" fg:w="93279837"/><text x="94.7365%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (92,276,828 samples, 0.29%)</title><rect x="94.4897%" y="533" width="0.2915%" height="15" fill="rgb(211,178,42)" fg:x="29909728380" fg:w="92276828"/><text x="94.7397%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (35,105,315 samples, 0.11%)</title><rect x="94.6703%" y="517" width="0.1109%" height="15" fill="rgb(230,69,54)" fg:x="29966899893" fg:w="35105315"/><text x="94.9203%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (31,093,279 samples, 0.10%)</title><rect x="94.6830%" y="501" width="0.0982%" height="15" fill="rgb(214,135,41)" fg:x="29970911929" fg:w="31093279"/><text x="94.9330%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (27,081,243 samples, 0.09%)</title><rect x="94.6956%" y="485" width="0.0856%" height="15" fill="rgb(237,67,25)" fg:x="29974923965" fg:w="27081243"/><text x="94.9456%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (564,694,067 samples, 1.78%)</title><rect x="93.0067%" y="661" width="1.7840%" height="15" fill="rgb(222,189,50)" fg:x="29440320168" fg:w="564694067"/><text x="93.2567%" y="671.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (318,956,862 samples, 1.01%)</title><rect x="93.7831%" y="645" width="1.0076%" height="15" fill="rgb(245,148,34)" fg:x="29686057373" fg:w="318956862"/><text x="94.0331%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (305,917,745 samples, 0.97%)</title><rect x="93.8243%" y="629" width="0.9664%" height="15" fill="rgb(222,29,6)" fg:x="29699096490" fg:w="305917745"/><text x="94.0743%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (270,812,430 samples, 0.86%)</title><rect x="93.9352%" y="613" width="0.8555%" height="15" fill="rgb(221,189,43)" fg:x="29734201805" fg:w="270812430"/><text x="94.1852%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,012,036 samples, 0.01%)</title><rect x="94.7907%" y="629" width="0.0127%" height="15" fill="rgb(207,36,27)" fg:x="30005014235" fg:w="4012036"/><text x="95.0407%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (4,012,036 samples, 0.01%)</title><rect x="94.7907%" y="613" width="0.0127%" height="15" fill="rgb(217,90,24)" fg:x="30005014235" fg:w="4012036"/><text x="95.0407%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,085,255,738 samples, 3.43%)</title><rect x="91.3907%" y="725" width="3.4285%" height="15" fill="rgb(224,66,35)" fg:x="28928785578" fg:w="1085255738"/><text x="91.6407%" y="735.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (710,130,372 samples, 2.24%)</title><rect x="92.5758%" y="709" width="2.2434%" height="15" fill="rgb(221,13,50)" fg:x="29303910944" fg:w="710130372"/><text x="92.8258%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (690,070,192 samples, 2.18%)</title><rect x="92.6392%" y="693" width="2.1800%" height="15" fill="rgb(236,68,49)" fg:x="29323971124" fg:w="690070192"/><text x="92.8892%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (591,775,310 samples, 1.87%)</title><rect x="92.9497%" y="677" width="1.8695%" height="15" fill="rgb(229,146,28)" fg:x="29422266006" fg:w="591775310"/><text x="93.1997%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (9,027,081 samples, 0.03%)</title><rect x="94.7907%" y="661" width="0.0285%" height="15" fill="rgb(225,31,38)" fg:x="30005014235" fg:w="9027081"/><text x="95.0407%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.03%)</title><rect x="94.7907%" y="645" width="0.0285%" height="15" fill="rgb(250,208,3)" fg:x="30005014235" fg:w="9027081"/><text x="95.0407%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5,015,045 samples, 0.02%)</title><rect x="94.8034%" y="629" width="0.0158%" height="15" fill="rgb(246,54,23)" fg:x="30009026271" fg:w="5015045"/><text x="95.0534%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,021,063 samples, 0.02%)</title><rect x="94.8192%" y="693" width="0.0222%" height="15" fill="rgb(243,76,11)" fg:x="30014041316" fg:w="7021063"/><text x="95.0692%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (7,021,063 samples, 0.02%)</title><rect x="94.8192%" y="677" width="0.0222%" height="15" fill="rgb(245,21,50)" fg:x="30014041316" fg:w="7021063"/><text x="95.0692%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,856,569,659 samples, 5.87%)</title><rect x="89.0111%" y="789" width="5.8652%" height="15" fill="rgb(228,9,43)" fg:x="28175525819" fg:w="1856569659"/><text x="89.2611%" y="799.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (1,305,917,718 samples, 4.13%)</title><rect x="90.7507%" y="773" width="4.1256%" height="15" fill="rgb(208,100,47)" fg:x="28726177760" fg:w="1305917718"/><text x="91.0007%" y="783.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (1,274,824,439 samples, 4.03%)</title><rect x="90.8489%" y="757" width="4.0274%" height="15" fill="rgb(232,26,8)" fg:x="28757271039" fg:w="1274824439"/><text x="91.0989%" y="767.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (1,124,373,089 samples, 3.55%)</title><rect x="91.3242%" y="741" width="3.5521%" height="15" fill="rgb(216,166,38)" fg:x="28907722389" fg:w="1124373089"/><text x="91.5742%" y="751.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (18,054,162 samples, 0.06%)</title><rect x="94.8192%" y="725" width="0.0570%" height="15" fill="rgb(251,202,51)" fg:x="30014041316" fg:w="18054162"/><text x="95.0692%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,054,162 samples, 0.06%)</title><rect x="94.8192%" y="709" width="0.0570%" height="15" fill="rgb(254,216,34)" fg:x="30014041316" fg:w="18054162"/><text x="95.0692%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11,033,099 samples, 0.03%)</title><rect x="94.8414%" y="693" width="0.0349%" height="15" fill="rgb(251,32,27)" fg:x="30021062379" fg:w="11033099"/><text x="95.0914%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,036,108 samples, 0.04%)</title><rect x="94.8763%" y="757" width="0.0380%" height="15" fill="rgb(208,127,28)" fg:x="30032095478" fg:w="12036108"/><text x="95.1263%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (12,036,108 samples, 0.04%)</title><rect x="94.8763%" y="741" width="0.0380%" height="15" fill="rgb(224,137,22)" fg:x="30032095478" fg:w="12036108"/><text x="95.1263%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,781,343,957 samples, 8.79%)</title><rect x="86.1719%" y="853" width="8.7867%" height="15" fill="rgb(254,70,32)" fg:x="27276829755" fg:w="2781343957"/><text x="86.4219%" y="863.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (2,166,499,440 samples, 6.84%)</title><rect x="88.1143%" y="837" width="6.8443%" height="15" fill="rgb(229,75,37)" fg:x="27891674272" fg:w="2166499440"/><text x="88.3643%" y="847.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (2,122,367,044 samples, 6.70%)</title><rect x="88.2537%" y="821" width="6.7049%" height="15" fill="rgb(252,64,23)" fg:x="27935806668" fg:w="2122367044"/><text x="88.5037%" y="831.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (1,904,714,091 samples, 6.02%)</title><rect x="88.9413%" y="805" width="6.0173%" height="15" fill="rgb(232,162,48)" fg:x="28153459621" fg:w="1904714091"/><text x="89.1913%" y="815.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (26,078,234 samples, 0.08%)</title><rect x="94.8763%" y="789" width="0.0824%" height="15" fill="rgb(246,160,12)" fg:x="30032095478" fg:w="26078234"/><text x="95.1263%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,078,234 samples, 0.08%)</title><rect x="94.8763%" y="773" width="0.0824%" height="15" fill="rgb(247,166,0)" fg:x="30032095478" fg:w="26078234"/><text x="95.1263%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14,042,126 samples, 0.04%)</title><rect x="94.9143%" y="757" width="0.0444%" height="15" fill="rgb(249,219,21)" fg:x="30044131586" fg:w="14042126"/><text x="95.1643%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,027,081 samples, 0.03%)</title><rect x="94.9586%" y="821" width="0.0285%" height="15" fill="rgb(205,209,3)" fg:x="30058173712" fg:w="9027081"/><text x="95.2086%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (9,027,081 samples, 0.03%)</title><rect x="94.9586%" y="805" width="0.0285%" height="15" fill="rgb(243,44,1)" fg:x="30058173712" fg:w="9027081"/><text x="95.2086%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,804,413,137 samples, 12.02%)</title><rect x="83.0191%" y="917" width="12.0188%" height="15" fill="rgb(206,159,16)" fg:x="26278835800" fg:w="3804413137"/><text x="83.2691%" y="927.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (3,192,577,647 samples, 10.09%)</title><rect x="84.9520%" y="901" width="10.0859%" height="15" fill="rgb(244,77,30)" fg:x="26890671290" fg:w="3192577647"/><text x="85.2020%" y="911.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (3,153,460,296 samples, 9.96%)</title><rect x="85.0756%" y="885" width="9.9623%" height="15" fill="rgb(218,69,12)" fg:x="26929788641" fg:w="3153460296"/><text x="85.3256%" y="895.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (2,857,572,641 samples, 9.03%)</title><rect x="86.0103%" y="869" width="9.0275%" height="15" fill="rgb(212,87,7)" fg:x="27225676296" fg:w="2857572641"/><text x="86.2603%" y="879.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (25,075,225 samples, 0.08%)</title><rect x="94.9586%" y="853" width="0.0792%" height="15" fill="rgb(245,114,25)" fg:x="30058173712" fg:w="25075225"/><text x="95.2086%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,075,225 samples, 0.08%)</title><rect x="94.9586%" y="837" width="0.0792%" height="15" fill="rgb(210,61,42)" fg:x="30058173712" fg:w="25075225"/><text x="95.2086%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16,048,144 samples, 0.05%)</title><rect x="94.9872%" y="821" width="0.0507%" height="15" fill="rgb(211,52,33)" fg:x="30067200793" fg:w="16048144"/><text x="95.2372%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19,057,171 samples, 0.06%)</title><rect x="95.0379%" y="885" width="0.0602%" height="15" fill="rgb(234,58,33)" fg:x="30083248937" fg:w="19057171"/><text x="95.2879%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (19,057,171 samples, 0.06%)</title><rect x="95.0379%" y="869" width="0.0602%" height="15" fill="rgb(220,115,36)" fg:x="30083248937" fg:w="19057171"/><text x="95.2879%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,746,238,588 samples, 14.99%)</title><rect x="80.1768%" y="981" width="14.9941%" height="15" fill="rgb(243,153,54)" fg:x="25379136727" fg:w="4746238588"/><text x="80.4268%" y="991.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (4,266,800,286 samples, 13.48%)</title><rect x="81.6914%" y="965" width="13.4795%" height="15" fill="rgb(251,47,18)" fg:x="25858575029" fg:w="4266800286"/><text x="81.9414%" y="975.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (4,228,685,944 samples, 13.36%)</title><rect x="81.8118%" y="949" width="13.3591%" height="15" fill="rgb(242,102,42)" fg:x="25896689371" fg:w="4228685944"/><text x="82.0618%" y="959.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (3,890,671,911 samples, 12.29%)</title><rect x="82.8797%" y="933" width="12.2913%" height="15" fill="rgb(234,31,38)" fg:x="26234703404" fg:w="3890671911"/><text x="83.1297%" y="943.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (42,126,378 samples, 0.13%)</title><rect x="95.0379%" y="917" width="0.1331%" height="15" fill="rgb(221,117,51)" fg:x="30083248937" fg:w="42126378"/><text x="95.2879%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,126,378 samples, 0.13%)</title><rect x="95.0379%" y="901" width="0.1331%" height="15" fill="rgb(212,20,18)" fg:x="30083248937" fg:w="42126378"/><text x="95.2879%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (23,069,207 samples, 0.07%)</title><rect x="95.0981%" y="885" width="0.0729%" height="15" fill="rgb(245,133,36)" fg:x="30102306108" fg:w="23069207"/><text x="95.3481%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,060,180 samples, 0.06%)</title><rect x="95.1709%" y="949" width="0.0634%" height="15" fill="rgb(212,6,19)" fg:x="30125375315" fg:w="20060180"/><text x="95.4209%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (20,060,180 samples, 0.06%)</title><rect x="95.1709%" y="933" width="0.0634%" height="15" fill="rgb(218,1,36)" fg:x="30125375315" fg:w="20060180"/><text x="95.4209%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,470,411,086 samples, 17.28%)</title><rect x="78.0253%" y="1045" width="17.2819%" height="15" fill="rgb(246,84,54)" fg:x="24698093616" fg:w="5470411086"/><text x="78.2753%" y="1055.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (5,173,520,422 samples, 16.34%)</title><rect x="78.9632%" y="1029" width="16.3440%" height="15" fill="rgb(242,110,6)" fg:x="24994984280" fg:w="5173520422"/><text x="79.2132%" y="1039.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (5,147,442,188 samples, 16.26%)</title><rect x="79.0456%" y="1013" width="16.2616%" height="15" fill="rgb(214,47,5)" fg:x="25021062514" fg:w="5147442188"/><text x="79.2956%" y="1023.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (4,828,485,326 samples, 15.25%)</title><rect x="80.0532%" y="997" width="15.2540%" height="15" fill="rgb(218,159,25)" fg:x="25340019376" fg:w="4828485326"/><text x="80.3032%" y="1007.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (43,129,387 samples, 0.14%)</title><rect x="95.1709%" y="981" width="0.1363%" height="15" fill="rgb(215,211,28)" fg:x="30125375315" fg:w="43129387"/><text x="95.4209%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,129,387 samples, 0.14%)</title><rect x="95.1709%" y="965" width="0.1363%" height="15" fill="rgb(238,59,32)" fg:x="30125375315" fg:w="43129387"/><text x="95.4209%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (23,069,207 samples, 0.07%)</title><rect x="95.2343%" y="949" width="0.0729%" height="15" fill="rgb(226,82,3)" fg:x="30145435495" fg:w="23069207"/><text x="95.4843%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,024,072 samples, 0.03%)</title><rect x="95.3072%" y="1013" width="0.0253%" height="15" fill="rgb(240,164,32)" fg:x="30168504702" fg:w="8024072"/><text x="95.5572%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (8,024,072 samples, 0.03%)</title><rect x="95.3072%" y="997" width="0.0253%" height="15" fill="rgb(232,46,7)" fg:x="30168504702" fg:w="8024072"/><text x="95.5572%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,942,828,325 samples, 18.77%)</title><rect x="76.5962%" y="1109" width="18.7744%" height="15" fill="rgb(229,129,53)" fg:x="24245736557" fg:w="5942828325"/><text x="76.8462%" y="1119.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (5,757,271,660 samples, 18.19%)</title><rect x="77.1824%" y="1093" width="18.1882%" height="15" fill="rgb(234,188,29)" fg:x="24431293222" fg:w="5757271660"/><text x="77.4324%" y="1103.50">core::ptr::drop_in_place&lt;[ch..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (5,743,229,534 samples, 18.14%)</title><rect x="77.2268%" y="1077" width="18.1438%" height="15" fill="rgb(246,141,4)" fg:x="24445335348" fg:w="5743229534"/><text x="77.4768%" y="1087.50">core::ptr::drop_in_place&lt;chl..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (5,514,543,482 samples, 17.42%)</title><rect x="77.9492%" y="1061" width="17.4213%" height="15" fill="rgb(229,23,39)" fg:x="24674021400" fg:w="5514543482"/><text x="78.1992%" y="1071.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (20,060,180 samples, 0.06%)</title><rect x="95.3072%" y="1045" width="0.0634%" height="15" fill="rgb(206,12,3)" fg:x="30168504702" fg:w="20060180"/><text x="95.5572%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.06%)</title><rect x="95.3072%" y="1029" width="0.0634%" height="15" fill="rgb(252,226,20)" fg:x="30168504702" fg:w="20060180"/><text x="95.5572%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12,036,108 samples, 0.04%)</title><rect x="95.3326%" y="1013" width="0.0380%" height="15" fill="rgb(216,123,35)" fg:x="30176528774" fg:w="12036108"/><text x="95.5826%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,021,063 samples, 0.02%)</title><rect x="95.3706%" y="1077" width="0.0222%" height="15" fill="rgb(212,68,40)" fg:x="30188564882" fg:w="7021063"/><text x="95.6206%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (7,021,063 samples, 0.02%)</title><rect x="95.3706%" y="1061" width="0.0222%" height="15" fill="rgb(254,125,32)" fg:x="30188564882" fg:w="7021063"/><text x="95.6206%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,165,496,323 samples, 19.48%)</title><rect x="75.9340%" y="1173" width="19.4778%" height="15" fill="rgb(253,97,22)" fg:x="24036107676" fg:w="6165496323"/><text x="76.1840%" y="1183.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (6,101,303,747 samples, 19.28%)</title><rect x="76.1368%" y="1157" width="19.2750%" height="15" fill="rgb(241,101,14)" fg:x="24100300252" fg:w="6101303747"/><text x="76.3868%" y="1167.50">core::ptr::drop_in_place&lt;[chla..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (6,095,285,693 samples, 19.26%)</title><rect x="76.1558%" y="1141" width="19.2560%" height="15" fill="rgb(238,103,29)" fg:x="24106318306" fg:w="6095285693"/><text x="76.4058%" y="1151.50">core::ptr::drop_in_place&lt;chlan..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (5,974,924,613 samples, 18.88%)</title><rect x="76.5360%" y="1125" width="18.8758%" height="15" fill="rgb(233,195,47)" fg:x="24226679386" fg:w="5974924613"/><text x="76.7860%" y="1135.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (13,039,117 samples, 0.04%)</title><rect x="95.3706%" y="1109" width="0.0412%" height="15" fill="rgb(246,218,30)" fg:x="30188564882" fg:w="13039117"/><text x="95.6206%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,039,117 samples, 0.04%)</title><rect x="95.3706%" y="1093" width="0.0412%" height="15" fill="rgb(219,145,47)" fg:x="30188564882" fg:w="13039117"/><text x="95.6206%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6,018,054 samples, 0.02%)</title><rect x="95.3928%" y="1077" width="0.0190%" height="15" fill="rgb(243,12,26)" fg:x="30195585945" fg:w="6018054"/><text x="95.6428%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.02%)</title><rect x="95.4118%" y="1141" width="0.0158%" height="15" fill="rgb(214,87,16)" fg:x="30201603999" fg:w="5015045"/><text x="95.6618%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.02%)</title><rect x="95.4118%" y="1125" width="0.0158%" height="15" fill="rgb(208,99,42)" fg:x="30201603999" fg:w="5015045"/><text x="95.6618%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,306,920,592 samples, 19.92%)</title><rect x="75.5284%" y="1237" width="19.9246%" height="15" fill="rgb(253,99,2)" fg:x="23907722524" fg:w="6306920592"/><text x="75.7784%" y="1247.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (6,279,839,349 samples, 19.84%)</title><rect x="75.6139%" y="1221" width="19.8390%" height="15" fill="rgb(220,168,23)" fg:x="23934803767" fg:w="6279839349"/><text x="75.8639%" y="1231.50">core::ptr::drop_in_place&lt;[chlan..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (6,275,827,313 samples, 19.83%)</title><rect x="75.6266%" y="1205" width="19.8264%" height="15" fill="rgb(242,38,24)" fg:x="23938815803" fg:w="6275827313"/><text x="75.8766%" y="1215.50">core::ptr::drop_in_place&lt;chlang..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (6,183,550,485 samples, 19.53%)</title><rect x="75.9181%" y="1189" width="19.5348%" height="15" fill="rgb(225,182,9)" fg:x="24031092631" fg:w="6183550485"/><text x="76.1681%" y="1199.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (13,039,117 samples, 0.04%)</title><rect x="95.4118%" y="1173" width="0.0412%" height="15" fill="rgb(243,178,37)" fg:x="30201603999" fg:w="13039117"/><text x="95.6618%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,039,117 samples, 0.04%)</title><rect x="95.4118%" y="1157" width="0.0412%" height="15" fill="rgb(232,139,19)" fg:x="30201603999" fg:w="13039117"/><text x="95.6618%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8,024,072 samples, 0.03%)</title><rect x="95.4276%" y="1141" width="0.0253%" height="15" fill="rgb(225,201,24)" fg:x="30206619044" fg:w="8024072"/><text x="95.6776%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,373,119,186 samples, 20.13%)</title><rect x="75.3414%" y="1301" width="20.1337%" height="15" fill="rgb(221,47,46)" fg:x="23848544993" fg:w="6373119186"/><text x="75.5914%" y="1311.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (6,357,071,042 samples, 20.08%)</title><rect x="75.3921%" y="1285" width="20.0830%" height="15" fill="rgb(249,23,13)" fg:x="23864593137" fg:w="6357071042"/><text x="75.6421%" y="1295.50">core::ptr::drop_in_place&lt;[chlang..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (6,356,068,033 samples, 20.08%)</title><rect x="75.3953%" y="1269" width="20.0799%" height="15" fill="rgb(219,9,5)" fg:x="23865596146" fg:w="6356068033"/><text x="75.6453%" y="1279.50">core::ptr::drop_in_place&lt;chlang:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (6,323,971,745 samples, 19.98%)</title><rect x="75.4967%" y="1253" width="19.9785%" height="15" fill="rgb(254,171,16)" fg:x="23897692434" fg:w="6323971745"/><text x="75.7467%" y="1263.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (7,021,063 samples, 0.02%)</title><rect x="95.4530%" y="1237" width="0.0222%" height="15" fill="rgb(230,171,20)" fg:x="30214643116" fg:w="7021063"/><text x="95.7030%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.02%)</title><rect x="95.4530%" y="1221" width="0.0222%" height="15" fill="rgb(210,71,41)" fg:x="30214643116" fg:w="7021063"/><text x="95.7030%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5,015,045 samples, 0.02%)</title><rect x="95.4593%" y="1205" width="0.0158%" height="15" fill="rgb(206,173,20)" fg:x="30216649134" fg:w="5015045"/><text x="95.7093%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,401,203,438 samples, 20.22%)</title><rect x="75.2622%" y="1365" width="20.2224%" height="15" fill="rgb(233,88,34)" fg:x="23823469768" fg:w="6401203438"/><text x="75.5122%" y="1375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (6,393,179,366 samples, 20.20%)</title><rect x="75.2876%" y="1349" width="20.1971%" height="15" fill="rgb(223,209,46)" fg:x="23831493840" fg:w="6393179366"/><text x="75.5376%" y="1359.50">core::ptr::drop_in_place&lt;[chlang..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (6,393,179,366 samples, 20.20%)</title><rect x="75.2876%" y="1333" width="20.1971%" height="15" fill="rgb(250,43,18)" fg:x="23831493840" fg:w="6393179366"/><text x="75.5376%" y="1343.50">core::ptr::drop_in_place&lt;chlang:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (6,379,137,240 samples, 20.15%)</title><rect x="75.3319%" y="1317" width="20.1527%" height="15" fill="rgb(208,13,10)" fg:x="23845535966" fg:w="6379137240"/><text x="75.5819%" y="1327.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,411,233,528 samples, 20.25%)</title><rect x="75.2369%" y="1429" width="20.2541%" height="15" fill="rgb(212,200,36)" fg:x="23815445696" fg:w="6411233528"/><text x="75.4869%" y="1439.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (6,410,230,519 samples, 20.25%)</title><rect x="75.2400%" y="1413" width="20.2510%" height="15" fill="rgb(225,90,30)" fg:x="23816448705" fg:w="6410230519"/><text x="75.4900%" y="1423.50">core::ptr::drop_in_place&lt;[chlang..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (6,410,230,519 samples, 20.25%)</title><rect x="75.2400%" y="1397" width="20.2510%" height="15" fill="rgb(236,182,39)" fg:x="23816448705" fg:w="6410230519"/><text x="75.4900%" y="1407.50">core::ptr::drop_in_place&lt;chlang:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (6,403,209,456 samples, 20.23%)</title><rect x="75.2622%" y="1381" width="20.2288%" height="15" fill="rgb(212,144,35)" fg:x="23823469768" fg:w="6403209456"/><text x="75.5122%" y="1391.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,413,239,546 samples, 20.26%)</title><rect x="75.2337%" y="1557" width="20.2605%" height="15" fill="rgb(228,63,44)" fg:x="23814442687" fg:w="6413239546"/><text x="75.4837%" y="1567.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (6,413,239,546 samples, 20.26%)</title><rect x="75.2337%" y="1541" width="20.2605%" height="15" fill="rgb(228,109,6)" fg:x="23814442687" fg:w="6413239546"/><text x="75.4837%" y="1551.50">core::ptr::drop_in_place&lt;[chlang..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (6,413,239,546 samples, 20.26%)</title><rect x="75.2337%" y="1525" width="20.2605%" height="15" fill="rgb(238,117,24)" fg:x="23814442687" fg:w="6413239546"/><text x="75.4837%" y="1535.50">core::ptr::drop_in_place&lt;chlang:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (6,413,239,546 samples, 20.26%)</title><rect x="75.2337%" y="1509" width="20.2605%" height="15" fill="rgb(242,26,26)" fg:x="23814442687" fg:w="6413239546"/><text x="75.4837%" y="1519.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,413,239,546 samples, 20.26%)</title><rect x="75.2337%" y="1493" width="20.2605%" height="15" fill="rgb(221,92,48)" fg:x="23814442687" fg:w="6413239546"/><text x="75.4837%" y="1503.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[chlang::board::Board]&gt; (6,413,239,546 samples, 20.26%)</title><rect x="75.2337%" y="1477" width="20.2605%" height="15" fill="rgb(209,209,32)" fg:x="23814442687" fg:w="6413239546"/><text x="75.4837%" y="1487.50">core::ptr::drop_in_place&lt;[chlang..</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (6,413,239,546 samples, 20.26%)</title><rect x="75.2337%" y="1461" width="20.2605%" height="15" fill="rgb(221,70,22)" fg:x="23814442687" fg:w="6413239546"/><text x="75.4837%" y="1471.50">core::ptr::drop_in_place&lt;chlang:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (6,412,236,537 samples, 20.26%)</title><rect x="75.2369%" y="1445" width="20.2573%" height="15" fill="rgb(248,145,5)" fg:x="23815445696" fg:w="6412236537"/><text x="75.4869%" y="1455.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>chlang::board::Board::unmake_last (7,249,749,052 samples, 22.90%)</title><rect x="75.2337%" y="1605" width="22.9031%" height="15" fill="rgb(226,116,26)" fg:x="23814442687" fg:w="7249749052"/><text x="75.4837%" y="1615.50">chlang::board::Board::unmake_last</text></g><g><title>core::ptr::drop_in_place&lt;chlang::board::Board&gt; (7,249,749,052 samples, 22.90%)</title><rect x="75.2337%" y="1589" width="22.9031%" height="15" fill="rgb(244,5,17)" fg:x="23814442687" fg:w="7249749052"/><text x="75.4837%" y="1599.50">core::ptr::drop_in_place&lt;chlang::boa..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chlang::board::Board&gt;&gt; (7,249,749,052 samples, 22.90%)</title><rect x="75.2337%" y="1573" width="22.9031%" height="15" fill="rgb(252,159,33)" fg:x="23814442687" fg:w="7249749052"/><text x="75.4837%" y="1583.50">core::ptr::drop_in_place&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chlang::board::Board&gt;&gt; (836,509,506 samples, 2.64%)</title><rect x="95.4942%" y="1557" width="2.6427%" height="15" fill="rgb(206,71,0)" fg:x="30227682233" fg:w="836509506"/><text x="95.7442%" y="1567.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (836,509,506 samples, 2.64%)</title><rect x="95.4942%" y="1541" width="2.6427%" height="15" fill="rgb(233,118,54)" fg:x="30227682233" fg:w="836509506"/><text x="95.7442%" y="1551.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (836,509,506 samples, 2.64%)</title><rect x="95.4942%" y="1525" width="2.6427%" height="15" fill="rgb(234,83,48)" fg:x="30227682233" fg:w="836509506"/><text x="95.7442%" y="1535.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (836,509,506 samples, 2.64%)</title><rect x="95.4942%" y="1509" width="2.6427%" height="15" fill="rgb(228,3,54)" fg:x="30227682233" fg:w="836509506"/><text x="95.7442%" y="1519.50">al..</text></g><g><title>__GI___libc_free (836,509,506 samples, 2.64%)</title><rect x="95.4942%" y="1493" width="2.6427%" height="15" fill="rgb(226,155,13)" fg:x="30227682233" fg:w="836509506"/><text x="95.7442%" y="1503.50">__..</text></g><g><title>_int_free (836,509,506 samples, 2.64%)</title><rect x="95.4942%" y="1477" width="2.6427%" height="15" fill="rgb(241,28,37)" fg:x="30227682233" fg:w="836509506"/><text x="95.7442%" y="1487.50">_i..</text></g><g><title>malloc_consolidate (836,509,506 samples, 2.64%)</title><rect x="95.4942%" y="1461" width="2.6427%" height="15" fill="rgb(233,93,10)" fg:x="30227682233" fg:w="836509506"/><text x="95.7442%" y="1471.50">ma..</text></g><g><title>unlink_chunk (682,046,120 samples, 2.15%)</title><rect x="95.9821%" y="1445" width="2.1547%" height="15" fill="rgb(225,113,19)" fg:x="30382145619" fg:w="682046120"/><text x="96.2321%" y="1455.50">u..</text></g><g><title>chlang::board::Board::get_game_state (31,065,194,748 samples, 98.14%)</title><rect x="0.0000%" y="1637" width="98.1400%" height="15" fill="rgb(241,2,18)" fg:x="0" fg:w="31065194748"/><text x="0.2500%" y="1647.50">chlang::board::Board::get_game_state</text></g><g><title>chlang::board::Board::get_valid_moves (31,065,194,748 samples, 98.14%)</title><rect x="0.0000%" y="1621" width="98.1400%" height="15" fill="rgb(228,207,21)" fg:x="0" fg:w="31065194748"/><text x="0.2500%" y="1631.50">chlang::board::Board::get_valid_moves</text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (8,024,072 samples, 0.03%)</title><rect x="98.6406%" y="341" width="0.0253%" height="15" fill="rgb(213,211,35)" fg:x="31223670170" fg:w="8024072"/><text x="98.8906%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,030,090 samples, 0.03%)</title><rect x="98.6406%" y="405" width="0.0317%" height="15" fill="rgb(209,83,10)" fg:x="31223670170" fg:w="10030090"/><text x="98.8906%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,030,090 samples, 0.03%)</title><rect x="98.6406%" y="389" width="0.0317%" height="15" fill="rgb(209,164,1)" fg:x="31223670170" fg:w="10030090"/><text x="98.8906%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (10,030,090 samples, 0.03%)</title><rect x="98.6406%" y="373" width="0.0317%" height="15" fill="rgb(213,184,43)" fg:x="31223670170" fg:w="10030090"/><text x="98.8906%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,030,090 samples, 0.03%)</title><rect x="98.6406%" y="357" width="0.0317%" height="15" fill="rgb(231,61,34)" fg:x="31223670170" fg:w="10030090"/><text x="98.8906%" y="367.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (6,018,054 samples, 0.02%)</title><rect x="98.6723%" y="405" width="0.0190%" height="15" fill="rgb(235,75,3)" fg:x="31233700260" fg:w="6018054"/><text x="98.9223%" y="415.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (23,069,207 samples, 0.07%)</title><rect x="98.6248%" y="421" width="0.0729%" height="15" fill="rgb(220,106,47)" fg:x="31218655125" fg:w="23069207"/><text x="98.8748%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,090,270 samples, 0.10%)</title><rect x="98.6216%" y="485" width="0.0951%" height="15" fill="rgb(210,196,33)" fg:x="31217652116" fg:w="30090270"/><text x="98.8716%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,087,261 samples, 0.09%)</title><rect x="98.6248%" y="469" width="0.0919%" height="15" fill="rgb(229,154,42)" fg:x="31218655125" fg:w="29087261"/><text x="98.8748%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (29,087,261 samples, 0.09%)</title><rect x="98.6248%" y="453" width="0.0919%" height="15" fill="rgb(228,114,26)" fg:x="31218655125" fg:w="29087261"/><text x="98.8748%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,087,261 samples, 0.09%)</title><rect x="98.6248%" y="437" width="0.0919%" height="15" fill="rgb(208,144,1)" fg:x="31218655125" fg:w="29087261"/><text x="98.8748%" y="447.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (11,033,099 samples, 0.03%)</title><rect x="98.7167%" y="485" width="0.0349%" height="15" fill="rgb(239,112,37)" fg:x="31247742386" fg:w="11033099"/><text x="98.9667%" y="495.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (50,150,450 samples, 0.16%)</title><rect x="98.5963%" y="501" width="0.1584%" height="15" fill="rgb(210,96,50)" fg:x="31209628044" fg:w="50150450"/><text x="98.8463%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57,171,513 samples, 0.18%)</title><rect x="98.5931%" y="565" width="0.1806%" height="15" fill="rgb(222,178,2)" fg:x="31208625035" fg:w="57171513"/><text x="98.8431%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (57,171,513 samples, 0.18%)</title><rect x="98.5931%" y="549" width="0.1806%" height="15" fill="rgb(226,74,18)" fg:x="31208625035" fg:w="57171513"/><text x="98.8431%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (57,171,513 samples, 0.18%)</title><rect x="98.5931%" y="533" width="0.1806%" height="15" fill="rgb(225,67,54)" fg:x="31208625035" fg:w="57171513"/><text x="98.8431%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (57,171,513 samples, 0.18%)</title><rect x="98.5931%" y="517" width="0.1806%" height="15" fill="rgb(251,92,32)" fg:x="31208625035" fg:w="57171513"/><text x="98.8431%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.02%)</title><rect x="98.7579%" y="501" width="0.0158%" height="15" fill="rgb(228,149,22)" fg:x="31260781503" fg:w="5015045"/><text x="99.0079%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,015,045 samples, 0.02%)</title><rect x="98.7579%" y="485" width="0.0158%" height="15" fill="rgb(243,54,13)" fg:x="31260781503" fg:w="5015045"/><text x="99.0079%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5,015,045 samples, 0.02%)</title><rect x="98.7579%" y="469" width="0.0158%" height="15" fill="rgb(243,180,28)" fg:x="31260781503" fg:w="5015045"/><text x="99.0079%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.02%)</title><rect x="98.7579%" y="453" width="0.0158%" height="15" fill="rgb(208,167,24)" fg:x="31260781503" fg:w="5015045"/><text x="99.0079%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.02%)</title><rect x="98.7579%" y="437" width="0.0158%" height="15" fill="rgb(245,73,45)" fg:x="31260781503" fg:w="5015045"/><text x="99.0079%" y="447.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.02%)</title><rect x="98.7579%" y="421" width="0.0158%" height="15" fill="rgb(237,203,48)" fg:x="31260781503" fg:w="5015045"/><text x="99.0079%" y="431.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (14,042,126 samples, 0.04%)</title><rect x="98.7737%" y="565" width="0.0444%" height="15" fill="rgb(211,197,16)" fg:x="31265796548" fg:w="14042126"/><text x="99.0237%" y="575.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (85,255,765 samples, 0.27%)</title><rect x="98.5519%" y="581" width="0.2693%" height="15" fill="rgb(243,99,51)" fg:x="31195585918" fg:w="85255765"/><text x="98.8019%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.03%)</title><rect x="98.8276%" y="581" width="0.0253%" height="15" fill="rgb(215,123,29)" fg:x="31282847701" fg:w="8024072"/><text x="99.0776%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.03%)</title><rect x="98.8276%" y="565" width="0.0253%" height="15" fill="rgb(239,186,37)" fg:x="31282847701" fg:w="8024072"/><text x="99.0776%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8,024,072 samples, 0.03%)</title><rect x="98.8276%" y="549" width="0.0253%" height="15" fill="rgb(252,136,39)" fg:x="31282847701" fg:w="8024072"/><text x="99.0776%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,024,072 samples, 0.03%)</title><rect x="98.8276%" y="533" width="0.0253%" height="15" fill="rgb(223,213,32)" fg:x="31282847701" fg:w="8024072"/><text x="99.0776%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,024,072 samples, 0.03%)</title><rect x="98.8276%" y="517" width="0.0253%" height="15" fill="rgb(233,115,5)" fg:x="31282847701" fg:w="8024072"/><text x="99.0776%" y="527.50"></text></g><g><title>alloc::alloc::alloc (8,024,072 samples, 0.03%)</title><rect x="98.8276%" y="501" width="0.0253%" height="15" fill="rgb(207,226,44)" fg:x="31282847701" fg:w="8024072"/><text x="99.0776%" y="511.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.03%)</title><rect x="98.8276%" y="485" width="0.0253%" height="15" fill="rgb(208,126,0)" fg:x="31282847701" fg:w="8024072"/><text x="99.0776%" y="495.50"></text></g><g><title>_int_malloc (7,021,063 samples, 0.02%)</title><rect x="98.8308%" y="469" width="0.0222%" height="15" fill="rgb(244,66,21)" fg:x="31283850710" fg:w="7021063"/><text x="99.0808%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98,294,882 samples, 0.31%)</title><rect x="98.5456%" y="645" width="0.3105%" height="15" fill="rgb(222,97,12)" fg:x="31193579900" fg:w="98294882"/><text x="98.7956%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (97,291,873 samples, 0.31%)</title><rect x="98.5487%" y="629" width="0.3074%" height="15" fill="rgb(219,213,19)" fg:x="31194582909" fg:w="97291873"/><text x="98.7987%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (97,291,873 samples, 0.31%)</title><rect x="98.5487%" y="613" width="0.3074%" height="15" fill="rgb(252,169,30)" fg:x="31194582909" fg:w="97291873"/><text x="98.7987%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (97,291,873 samples, 0.31%)</title><rect x="98.5487%" y="597" width="0.3074%" height="15" fill="rgb(206,32,51)" fg:x="31194582909" fg:w="97291873"/><text x="98.7987%" y="607.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (18,054,162 samples, 0.06%)</title><rect x="98.8561%" y="645" width="0.0570%" height="15" fill="rgb(250,172,42)" fg:x="31291874782" fg:w="18054162"/><text x="99.1061%" y="655.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (138,415,242 samples, 0.44%)</title><rect x="98.4885%" y="661" width="0.4373%" height="15" fill="rgb(209,34,43)" fg:x="31175525738" fg:w="138415242"/><text x="98.7385%" y="671.50"></text></g><g><title>_int_malloc (11,033,099 samples, 0.03%)</title><rect x="98.9290%" y="549" width="0.0349%" height="15" fill="rgb(223,11,35)" fg:x="31314943989" fg:w="11033099"/><text x="99.1790%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14,042,126 samples, 0.04%)</title><rect x="98.9258%" y="661" width="0.0444%" height="15" fill="rgb(251,219,26)" fg:x="31313940980" fg:w="14042126"/><text x="99.1758%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14,042,126 samples, 0.04%)</title><rect x="98.9258%" y="645" width="0.0444%" height="15" fill="rgb(231,119,3)" fg:x="31313940980" fg:w="14042126"/><text x="99.1758%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (14,042,126 samples, 0.04%)</title><rect x="98.9258%" y="629" width="0.0444%" height="15" fill="rgb(216,97,11)" fg:x="31313940980" fg:w="14042126"/><text x="99.1758%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14,042,126 samples, 0.04%)</title><rect x="98.9258%" y="613" width="0.0444%" height="15" fill="rgb(223,59,9)" fg:x="31313940980" fg:w="14042126"/><text x="99.1758%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14,042,126 samples, 0.04%)</title><rect x="98.9258%" y="597" width="0.0444%" height="15" fill="rgb(233,93,31)" fg:x="31313940980" fg:w="14042126"/><text x="99.1758%" y="607.50"></text></g><g><title>alloc::alloc::alloc (14,042,126 samples, 0.04%)</title><rect x="98.9258%" y="581" width="0.0444%" height="15" fill="rgb(239,81,33)" fg:x="31313940980" fg:w="14042126"/><text x="99.1758%" y="591.50"></text></g><g><title>__GI___libc_malloc (14,042,126 samples, 0.04%)</title><rect x="98.9258%" y="565" width="0.0444%" height="15" fill="rgb(213,120,34)" fg:x="31313940980" fg:w="14042126"/><text x="99.1758%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (159,478,431 samples, 0.50%)</title><rect x="98.4822%" y="725" width="0.5038%" height="15" fill="rgb(243,49,53)" fg:x="31173519720" fg:w="159478431"/><text x="98.7322%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (157,472,413 samples, 0.50%)</title><rect x="98.4885%" y="709" width="0.4975%" height="15" fill="rgb(247,216,33)" fg:x="31175525738" fg:w="157472413"/><text x="98.7385%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (157,472,413 samples, 0.50%)</title><rect x="98.4885%" y="693" width="0.4975%" height="15" fill="rgb(226,26,14)" fg:x="31175525738" fg:w="157472413"/><text x="98.7385%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (157,472,413 samples, 0.50%)</title><rect x="98.4885%" y="677" width="0.4975%" height="15" fill="rgb(215,49,53)" fg:x="31175525738" fg:w="157472413"/><text x="98.7385%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5,015,045 samples, 0.02%)</title><rect x="98.9702%" y="661" width="0.0158%" height="15" fill="rgb(245,162,40)" fg:x="31327983106" fg:w="5015045"/><text x="99.2202%" y="671.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (22,066,198 samples, 0.07%)</title><rect x="98.9860%" y="725" width="0.0697%" height="15" fill="rgb(229,68,17)" fg:x="31332998151" fg:w="22066198"/><text x="99.2360%" y="735.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (205,616,845 samples, 0.65%)</title><rect x="98.4125%" y="741" width="0.6496%" height="15" fill="rgb(213,182,10)" fg:x="31151453522" fg:w="205616845"/><text x="98.6625%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19,057,171 samples, 0.06%)</title><rect x="99.0621%" y="741" width="0.0602%" height="15" fill="rgb(245,125,30)" fg:x="31357070367" fg:w="19057171"/><text x="99.3121%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19,057,171 samples, 0.06%)</title><rect x="99.0621%" y="725" width="0.0602%" height="15" fill="rgb(232,202,2)" fg:x="31357070367" fg:w="19057171"/><text x="99.3121%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (19,057,171 samples, 0.06%)</title><rect x="99.0621%" y="709" width="0.0602%" height="15" fill="rgb(237,140,51)" fg:x="31357070367" fg:w="19057171"/><text x="99.3121%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18,054,162 samples, 0.06%)</title><rect x="99.0652%" y="693" width="0.0570%" height="15" fill="rgb(236,157,25)" fg:x="31358073376" fg:w="18054162"/><text x="99.3152%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18,054,162 samples, 0.06%)</title><rect x="99.0652%" y="677" width="0.0570%" height="15" fill="rgb(219,209,0)" fg:x="31358073376" fg:w="18054162"/><text x="99.3152%" y="687.50"></text></g><g><title>alloc::alloc::alloc (18,054,162 samples, 0.06%)</title><rect x="99.0652%" y="661" width="0.0570%" height="15" fill="rgb(240,116,54)" fg:x="31358073376" fg:w="18054162"/><text x="99.3152%" y="671.50"></text></g><g><title>__GI___libc_malloc (16,048,144 samples, 0.05%)</title><rect x="99.0716%" y="645" width="0.0507%" height="15" fill="rgb(216,10,36)" fg:x="31360079394" fg:w="16048144"/><text x="99.3216%" y="655.50"></text></g><g><title>_int_malloc (15,045,135 samples, 0.05%)</title><rect x="99.0747%" y="629" width="0.0475%" height="15" fill="rgb(222,72,44)" fg:x="31361082403" fg:w="15045135"/><text x="99.3247%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (229,689,061 samples, 0.73%)</title><rect x="98.4093%" y="805" width="0.7256%" height="15" fill="rgb(232,159,9)" fg:x="31150450513" fg:w="229689061"/><text x="98.6593%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (228,686,052 samples, 0.72%)</title><rect x="98.4125%" y="789" width="0.7225%" height="15" fill="rgb(210,39,32)" fg:x="31151453522" fg:w="228686052"/><text x="98.6625%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (228,686,052 samples, 0.72%)</title><rect x="98.4125%" y="773" width="0.7225%" height="15" fill="rgb(216,194,45)" fg:x="31151453522" fg:w="228686052"/><text x="98.6625%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (228,686,052 samples, 0.72%)</title><rect x="98.4125%" y="757" width="0.7225%" height="15" fill="rgb(218,18,35)" fg:x="31151453522" fg:w="228686052"/><text x="98.6625%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4,012,036 samples, 0.01%)</title><rect x="99.1223%" y="741" width="0.0127%" height="15" fill="rgb(207,83,51)" fg:x="31376127538" fg:w="4012036"/><text x="99.3723%" y="751.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (12,036,108 samples, 0.04%)</title><rect x="99.1350%" y="805" width="0.0380%" height="15" fill="rgb(225,63,43)" fg:x="31380139574" fg:w="12036108"/><text x="99.3850%" y="815.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (8,024,072 samples, 0.03%)</title><rect x="99.1730%" y="805" width="0.0253%" height="15" fill="rgb(207,57,36)" fg:x="31392175682" fg:w="8024072"/><text x="99.4230%" y="815.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (8,024,072 samples, 0.03%)</title><rect x="99.1730%" y="789" width="0.0253%" height="15" fill="rgb(216,99,33)" fg:x="31392175682" fg:w="8024072"/><text x="99.4230%" y="799.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (271,815,439 samples, 0.86%)</title><rect x="98.3428%" y="821" width="0.8587%" height="15" fill="rgb(225,42,16)" fg:x="31129387324" fg:w="271815439"/><text x="98.5928%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="821" width="0.0349%" height="15" fill="rgb(220,201,45)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="805" width="0.0349%" height="15" fill="rgb(225,33,4)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="789" width="0.0349%" height="15" fill="rgb(224,33,50)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="773" width="0.0349%" height="15" fill="rgb(246,198,51)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="757" width="0.0349%" height="15" fill="rgb(205,22,4)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="767.50"></text></g><g><title>alloc::alloc::alloc (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="741" width="0.0349%" height="15" fill="rgb(206,3,8)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="751.50"></text></g><g><title>__GI___libc_malloc (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="725" width="0.0349%" height="15" fill="rgb(251,23,15)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="735.50"></text></g><g><title>_int_malloc (11,033,099 samples, 0.03%)</title><rect x="99.2015%" y="709" width="0.0349%" height="15" fill="rgb(252,88,28)" fg:x="31401202763" fg:w="11033099"/><text x="99.4515%" y="719.50"></text></g><g><title>tcache_put (4,012,036 samples, 0.01%)</title><rect x="99.2237%" y="693" width="0.0127%" height="15" fill="rgb(212,127,14)" fg:x="31408223826" fg:w="4012036"/><text x="99.4737%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (286,860,574 samples, 0.91%)</title><rect x="98.3364%" y="885" width="0.9062%" height="15" fill="rgb(247,145,37)" fg:x="31127381306" fg:w="286860574"/><text x="98.5864%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (285,857,565 samples, 0.90%)</title><rect x="98.3396%" y="869" width="0.9031%" height="15" fill="rgb(209,117,53)" fg:x="31128384315" fg:w="285857565"/><text x="98.5896%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (285,857,565 samples, 0.90%)</title><rect x="98.3396%" y="853" width="0.9031%" height="15" fill="rgb(212,90,42)" fg:x="31128384315" fg:w="285857565"/><text x="98.5896%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (285,857,565 samples, 0.90%)</title><rect x="98.3396%" y="837" width="0.9031%" height="15" fill="rgb(218,164,37)" fg:x="31128384315" fg:w="285857565"/><text x="98.5896%" y="847.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (19,057,171 samples, 0.06%)</title><rect x="99.2427%" y="885" width="0.0602%" height="15" fill="rgb(246,65,34)" fg:x="31414241880" fg:w="19057171"/><text x="99.4927%" y="895.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (332,998,988 samples, 1.05%)</title><rect x="98.2699%" y="901" width="1.0520%" height="15" fill="rgb(231,100,33)" fg:x="31106318117" fg:w="332998988"/><text x="98.5199%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (343,029,078 samples, 1.08%)</title><rect x="98.2636%" y="965" width="1.0837%" height="15" fill="rgb(228,126,14)" fg:x="31104312099" fg:w="343029078"/><text x="98.5136%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (342,026,069 samples, 1.08%)</title><rect x="98.2667%" y="949" width="1.0805%" height="15" fill="rgb(215,173,21)" fg:x="31105315108" fg:w="342026069"/><text x="98.5167%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (342,026,069 samples, 1.08%)</title><rect x="98.2667%" y="933" width="1.0805%" height="15" fill="rgb(210,6,40)" fg:x="31105315108" fg:w="342026069"/><text x="98.5167%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (342,026,069 samples, 1.08%)</title><rect x="98.2667%" y="917" width="1.0805%" height="15" fill="rgb(212,48,18)" fg:x="31105315108" fg:w="342026069"/><text x="98.5167%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.03%)</title><rect x="99.3219%" y="901" width="0.0253%" height="15" fill="rgb(230,214,11)" fg:x="31439317105" fg:w="8024072"/><text x="99.5719%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.03%)</title><rect x="99.3219%" y="885" width="0.0253%" height="15" fill="rgb(254,105,39)" fg:x="31439317105" fg:w="8024072"/><text x="99.5719%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8,024,072 samples, 0.03%)</title><rect x="99.3219%" y="869" width="0.0253%" height="15" fill="rgb(245,158,5)" fg:x="31439317105" fg:w="8024072"/><text x="99.5719%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,024,072 samples, 0.03%)</title><rect x="99.3219%" y="853" width="0.0253%" height="15" fill="rgb(249,208,11)" fg:x="31439317105" fg:w="8024072"/><text x="99.5719%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,024,072 samples, 0.03%)</title><rect x="99.3219%" y="837" width="0.0253%" height="15" fill="rgb(210,39,28)" fg:x="31439317105" fg:w="8024072"/><text x="99.5719%" y="847.50"></text></g><g><title>alloc::alloc::alloc (8,024,072 samples, 0.03%)</title><rect x="99.3219%" y="821" width="0.0253%" height="15" fill="rgb(211,56,53)" fg:x="31439317105" fg:w="8024072"/><text x="99.5719%" y="831.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.03%)</title><rect x="99.3219%" y="805" width="0.0253%" height="15" fill="rgb(226,201,30)" fg:x="31439317105" fg:w="8024072"/><text x="99.5719%" y="815.50"></text></g><g><title>_int_malloc (6,018,054 samples, 0.02%)</title><rect x="99.3282%" y="789" width="0.0190%" height="15" fill="rgb(239,101,34)" fg:x="31441323123" fg:w="6018054"/><text x="99.5782%" y="799.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (8,024,072 samples, 0.03%)</title><rect x="99.3473%" y="965" width="0.0253%" height="15" fill="rgb(226,209,5)" fg:x="31447341177" fg:w="8024072"/><text x="99.5973%" y="975.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (368,104,303 samples, 1.16%)</title><rect x="98.2224%" y="981" width="1.1629%" height="15" fill="rgb(250,105,47)" fg:x="31091272982" fg:w="368104303"/><text x="98.4724%" y="991.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (4,012,036 samples, 0.01%)</title><rect x="99.3726%" y="965" width="0.0127%" height="15" fill="rgb(230,72,3)" fg:x="31455365249" fg:w="4012036"/><text x="99.6226%" y="975.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (4,012,036 samples, 0.01%)</title><rect x="99.3726%" y="949" width="0.0127%" height="15" fill="rgb(232,218,39)" fg:x="31455365249" fg:w="4012036"/><text x="99.6226%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.03%)</title><rect x="99.3884%" y="981" width="0.0285%" height="15" fill="rgb(248,166,6)" fg:x="31460380294" fg:w="9027081"/><text x="99.6384%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.03%)</title><rect x="99.3884%" y="965" width="0.0285%" height="15" fill="rgb(247,89,20)" fg:x="31460380294" fg:w="9027081"/><text x="99.6384%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (9,027,081 samples, 0.03%)</title><rect x="99.3884%" y="949" width="0.0285%" height="15" fill="rgb(248,130,54)" fg:x="31460380294" fg:w="9027081"/><text x="99.6384%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,024,072 samples, 0.03%)</title><rect x="99.3916%" y="933" width="0.0253%" height="15" fill="rgb(234,196,4)" fg:x="31461383303" fg:w="8024072"/><text x="99.6416%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,024,072 samples, 0.03%)</title><rect x="99.3916%" y="917" width="0.0253%" height="15" fill="rgb(250,143,31)" fg:x="31461383303" fg:w="8024072"/><text x="99.6416%" y="927.50"></text></g><g><title>alloc::alloc::alloc (8,024,072 samples, 0.03%)</title><rect x="99.3916%" y="901" width="0.0253%" height="15" fill="rgb(211,110,34)" fg:x="31461383303" fg:w="8024072"/><text x="99.6416%" y="911.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.03%)</title><rect x="99.3916%" y="885" width="0.0253%" height="15" fill="rgb(215,124,48)" fg:x="31461383303" fg:w="8024072"/><text x="99.6416%" y="895.50"></text></g><g><title>_int_malloc (7,021,063 samples, 0.02%)</title><rect x="99.3948%" y="869" width="0.0222%" height="15" fill="rgb(216,46,13)" fg:x="31462386312" fg:w="7021063"/><text x="99.6448%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (379,137,402 samples, 1.20%)</title><rect x="98.2224%" y="1045" width="1.1978%" height="15" fill="rgb(205,184,25)" fg:x="31091272982" fg:w="379137402"/><text x="98.4724%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (379,137,402 samples, 1.20%)</title><rect x="98.2224%" y="1029" width="1.1978%" height="15" fill="rgb(228,1,10)" fg:x="31091272982" fg:w="379137402"/><text x="98.4724%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (379,137,402 samples, 1.20%)</title><rect x="98.2224%" y="1013" width="1.1978%" height="15" fill="rgb(213,116,27)" fg:x="31091272982" fg:w="379137402"/><text x="98.4724%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (379,137,402 samples, 1.20%)</title><rect x="98.2224%" y="997" width="1.1978%" height="15" fill="rgb(241,95,50)" fg:x="31091272982" fg:w="379137402"/><text x="98.4724%" y="1007.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (402,206,609 samples, 1.27%)</title><rect x="98.1748%" y="1061" width="1.2706%" height="15" fill="rgb(238,48,32)" fg:x="31076227847" fg:w="402206609"/><text x="98.4248%" y="1071.50"></text></g><g><title>&lt;chlang::board::Player as core::clone::Clone&gt;::clone (8,024,072 samples, 0.03%)</title><rect x="99.4201%" y="1045" width="0.0253%" height="15" fill="rgb(235,113,49)" fg:x="31470410384" fg:w="8024072"/><text x="99.6701%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (404,212,627 samples, 1.28%)</title><rect x="98.1748%" y="1125" width="1.2770%" height="15" fill="rgb(205,127,43)" fg:x="31076227847" fg:w="404212627"/><text x="98.4248%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (404,212,627 samples, 1.28%)</title><rect x="98.1748%" y="1109" width="1.2770%" height="15" fill="rgb(250,162,2)" fg:x="31076227847" fg:w="404212627"/><text x="98.4248%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (404,212,627 samples, 1.28%)</title><rect x="98.1748%" y="1093" width="1.2770%" height="15" fill="rgb(220,13,41)" fg:x="31076227847" fg:w="404212627"/><text x="98.4248%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (404,212,627 samples, 1.28%)</title><rect x="98.1748%" y="1077" width="1.2770%" height="15" fill="rgb(249,221,25)" fg:x="31076227847" fg:w="404212627"/><text x="98.4248%" y="1087.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (417,251,744 samples, 1.32%)</title><rect x="98.1527%" y="1141" width="1.3182%" height="15" fill="rgb(215,208,19)" fg:x="31069206784" fg:w="417251744"/><text x="98.4027%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (420,260,771 samples, 1.33%)</title><rect x="98.1495%" y="1205" width="1.3277%" height="15" fill="rgb(236,175,2)" fg:x="31068203775" fg:w="420260771"/><text x="98.3995%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (419,257,762 samples, 1.32%)</title><rect x="98.1527%" y="1189" width="1.3245%" height="15" fill="rgb(241,52,2)" fg:x="31069206784" fg:w="419257762"/><text x="98.4027%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (419,257,762 samples, 1.32%)</title><rect x="98.1527%" y="1173" width="1.3245%" height="15" fill="rgb(248,140,14)" fg:x="31069206784" fg:w="419257762"/><text x="98.4027%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (419,257,762 samples, 1.32%)</title><rect x="98.1527%" y="1157" width="1.3245%" height="15" fill="rgb(253,22,42)" fg:x="31069206784" fg:w="419257762"/><text x="98.4027%" y="1167.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (423,269,798 samples, 1.34%)</title><rect x="98.1495%" y="1221" width="1.3372%" height="15" fill="rgb(234,61,47)" fg:x="31068203775" fg:w="423269798"/><text x="98.3995%" y="1231.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1541" width="1.3499%" height="15" fill="rgb(208,226,15)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1525" width="1.3499%" height="15" fill="rgb(217,221,4)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1509" width="1.3499%" height="15" fill="rgb(212,174,34)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1493" width="1.3499%" height="15" fill="rgb(253,83,4)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1477" width="1.3499%" height="15" fill="rgb(250,195,49)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1487.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1461" width="1.3499%" height="15" fill="rgb(241,192,25)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1445" width="1.3499%" height="15" fill="rgb(208,124,10)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1429" width="1.3499%" height="15" fill="rgb(222,33,0)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1413" width="1.3499%" height="15" fill="rgb(234,209,28)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1397" width="1.3499%" height="15" fill="rgb(224,11,23)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1407.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (427,281,834 samples, 1.35%)</title><rect x="98.1432%" y="1381" width="1.3499%" height="15" fill="rgb(232,99,1)" fg:x="31066197757" fg:w="427281834"/><text x="98.3932%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (426,278,825 samples, 1.35%)</title><rect x="98.1463%" y="1365" width="1.3467%" height="15" fill="rgb(237,95,45)" fg:x="31067200766" fg:w="426278825"/><text x="98.3963%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (426,278,825 samples, 1.35%)</title><rect x="98.1463%" y="1349" width="1.3467%" height="15" fill="rgb(208,109,11)" fg:x="31067200766" fg:w="426278825"/><text x="98.3963%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (426,278,825 samples, 1.35%)</title><rect x="98.1463%" y="1333" width="1.3467%" height="15" fill="rgb(216,190,48)" fg:x="31067200766" fg:w="426278825"/><text x="98.3963%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (426,278,825 samples, 1.35%)</title><rect x="98.1463%" y="1317" width="1.3467%" height="15" fill="rgb(251,171,36)" fg:x="31067200766" fg:w="426278825"/><text x="98.3963%" y="1327.50"></text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (426,278,825 samples, 1.35%)</title><rect x="98.1463%" y="1301" width="1.3467%" height="15" fill="rgb(230,62,22)" fg:x="31067200766" fg:w="426278825"/><text x="98.3963%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (426,278,825 samples, 1.35%)</title><rect x="98.1463%" y="1285" width="1.3467%" height="15" fill="rgb(225,114,35)" fg:x="31067200766" fg:w="426278825"/><text x="98.3963%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (425,275,816 samples, 1.34%)</title><rect x="98.1495%" y="1269" width="1.3435%" height="15" fill="rgb(215,118,42)" fg:x="31068203775" fg:w="425275816"/><text x="98.3995%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (425,275,816 samples, 1.34%)</title><rect x="98.1495%" y="1253" width="1.3435%" height="15" fill="rgb(243,119,21)" fg:x="31068203775" fg:w="425275816"/><text x="98.3995%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (425,275,816 samples, 1.34%)</title><rect x="98.1495%" y="1237" width="1.3435%" height="15" fill="rgb(252,177,53)" fg:x="31068203775" fg:w="425275816"/><text x="98.3995%" y="1247.50"></text></g><g><title>chlang::board::Board::make_move (576,730,175 samples, 1.82%)</title><rect x="98.1400%" y="1637" width="1.8220%" height="15" fill="rgb(237,209,29)" fg:x="31065194748" fg:w="576730175"/><text x="98.3900%" y="1647.50">c..</text></g><g><title>&lt;chlang::board::Board as core::clone::Clone&gt;::clone (576,730,175 samples, 1.82%)</title><rect x="98.1400%" y="1621" width="1.8220%" height="15" fill="rgb(212,65,23)" fg:x="31065194748" fg:w="576730175"/><text x="98.3900%" y="1631.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (575,727,166 samples, 1.82%)</title><rect x="98.1432%" y="1605" width="1.8188%" height="15" fill="rgb(230,222,46)" fg:x="31066197757" fg:w="575727166"/><text x="98.3932%" y="1615.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (575,727,166 samples, 1.82%)</title><rect x="98.1432%" y="1589" width="1.8188%" height="15" fill="rgb(215,135,32)" fg:x="31066197757" fg:w="575727166"/><text x="98.3932%" y="1599.50">a..</text></g><g><title>alloc::slice::hack::to_vec (575,727,166 samples, 1.82%)</title><rect x="98.1432%" y="1573" width="1.8188%" height="15" fill="rgb(246,101,22)" fg:x="31066197757" fg:w="575727166"/><text x="98.3932%" y="1583.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (575,727,166 samples, 1.82%)</title><rect x="98.1432%" y="1557" width="1.8188%" height="15" fill="rgb(206,107,13)" fg:x="31066197757" fg:w="575727166"/><text x="98.3932%" y="1567.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1541" width="0.4690%" height="15" fill="rgb(250,100,44)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1525" width="0.4690%" height="15" fill="rgb(231,147,38)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1509" width="0.4690%" height="15" fill="rgb(229,8,40)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1493" width="0.4690%" height="15" fill="rgb(221,135,30)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1477" width="0.4690%" height="15" fill="rgb(249,193,18)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1461" width="0.4690%" height="15" fill="rgb(209,133,39)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1471.50"></text></g><g><title>__GI___libc_malloc (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1445" width="0.4690%" height="15" fill="rgb(232,100,14)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1455.50"></text></g><g><title>_int_malloc (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1429" width="0.4690%" height="15" fill="rgb(224,185,1)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1439.50"></text></g><g><title>malloc_consolidate (148,445,332 samples, 0.47%)</title><rect x="99.4930%" y="1413" width="0.4690%" height="15" fill="rgb(223,139,8)" fg:x="31493479591" fg:w="148445332"/><text x="99.7430%" y="1423.50"></text></g><g><title>unlink_chunk (123,370,107 samples, 0.39%)</title><rect x="99.5722%" y="1397" width="0.3897%" height="15" fill="rgb(232,213,38)" fg:x="31518554816" fg:w="123370107"/><text x="99.8222%" y="1407.50"></text></g><g><title>all (31,653,961,031 samples, 100%)</title><rect x="0.0000%" y="1941" width="100.0000%" height="15" fill="rgb(207,94,22)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1951.50"></text></g><g><title>chlang (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1925" width="100.0000%" height="15" fill="rgb(219,183,54)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1935.50">chlang</text></g><g><title>_start (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1909" width="100.0000%" height="15" fill="rgb(216,185,54)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1919.50">_start</text></g><g><title>__libc_start_main_impl (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1893" width="100.0000%" height="15" fill="rgb(254,217,39)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1903.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1877" width="100.0000%" height="15" fill="rgb(240,178,23)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1887.50">__libc_start_call_main</text></g><g><title>main (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1861" width="100.0000%" height="15" fill="rgb(218,11,47)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1871.50">main</text></g><g><title>std::rt::lang_start_internal (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1845" width="100.0000%" height="15" fill="rgb(218,51,51)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1855.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1829" width="100.0000%" height="15" fill="rgb(238,126,27)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1839.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1813" width="100.0000%" height="15" fill="rgb(249,202,22)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1823.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1797" width="100.0000%" height="15" fill="rgb(254,195,49)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1807.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1781" width="100.0000%" height="15" fill="rgb(208,123,14)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1791.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1765" width="100.0000%" height="15" fill="rgb(224,200,8)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1775.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1749" width="100.0000%" height="15" fill="rgb(217,61,36)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1759.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1733" width="100.0000%" height="15" fill="rgb(206,35,45)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1743.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1717" width="100.0000%" height="15" fill="rgb(217,65,33)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1727.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1701" width="100.0000%" height="15" fill="rgb(222,158,48)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1711.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1685" width="100.0000%" height="15" fill="rgb(254,2,54)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1695.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1669" width="100.0000%" height="15" fill="rgb(250,143,38)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1679.50">core::ops::function::FnOnce::call_once</text></g><g><title>chlang::main (31,653,961,031 samples, 100.00%)</title><rect x="0.0000%" y="1653" width="100.0000%" height="15" fill="rgb(248,25,0)" fg:x="0" fg:w="31653961031"/><text x="0.2500%" y="1663.50">chlang::main</text></g><g><title>std::io::stdio::_print (12,036,108 samples, 0.04%)</title><rect x="99.9620%" y="1637" width="0.0380%" height="15" fill="rgb(206,152,27)" fg:x="31641924923" fg:w="12036108"/><text x="100.2120%" y="1647.50"></text></g><g><title>std::io::stdio::print_to (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1621" width="0.0349%" height="15" fill="rgb(240,77,30)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1631.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1605" width="0.0349%" height="15" fill="rgb(231,5,3)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1615.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1589" width="0.0349%" height="15" fill="rgb(207,226,32)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1599.50"></text></g><g><title>std::io::Write::write_fmt (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1573" width="0.0349%" height="15" fill="rgb(222,207,47)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1583.50"></text></g><g><title>core::fmt::write (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1557" width="0.0349%" height="15" fill="rgb(229,115,45)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1567.50"></text></g><g><title>core::fmt::rt::Argument::fmt (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1541" width="0.0349%" height="15" fill="rgb(224,191,6)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1551.50"></text></g><g><title>&lt;chlang::board::Board as core::fmt::Display&gt;::fmt (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1525" width="0.0349%" height="15" fill="rgb(230,227,24)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1535.50"></text></g><g><title>alloc::string::String::push_str (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1509" width="0.0349%" height="15" fill="rgb(228,80,19)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1493" width="0.0349%" height="15" fill="rgb(247,229,0)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1477" width="0.0349%" height="15" fill="rgb(237,194,15)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1461" width="0.0349%" height="15" fill="rgb(219,203,20)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1445" width="0.0349%" height="15" fill="rgb(234,128,8)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1429" width="0.0349%" height="15" fill="rgb(248,202,8)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1413" width="0.0349%" height="15" fill="rgb(206,104,37)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1397" width="0.0349%" height="15" fill="rgb(223,8,27)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1381" width="0.0349%" height="15" fill="rgb(216,217,28)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1365" width="0.0349%" height="15" fill="rgb(249,199,1)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1349" width="0.0349%" height="15" fill="rgb(240,85,17)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1333" width="0.0349%" height="15" fill="rgb(206,108,45)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1343.50"></text></g><g><title>__GI___libc_realloc (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1317" width="0.0349%" height="15" fill="rgb(245,210,41)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1327.50"></text></g><g><title>_int_realloc (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1301" width="0.0349%" height="15" fill="rgb(206,13,37)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1311.50"></text></g><g><title>_int_malloc (11,033,099 samples, 0.03%)</title><rect x="99.9651%" y="1285" width="0.0349%" height="15" fill="rgb(250,61,18)" fg:x="31642927932" fg:w="11033099"/><text x="100.2151%" y="1295.50"></text></g><g><title>malloc_consolidate (10,030,090 samples, 0.03%)</title><rect x="99.9683%" y="1269" width="0.0317%" height="15" fill="rgb(235,172,48)" fg:x="31643930941" fg:w="10030090"/><text x="100.2183%" y="1279.50"></text></g><g><title>unlink_chunk (8,024,072 samples, 0.03%)</title><rect x="99.9747%" y="1253" width="0.0253%" height="15" fill="rgb(249,201,17)" fg:x="31645936959" fg:w="8024072"/><text x="100.2247%" y="1263.50"></text></g></svg></svg>